$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Conventional Metamath proofs derived from VD proofs
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( ~ idn3 without virtual deduction connectives.  Special theorem needed for
     Alan Sare's virtual deduction translation tool.  (Contributed by Alan
     Sare, 23-Jul-2011.) $)
  iidn3 $p |- ( ph -> ( ps -> ( ch -> ch ) ) ) $=
    ( wi id a1i12 ) ABCCDCEF $.
    $( [28-Oct-2011] $) $( [23-Jul-2011] $)

  ${
    ee222.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee222.2 $e |- ( ph -> ( ps -> th ) ) $.
    ee222.3 $e |- ( ph -> ( ps -> ta ) ) $.
    ee222.4 $e |- ( ch -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e222 without virtual deduction connectives.  Special theorem needed
       for Alan Sare's virtual deduction translation tool.  (Contributed by
       Alan Sare, 7-Jul-2011.) $)
    ee222 $p |- ( ph -> ( ps -> et ) ) $=
      ( wa imp syl3c ex ) ABFABKCDEFABCGLABDHLABEILJMN $.
      $( [28-Oct-2011] $) $( [7-Jul-2011] $)
  $}

  ${
    ee3bir.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee3bir.2 $e |- ( ta <-> th ) $.
    $( Right-biconditional form of ~ e3 without virtual deduction connectives.
       Special theorem needed for Alan Sare's virtual deduction translation
       tool.  (Contributed by Alan Sare, 22-Jul-2011.) $)
    ee3bir $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( biimpri syl8 ) ABCDEFEDGHI $.
      $( [28-Oct-2011] $) $( [22-Jul-2011] $)
  $}

  ${
    ee13.1 $e |- ( ph -> ps ) $.
    ee13.2 $e |- ( ph -> ( ch -> ( th -> ta ) ) ) $.
    ee13.3 $e |- ( ps -> ( ta -> et ) ) $.
    $( ~ e13 without virtual deduction connectives.  Special theorem needed for
       Alan Sare's virtual deduction translation tool.  (Contributed by Alan
       Sare, 28-Oct-2011.) $)
    ee13 $p |- ( ph -> ( ch -> ( th -> et ) ) ) $=
      ( wi syl syl6d ) ACDEFHABEFJGIKL $.
      $( [28-Oct-2011] $)
  $}

  ${
    ee121.1 $e |- ( ph -> ps ) $.
    ee121.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee121.3 $e |- ( ph -> ta ) $.
    ee121.4 $e |- ( ps -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e121 without virtual deductions.  (Contributed by Alan Sare,
       13-Jul-2011.) $)
    ee121 $p |- ( ph -> ( ch -> et ) ) $=
      ( a1d ee222 ) ACBDEFABCGKHAECIKJL $.
      $( [13-Jul-2011] $)
  $}

  ${
    ee122.1 $e |- ( ph -> ps ) $.
    ee122.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee122.3 $e |- ( ph -> ( ch -> ta ) ) $.
    ee122.4 $e |- ( ps -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e122 without virtual deductions.  (Contributed by Alan Sare,
       13-Jul-2011.) $)
    ee122 $p |- ( ph -> ( ch -> et ) ) $=
      ( a1d ee222 ) ACBDEFABCGKHIJL $.
      $( [13-Jul-2011] $)
  $}

  ${
    ee333.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee333.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee333.3 $e |- ( ph -> ( ps -> ( ch -> et ) ) ) $.
    ee333.4 $e |- ( th -> ( ta -> ( et -> ze ) ) ) $.
    $( ~ e333 without virtual deductions. $)
    ee333 $p |- ( ph -> ( ps -> ( ch -> ze ) ) ) $=
      ( w3a 3imp syl3c 3exp ) ABCGABCLDEFGABCDHMABCEIMABCFJMKNO $.
      $( [17-Jul-2011] $)
  $}

  ${
    ee323.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee323.2 $e |- ( ph -> ( ps -> ta ) ) $.
    ee323.3 $e |- ( ph -> ( ps -> ( ch -> et ) ) ) $.
    ee323.4 $e |- ( th -> ( ta -> ( et -> ze ) ) ) $.
    $( ~ e323 without virtual deductions. $)
    ee323 $p |- ( ph -> ( ps -> ( ch -> ze ) ) ) $=
      ( a1dd ee333 ) ABCDEFGHABECILJKM $.
      $( [17-Apr-2012] $)
  $}

  $( If the second and third disjuncts of a true triple disjunction are false,
     then the first disjunct is true.  Automatically derived from
     ~ 3ornot23VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
  3ornot23 $p |- ( ( -. ph /\ -. ps ) -> ( ( ch \/ ph \/ ps ) -> ch ) ) $=
    ( wn w3o wi idd pm2.21 3jaao 3anidm12 ) ADZBDZCABECFKCCKALBKCGACHBCHIJ $.
    $( [31-Dec-2011] $)

  $( ~ orbi1 with order of disjuncts reversed.  Derived from ~ orbi1rVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  orbi1r $p |- ( ( ph <-> ps ) -> ( ( ch \/ ph ) <-> ( ch \/ ps ) ) ) $=
    ( wb id orbi2d ) ABDZABCGEF $.
    $( [31-Dec-2011] $)

  $( Closed nested implication form of ~ bitr3i .  Derived automatically from
     ~ bitr3VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
  bitr3 $p |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) -> ( ps <-> ch ) ) ) $=
    ( wb bibi1 biimpd ) ABDACDBCDABCEF $.
    $( [11-Nov-2012] $) $( [31-Dec-2011] $)

  $( ~ pm4.39 with a 3-conjunct antecedent.  This proof is ~ 3orbi123VD
     automatically translated and minimized.  (Contributed by Alan Sare,
     31-Dec-2011). $)
  3orbi123 $p |- ( ( ( ph <-> ps ) /\ ( ch <-> th ) /\ ( ta <-> et ) ) ->
                 ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) ) $=
    ( wb w3a simp1 simp2 simp3 3orbi123d ) ABGZCDGZEFGZHABCDEFMNOIMNOJMNOKL $.
    $( [31-Dec-2011] $)

  $( Closed form of ~ syl5OLD .  Derived automatically from ~ syl5impVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  syl5imp $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( th -> ps ) ->
                ( ph -> ( th -> ch ) ) ) ) $=
    ( wi pm2.04 imim2d com34 ) ABCEEZDBEDACIBACEDABCFGH $.
    $( [31-Dec-2011] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant.  After the
     User's Proof was completed it was minimized.  The completed User's Proof
     before minimization is not shown.
     <HTML> <TABLE>
     <TR> <TD> 1::    <TD> ` |- ( ( ( ps /\ ch ) -> th ) <-> ( ps -> ( ch -> `
     ` th ) ) ) `
     <TR> <TD> qed:1: <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <-> ( ph `
     ` -> ( ps -> ( ch -> th ) ) ) ) `
     </TABLE> </HTML> $)
  impexp3a $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                 ( ph -> ( ps -> ( ch -> th ) ) ) ) $=
    ( wa wi impexp imbi2i ) BCEDFBCDFFABCDGH $.
    $( [18-Mar-2012] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual Deduction Proof (not shown) was minimized.  The
     minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` -> ( ph -> ( ch -> ( ps -> th ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ch -> ( ps -> th ) ) ) `
     ` -> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` -> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ch -> ( ph -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ch -> ( ps -> th ) ) ) ) `
     <TR> <TD> 5::      <TD> ` |- ( ( ph -> ( ch -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> 6:4,5:   <TD> ` |- ( ( ch -> ( ph -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> qed:3,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` <-> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     </TABLE> </HTML> $)
  com3rgbi $p |- ( ( ph -> ( ps -> ( ch -> th ) ) ) <->
                 ( ch -> ( ph -> ( ps -> th ) ) ) ) $=
    ( wi pm2.04 com24 com34 impbii ) ABCDEZEEZCABDEZEEZKBACDABJFGMACBDCALFHI $.
    $( [18-Mar-2012] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual Deduction Proof (not shown) was minimized.  The
     minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) `
     ` <-> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` <-> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> qed:1,2: <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) `
     ` <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  impexp3acom3r $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                      ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wa wi impexp3a com3rgbi bitr4i ) ABCEDFFABCDFFFBCADFFFABCDGBCADHI $.
    $( [18-Mar-2012] $)

  ${
    ee1111.1 $e |- ( ph -> ps ) $.
    ee1111.2 $e |- ( ph -> ch ) $.
    ee1111.3 $e |- ( ph -> th ) $.
    ee1111.4 $e |- ( ph -> ta ) $.
    ee1111.5 $e |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) $.
    $( Non-virtual deduction form of ~ e1111 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ps )  `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ch ) `
       <TR> <TD> h3::     <TD> ` |- ( ph -> th ) `
       <TR> <TD> h4::     <TD> ` |- ( ph -> ta ) `
       <TR> <TD> h5::    <TD> ` |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 6:1,5:  <TD> ` |- ( ph -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 7:6:    <TD> ` |- ( ch -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 8:2,7:  <TD> ` |- ( ph -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( ph -> ( th -> ( ta -> et ) ) ) `
       <TR> <TD> 10:9:    <TD> ` |- ( th -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 11:3,10: <TD> ` |- ( ph -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 12:11:   <TD> ` |- ( ph -> ( ta -> et ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ta -> ( ph -> et ) ) `
       <TR> <TD> 14:4,13: <TD> ` |- ( ph -> ( ph -> et ) ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> et )  `
       </TABLE> </HTML> $)
    ee1111 $p |- ( ph -> et ) $=
      ( wi syl3c mpd ) AEFJABCDEFLGHIKMN $.
      $( [18-Mar-2012] $)
  $}

  $( Logical equivalence of a 2-left-nested implication and a 1-left-nested
     implicated
     when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).
     The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual
     Deduction Proof (not shown) was minimized.  The minimized proof is
     shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ph -> ( ps -> ch ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ph -> ( ps -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ph -> ( ps -> ch ) ) -> ( ps `
     ` -> ( ph -> ch ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ps -> ( ph -> ch ) ) ) `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ph -> ch ) ) -> ( ph `
     ` -> ( ps -> ( ph -> ch ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` <-> ( ps -> ( ph -> ch ) ) ) `
     </TABLE> </HTML> $)
  pm2.43bgbi $p |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) <->
               ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.21 pm2.04 ja com23 ax-1 impbii ) ABACDDZDZKLABCAKABCDZDAMEBACFGHKA
    IJ $.
    $( [18-Mar-2012] $)

  $( Logical equivalence of a 3-left-nested implication and a 2-left-nested
     implicated when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).  The following User's Proof is
     a Virtual Deduction proof completed automatically by the tools program
     completeusersproof.cmd, which invokes Mel O'Cat's mmj2 and Norm Megill's
     Metamath Proof Assistant.  The completed Virtual Deduction Proof (not
     shown) was minimized.  The minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ps -> ( ph -> ( ch -> th ) ) )  `
     ` -> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ch -> ( ph -> th ) ) ) )  `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) )  `
     ` -> ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  pm2.43cbi $p |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) <->
                   ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wi wn pm2.24 com4l id ja ax-1 impbii ) ABCADEEEZEMAMMAAFBCDABCDEEGHMIJMAK
    L $.
    $( [18-Mar-2012] $)

  ${
    ee233.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee233.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee233.3 $e |- ( ph -> ( ps -> ( th -> et ) ) ) $.
    ee233.4 $e |- ( ch -> ( ta -> ( et -> ze ) ) ) $.
    $( Non-virtual deduction form of ~ e233 . (Contributed by Alan Sare,
       18-Mar-2012.)
       The following User's Proof is a Virtual Deduction proof completed
       automatically by the tools program completeusersproof.cmd, which invokes
       Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
       completed Virtual
       Deduction Proof (not shown) was minimized.  The minimized proof is
       shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ( ps -> ch ) )   `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ( ps -> ( th -> ta ) ) )  `
       <TR> <TD> h3::     <TD> ` |- ( ph -> ( ps -> ( th -> et ) ) )  `
       <TR> <TD> h4::     <TD> ` |- ( ch -> ( ta -> ( et -> ze ) ) ) `
       <TR> <TD> 5:1,4:   <TD> ` |- ( ph -> ( ps -> ( ta -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 6:5:     <TD> ` |- ( ta -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 7:2,6:   <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( et -> ze ) ) ) ) ) ) `
       <TR> <TD> 8:7:     <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( et  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( th -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 10:9:    <TD> ` |- ( ph -> ( ps -> ( th -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 11:10:   <TD> ` |- ( et -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> 12:3,11: <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( th -> ze ) ) ) ) ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( th  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 14:13:   <TD> ` |- ( th -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> ( ps -> ( th -> ze ) ) ) `
       </TABLE> </HTML> $)
    ee233 $p |- ( ph -> ( ps -> ( th -> ze ) ) ) $=
      ( wi syl6 com3r syl8 pm2.43cbi mpbi com14 ) DABDGLZLZLZLZUABUBLZUBAUCLUCA
      BDFUAJDABFGBDABFGLZLZLZLZLZUGAUHLUHABDEUFIABEUDABCEUDLHKMNOABDUEPQBDAUDPQ
      ROABDTPQBDASPQDABGPQ $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ imbi12i . ~ imbi12 is ~ imbi12VD without virtual
     deductions and was automatically derived from ~ imbi12VD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi12 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ph -> ch )
               <-> ( ps -> th ) ) ) ) $=
    ( wb wi wn simplim simprim imbi12d expi ) ABEZCDEZACFBDFELMGZFGABCDLNHLMIJK
    $.
    $( [18-Mar-2012] $)

  $( Join three logical equivalences to form equivalence of implications.
     ~ imbi13 is ~ imbi13VD without virtual deductions and was automatically
     derived from ~ imbi13VD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi13 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ta <-> et ) ->
               ( ( ph -> ( ch -> ta ) ) <-> ( ps -> ( th -> et ) ) ) ) ) ) $=
    ( wb wi imbi12 syl9r ) CDGEFGCEHZDFHZGABGAKHBLHGCDEFIABKLIJ $.
    $( [18-Mar-2012] $)

  ${
    ee33.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee33.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee33.3 $e |- ( th -> ( ta -> et ) ) $.
    $( Non-virtual deduction form of ~ e33 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::   <TD> ` |- ( ph -> ( ps -> ( ch -> th ) ) )  `
       <TR> <TD> h2::   <TD> ` |- ( ph -> ( ps -> ( ch -> ta ) ) )  `
       <TR> <TD> h3::   <TD> ` |- ( th -> ( ta -> et ) ) `
       <TR> <TD> 4:1,3: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ta -> et ) ) ) ) `
       <TR> <TD> 5:4:   <TD> ` |- ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> 6:2,5: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ph -> ( ps -> `
       ` ( ch -> et ) ) ) ) ) ) `
       <TR> <TD> 7:6:   <TD> ` |- ( ps -> ( ch -> ( ph -> ( ps -> ( ch -> `
       ` et ) ) ) ) ) `
       <TR> <TD> 8:7:   <TD> ` |- ( ch -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> qed:8: <TD> ` |- ( ph -> ( ps -> ( ch -> et ) ) ) `
       </TABLE> </HTML> $)
    ee33 $p |- ( ph -> ( ps -> ( ch -> et ) ) ) $=
      ( wi imim3i ee22 ) ABCDJCEJCFJGHDEFCIKL $.
      $( [18-Mar-2012] $)
  $}

  $( Bi-conditional contraposition variation.  This proof is ~ con5VD
     automatically translated and minimized.  (Contributed by Alan Sare,
     21-Apr-2013.) $)
  con5 $p |- ( ( ph <-> -. ps ) -> ( -. ph -> ps ) ) $=
    ( wn wb bi2 con1d ) ABCZDBAAGEF $.
    $( [21-Apr-2013] $)

  ${
    con5i.1 $e |- ( ph <-> -. ps ) $.
    $( Inference form of ~ con5 .  (Contributed by Alan Sare, 21-Apr-2013.) $)
    con5i $p |- ( -. ph -> ps ) $=
      ( wn wb wi con5 ax-mp ) ABDEADBFCABGH $.
      $( [21-Apr-2013] $)
  $}

  ${
    exlimexi.1 $e |- ( ps -> A. x ps ) $.
    exlimexi.2 $e |- ( E. x ph -> ( ph -> ps ) ) $.
    $( Inference similar to Theorem 19.23 of [Margaris] p. 90.  (Contributed by
       Alan Sare, 21-Apr-2013.) $)
    exlimexi $p |- ( E. x ph -> ps ) $=
      ( wex hbe1 exlimd pm2.43i ) ACFZBJABCACGDEHI $.
      $( [21-Apr-2013] $)
  $}

  ${
    $d x y $.
    $( Equivalence for substitution.  Alternate proof of ~ sb5 .  This proof is
       ~ sb5ALTVD automatically translated and minimized.  (Contributed by Alan
       Sare, 21-Apr-2013.) $)
    sb5ALT $p |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) $=
      ( wsb weq wa wex equsb1 sban simplbi2com mpi a4sbe syl wi simpr a1i simpl
      hbs1 sbequ1 com12 ee22 exlimexi impbii ) ABCDZBCEZAFZBGZUDUFBCDZUGUDUEBCD
      ZUHBCHUHUIUDUEABCIJKUFBCLMUFUDBABCRUGUFAUEUDUFANUGUEAOPUFUENUGUEAQPUEAUDA
      BCSTUAUBUC $.
      $( [21-Apr-2013] $)
  $}

  ${
    eexinst01.1 $e |- E. x ps $.
    eexinst01.2 $e |- ( ph -> ( ps -> ch ) ) $.
    eexinst01.3 $e |- ( ph -> A. x ph ) $.
    eexinst01.4 $e |- ( ch -> A. x ch ) $.
    $( ~ exinst01 without virtual deductions.  (Contributed by Alan Sare,
       21-Apr-2013.) $)
    eexinst01 $p |- ( ph -> ch ) $=
      ( wex exlimd mpi ) ABDICEABCDGHFJK $.
      $( [21-Apr-2013] $)
  $}

  ${
    eexinst11.1 $e |- ( ph -> E. x ps ) $.
    eexinst11.2 $e |- ( ph -> ( ps -> ch ) ) $.
    eexinst11.3 $e |- ( ph -> A. x ph ) $.
    eexinst11.4 $e |- ( ch -> A. x ch ) $.
    $( ~ exinst11 without virtual deductions.  (Contributed by Alan Sare,
       21-Apr-2013.) $)
    eexinst11 $p |- ( ph -> ch ) $=
      ( wex exlimd syl5com pm2.43i ) ACABDIACEABCDGHFJKL $.
      $( [21-Apr-2013] $)
  $}

  ${
    vk15.4j.1 $e |- -. ( E. x -. ph /\ E. x ( ps /\ -. ch ) ) $.
    vk15.4j.2 $e |- ( A. x ch -> -. E. x ( th /\ ta ) ) $.
    vk15.4j.3 $e |- -. A. x ( ta -> ph ) $.
    $( Excercise 4j of Unit 15 of "Understanding Symbolic Logic", Fifth Edition
       (2008), by Virginia Klenk.  This proof is the minimized Hilbert-style
       axiomatic version of the Fitch-style Natural Deduction proof found on
       page 442 of Klenk and was automatically derived from that proof.
       ~ vk15.4j is ~ vk15.4jVD automatically translated and minimized.
       (Contributed by Alan Sare, 21-Apr-2013.) $)
    vk15.4j $p |- ( -. E. x -. th -> -. A. x ps ) $=
      ( wn wex wal wa wi exanali 19.21bi a1i 19.8a syl6 hbe1 mpbir alex biimpri
      simpl ee12an notnot1 con3 ee02 hbn eexinst01 exnal sylibr wo pm3.13 ax-mp
      hbn1 simpr syl pm2.53 mpsyl con5i con3d eexinst11 sylib ) DJZFKZJZBJZFKZB
      FLJVGCJZVIFVGCFLZJZVJFKVGEAJZMZVLFVNFKEANFLJIEAFOUAZVKDEMZFKZJZNVGVNVRJZV
      LHVGVNVQVSVGDVNEVQVGDFDFLVGDFUBUCPVNENVGEVMUDQVPFRUEVQUFSVKVRUGUHVFFVEFTU
      IZCFUPUJCFUKULVGVJVHVIVGBCVGBCNZFVGBVJMFKZJZWAFLZVMFKZJZWCUMZVGWFJZWCWEWB
      MJWGGWEWBUNUOVGWEWHVGVNWEFVOVGVNVMWEVNVMNVGEVMUQQVMFRSVTVMFTUJWEUFURWFWCU
      SUTWBWDBCFOVAURPVBVHFRSVTVHFTVCBFUKVD $.
      $( [21-Apr-2013] $)
  $}

  $( Converse of double negation.  Alternate proof of ~ notnot2 .  This proof
     is ~ notnot2ALTVD automatically translated and minimized.  (Contributed by
     Alan Sare, 21-Apr-2013.) $)
  notnot2ALT $p |- ( -. -. ph -> ph ) $=
    ( wn id pm2.21 mt4d ) ABZBZGAGCFGBDE $.
    $( [21-Apr-2013] $)

  $( Contraposition.  Alternate proof of ~ con3 .  This proof is ~ con3ALTVD
     automatically translated and minimized.  (Contributed by Alan Sare,
     21-Apr-2013.) $)
  con3ALT $p |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) $=
    ( wi wn notnot2 imim1i con1d ) ABCADZBHDABAEFG $.
    $( [21-Apr-2013] $)

  ${
    $d A x $.  $d B x $.  $d C x $.  $d C y $.  $d D x $.  $d D y $.
    $( Quantification restricted to a subclass for two quantifiers. ~ ssralv
       for two quantifiers.  The proof of ~ ssralv2 was automatically generated
       by minimizing the automatically translated proof of ~ ssralv2VD .  The
       automatic translation is by the tools program
       translate_without_overwriting.cmd (Contributed by Alan Sare,
       18-Feb-2012.). $)
    ssralv2 $p |- ( ( A C_ B /\ C C_ D ) -> ( A. x e. B A. y e. D ph ->
                    A. x e. A A. y e. C ph ) ) $=
      ( wss wa wral ax-17 hbra1 cv wcel wi wal ssralv adantr df-ral syl6ib ax-4
      syl6 adantl syl6d ralrimd ) DEHZFGHZIZACGJZBEJZACFJZBDUHBKUIBELUHUJBMDNZU
      IUKUHUJULUIOZBPZUMUHUJUIBDJZUNUFUJUOOUGUIBDEQRUIBDSTUMBUAUBUGUIUKOUFACFGQ
      UCUDUE $.
      $( [18-Feb-2012] $)
  $}

  ${
    $( ~ sbcorg with a 3-disjuncts.  This proof is ~ sbc3orgVD automatically
       translated and minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
    sbc3org $p |- ( A e. V -> ( [ A / x ] ( ph \/ ps \/ ch ) <->
                  ( [ A / x ] ph \/ [ A / x ] ps \/ [ A / x ] ch ) ) ) $=
      ( wcel w3o wsbc wo sbcorg df-3or bicomi sbcbii orbi1d 3bitr3d syl6bbr ) E
      FGZABCHZDEIZADEIZBDEIZJZCDEIZJZUAUBUDHRABJZCJZDEIUFDEIZUDJTUEUFCDEFKUGSDE
      FSUGABCLMNRUHUCUDABDEFKOPUAUBUDLQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d x ps $.  $d x ch $.
    $( Closed form of ~ alrimi with 2 additional conjuncts having no occurences
       of the quantifying variable.  This proof is ~ 19.21a3con13vVD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    alrim3con13v $p |- ( ( ph -> A. x ph ) ->
                        ( ( ps /\ ph /\ ch ) -> A. x ( ps /\ ph /\ ch ) ) ) $=
      ( wal w3a simp1 a1i ax-17 syl6 simp2 imim1i simp3 3jcad 19.26-3an syl6ibr
      wi ) AADEZQZBACFZBDEZRCDEZFTDESTUARUBSTBUATBQSBACGHBDIJTARBACKLSTCUBTCQSB
      ACMHCDIJNBACDOP $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d B x $.  $d D x y $.
    $( ~ ra4sbc with two quantifying variables.  This proof is ~ ra4sbc2VD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    ra4sbc2 $p |- ( A e. B -> ( C e. D -> ( A. x e. B A. y e. D ph ->
                  [ C / y ] [ A / x ] ph ) ) ) $=
      ( wcel wral wsbc idd wi ra4sbc a1d sbcralg biimpd syl6d ee23 ) DEHZFGHZTA
      CGIZBEIZABDJZCGIZUCCFJSTKSTUBUABDJZUDSUBUELTUABDEMNSUEUDABCDGEOPQUCCFGMR
      $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d x y $.
    $( Substitution of a set variable for another set variable in a 3-conjunct
       formula.  Derived automatically from ~ sbcoreleleqVD .  (Contributed by
       Alan Sare, 31-Dec-2011.) $)
    sbcoreleleq $p |- ( A e. V -> ( [ A / y ] ( x e. y \/ y e. x \/ x = y ) <->
                      ( x e. A \/ A e. x \/ x = A ) ) ) $=
      ( wcel wel weq wsbc cv wceq sbc3org wb sbcel2gv sbcel1gv eqsbc3r 3orbi123
      w3o 3impexpbicomi syl3c bitr4d ) CDEZABFZBAFZABGZQBCHUBBCHZUCBCHZUDBCHZQZ
      AIZCEZCUIEZUICJZQZUBUCUDBCDKUAUEUJLZUFUKLZUGULLZUMUHLBUICDMBCUIDNBCDUIOUN
      UOUPUHUMUEUJUFUKUGULPRST $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( If a class is transitive and any two distinct elements of the class are
       E-comparable, then every element of that class is transitive.  Derived
       automatically from ~ tratrbVD .  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    tratrb $p |- ( ( Tr A /\ A. x e. A A. y e. A ( x e. y \/ y e. x \/ x = y )
                 /\ B e. A ) -> Tr B ) $=
      ( wtr wel w3o wral wcel w3a cv wa wal alrim3con13v ax-mp a1i con3 syl6mpi
      wi wn weq hbra1 hbra2 wceq simpl simpr pm3.2an3 ee22 en3lp eleq2 biimprcd
      syl6 pm3.2 ee23 en2lp wsbc simp3 wsb simp1 trel exp3a ee121 ee122 ralcom2
      3ad2ant2 ra4sbc2 sbid syl6ib sbcoreleleq biimpd sylsyld 3ornot23 ex ee222
      alrimi dftr2 sylibr ) CEZABFZBAFZABUAGZBCHZACHZDCIZJZVSBKZDIZLZAKZDIZSZBM
      ZAMDEWEWLAWCWCAMSWEWEAMSWBACUBWCVRWDANOWEWKBWCWCBMSWEWEBMSWAABCCUCWCVRWDB
      NOWEWHDWIIZTZWIDUDZTZWJWMWOGZWJWEWHWMVSWGWMJZSZWRTWNWEWHVSWGWSWHVSSWEVSWG
      UEPZWHWGSWEVSWGUFPZVSWGWMUGUHWIWFDUIWMWRQRWEWHWOVSVTLZSXBTWPWEWHVSWOVTXBW
      TWEWHWGWOVTSXAWOVTWGWIDWFUJUKULVSVTUMUNWIWFUOWOXBQRWEWDWHWABDUPZWQVRWCWDU
      QZWEWHXCAAURZXCWEWDWHWICIZWAACHBCHZXEXDWEVRWHVSWFCIZXFVRWCWDUSZWTWEVRWHWG
      WDXHXIXAXDVRWGWDXHCWFDUTVAVBVRVSXHXFCWIWFUTVAVCWCVRXGWDWAABCVDVEWABADCWIC
      VFVBXCAVGVHWDXCWQABDCVIVJVKWNWPWQWJSWMWOWJVLVMVNVOVOABDVPVQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $( ~ ax-5 for a 3 element left-nested implication.  Derived automatically
       from ~ 3ax5VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3ax5 $p |- ( A. x ( ph -> ( ps -> ch ) ) -> ( A. x ph ->
               ( A. x ps -> A. x ch ) ) ) $=
      ( wi wal ax-5 syl6 ) ABCEZEDFADFIDFBDFCDFEAIDGBCDGH $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( An element of an ordinal class is ordinal.  Proposition 7.6 of
       [TakeutiZaring] p. 36.  This is an alternate proof of ~ ordelord using
       the Axiom of Regularity indirectly through ~ dford2 . dford2 is a weaker
       definition of ordinal number.  Given the Axiom of Regularity, it need
       not be assumed that ` _E Fr A ` because this is inferred by the Axiom of
       Regularity. ~ ordelordALT is ~ ordelordALTVD without virtual deductions
       and was automatically derived from ~ ordelordALTVD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    ordelordALT $p |- ( ( Ord A /\ B e. A ) -> Ord B ) $=
      ( vx vy word wcel wa wtr wel weq wral ordtr adantr dford2 simprbi 3orcomb
      w3o 2ralbii sylib simpr tratrb syl3anc wss trss wi ssralv2 syl3c sylanbrc
      sylc ex ) AEZBAFZGZBHZCDIZCDJZDCIZQZDBKCBKZBEUMAHZUOUQUPQZDAKCAKZULUNUKUT
      ULALMZUMURDAKCAKZVBUKVDULUKUTVDCDANOMZURVACDAAUOUPUQPRSUKULTZCDABUAUBUMBA
      UCZVGVDUSUMUTULVGVCVFABUDUIZVHVEVGVGVDUSUEURCDBABAUFUJUGCDBNUH $.
      $( [18-Feb-2012] $)
  $}

  $( Distribution of class substitution over a left-nested implication.
     Similar to ~ sbcimg . ~ sbcim2g is ~ sbcim2gVD without virtual deductions
     and was automatically derived from ~ sbcim2gVD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcim2g $p |- ( A e. V -> ( [ A / x ] ( ph -> ( ps -> ch ) ) <->
                ( [ A / x ] ph -> ( [ A / x ] ps -> [ A / x ] ch ) ) ) ) $=
    ( wcel wi wsbc sbcimg biimpd imbi2 biimpcd ee21 idd bi2 ee13 sylibrd impbid
    wb ) EFGZABCHZHDEIZADEIZBDEICDEIHZHZUAUCUDUBDEIZHZUGUETZUFUAUCUHAUBDEFJZKBC
    DEFJZUIUHUFUGUEUDLMNUAUFUHUCUAUIUFUDUEUGUKUAUFOUGUEPQUJRS $.
    $( [18-Mar-2012] $)

  $( Implication form of ~ sbcbii . ~ sbcbi is ~ sbcbiVD without virtual
     deductions and was automatically derived from ~ sbcbiVD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcbi $p |- ( A e. V -> ( A. x ( ph <-> ps ) -> ( [ A / x ] ph <->
                  [ A / x ] ps ) ) ) $=
    ( wcel wb wal wsbc a4sbc sbcbig sylibd ) DEFABGZCHMCDIACDIBCDIGMCDEJABCDEKL
    $.
    $( [18-Mar-2012] $)

  ${
    $d A x y z $.  $d V y z $.
    $( Formula-building inference rule for class substitution, substituting a
       class variable for the set variable of the transitivity predicate.
       ~ trsbc is ~ trsbcVD without virtual deductions and was automatically
       derived from ~ trsbcVD using the tools program
       translate..without..overwriting.cmd and Metamath's minimize command.
       (Contributed by Alan Sare, 18-Mar-2012.) $)
    trsbc $p |- ( A e. V -> ( [ A / x ] Tr x <-> Tr A ) ) $=
      ( vz vy wcel cv wtr wsbc wel wa wi dftr2 sbcbii sbcalg pm3.31 pm3.3 bitrd
      wal wb impbii sbcim2g wceq biidd sbcieg imbi13 syl3c syl6bb bitr3d albidv
      sbcel2gv syl6bbr ) BCFZAGZHZABIDEJZEAJZKDAJZLZESZDSZABIZBHZUOVAABCDEUNMNU
      MVBUPEGZBFZKDGZBFZLZESZDSZVCUMVBUTABIZDSVJUTDABCOUMVKVIDUMVKUSABIZESVIUSE
      ABCOUMVLVHEUMUPUQURLLZABIZVLVHVMUSABCVMUSUPUQURPUPUQURQUANUMVNUPVEVGLLZVH
      UMVNUPABIZUQABIZURABIZLLZVOUPUQURABCUBUMVPUPTVQVETVRVGTVSVOTUPUPABCUNBUCU
      PUDUEAVDBCUKAVFBCUKVPUPVQVEVRVGUFUGRVOVHUPVEVGPUPVEVGQUAUHUIUJRUJRDEBMULR
      $.
      $( [18-Mar-2012] $)
  $}

  ${
    $d A q x y z $.
    $( The union of a class of transitive sets is transitive.  Alternate proof
       of ~ truni . ~ truniALT is ~ truniALTVD without virtual deductions and
       was automatically derived from ~ truniALTVD using the tools program
       translate..without..overwriting.cmd and Metamath's minimize command.
       (Contributed by Alan Sare, 18-Mar-2012.) $)
    truniALT $p |- ( A. x e. A Tr x -> Tr U. A ) $=
      ( vz vy vq cv wtr wral wel cuni wcel wa wi wal simpr a1i simpl a1i12 ee33
      syl6ib eluni ra4sbc com12 syl6d trsbc biimpd trel exp3acom3r ee233 elunii
      wex wsb ex alrimdv 19.23v mpdd alrimivv dftr2 sylibr ) AFGZABHZCDIZDFZBJZ
      KZLZCFZVDKZMZDNCNVDGVAVICDVAVFDEIZEFZBKZLZEUKZVHVAVFVEVNVFVEMVAVBVEOPEVCB
      UATVAVFVMVHMZENVNVHMVAVFVOEVAVFVMCEIZVLVHVAVFVBVMVJVKGZVPVFVBMVAVBVEQPVAV
      FVMVJMVJVLQRVAVFVMVLUTAEULZVQVAVFVMVLMVJVLORZVAVFVMVLVRVSVLVAVRUTAVKBUBUC
      UDVLVRVQAVKBUEUFSVQVBVJVPVKVGVCUGUHUIVSVPVLVHVGVKBUJUMSUNVMVHEUOTUPUQCDVD
      URUS $.
      $( [18-Mar-2012] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d D y $.  $d x y $.
    $( Distribute proper substitution through a subclass relation.  This
       theorem was automatically derived from ~ sbcssVD .  (Contributed by Alan
       Sare, 22-Jul-2012.) $)
    sbcss $p |- ( A e. B -> ( [ A / x ] C C_ D <->
      [_ A / x ]_ C C_ [_ A / x ]_ D ) ) $=
      ( vy wcel wss wsbc cv csb wi wal dfss2 sbcbii sbcalg sbcimg sbcel2g bitrd
      wb imbi12d alrimiv albi syl syl6bbr ) BCGZDEHZABIZFJZABDKZGZUIABEKZGZLZFM
      ZUJULHUFUHUIDGZUIEGZLZFMZABIZUOUGUSABCFDENOUFUTURABIZFMZUOURFABCPUFVAUNTZ
      FMVBUOTUFVCFUFVAUPABIZUQABIZLUNUPUQABCQUFVDUKVEUMABUIDCRABUIECRUASUBVAUNF
      UCUDSSFUJULNUE $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a b y $.  $d b x y $.
    $( Lemma for ~ onfrALT . $)
    onfrALTlem5 $p |- ( [ ( a i^i x ) / b ] ( ( b C_ ( a i^i x ) /\ b =/= (/) )
        ->
                  E. y e. b ( b i^i y ) = (/) ) <->
                  ( ( ( a i^i x ) C_ ( a i^i x ) /\ ( a i^i x ) =/= (/) ) ->
                  E. y e. ( a i^i x ) ( ( a i^i x ) i^i y ) = (/) ) ) $=
      ( cv cin wss c0 wne wa wceq wrex wi wsbc cvv wb ax-mp bitri wex csb inex1
      vex sbcimg sbcang sseq1 sbcieg wn wal df-ne ax-gen sbcbi mp2 sbcng bicomd
      wcel eqsbc3 necon3bbii 3bitr2i anbi12i wel df-rex sbcel2gv sbceqg csbvarg
      csbing csbconstgfv ineq12i eqtri eqeq12i exbii sbcexg 3bitr2ri imbi12i )
      DEZCEZAEZFZGZVNHIZJZVNBEZFZHKZBVNLZMDVQNZVTDVQNZWDDVQNZMZVQVQGZVQHIZJZVQW
      AFZHKZBVQLZMVQOUOZWEWHPVOVPCUBUAZVTWDDVQOUCQWFWKWGWNWFVRDVQNZVSDVQNZJZWKW
      OWFWSPWPVRVSDVQOUDQWQWIWRWJWOWQWIPWPVRWIDVQOVNVQVQUEUFQWRVNHKZUGZDVQNZWTD
      VQNZUGZWJWOVSXAPZDUHWRXBPWPXEDVNHUIUJVSXADVQOUKULWOXDXBPWPWOXBXDWTDVQOUMU
      NQXCVQHWOXCVQHKPWPDVQHOUPQUQURUSRWGBDUTZWCJZBSZDVQNZWNWOWDXHPZDUHWGXIPWPX
      JDWCBVNVAUJWDXHDVQOUKULWNWAVQUOZWMJZBSXGDVQNZBSZXIWMBVQVAXMXLBXMXFDVQNZWC
      DVQNZJZXLWOXMXQPWPXFWCDVQOUDQXOXKXPWMWOXOXKPWPDWAVQOVBQXPDVQWBTZDVQHTZKZW
      MWOXPXTPWPDVQWBHOVCQXRWLXSHXRDVQVNTZDVQWATZFZWLWOXRYCKWPDVQOVNWAVEQYAVQYB
      WAWOYAVQKWPDVQOVDQWOYBWAKWPDVQWAOVFQVGVHWOXSHKWPDVQHOVFQVIRUSRVJWOXNXIPWP
      WOXIXNXGBDVQOVKUNQVLRVMR $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x $.
    $( Lemma for ~ onfrALT . $)
    onfrALTlem4 $p |- ( [ y / x ] ( x e. a /\ ( a i^i x ) = (/) ) <->
                        ( y e. a /\ ( a i^i y ) = (/) ) ) $=
      ( wel cv cin c0 wceq wa wsb sban cvv wcel wb vex sbcel1gv csb csbconstgfv
      ax-mp bitri sbceqg csbing csbvarg ineq12i eqtri eqeq12i anbi12i ) ACDZCEZ
      AEZFZGHZIABJUHABJZULABJZIBCDZUIBEZFZGHZIUHULABKUMUOUNURUPLMZUMUONBOZAUPUI
      LPSUNAUPUKQZAUPGQZHZURUSUNVCNUTAUPUKGLUASVAUQVBGVAAUPUIQZAUPUJQZFZUQUSVAV
      FHUTAUPLUIUJUBSVDUIVEUPUSVDUIHUTAUPUILRSUSVEUPHUTAUPLUCSUDUEUSVBGHUTAUPGL
      RSUFTUGT $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a b y $.  $d b x y $.
    $( Lemma for ~ onfrALT . $)
    onfrALTlem3 $p |- ( ( a C_ On /\ a =/= (/) ) ->
                        ( ( x e. a /\ -. ( a i^i x ) = (/) ) ->
                        E. y e. ( a i^i x ) ( ( a i^i x ) i^i y ) = (/) ) ) $=
      ( vb cv con0 wss c0 wne wa cin wceq wrex wi ee02 cvv wcel cep wwe syl6 wn
      wel ssid simpr a1i df-ne syl6ibr pm3.2 wsbc wal vex inex2 word simpl ssel
      wfr syl2im eloni ordwe inss2 wess com12 syl6mpi dfepfr syl6ib onfrALTlem5
      wefr a4sbc mpdd ) CEZFGZVJHIZJZACUBZVJAEZKZHLUAZJZVPVPGZVPHIZJZVPBEZKHLBV
      PMZVSVMVRVTWAVPUCVMVRVQVTVRVQNVMVNVQUDUEVPHUFUGVSVTUHOVMVRDEZVPGWDHIJWDWB
      KHLBWDMNZDVPUIZWAWCNVPPQVMVRWEDUJZWFVOVJAUKULVMVRVPRUPZWGVMVRVPRSZWHVMVRV
      ORSZVPVOGZWIVMVRVOUMZWJVMVRVOFQZWLVMVKVRVNWMVKVLUNVNVQUNVJFVOUOUQVOURTVOU
      STVJVOUTWKWJWIVPVORVAVBVCVPRVGTDBVPVDVEWEDVPPVHOABCDVFVEVI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d ch x $.  $d ph x $.  $d ps x $.
    ggen31.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( ~ gen31 without virtual deductions.  (Contributed by Alan Sare,
       22-Jul-2012.) $)
    ggen31 $p |- ( ph -> ( ps -> ( ch -> A. x th ) ) ) $=
      ( wal wi wa imp alrimdv ex ) ABCDEGHABICDEABCDHFJKL $.
      $( [22-Jun-2012] $)
  $}

  ${
    $d a y z $.  $d x y z $.
    $( Lemma for ~ onfrALT . $)
    onfrALTlem2 $p |- ( ( a C_ On /\ a =/= (/) ) -> ( ( x e. a /\
                      -. ( a i^i x ) = (/) ) -> E. y e. a ( a i^i y ) =
                      (/) ) ) $=
      ( vz cv con0 wss c0 wa wel cin wceq wcel a1i12 sseli syl8 simpl syl6 ee33
      wi wne wex wrex onfrALTlem3 df-rex syl6ib wal simpr inss2 inss1 word ssel
      wn wtr syl2im eloni ordtr trel exp3acom23 ee233 elin simplbi2 simplbi2com
      simpll exp4a ggen31 dfss2 biimpri ex pm3.21 idi alrimdv exim mpdd syl6ibr
      sseq0 ) CEZFGZVQHUAZIZACJZVQAEZKZHLUMZIZBCJZVQBEZKZHLZIZBUBZWIBVQUCVTWEWG
      WCMZWCWGKZHLZIZBUBZWKVTWEWNBWCUCWPABCUDWNBWCUEUFVTWEWOWJTZBUGWPWKTVTWEWQB
      VTWEWQTTVTWEWOWIWFWJVTWEWOWHWMGZWNWIVTWEWODEZWHMZWSWMMZTZDUGZWRVTWEWOXBDV
      TWEWOWTXAVTWEWOWTIZDBJZWSWCMZXAVTWEXDWTXEVTWEXDWTTWOWTUHNZWHWGWSVQWGUIOPZ
      VTWEXDDCJZDAJZXFVTWEXDWTXIXGWHVQWSVQWGUJOPVTWEWBUNZXDBAJZXEXJVTWEWBUKZXKV
      TWEWBFMZXMVTVRWEWAXNVRVSQWAWDQVQFWBULUOWBUPRWBUQRVTWEXDWLXLVTWEXDWLTWLWNW
      TVDNWCWBWGVQWBUIOPXHXKXEXLXJWBWSWGURUSUTXFXIXJWSVQWBVAVBSXAXFXEWSWCWGVAVC
      SVEVFWRXCDWHWMVGVHPVTWEWOWNTWLWNUHNWRWNWIWHWMVPVISVTWEWOWLWFVTWEWOWLTWLWN
      QNWCVQWGVQWBUJOPWIWFVJSVKVLWOWJBVMRVNWIBVQUEVO $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d ph y $.
    $( A theorem pertaining to the substitution for an existentially quantified
       variable when the substituted variable does not occur in the quantified
       wff.  (Contributed by Alan Sare, 22-Jul-2012.) $)
    cbvexsv $p |- ( E. x ph <-> E. y [ y / x ] ph ) $=
      ( cvv wrex wsb wex cbvrexsv rexv 3bitr3i ) ABDEABCFZCDEABGKCGABCDHABIKCIJ
      $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x y $.
    $( Lemma for ~ onfrALT . $)
    onfrALTlem1 $p |- ( ( a C_ On /\ a =/= (/) ) -> ( ( x e. a /\ ( a i^i x ) =
                      (/) ) -> E. y e. a ( a i^i y ) = (/) ) ) $=
      ( cv con0 wss c0 wne wa wel cin wceq wex wrex wsb wi 19.8a cbvexsv syl6ib
      a1i onfrALTlem4 exbii df-rex syl6ibr ) CDZEFUEGHIZACJUEADKGLIZBCJUEBDKGLZ
      IZBMZUHBUENUFUGUGABOZBMZUJUFUGUGAMZULUGUMPUFUGAQTUGABRSUKUIBABCUAUBSUHBUE
      UCUD $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x y $.
    $( The epsilon relation is foundational on the class of ordinal numbers.
       ~ onfrALT is an alternate proof of ~ onfr . ~ onfrALTVD is the Virtual
       Deduction proof from which ~ onfrALT is derived.  The Virtual Deduction
       proof mirrors the working proof of ~ onfr which is the main part of the
       proof of Theorem 7.12 of the first edition of TakeutiZaring.  The proof
       of the corresponding Proposition 7.12 of [TakeutiZaring] p. 38 (second
       edition) does not contain the working proof equivalent of ~ onfrALTVD .
       This theorem does not rely on the Axiom of Regularity.  (Contributed by
       Alan Sare, 22-Jul-2012.) $)
    onfrALT $p |- _E Fr On $=
      ( va vy vx con0 cep wfr cv wss c0 wne wa cin wceq wi dfepfr simpr wel wex
      wrex exp3a n0 wn onfrALTlem1 onfrALTlem2 pm2.61 exlimdv syl5bi mpd mpgbir
      ee22 ) DEFAGZDHZUKIJZKZUKBGLIMBUKSZNAABDOUNUMUOULUMPUMCAQZCRUNUOCUKUAUNUP
      UOCUNUPUKCGLIMZUONUQUBZUONUOUNUPUQUOCBAUCTUNUPURUOCBAUDTUQUOUEUJUFUGUHUI
      $.
      $( [30-Jun-2012] $)
  $}

  $( Formula-building implication rule for class substitution.  Closed form of
     ~ csbeq2i . ~ csbeq2g is derived from the virtual deduction proof
     ~ csbeq2gVD .  (Contributed by Alan Sare, 10-Nov-2012. ) $)
  csbeq2g $p |- ( A e. V -> ( A. x B = C ->
                   [_ A / x ]_ B = [_ A / x ]_ C ) ) $=
    ( wcel wceq wal wsbc csb a4sbc sbceqg sylibd ) BEFCDGZAHNABIABCJABDJGNABEKA
    BCDELM $.
    $( [10-Nov-2012] $)

  $( Closed form of right-to-left implication of ~ 19.41 , Theorem 19.41 of
     [Margaris] p. 90.  Derived from ~ 19.41rgVD .  (Contributed by Alan Sare,
     8-Feb-2014.) $)
  19.41rg $p |- ( A. x ( ps -> A. x ps ) -> ( ( E. x ph /\ ps ) ->
                  E. x ( ph /\ ps ) ) ) $=
    ( wal wi wex wa ax-4 pm3.21 a1i al2imi exim syl6 syld com23 imp3a ) BBCDZEZ
    CDZACFZBABGZCFZSBTUBSBQTUBEZRCHSQAUAEZCDUCRBUDCBUDERBAIJKAUACLMNOP $.
    $( [8-Feb-2014] $)

  ${
    $d u x $.  $d u y $.  $d v x $.  $d v y $.
    $( Ordered pair membership in a class abstraction of pairs.  Compare to
       ~ elopab .  (Contributed by Alan Sare, 8-Feb-2014.) $)
    opelopab4 $p |- ( <. u , v >. e. { <. x , y >. | ph } <->
                     E. x E. y ( ( x = u /\ y = v ) /\ ph ) ) $=
      ( cv cop copab wcel wceq wa wex elopab opeq12 vex opth1 jca impbii bitr4i
      opth2 eqcom anbi1i 2exbii ) EFZDFZGZABCHIUFBFZCFZGZJZAKZCLBLUGUDJZUHUEJZK
      ZAKZCLBLABCUFMUOUKBCUNUJAUNUIUFJZUJUNUPUGUHUDUENUPULUMUGUHUDUEBOPUGUHUDUE
      CODOTQRUFUIUASUBUCS $.
      $( [8-Feb-2014] $)
  $}

  $( ~ pm13.193 for two variables. ~ pm13.193 is Theorem *13.193 in
     [WhiteheadRussell] p. 179.  Derived from ~ 2pm13.193VD .  (Contributed by
     Alan Sare, 8-Feb-2014.) $)
  2pm13.193 $p |- ( ( ( x = u /\ y = v ) /\ [ u / x ] [ v / y ] ph ) <->
                    ( ( x = u /\ y = v ) /\ ph ) ) $=
    ( weq wa wsb simpll simplr simpr sbequ2 sylc jca31 sbequ1 impbii ) BEFZCDFZ
    GZACDHZBEHZGZSAGZUBQRAQRUAIZQRUAJZUBRTAUEUBQUATUDSUAKTBELMACDLMNUCQRUAQRAIZ
    QRAJZUCQTUAUFUCRATUGSAKACDOMTBEOMNP $.
    $( [8-Feb-2014] $)

  $( A closed form of ~ hbn . ~ hbnt is another closed form of ~ hbn .
     (Contributed by Alan Sare, 8-Feb-2014.) $)
  hbntal $p |- ( A. x ( ph -> A. x ph ) -> A. x ( -. ph -> A. x -. ph ) ) $=
    ( wal wi wn hba1 ax6o con1i con3 al2imi syl5 alimi syl ) AABCZDZBCZPBCAEZQB
    CZDZBCOBFPSBQNEZBCZPRUAAABGHOTQBANIJKLM $.
    $( [8-Feb-2014] $)

  $( A closed form of ~ hbim .  Derived from ~ hbimpgVD .  (Contributed by Alan
     Sare, 8-Feb-2014.) $)
  hbimpg $p |- ( ( A. x ( ph -> A. x ph ) /\ A. x ( ps -> A. x ps ) ) ->
                  A. x ( ( ph -> ps ) -> A. x ( ph -> ps ) ) ) $=
    ( wal wi wa hba1 hban wn hbntal adantr 19.21bi pm2.21 alimi syl6 simpr ax-1
    jad alrimi ) AACDEZCDZBBCDZEZCDZFZABEZUFCDZECUAUDCTCGUCCGHUEABUGUEAIZUHCDZU
    GUEUHUIEZCUAUJCDUDACJKLUHUFCABMNOUEBUBUGUEUCCUAUDPLBUFCBAQNORS $.
    $( [8-Feb-2014] $)

  $( Closed form of ~ hbal .  Derived from ~ hbalgVD .  (Contributed by Alan
     Sare, 8-Feb-2014.) $)
  hbalg $p |- ( A. y ( ph -> A. x ph ) ->
                  A. y ( A. y ph -> A. x A. y ph ) ) $=
    ( wal wi alim ax-7 syl6 a5i ) AABDZEZACDZLBDZECKCDLJCDMAJCFACBGHI $.
    $( [8-Feb-2014] $)

  $( Closed form of ~ hbex .  Derived from ~ hbexgVD .  (Contributed by Alan
     Sare, 8-Feb-2014.) $)
  hbexg $p |- ( A. x A. y ( ph -> A. x ph ) ->
                  A. x A. y ( E. y ph -> A. x E. y ph ) ) $=
    ( wal wi wex hba2 wn hba1 ax-7 19.21bi hbntal alrimi hbalg hbnd df-ex albii
    syl 3imtr4g a5i ) AABDEZCDZACFZUCBDZEZCDBUBBDZUECUACBGZUFAHZCDZHZUJBDUCUDUF
    UIBUBBIUFUIUIBDEZCUFUHUHBDEZCDZUKCDUFUMBUFULBDZCDUMBDUFUNCUGUFUABDZUNUFUOCU
    ABCJKABLRMULCBJRKUHBCNRKOACPZUCUJBUPQSMT $.
    $( [8-Feb-2014] $)

  ${
    $d u x $.  $d u y $.  $d v x $.  $d v y $.
    $( Alternate form of ~ a9e for non-distinct ` x ` , ` y ` and ` u = v ` .
       ~ a9e2eq is derived from ~ a9e2eqVD .(Contributed by Alan Sare,
       25-Mar-2014.) $)
    a9e2eq $p |- ( A. x x = y -> ( u = v ->
                  E. x E. y ( x = u /\ y = v ) ) ) $=
      ( weq wal wa wex a9e hbae wi ax-8 a4s ancld eximd mpi a5i ax10o mpd syl
      19.2 excomim equtrr anim2d 2eximdv syl5com ) ABEZAFZADEZBDEZGZBHAHZDCEZUI
      BCEZGZBHAHUHUKAHZBHZULUHUPBFZUQUHUPAFURUGUPAUHUIAHUPADIUHUIUKAABAJUHUIUJU
      GUIUJKAABDLMNOPQUPABRSUPBBUATUKBAUBTUMUKUOABUMUJUNUIDCBUCUDUEUF $.
      $( [25-Mar-2014] $)
  $}

  ${
    $d u x $.  $d u y $.  $d v x z $.  $d y z $.
    $( If at least two sets exist ( ~ dtru ) , then the same is true expressed
       in an alternate form similar to the form of ~ a9e . ~ a9e2nd is derived
       from ~ a9e2ndVD .(Contributed by Alan Sare, 25-Mar-2014.) $)
    a9e2nd $p |- ( -. A. x x = y ->
                       E. x E. y ( x = u /\ y = v ) ) $=
      ( vz weq wal wn wa wex wi cv cvv wcel vex id ax-17 syl idi alimi a9e mpbi
      pm3.2i 19.42v biimpri ax-mp isset anbi1i exbii hbnae ax-6 equequ1 dvelimf
      wb 19.41rg exim pm2.27 mpsyl excomim ) ABFZAGHZADFZBCFZIZBJAJZKVAVDAJZBJZ
      VEVBAJZVCIZBJZVAVJVGKZVGDLZMNZVCIZBJZVJVMVCBJZIZVOVMVPDOBCUAUCVOVQVMVCBUD
      UEUFVNVIBVMVHVCAVLUGUHUIUBVAVIVFKZBGZVKVAVAVSVAPZVAVABGVSABBUJVAVRBVAVRKV
      AVCVCAGKZAGZVRVAVAWBVTVAVAAGWBUTAUKVAWAAVAWAKVAVAWAVTECFZVCABEWCAQVCEQEBF
      ZWCVCUNZKWDWDWEWDPEBCULRSUMRSTRRVBVCAUORSTRRVIVFBUPRVJVGUQURVDBAUSRS $.
      $( [25-Mar-2014] $)
  $}

  ${
    $d u x $.  $d u y $.  $d v x $.  $d v y $.
    $( "At least two sets exist" expressed in the form of ~ dtru is logically
       equivalent to the same expressed in a form similar to ~ a9e if ~ dtru is
       false implies ` u = v ` . ~ a9e2ndeq is derived from ~ a9e2ndeqVD .
       (Contributed by Alan Sare, 25-Mar-2014.) $)
    a9e2ndeq $p |- ( ( -. A. x x = y \/ u = v ) <->
                        E. x E. y ( x = u /\ y = v ) ) $=
      ( weq wal wn wo wa wex a9e2nd wi a9e2eq a1d cv biimprcd syl6 eximdv hbnae
      wne pm2.61i jaoi olc excom neeq1 adantrd simpr a1i ee22 ax4 necon3ai 19.9
      neeq2 syl6ib syl5bi hba1 exlimi 19.21bi orc pm2.61ine impbii ) ABEZAFZGZD
      CEZHZADEZBCEZIZBJAJZVDVJVEABCDKZVCVEVJLABCDMVDVJVEVKNUAUBVJVFLDOZCOZVEVFV
      JVEVDUCNVLVMTZVJVDVFVNVJVDBJZVDVJVIAJZBJVNVOVIABUDVNVPVDBVNVPVDAJVDVNVIVD
      AVNVIAOZBOZTZVDVNVIVQVMTZVHVSVNVGVTVHVGVTVNVQVLVMUEPUFVIVHLVNVGVHUGUHVHVS
      VTVRVMVQUMPUIVCVQVRVBAUJUKQRVDAABASULUNRUOVOVDBVDVDBFBVDBUPABBSUQURQVDVEU
      SQUTVA $.
      $( [25-Mar-2014] $)
  $}

  ${
    $d u x $.  $d u y $.  $d v x $.  $d v y $.
    $( Equivalence for double substitution ~ 2sb5 without distinct ` x ` ,
       ` y ` requirement. ~ 2sb5nd is derived from ~ 2sb5ndVD .  (Contributed
       by Alan Sare, 30-Apr-2014.) $)
    2sb5nd $p |- ( ( -. A. x x = y \/ u = v ) -> ( [ u / x ] [ v / y ] ph
                 <-> E. x E. y ( ( x = u /\ y = v ) /\ ph ) ) ) $=
      ( weq wal wn wo wa wex wsb wb a9e2ndeq wi anabs5 exbii hbs1 19.41 bitr3i
      2pm13.193 ax-10o syl5 sbimi sbal2 nalequcoms syl5ib pm2.61i bitr2i anbi2i
      pm5.32 mpbir sylbi ) BCFBGZHZEDFIBEFCDFJZCKZBKZACDLZBELZUPAJZCKZBKZMZBCDE
      NURVDOURUTJZURVCJZMVEURVEJVFURUTPVEVCURVCUQUTJZBKVEVBVGBVBUPUTJZCKVGVHVAC
      ABCDEUAQUPUTCUNUTUTCGZOUTUTBGUNVIUSBERZUTBCUBUCUTUSCGZBELZUOVIUSVKBEACDRU
      DVLVIMCBUSCBEUEUFUGUHSTQUQUTBVJSUIUJTURUTVCUKULUM $.
      $( [30-Apr-2014] $)
  $}

