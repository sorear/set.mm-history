@(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Additional set theory definitions
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
@)

  @c fcard @.
  @c idsumf @.
  @c idsum @.

  @( Extend class notation with finite cardinality (member of ` NN0 ` ). @)
  cfc @a class fcard @.

  @( Extend class notation with finite idempotent sum. @)
  cidsumf @a class idsumf @.

  @( Extend class notation with idempotent sum. @)
  cidsum @a class idsum @.

  @{
    @d f n p s t u x y @.
    @( Def. 8.3.43, p. 184. @)
    @( Define finite cardinality. @)
    df-fcard @a |- fcard = ( x e. _V |-> if ( x e. Fin , ( iota n ( n e. NN
          /\ E. f f : x -1-1-onto-> ( 1 ... n ) ) ) , ( Undef ` NN0 ) ) ) @.

    @( Def. 8.3.74, p. 199. @)
    @( Define finite idempotent sum. @)
    df-idsumf @a |- idsumf = ( p e. _V , s e. _V |->
    ( iota t A. f ( f : ( 1 ... ( fcard ` s ) ) -1-1-onto-> s
         -> t = ( ( p ser f ) ` ( fcard ` s ) ) ) ) ) @.
    df-idsumf @a |- idsumf = ( p e. _V , s e. _V |->
    ( iota t A. f ( f : ( 1 ... ( fcard ` s ) ) -1-1-onto-> s
         -> t = ( ( p ser f ) ` ( fcard ` s ) ) ) ) ) @.
( ( P seq1 F ) ` N )

    @( Def. 8.3.75, p. 200. @)
    @( Define idempotent sum. @)
    df-idsum @a |- idsum = ( p e. _V , s e. _V |->
        U. { u | E. t ( u = ( p idsumf t ) /\ t C_ s /\ t e. Fin ) } ) @.
  @}          U. { a | E. t C_ s E. n e. NN0 E. f
          ( f : ( 1 ... n ) -1-1-onto-> t /\ a = ( ( p seq f ) ` n ) ) } ) $.
    df-idsum @a |- idsum = ( p e. _V , f e. _V |->
                U. { a | E. t E. g
       ( t e. Fin /\ t C_ f )
     /\ ( g : ( 1 ... ( # ` t ) ) -1-1-onto-> dom t
     /\ A. x e. dom g A. y e. dom g ( x < y -> ( g ` x ) < ( g ` y ) )
     /\ a = ( ( p seq1 ( f o. g ) ) ` ( # ` t ) ) ) ) }

