$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Star rings through Hilbert spaces using extensible structures
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( $c C_rng $. $)
  $( Extend class notation subring. $)
  $( csrng $a class C_rng $. $)

  ${
    $d r s x y $.
    $( Def. 8.5.8, p. 216. $)
    $( Define ` s ` is a subring of ` r ` . $)
    $(
    df-subring $a |- C_rng = { <. s , r >. | ( ( Base ` s ) C_ ( Base ` r )
        /\ A. x e. ( Base ` s ) A. y e. ( Base ` s ) ( ( x ( +g ` s ) y )
  = ( x ( +g ` r ) y ) /\ ( x ( .r ` s ) y ) = ( x ( .r ` r ) y ) ) ) } $.
    $)
  $}

  $c *r $.
  $c *Ring $.

  $( Extend class notation with involution. $)
  cstv $a class *r $.

  $( Extend class notation with class of all *-rings. $)
  csr $a class *Ring $.

  $( Def. 8.5.23, p. 225. $)
  $( Define the involution function of a *-ring. $)
  df-starv $a |- *r = ( v e. _V |-> ( v ` 4 ) ) $.

  $( Utility theorem: index-independent form of ~ df-starv . $)
  starvid $p |- *r = ( f e. _V |-> ( f ` ( *r ` ndx ) ) ) $=
    ( cstv c4 df-starv 4nn ndxid ) BCAADEF $.
    $( [6-Oct-2013] $)

  $( Utility lemma for constructing a star ring. $)
  srnglem $p |- -. ( *r ` ndx )
        e. { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) } $=
    ( vs cnx cstv cfv cbs cplusg cmulr ctp wcel wceq wne c4 ndxarg 4re neeqtrri
    c1 ltneii eqnetri c2 c3 w3o w3a df-starv 4nn 1re 1lt4 basendx 2lt4 df-plusg
    wn 2re 2nn 3re 3lt4 df-mulr 3nn 3pm3.2i ne3anior mpbi fvex eltp mtbir ) BCD
    ZBEDZBFDZBGDZHIVCVDJVCVEJVCVFJUAZVCVDKZVCVEKZVCVFKZUBVGUJVHVIVJVCLVDCLAAUCU
    DMZLPVDPLUENUFQUGORVCLVEVKLSVESLUKNUHQFSAAUIULMORVCLVFVKLTVFTLUMNUNQGTAAUOU
    PMORUQVCVDVCVEVCVFURUSVCVDVEVFBCUTVAVB $.
    $( [18-Nov-2013] $)

  ${
    srngfn.w $e |- W = ( { <. ( Base ` ndx ) , B >. , <. ( +g ` ndx ) , P >. ,
         <. ( .r ` ndx ) , T >. } u. { <. ( *r ` ndx ) , C >. } ) $.
    ${
      srngfn.d $e |- D = ( { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) }
                  u. { ( *r ` ndx ) } ) $.
      $( A constructed star ring is a function with domain ` D ` . $)
      srngfn $p |- W Fn D $=
        ( cnx cbs cfv cplusg cmulr ctp cop cstv fvex eqid rngfn srnglem fnunsn
        ) IJKZILKZIMKZNZCUBAOUCDOUDEONZFIPKBIPQAUEDUFEUFRUERSGHTUA $.
        $( [18-Nov-2013] $)
    $}

    $( The base set of a constructed left vector space. $)
    srngbase $p |- ( B e. X -> B = ( Base ` W ) ) $=
      ( vs cbs cnx cfv cop cplusg cmulr ctp cstv csn cun ax-mp wcel cvv snexALT
      tpex unex eqeltri wfun eqid srngfn fnfun baseid opex tpid1 ssun1 eleqtrri
      wfn sseli strfv ) AEIFHEJIKZALZJMKZCLZJNKZDLZOZJPKZBLZQZRZUAGVDVGUSVAVCUC
      VFUBUDUEEURUTVBOVEQRZUOEUFABVICDEGVIUGUHVIEUISHUJUSVHEUSVDTUSVHTUSVAVCURA
      UKULVDVHUSVDVGUMUPSGUNUQ $.
      $( [18-Nov-2013] $)
  $}

  ${
    $d f i k p q r t $.
    $( Def. 8.5.6 p. 216 $)
    $( Define class of all star rings.  A star ring is a ring with an
       involution (conjugation) function.  Involution (unlike say the ring
       zero) is not unique and therefore must be added as a new component to
       the ring.  For example, two possible involutions for complex numbers are
       the identity function and complex conjugation.  Definition of involution
       in [Holland95] p. 204. $)
    df-starrng $a |- *Ring = { f e. Ring |
       E. k E. p E. t E. i ( ( k = ( Base ` f ) /\ p = ( +g ` f ) )
          /\ ( t = ( .r ` f ) /\ i = ( *r ` f ) ) /\
         A. q e. k A. r e. k ( ( i ` q ) e. k
              /\ ( ( i ` ( q p r ) ) = ( ( i ` q ) p ( i ` r ) )
              /\ ( i ` ( q t r ) ) = ( ( i ` r ) t ( i ` q ) )
              /\ ( i ` ( i ` q ) ) = q ) ) ) } $.
  $}

  ${
    $d f i k p q r t I $.  $d f i k p q r t K $.  $d f i k p q r t P $.
    $d f i k p q r t R $.  $d f i k p q r t T $.
    issrng.k $e |- K = ( Base ` R ) $.
    issrng.p $e |- P = ( +g ` R ) $.
    issrng.t $e |- T = ( .r ` R ) $.
    issrng.i $e |- I = ( *r ` R ) $.
    $( The predicate "is a star ring." $)
    issrng $p |- ( R e. *Ring <-> ( R e. Ring
        /\ A. q e. K A. r e. K ( ( I ` q ) e. K
              /\ ( ( I ` ( q P r ) ) = ( ( I ` q ) P ( I ` r ) )
              /\ ( I ` ( q T r ) ) = ( ( I ` r ) T ( I ` q ) )
              /\ ( I ` ( I ` q ) ) = q ) ) ) ) $=
      ( vk vp cv wceq wa cfv co wral wex vt vi vf csr wcel crg w3a cplusg cmulr
      cstv fveq2 syl6eqr eqeq2d anbi12d 3anbi12d 4exbidv df-starrng elrab2 fvex
      cbs eqeltri eleq2 anbi1d raleqbi1dv opreq fveq2d eqeq12d 3anbi1d 2ralbidv
      anbi2d 3anbi2d fveq1 eleq1d opreq12d id fveq12d eqeq1d 3anbi123d ceqsex4v
      cvv anbi2i bitri ) BUDUEBUFUEZLNZEOZMNZAOZPZUANZCOZUBNZDOZPZGNZWKQZWDUEZW
      NFNZWFRZWKQZWOWQWKQZWFRZOZWNWQWIRZWKQZWTWOWIRZOZWOWKQZWNOZUGZPZFWDSZGWDSZ
      UGZUBTUATMTLTZPWCWNDQZEUEZWNWQARZDQZXOWQDQZARZOZWNWQCRZDQZXSXOCRZOZXODQZW
      NOZUGZPZFESGESZPWDUCNZUTQZOZWFYKUHQZOZPZWIYKUIQZOZWKYKUJQZOZPZXLUGZUBTUAT
      MTLTXNUCBUFUDYKBOZUUBXMLMUAUBUUCYPWHUUAWMXLUUCYMWEYOWGUUCYLEWDUUCYLBUTQZE
      YKBUTUKHULUMUUCYNAWFUUCYNBUHQZAYKBUHUKIULUMUNUUCYRWJYTWLUUCYQCWIUUCYQBUIQ
      ZCYKBUIUKJULUMUUCYSDWKUUCYSBUJQZDYKBUJUKKULUMUNUOUPUAUCUBLFGMUQURXNYJWCXL
      WOEUEZXIPZFESZGESUUHXQWKQZWOWTARZOZXFXHUGZPZFESGESUUHUUMYBWKQZWTWOCRZOZXH
      UGZPZFESGESYJLMUAUBEACDEUUDVTHBUTUSVAAUUEVTIBUHUSVACUUFVTJBUIUSVADUUGVTKB
      UJUSVAXKUUJGWDEXJUUIFWDEWEWPUUHXIWDEWOVBVCVDVDWGUUIUUOGFEEWGXIUUNUUHWGXBU
      UMXFXHWGWSUUKXAUULWGWRXQWKWNWQWFAVEVFWOWTWFAVEVGVHVJVIWJUUOUUTGFEEWJUUNUU
      SUUHWJXFUURUUMXHWJXDUUPXEUUQWJXCYBWKWNWQWICVEVFWTWOWICVEVGVKVJVIWLUUTYIGF
      EEWLUUHXPUUSYHWLWOXOEWNWKDVLZVMWLUUMYAUURYEXHYGWLUUKXRUULXTXQWKDVLWLWOXOW
      TXSAUVAWQWKDVLZVNVGWLUUPYCUUQYDYBWKDVLWLWTXSWOXOCUVBUVAVNVGWLXGYFWNWLWOXO
      WKDWLVOUVAVPVQVRUNVIVSWAWB $.
      $( [22-Sep-2011] $)
  $}

  ${
    $d x y K $.  $d x y R $.  $d x y ph $.
    $( Ring base $)
    issrngd.k $e |- ( ph -> K = ( Base ` R ) ) $.
    $( Ring plus $)
    issrngd.p $e |- ( ph -> P = ( +g ` R ) ) $.
    $( Ring times $)
    issrngd.t $e |- ( ph -> T = ( .r ` R ) ) $.
    $( Involution (e.g. complex conjugate) $)
    issrngd.c $e |- ( ph -> C = ( *r ` R ) ) $.
    issrngd.r $e |- ( ph -> R e. Ring ) $.
    $( Closure $)
    issrngd.cl $e |- ( ( ph /\ x e. K ) -> ( C ` x ) e. K ) $.
    $( Distributive law over addition $)
    issrngd.dp $e |- ( ( ph /\ x e. K /\ y e. K )
           -> ( C ` ( x P y ) ) = ( ( C ` x ) P ( C ` y ) ) ) $.
    $( Distributive law over multiplication $)
    issrngd.dt $e |- ( ( ph /\ x e. K /\ y e. K )
           -> ( C ` ( x T y ) ) = ( ( C ` y ) T ( C ` x ) ) ) $.
    $( Idempotency $)
    issrngd.id $e |- ( ( ph /\ x e. K ) -> ( C ` ( C ` x ) ) = x ) $.
    $( Properties that determine a star ring. $)
    issrngd $p |- ( ph -> R e. *Ring ) $=
      ( cfv co wa crg wcel cstv cbs cplusg wceq cmulr w3a wral csr simpl simprl
      cv syl2anc simprr syl3anc jca syl 3jca ralrimivva fveq1d opreqd opreq123d
      eleq12d fveq12d eqeq12d eqeq1d 3anbi123d anbi12d anbi2d mpbid eqid issrng
      raleqbidv sylibr ) AFUAUBZBUMZFUCRZRZFUDRZUBZVQCUMZFUERZSZVRRZVSWBVRRZWCS
      ZUFZVQWBFUGRZSZVRRZWFVSWISZUFZVSVRRZVQUFZUHZTZCVTUIZBVTUIZTZFUJUBAVPVQDRZ
      HUBZVQWBESZDRZXAWBDRZESZUFZVQWBGSZDRZXEXAGSZUFZXADRZVQUFZUHZTZCHUIZBHUIZT
      WTAVPXQMAXOBCHHAVQHUBZWBHUBZTZTZXBXNYAAXRXBAXTUKZAXRXSULZNUNYAXGXKXMYAAXR
      XSXGYBYCAXRXSUOZOUPYAAXRXSXKYBYCYDPUPYAAXRTXMYAAXRYBYCUQQURUSUQUTUQAXQWSV
      PAXPWRBHVTIAXOWQCHVTIAXBWAXNWPAXAVSHVTAVQDVRLVAZIVDAXGWHXKWMXMWOAXDWEXFWG
      AXCWDDVRLAEWCVQWBJVBVEAXAVSXEWFEWCJYEAWBDVRLVAZVCVFAXIWKXJWLAXHWJDVRLAGWI
      VQWBKVBVEAXEWFXAVSGWIKYFYEVCVFAXLWNVQAXAVSDVRLYEVEVGVHVIVNVNVJVKWCFWIVRVT
      CBVTVLWCVLWIVLVRVLVMVO $.
      $( [18-Nov-2013] $)
  $}

  $c ip $.
  $c PreHil $.

  $( Extend class notation with Hermitian form (inner product). $)
  cipr $a class ip $.

  $( Extend class notation with class all pre-Hilbert spaces. $)
  cprehil $a class PreHil $.

  $( Def. 8.5.25, p. 226. $)
  $( Define Hermitian form (inner product). $)
  df-inprod $a |- ip = ( v e. _V |-> ( v ` 8 ) ) $.

  $( Utility theorem: index-independent form of ~ df-ip . $)
  ipid $p |- ip = ( f e. _V |-> ( f ` ( ip ` ndx ) ) ) $=
    ( cipr c8 df-inprod 8nn ndxid ) BCAADEF $.
    $( [6-Oct-2013] $)

  $( Utility lemma for constructing a pre-Hilbert space. $)
  phllem1 $p |- -. ( *r ` ndx ) e. ( { ( Base ` ndx ) , ( +g ` ndx ) ,
   ( .r ` ndx ) } u. { ( vbase ` ndx ) , ( vadd ` ndx ) , ( vsca ` ndx ) } ) $=
    ( vs cnx cstv cfv cplusg wcel wceq wne c4 ndxarg ltneii neeqtrri eqnetri c2
    4re c3 c5 necomi c6 c7 cbs cmulr ctp cvbase cvadd cvsca cun w3o wo df-starv
    w3a 4nn 1re 1lt4 basendx 2re 2lt4 df-plusg 2nn 3re 3lt4 df-mulr 3nn 3pm3.2i
    wn ne3anior mpbi df-vbase 5nn 5re 4lt5 df-vadd 6nn 6re 4lt6 df-vsca 7nn 7re
    c1 4lt7 pm3.2ni elun fvex eltp orbi12i bitri mtbir ) BCDZBUADZBEDZBUBDZUCZB
    UDDZBUEDZBUFDZUCZUGFZWHWIGWHWJGWHWKGUHZWHWMGWHWNGWHWOGUHZUIZWRWSWHWIHZWHWJH
    ZWHWKHZUKWRVEXAXBXCWHIWICIAAUJULJZIVSWIVSIUMOUNKUOLMWHIWJXDINWJNIUPOUQKENAA
    URUSJLMWHIWKXDIPWKPIUTOVAKUBPAAVBVCJLMVDWHWIWHWJWHWKVFVGWHWMHZWHWNHZWHWOHZU
    KWSVEXEXFXGWMWHWMQWHUDQAAVHVIJQIWHIQOVJVKKXDLMRWNWHWNSWHUESAAVLVMJSIWHISOVN
    VOKXDLMRWOWHWOTWHUFTAAVPVQJTIWHITOVRVTKXDLMRVDWHWMWHWNWHWOVFVGWAWQWHWLFZWHW
    PFZUIWTWHWLWPWBXHWRXIWSWHWIWJWKBCWCZWDWHWMWNWOXJWDWEWFWG $.
    $( [30-Sep-2013] $)

  $( Utility lemma for constructing a pre-Hilbert space. $)
  phllem2 $p |- -. ( ip ` ndx ) e. ( ( { ( Base ` ndx ) , ( +g ` ndx ) ,
   ( .r ` ndx ) } u. { ( vbase ` ndx ) , ( vadd ` ndx ) , ( vsca ` ndx ) } )
        u. { ( *r ` ndx ) } ) $=
    ( vs cnx cipr cfv wcel wceq wo wne wn c8 ndxarg 8re ltneii neeqtrri eqnetri
    c2 c3 mpbi c5 c6 cbs cplusg cmulr ctp cvbase cvadd cvsca cun cstv df-inprod
    csn w3o w3a 8nn 1re 1lt8 basendx 2re 2lt8 df-plusg 2nn 3re 3lt8 df-mulr 3nn
    c1 3pm3.2i ne3anior 5re 5lt8 df-vbase 5nn 6re 6lt8 df-vadd 6nn 7lt8 df-vsca
    c7 7re 7nn pm3.2ni 4re 4lt8 df-starv 4nn df-ne elun fvex eltp orbi12i bitri
    c4 elsnc mtbir ) BCDZBUADZBUBDZBUCDZUDZBUEDZBUFDZBUGDZUDZUHZBUIDZUKZUHEZWPW
    QFWPWRFWPWSFULZWPXAFWPXBFWPXCFULZGZWPXFFZGZXKXLXIXJWPWQHZWPWRHZWPWSHZUMXIIX
    NXOXPWPJWQCJAAUJUNKZJVFWQVFJUOLUPMUQNOWPJWRXQJPWRPJURLUSMUBPAAUTVAKNOWPJWSX
    QJQWSQJVBLVCMUCQAAVDVEKNOVGWPWQWPWRWPWSVHRWPXAHZWPXBHZWPXCHZUMXJIXRXSXTWPJX
    AXQJSXASJVILVJMUESAAVKVLKNOWPJXBXQJTXBTJVMLVNMUFTAAVOVPKNOWPJXCXQJVSXCVSJVT
    LVQMUGVSAAVRWAKNOVGWPXAWPXBWPXCVHRWBWPXFHXLIWPJXFXQJWMXFWMJWCLWDMUIWMAAWEWF
    KNOWPXFWGRWBXHWPXEEZWPXGEZGXMWPXEXGWHYAXKYBXLYAWPWTEZWPXDEZGXKWPWTXDWHYCXIY
    DXJWPWQWRWSBCWIZWJWPXAXBXCYEWJWKWLWPXFYEWNWKWLWO $.
    $( [30-Sep-2013] $)

  ${
    phlfn.h $e |- H = ( ( { <. ( Base ` ndx ) , B >. , <. ( +g ` ndx ) , P >. ,
                   <. ( .r ` ndx ) , T >. }
                u. { <. ( vbase ` ndx ) , V >. , <. ( vadd ` ndx ) , A >. ,
                   <. ( vsca ` ndx ) , S >. } )
             u. { <. ( *r ` ndx ) , R >. , <. ( ip ` ndx ) , I >. } ) $.
    ${
      phlfn.d $e |- D = ( ( { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) }
                  u. { ( vbase ` ndx ) , ( vadd ` ndx ) , ( vsca ` ndx ) } )
               u. { ( *r ` ndx ) , ( ip ` ndx ) } ) $.
      $( A constructed pre-Hilbert space is a function.  Starting from ~ lmodfn
         (which has 6 members), we chain ~ fnunsn twice, each time adding an
         ordered pair to the function, to get all 8 members. $)
      phlfn $p |- H Fn D $=
        ( cnx cfv ctp cun cstv csn cop eqid cbs cplusg cmulr cvbase cvadd cvsca
        cipr fvex lmodfn phllem1 fnunsn cpr df-pr uneq2i unass 3eqtr4i phllem2
        ) MUANZMUBNZMUCNZOMUDNZMUENZMUFNZOPZMQNZRZPZCURBSUSDSUTGSOVAJSVBASVCFSO
        PZVEESZRZPZHMUGNZIMUGUHVDVGVHVKVEEMQUHABVDDFGJVHVHTVDTUIVKTVGTUJUKVHVIV
        LISZULZPVHVJVMRZPZPHVKVOPVNVPVHVIVMUMUNKVHVJVOUOUPVDVEVLULZPVDVFVLRZPZP
        CVGVRPVQVSVDVEVLUMUNLVDVFVRUOUPUQUK $.
        $( [1-Oct-2013] $)
    $}

    $( Lemma to shorten proofs of ~ phlbase through ~ phlip . $)
    phlfun $p |- Fun H $=
      ( cnx cbs cfv cplusg cmulr ctp cvbase cvadd cvsca cun cstv cipr wfun eqid
      cpr wfn phlfn fnfun ax-mp ) GKLMKNMKOMPKQMKRMKSMPTKUAMKUBMUETZUFGUCABUJCD
      EFGHIJUJUDUGUJGUHUI $.
      $( [6-Oct-2013] $)

    $( The base set of a constructed pre-Hilbert space. $)
    phlbase $p |- ( B e. X -> B = ( Base ` H ) ) $=
      ( vs cbs cnx cfv cop ctp cun tpex unex cplusg cmulr cvadd cvsca cstv cipr
      cvbase cpr cvv prex eqeltri phlfun baseid ssun1 sstri opex tpid1 eleqtrri
      sselii strfv ) BGMJLGNMOZBPZNUAOCPZNUBOFPZQZNUGOIPZNUCOAPZNUDOEPZQZRZNUEO
      DPZNUFOHPZUHZRZUIKVJVMVEVIVBVCVDSVFVGVHSTVKVLUJTUKABCDEFGHIKULLUMVBVNGVEV
      NVBVEVJVNVEVIUNVJVMUNUOVBVCVDVABUPUQUSKURUT $.
      $( [6-Oct-2013] $)

    $( The additive operation of a constructed pre-Hilbert space. $)
    phlplusg $p |- ( P e. X -> P = ( +g ` H ) ) $=
      ( vs cplusg cnx cfv cop ctp cun tpex unex cbs cmulr cvadd cvsca cstv cipr
      cvbase cpr cvv prex eqeltri phlfun ssun1 sstri opex tpid2 sselii eleqtrri
      plusgid strfv ) CGMJLGNUAOBPZNMOZCPZNUBOFPZQZNUGOIPZNUCOAPZNUDOEPZQZRZNUE
      ODPZNUFOHPZUHZRZUIKVJVMVEVIVAVCVDSVFVGVHSTVKVLUJTUKABCDEFGHIKULLUSVCVNGVE
      VNVCVEVJVNVEVIUMVJVMUMUNVAVCVDVBCUOUPUQKURUT $.
      $( [6-Oct-2013] $)

    $( The multiplicative operation of a constructed pre-Hilbert space. $)
    phlmulr $p |- ( T e. X -> T = ( .r ` H ) ) $=
      ( vs cmulr cnx cfv cop ctp cun tpex unex cbs cplusg cvadd cvsca cstv cipr
      cvbase cpr cvv prex eqeltri phlfun mulrid ssun1 sstri opex tpid3 eleqtrri
      sselii strfv ) FGMJLGNUAOBPZNUBOCPZNMOZFPZQZNUGOIPZNUCOAPZNUDOEPZQZRZNUEO
      DPZNUFOHPZUHZRZUIKVJVMVEVIVAVBVDSVFVGVHSTVKVLUJTUKABCDEFGHIKULLUMVDVNGVEV
      NVDVEVJVNVEVIUNVJVMUNUOVAVBVDVCFUPUQUSKURUT $.
      $( [6-Oct-2013] $)

    $( The set of vectors in a constructed pre-Hilbert space. $)
    phlvbase $p |- ( V e. X -> V = ( vbase ` H ) ) $=
      ( vs cvbase cnx cfv cop ctp cun tpex unex cbs cmulr cvadd cvsca cstv cipr
      cplusg cpr cvv prex eqeltri phlfun vbaseid ssun2 ssun1 sstri tpid1 sselii
      opex eleqtrri strfv ) IGMJLGNUAOBPZNUGOCPZNUBOFPZQZNMOZIPZNUCOAPZNUDOEPZQ
      ZRZNUEODPZNUFOHPZUHZRZUIKVKVNVEVJVBVCVDSVGVHVISTVLVMUJTUKABCDEFGHIKULLUMV
      GVOGVJVOVGVJVKVOVJVEUNVKVNUOUPVGVHVIVFIUSUQURKUTVA $.
      $( [6-Oct-2013] $)

    $( The vector addition operation of a constructed pre-Hilbert space. $)
    phlvadd $p |- ( A e. X -> A = ( vadd ` H ) ) $=
      ( vs cvadd cnx cfv cop ctp cun tpex unex cbs cplusg cmulr cvsca cstv cipr
      cvbase cpr prex eqeltri phlfun vaddid ssun2 ssun1 sstri opex tpid2 sselii
      cvv eleqtrri strfv ) AGMJLGNUAOBPZNUBOCPZNUCOFPZQZNUGOIPZNMOZAPZNUDOEPZQZ
      RZNUEODPZNUFOHPZUHZRZUSKVKVNVEVJVBVCVDSVFVHVISTVLVMUITUJABCDEFGHIKUKLULVH
      VOGVJVOVHVJVKVOVJVEUMVKVNUNUOVFVHVIVGAUPUQURKUTVA $.
      $( [6-Oct-2013] $)

    $( The scalar product operation of a constructed pre-Hilbert space. $)
    phlvsca $p |- ( S e. X -> S = ( vsca ` H ) ) $=
      ( vs cvsca cnx cfv cop ctp cun tpex unex cbs cplusg cmulr cvadd cstv cipr
      cvbase cpr prex eqeltri phlfun vscaid ssun2 ssun1 sstri opex tpid3 sselii
      cvv eleqtrri strfv ) EGMJLGNUAOBPZNUBOCPZNUCOFPZQZNUGOIPZNUDOAPZNMOZEPZQZ
      RZNUEODPZNUFOHPZUHZRZUSKVKVNVEVJVBVCVDSVFVGVISTVLVMUITUJABCDEFGHIKUKLULVI
      VOGVJVOVIVJVKVOVJVEUMVKVNUNUOVFVGVIVHEUPUQURKUTVA $.
      $( [6-Oct-2013] $)

    $( The involution operation of a constructed pre-Hilbert space. $)
    phlstarv $p |- ( R e. X -> R = ( *r ` H ) ) $=
      ( vs cstv cnx cfv cop ctp cun tpex unex cbs cplusg cmulr cvadd cvsca cipr
      cvbase cpr cvv prex eqeltri phlfun ssun2 opex prid1 sselii eleqtrri strfv
      starvid ) DGMJLGNUAOBPZNUBOCPZNUCOFPZQZNUGOIPZNUDOAPZNUEOEPZQZRZNMOZDPZNU
      FOHPZUHZRZUIKVHVLVCVGUTVAVBSVDVEVFSTVJVKUJTUKABCDEFGHIKULLUSVJVMGVLVMVJVL
      VHUMVJVKVIDUNUOUPKUQUR $.
      $( [6-Oct-2013] $)

    $( The inner product (Hermitian form) operation of a constructed
       pre-Hilbert space. $)
    phlip $p |- ( I e. X -> I = ( ip ` H ) ) $=
      ( vs cipr cnx cfv cop ctp cun tpex unex cbs cplusg cmulr cvadd cvsca cstv
      cvbase cpr cvv prex eqeltri phlfun ipid ssun2 prid2 sselii eleqtrri strfv
      opex ) HGMJLGNUAOBPZNUBOCPZNUCOFPZQZNUGOIPZNUDOAPZNUEOEPZQZRZNUFODPZNMOZH
      PZUHZRZUIKVHVLVCVGUTVAVBSVDVEVFSTVIVKUJTUKABCDEFGHIKULLUMVKVMGVLVMVKVLVHU
      NVIVKVJHUSUOUPKUQUR $.
      $( [6-Oct-2013] $)
  $}

  ${
    $d a f h i k p q r s t v w x y z $.
    $( Def. 8.5.24, p. 225. $)
    $( Define class all generalized pre-Hilbert (inner product) spaces. $)
    df-prehil $a |- PreHil = { f e. ( LVec i^i *Ring ) |
       E. k E. p E. t E. i E. v E. a E. s E. h (
        ( ( k = ( Base ` f ) /\ p = ( +g ` f ) )
              /\ ( t = ( .r ` f ) /\ i = ( *r ` f ) ) )
        /\ ( ( v = ( vbase ` f ) /\ a = ( vadd ` f ) )
              /\ ( s = ( vsca ` f ) /\ h = ( ip ` f ) ) )
          /\ A. q e. k A. x e. v A. y e. v A. z e. v (
            ( x h y ) e. k
              /\ ( ( ( ( q s x ) a y ) h z )
                  = ( ( q t ( x h z ) ) p ( y h z ) )
        /\ ( ( x h x ) = ( 0g ` f ) -> x = ( 0v ` f ) )
              /\ ( i ` ( x h y ) ) = ( y h x ) ) ) ) } $.
  $}

  ${
    $d a f h i k p q s t v x y z A $.  $d a f h i k p q s t v x y z H $.
    $d a f h i k p q s t v x y z I $.  $d a f h i k p q s t v x y z K $.
    $d a f h i k p s t v N $.  $d a f h i k p q s t v x y z P $.
    $d a f h i k p q s t v x y z S $.  $d a f h i k p q s t v x y z T $.
    $d a f h i k p q s t v x y z V $.  $d a f h i k p q s t v x y z W $.
    $d a f h i k p s t v Z $.
    isphil.k $e |- K = ( Base ` W ) $.
    isphil.p $e |- P = ( +g ` W ) $.
    isphil.t $e |- T = ( .r ` W ) $.
    isphil.i $e |- I = ( *r ` W ) $.
    isphil.v $e |- V = ( vbase ` W ) $.
    isphil.a $e |- A = ( vadd ` W ) $.
    isphil.s $e |- S = ( vsca ` W ) $.
    isphil.h $e |- H = ( ip ` W ) $.
    isphil.n $e |- N = ( 0g ` W ) $.
    isphil.z $e |- Z = ( 0v ` W ) $.
    $( The predicate "is a generalized pre-Hilbert (inner product) space". $)
    isphil $p |- ( W e. PreHil <-> ( W e. LVec /\ W e. *Ring
       /\ A. q e. K A. x e. V A. y e. V A. z e. V ( ( x H y ) e. K
              /\ ( ( ( ( q S x ) A y ) H z )
                  = ( ( q T ( x H z ) ) P ( y H z ) )
         /\ ( ( x H x ) = N -> x = Z )
              /\ ( I ` ( x H y ) ) = ( y H x ) ) ) ) ) $=
      ( vk vp vt vi vv va vs vh vf cprehil wcel clvec csr cv wceq wa co cfv w3a
      wi wral wex cin elin anbi1i cbs cplusg cmulr cstv cvbase cvadd cvsca cipr
      c0g fveq2 syl6eqr eqeq2d anbi12d imbi12d 3anbi2d anbi2d 3anbi123d 4exbidv
      czv 2ralbidv df-prehil elrab2 df-3an 3bitr4i eqeltri eleq2 anbi1d ralbidv
      fvex raleqbi1dv opreq 3anbi1d opreq1d fveq1 eqeq1d 3anbi3d eleq1d opreq2d
      cvv raleq opreq12d eqeq12d imbi1d fveq2d ceqsex8v 3anbi3i bitri ) MUOUPZM
      UQUPZMURUPZUFUSZJUTZUGUSZEUTZVAZUHUSZGUTZUIUSZIUTZVAZVAZUJUSZLUTZUKUSZDUT
      ZVAZULUSZFUTZUMUSZHUTZVAZVAZAUSZBUSZYSVBZYAUPZOUSZUUCYQVBZUUDYNVBZCUSZYSV
      BZUUGUUCUUJYSVBZYFVBZUUDUUJYSVBZYCVBZUTZUUCUUCYSVBZKUTZUUCNUTZVEZUUEYHVCZ
      UUDUUCYSVBZUTZVDZVAZCYLVFBYLVFZAYLVFZOYAVFZVDZUMVGULVGUKVGUJVGZUIVGUHVGUG
      VGUFVGZVDZXSXTUUCUUDHVBZJUPZUUGUUCFVBZUUDDVBZUUJHVBZUUGUUCUUJHVBZGVBZUUDU
      UJHVBZEVBZUTZUUCUUCHVBZKUTZUUSVEZUVMIVCZUUDUUCHVBZUTZVDZVAZCLVFBLVFZALVFO
      JVFZVDMUQURVHZUPZUVKVAXSXTVAZUVKVAXRUVLUWNUWOUVKMUQURVIVJYAUNUSZVKVCZUTZY
      CUWPVLVCZUTZVAZYFUWPVMVCZUTZYHUWPVNVCZUTZVAZVAZYLUWPVOVCZUTZYNUWPVPVCZUTZ
      VAZYQUWPVQVCZUTZYSUWPVRVCZUTZVAZVAZUUFUUPUUQUWPVSVCZUTZUUCUWPWIVCZUTZVEZU
      VCVDZVAZCYLVFBYLVFZAYLVFOYAVFZVDZUMVGULVGUKVGUJVGZUIVGUHVGUGVGUFVGUVKUNMU
      WMUOUWPMUTZUYIUVJUFUGUHUIUYJUYHUVIUJUKULUMUYJUXGYKUXRUUBUYGUVHUYJUXAYEUXF
      YJUYJUWRYBUWTYDUYJUWQJYAUYJUWQMVKVCZJUWPMVKVTPWAWBUYJUWSEYCUYJUWSMVLVCZEU
      WPMVLVTQWAWBWCUYJUXCYGUXEYIUYJUXBGYFUYJUXBMVMVCZGUWPMVMVTRWAWBUYJUXDIYHUY
      JUXDMVNVCZIUWPMVNVTSWAWBWCWCUYJUXLYPUXQUUAUYJUXIYMUXKYOUYJUXHLYLUYJUXHMVO
      VCZLUWPMVOVTTWAWBUYJUXJDYNUYJUXJMVPVCZDUWPMVPVTUAWAWBWCUYJUXNYRUXPYTUYJUX
      MFYQUYJUXMMVQVCZFUWPMVQVTUBWAWBUYJUXOHYSUYJUXOMVRVCZHUWPMVRVTUCWAWBWCWCUY
      JUYFUVFOAYAYLUYJUYEUVEBCYLYLUYJUYDUVDUUFUYJUYCUUTUUPUVCUYJUXTUURUYBUUSUYJ
      UXSKUUQUYJUXSMVSVCKUWPMVSVTUDWAWBUYJUYANUUCUYJUYAMWIVCNUWPMWIVTUEWAWBWDWE
      WFWJWJWGWHWHABCUJUHUNUMUIUFULOUGUKWKWLXSXTUVKWMWNUVKUWLXSXTUVHUUEJUPZUVDV
      AZCYLVFBYLVFZAYLVFZOJVFUYSUUKUUMUUNEVBZUTZUUTUVCVDZVAZCYLVFBYLVFZAYLVFOJV
      FUYSUUKUUGUULGVBZUUNEVBZUTZUUTUVCVDZVAZCYLVFBYLVFZAYLVFOJVFUYSVUJUUTUUEIV
      CZUVBUTZVDZVAZCYLVFZBYLVFZAYLVFZOJVFVUQCLVFZBLVFZALVFZOJVFUYSUUHUUDDVBZUU
      JYSVBZVUIUTZUUTVUOVDZVAZCLVFBLVFZALVFOJVFUYSUVPUUJYSVBZVUIUTZUUTVUOVDZVAZ
      CLVFBLVFZALVFOJVFUWLUFUGUHUIUJUKULJEGILDFHUMJUYKXIPMVKWSWOEUYLXIQMVLWSWOG
      UYMXIRMVMWSWOIUYNXISMVNWSWOLUYOXITMVOWSWODUYPXIUAMVPWSWOFUYQXIUBMVQWSWOHU
      YRXIUCMVRWSWOUVGVUBOYAJYBUVFVUAAYLYBUVEUYTBCYLYLYBUUFUYSUVDYAJUUEWPWQWJWR
      WTYDVUAVUGOAJYLYDUYTVUFBCYLYLYDUVDVUEUYSYDUUPVUDUUTUVCYDUUOVUCUUKUUMUUNYC
      EXAWBXBWFWJWJYGVUGVUMOAJYLYGVUFVULBCYLYLYGVUEVUKUYSYGVUDVUJUUTUVCYGVUCVUI
      UUKYGUUMVUHUUNEUUGUULYFGXAXCWBXBWFWJWJYIVUMVUSOAJYLYIVULVUQBCYLYLYIVUKVUP
      UYSYIUVCVUOVUJUUTYIUVAVUNUVBUUEYHIXDXEXFWFWJWJYMVUTVVCOJVUSVVBAYLLVURVVAB
      YLLVUQCYLLXJWTWTWRYOVVBVVIOAJLYOVUQVVHBCLLYOVUPVVGUYSYOVUJVVFUUTVUOYOUUKV
      VEVUIYOUUIVVDUUJYSUUHUUDYNDXAXCXEXBWFWJWJYRVVIVVNOAJLYRVVHVVMBCLLYRVVGVVL
      UYSYRVVFVVKUUTVUOYRVVEVVJVUIYRVVDUVPUUJYSYRUUHUVOUUDDUUGUUCYQFXAXCXCXEXBW
      FWJWJYTVVNUWKOAJLYTVVMUWJBCLLYTUYSUVNVVLUWIYTUUEUVMJUUCUUDYSHXAZXGYTVVKUW
      BUUTUWEVUOUWHYTVVJUVQVUIUWAUVPUUJYSHXAYTVUHUVSUUNUVTEYTUULUVRUUGGUUCUUJYS
      HXAXHUUDUUJYSHXAXKXLYTUURUWDUUSYTUUQUWCKUUCUUCYSHXAXEXMYTVUNUWFUVBUWGYTUU
      EUVMIVVOXNUUDUUCYSHXAXLWGWCWJWJXOXPXQ $.
      $( [22-Sep-2011] $)
  $}


  ${
    $d q x y z K $.  $d x y z V $.  $d q x y z W $.  $d q x y z ph $.
    $( Division ring (skew field) base $)
    isphild.k $e |- ( ph -> K = ( Base ` W ) ) $.
    $( Division ring (skew field) plus $)
    isphild.p $e |- ( ph -> P = ( +g ` W ) ) $.
    $( Division ring (skew field) times $)
    isphild.t $e |- ( ph -> T = ( .r ` W ) ) $.
    $( Involution (e.g. complex conjugate) $)
    isphild.c $e |- ( ph -> C = ( *r ` W ) ) $.
    $( Set of vectors $)
    isphild.v $e |- ( ph -> V = ( vbase ` W ) ) $.
    $( Vector addition $)
    isphild.a $e |- ( ph -> A = ( vadd ` W ) ) $.
    $( Scalar product $)
    isphild.s $e |- ( ph -> S = ( vsca ` W ) ) $.
    $( Inner product (Hermitian form) $)
    isphild.i $e |- ( ph -> I = ( ip ` W ) ) $.
    $( Division ring zero $)
    isphild.o $e |- ( ph -> O = ( 0g ` W ) ) $.
    $( Zero vector $)
    isphild.z $e |- ( ph -> Z = ( 0v ` W ) ) $.
    isphild.l $e |- ( ph -> W e. LVec ) $.
    isphild.r $e |- ( ph -> W e. *Ring ) $.
    $( Closure of inner product $)
    isphild.cl $e |- ( ( ph /\ x e. V /\ y e. V ) -> ( x I y ) e. K ) $.
    $( Distributive law for inner product $)
    isphild.d $e |- ( ( ph /\ q e. K /\ ( x e. V /\ y e. V /\ z e. V ) )
          -> ( ( ( q S x ) A y ) I z ) = ( ( q T ( x I z ) ) P ( y I z ) ) ) $.
    $( Nonsingularity $)
    isphild.ns $e |- ( ( ph /\ x e. V /\ ( x I x ) = O ) -> x = Z ) $.
    $( Conjugation law $)
    isphild.cj $e |- ( ( ph /\ x e. V /\ y e. V )
            -> ( C ` ( x I y ) ) = ( y I x ) ) $.
    $( Properties that determine a pre-Hilbert (inner product) space. $)
    isphild $p |- ( ph -> W e. PreHil ) $=
      ( clvec wcel csr cv cipr cfv co cbs cvsca cvadd cmulr cplusg wceq c0g czv
      cstv w3a cvbase wral cprehil simpll simplrr simprl syl3anc simplrl simprr
      wi wa syl113anc simplll adantr simpr ex 3jca jca ralrimivva eleq12d eqidd
      opreqd opreq123d eqeq12d eqeq2d imbi12d fveq12d 3anbi123d anbi12d 3anbi3d
      raleqbidv mpbid eqid isphil sylibr ) ANUMUNZNUOUNZBUPZCUPZNUQURZUSZNUTURZ
      UNZPUPZXGNVAURZUSZXHNVBURZUSZDUPZXIUSZXMXGXRXIUSZNVCURZUSZXHXRXIUSZNVDURZ
      USZVEZXGXGXIUSZNVFURZVEZXGNVGURZVEZVSZXJNVHURZURZXHXGXIUSZVEZVIZVTZDNVJUR
      ZVKZCYSVKZBYSVKZPXKVKZVIZNVLUNAXEXFXGXHJUSZKUNZXMXGHUSZXHEUSZXRJUSZXMXGXR
      JUSZIUSZXHXRJUSZGUSZVEZXGXGJUSZLVEZXGOVEZVSZUUEFURZXHXGJUSZVEZVIZVTZDMVKZ
      CMVKZBMVKZPKVKZVIUUDAXEXFUVGUGUHAUVEPBKMAXMKUNZXGMUNZVTZVTZUVCCDMMUVKXHMU
      NZXRMUNZVTZVTZUUFUVBUVOAUVIUVLUUFAUVJUVNVMZAUVHUVIUVNVNZUVKUVLUVMVOZUIVPU
      VOUUNUURUVAUVOAUVHUVIUVLUVMUUNUVPAUVHUVIUVNVQUVQUVRUVKUVLUVMVRUJWAUVOUUPU
      UQUVOUUPVTAUVIUUPUUQAUVJUVNUUPWBUVOUVIUUPUVQWCUVOUUPWDUKVPWEUVOAUVIUVLUVA
      UVPUVQUVRULVPWFWGWHWHWFAUVGUUCXEXFAUVFUUBPKXKQAUVEUUABMYSUAAUVDYTCMYSUAAU
      VCYRDMYSUAAUUFXLUVBYQAUUEXJKXKAJXIXGXHUDWKZQWIAUUNYFUURYLUVAYPAUUIXSUUMYE
      AUUHXQXRXRJXIUDAUUGXOXHXHEXPUBAHXNXMXGUCWKAXHWJWLAXRWJWLAUUKYBUULYCGYDRAX
      MXMUUJXTIYASAXMWJAJXIXGXRUDWKWLAJXIXHXRUDWKWLWMAUUPYIUUQYKAUUOYGLYHAJXIXG
      XGUDWKUEWMAOYJXGUFWNWOAUUSYNUUTYOAUUEXJFYMTUVSWPAJXIXHXGUDWKWMWQWRWTWTWTW
      TWSXABCDXPYDXNYAXIYMXKYHYSNYJPXKXBYDXBYAXBYMXBYSXBXPXBXNXBXIXBYHXBYJXBXCX
      D $.
      $( [18-Nov-2013] $)
  $}


  $c +ss $.
  $c ocv $.
  $c CSubSp $.
  $c Hil $.

  $( Extend class notation with subspace sum. $)
  cplusss $a class +ss $.

  $( Extend class notation with orthocomplement of a subspace. $)
  cocv $a class ocv $.

  $( Extend class notation with set of closed subspaces. $)
  ccsubsp $a class CSubSp $.

  $( Extend class notation with class of all Hilbert spaces. $)
  chs $a class Hil $.

  ${
    $d h s t u v w x y $.
    $( Define subspace sum. $)
    df-plusss $a |- +ss = ( v e. _V |-> ( x e. ~P ( vbase ` v ) ,
        y e. ~P ( vbase ` v ) |-> { w e. ( vbase ` v )
            | E. t e. x E. u e. y w = ( t ( vadd ` v ) u ) } ) ) $.

    $( Def. 8.5.27, p. 227. $)
    $( Define orthocomplement of a subspace. $)
    df-ocv $a |- ocv = ( h e. _V |-> ( s e. ~P ( vbase ` h ) |->
   { x e. ( vbase ` h ) | A. y e. s ( x ( ip ` h ) y ) = ( 0v ` h ) } ) ) $.

    $( Def. 8.5.28, p. 226. $)
    $( Define set of closed subspaces. $)
    df-csubsp $a |- CSubSp = ( h e. _V |-> { s
   | ( s C_ ( vbase ` h ) /\ s = ( ( ocv ` h ) ` ( ( ocv ` h ) ` s ) ) ) } ) $.

    $( Def. 8.5.30, p. 228. $)
    $( Define class of all Hilbert spaces.  Based on Proposition 4.5, p. 176,
       Gudrun Kalmbach, Quantum Measures and Spaces, Kluwer, Dordrecht,
       1998. $)
    df-hil $a |- Hil = { h e. PreHil | A. s e. ( CSubSp ` h )
          ( s ( +ss ` h ) ( ( ocv ` h ) ` s ) ) = ( vbase ` h ) } $.
  $}

  ${
    $d h A $.  $d h t u w x y H $.  $d h w x y V $.
    plusssfval.v $e |- V = ( vbase ` H ) $.
    plusssfval.a $e |- A = ( vadd ` H ) $.
    plusssfval.s $e |- S = ( +ss ` H ) $.
    $( The subspace sum operation. $)
    plusssfval $p |- ( H e. B -> S = ( x e. ~P V , y e. ~P V |-> { w e. V
            | E. t e. x E. u e. y w = ( t A u ) } ) ) $=
      ( wcel cvv cv wceq wrex cfv cvbase vh crab cmpt2 elex cplusss cvadd fveq2
      cpw co syl6eqr pweqd opreqd 2rexbidv rabeqbidv mpt2eq123dv df-plusss fvex
      eqeq2d eqeltri pwex mpt2exga mp2an fvmpt syl5eq syl ) IGNIONZHABJUHZVGCPZ
      EPZDPZFUIZQZDBPZREAPZRZCJUBZUCZQIGUDVFHIUESVQMUAIABUAPZTSZUHZVTVHVIVJVRUF
      SZUIZQZDVMREVNRZCVSUBZUCVQOUEVRIQZABVTVTWEVGVGVPWFVSJWFVSITSZJVRITUGKUJZU
      KZWIWFWDVOCVSJWHWFWCVLEDVNVMWFWBVKVHWFWAFVIVJWFWAIUFSFVRIUFUGLUJULURUMUNU
      OABCUADEUPVGONZWJVQONJJWGOKITUQUSUTZWKABVGVGVPOOVAVBVCVDVE $.
      $( [7-Oct-2011] $)

    $d x y A $.  $d t w x y X $.  $d t u w x y Y $.
    $( The subspace sum operation value. $)
    plusssval $p |- ( ( H e. B /\ X C_ V /\ Y C_ V ) -> ( X S Y ) = { w e. V
            | E. t e. X E. u e. Y w = ( t A u ) } ) $=
      ( vx vy wcel co cv wceq wrex wss crab wa cpw plusssfval opreqd cvbase cfv
      cmpt2 fvex eqeltri elpw2 rexeq rabbidv rexbidv eqid rabex ovmpt2 syl2anbr
      cvv sylan9eq 3impb ) GEPZIHUAZJHUAZIJFQZARCRBRDQSZBJTZCITZAHUBZSVCVDVEUCV
      FIJNOHUDZVKVGBORZTZCNRZTZAHUBZUIZQZVJVCFVQIJNOABCDEFGHKLMUEUFVDIVKPJVKPVR
      VJSVEIHHGUGUHUTKGUGUJUKZULJHVSULNOIJVKVKVPVJVQVMCITZAHUBVNISVOVTAHVMCVNIU
      MUNVLJSZVTVIAHWAVMVHCIVGBVLJUMUOUNVQUPVIAHVSUQURUSVAVB $.
      $( [7-Oct-2011] $)
  $}

  ${
    $d h s x y H $.  $d h I $.  $d h s x V $.  $d h Z $.
    ocvfval.v $e |- V = ( vbase ` H ) $.
    ocvfval.i $e |- I = ( ip ` H ) $.
    ocvfval.z $e |- Z = ( 0v ` H ) $.
    ocvfval.o $e |- O = ( ocv ` H ) $.
    $( The orthocomplement operation. $)
    ocvfval $p |- ( H e. A -> O = ( s e. ~P V |->
                          { x e. V | A. y e. s ( x I y ) = Z } ) ) $=
      ( vh wcel cvv cv wceq cfv cvbase cpw co wral crab cmpt elex cocv cipr czv
      fveq2 syl6eqr opreqd eqeq12d ralbidv rabeqbidv mpteq12dv df-ocv fvex pwex
      pweqd eqeltri mptexg ax-mp fvmpt syl5eq syl ) DCODPOZFIGUAZAQZBQZEUBZHRZB
      IQZUCZAGUDZUEZRDCUFVGFDUGSVPMNDINQZTSZUAZVIVJVQUHSZUBZVQUISZRZBVMUCZAVRUD
      ZUEVPPUGVQDRZIVSWEVHVOWFVRGWFVRDTSZGVQDTUJJUKZUTWFWDVNAVRGWHWFWCVLBVMWFWA
      VKWBHWFVTEVIVJWFVTDUHSEVQDUHUJKUKULWFWBDUISHVQDUIUJLUKUMUNUOUPABNIUQVHPOV
      PPOGGWGPJDTURVAUSIVHVOPVBVCVDVEVF $.
      $( [7-Oct-2011] $)

    $d s I $.  $d s x y S $.  $d s Z $.
    $( Value of the orthocomplement of a subset (normally a subspace) of a
       pre-Hilbert space. $)
    ocvval $p |- ( ( H e. A /\ S C_ V )
              -> ( O ` S ) = { x e. V | A. y e. S ( x I y ) = Z } ) $=
      ( vs wcel cfv cv wceq wral crab wss cpw co cmpt ocvfval fveq1d cvbase cvv
      fvex eqeltri elpw2 raleq rabbidv eqid rabex fvmpt sylbir sylan9eq ) ECOZD
      HUAZDGPDNHUBZAQBQFUCIRZBNQZSZAHTZUDZPZVBBDSZAHTZUSDGVFABCEFGHINJKLMUEUFUT
      DVAOVGVIRDHHEUGPUHJEUGUIUJZUKNDVEVIVAVFVCDRVDVHAHVBBVCDULUMVFUNVHAHVJUOUP
      UQUR $.
      $( [7-Oct-2011] $)
  $}

  ${
    $d h s H $.  $d h O $.  $d h s V $.
    csubspset.v $e |- V = ( vbase ` H ) $.
    csubspset.o $e |- O = ( ocv ` H ) $.
    csubspset.c $e |- C = ( CSubSp ` H ) $.
    $( The set of closed subspaces of a pre-Hilbert space. $)
    csubspset $p |- ( H e. A
             -> C = { s | ( s C_ V /\ s = ( O ` ( O ` s ) ) ) } ) $=
      ( vh wcel cvv cv wss cfv wceq wa cab cvbase cocv elex fveq2 sseq2d fveq1d
      ccsubsp syl6eqr fveq12d eqeq2d anbi12d abbidv df-csubsp fvex eqeltri pwex
      cpw vex elpw anbi1i abbii ssab2 eqsstr3i ssexi fvmpt syl5eq syl ) CAKCLKZ
      BFMZENZVGVGDOZDOZPZQZFRZPCAUAVFBCUEOVMIJCVGJMZSOZNZVGVGVNTOZOZVQOZPZQZFRV
      MLUEVNCPZWAVLFWBVPVHVTVKWBVOEVGWBVOCSOZEVNCSUBGUFUCWBVSVJVGWBVRVIVQDWBVQC
      TODVNCTUBHUFZWBVGVQDWDUDUGUHUIUJJFUKVMEUOZEEWCLGCSULUMUNVMVGWEKZVKQZFRWEW
      GVLFWFVHVKVGEFUPUQURUSVKFWEUTVAVBVCVDVE $.
      $( [7-Oct-2011] $)
  $}

  ${
    $d s H $.  $d s O $.  $d s S $.  $d s V $.
    iscsubsp.v $e |- V = ( vbase ` H ) $.
    iscsubsp.o $e |- O = ( ocv ` H ) $.
    iscsubsp.c $e |- C = ( CSubSp ` H ) $.
    $( The predicate "is a closed subspace" (of a pre-Hilbert space). $)
    iscsubsp $p |- ( H e. A
              -> ( S e. C <-> ( S C_ V /\ S = ( O ` ( O ` S ) ) ) ) ) $=
      ( vs wcel cv wss cfv wceq wa cab csubspset cvv cvbase eleq2d fvex eqeltri
      ssex adantr sseq1 id fveq2 fveq2d eqeq12d anbi12d elab3 syl6bb ) DAKZCBKC
      JLZFMZUOUOENZENZOZPZJQZKCFMZCCENZENZOZPZUNBVACABDEFJGHIRUAUTVFJCVBCSKVECF
      FDTNSGDTUBUCUDUEUOCOZUPVBUSVEUOCFUFVGUOCURVDVGUGVGUQVCEUOCEUHUIUJUKULUM
      $.
      $( [7-Oct-2011] $)
  $}

  ${
    $d h s C $.  $d h s H $.  $d h O $.  $d h S $.  $d h V $.
    ishil.v $e |- V = ( vbase ` H ) $.
    ishil.s $e |- S = ( +ss ` H ) $.
    ishil.o $e |- O = ( ocv ` H ) $.
    ishil.c $e |- C = ( CSubSp ` H ) $.
    $( The predicate "is a Hilbert space" (over a *-division ring). $)
    ishil $p |- ( H e. Hil
        <-> ( H e. PreHil /\ A. s e. C ( s S ( O ` s ) ) = V ) ) $=
      ( vh cocv cfv cplusss co cvbase wceq ccsubsp fveq2 syl6eqr cv cprehil chs
      wral fveq1d opreq2d opreqd eqtrd eqeq12d raleqbidv df-hil elrab2 ) FUAZUM
      KUAZLMZMZUNNMZOZUNPMZQZFUNRMZUDUMUMDMZBOZEQZFAUDKCUBUCUNCQZUTVDFVAAVEVACR
      MAUNCRSJTVEURVCUSEVEURUMVBUQOVCVEUPVBUMUQVEUMUODVEUOCLMDUNCLSITUEUFVEUQBU
      MVBVEUQCNMBUNCNSHTUGUHVEUSCPMEUNCPSGTUIUJKFUKUL $.
      $( [7-Oct-2011] $)
  $}

