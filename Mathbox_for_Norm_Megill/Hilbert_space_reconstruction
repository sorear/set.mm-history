$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Hilbert space reconstruction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c Lines $.
  $c Points $.
  $c PSubSp $.
  $c pmap $.
  $c +P $.
  $c sumP $.
  $c Indep $.
  $c BasesP $.
  $c rankP $.
  $c _|_P $.
  $c PHyp $.
  $c ww $.
  $c WPoints $.
  $c PAut $.
  $c Dil $.
  $c Trn $.
  $c trP $.
  $c TGrp $.
  $c GrpEndo $.
  $c TGrpEndo $.
  $c ERing $.
  $c TPEndo $.
  $c DRing $.
  $c DVecA $.
  $c DVIsoPre $.
  $c DVecB $.
  $c DVecH $.
  $c ee $.
  $c DVIsoA $.
  $c qtr $.
  $c DVIsoB $.
  $c DVIsoC $.
  $c DVIsoH $.
  $c S_|_ $.
  $c Ropp $.
  $c Vldual $.
  $c vecdom $.
  $c ker $.
  $c mapd $.
  $c eimage $.
  $c hmap $.
  $c gmap $.
  $c HLtoHil $.

  $( Extend class notation with set of all lines in Hilbert lattice $L$. $)
  clines $a class Lines $.

  $( Extend class notation with set of all points. $)
  cpoints $a class Points $.

  $( Extend class notation with set of all projective subspaces. $)
  cpsubsp $a class PSubSp $.

  $( Extend class notation with projective map. $)
  cpmap $a class pmap $.

  $( Extend class notation with projective subspace sum. $)
  cplusp $a class +P $.

  $( Extend class notation with projective subspace sum. $)
  csump $a class sumP $.

  $( Extend class notation with set of all sets of independent points. $)
  cindep $a class Indep $.

  $( Extend class notation with all bases for projective subspaces. $)
  cbasesp $a class BasesP $.

  $( Extend class notation with rank of projective subspace $m$. $)
  crankp $a class rankP $.

  $( Extend class notation with polarity of projective subspace $m$. $)
  cpol $a class _|_P $.

  $( Extend class notation with set of all (projective) hyperplanes. $)
  cphyp $a class PHyp $.

  $( Extend class notation with designated hyperplane. $)
  cww $a class ww $.

  $( Extend class notation with W points. $)
  cwpoints $a class WPoints $.

  $( Extend class notation with set of all projective automorphisms. $)
  cpaut $a class PAut $.

  $( Extend class notation with set of all dilations. $)
  cdil $a class Dil $.

  $( Extend class notation with set of all translations. $)
  ctrn $a class Trn $.

  $( Extend class notation with trace of a translation $f$. $)
  ctrp $a class trP $.

  $( Extend class notation with translation group. $)
  ctgrp $a class TGrp $.

  $( Extend class notation with group endomorphisms of $G$. $)
  cgrpendo $a class GrpEndo $.

  $( Extend class notation with translation group endomorphisms. $)
  ctgrpendo $a class TGrpEndo $.

  $( Extend class notation with endomorphism ring. $)
  cering $a class ERing $.

  $( Extend class notation with trace-preserving endomorphisms. $)
  ctpendo $a class TPEndo $.

  $( Extend class notation with $\Delta$-ring. $)
  cdring $a class DRing $.

  $( Extend class notation with constructed vector space A. $)
  cdveca $a class DVecA $.

  $( Extend class notation with preliminary projective subspace isomorphism. $)
  cdvisopre $a class DVIsoPre $.

  $( Extend class notation with constructed vector space B. $)
  cdvecb $a class DVecB $.

  $( Extend class notation with constructed vector space. $)
  cdvech $a class DVecH $.

  $( Extend class notation with e vector. $)
  cee $a class ee $.

  $( Extend class notation with projective subspace isomorphism A. $)
  cdvisoa $a class DVIsoA $.

  $( Extend class notation with q-translation. $)
  cqtr $a class qtr $.

  $( Extend class notation with projective subspace isomorphism B. $)
  cdvisob $a class DVIsoB $.

  $( Extend class notation with projective subspace isomorphism C. $)
  cdvisoc $a class DVIsoC $.

  $( Extend class notation with projective subspace isomorphism. $)
  cdvisoh $a class DVIsoH $.

  $( Extend class notation with constructed orthocomplement. $)
  csoc $a class S_|_ $.

  $( Extend class notation with opposite ring. $)
  cropp $a class Ropp $.

  $( Extend class notation with left dualvector space. $)
  cvldual $a class Vldual $.

  $( Extend class notation with vector domain. $)
  cvecdom $a class vecdom $.

  $( Extend class notation with kernel of a functional. $)
  cker $a class ker $.

  $( Extend class notation with one-dimensional subspace map. $)
  cmapd $a class mapd $.

  $( Extend class notation with e vector image. $)
  ceimage $a class eimage $.

  $( Extend class notation with h map. $)
  chmap $a class hmap $.

  $( Extend class notation with g map. $)
  cgmap $a class gmap $.

  $( Extend class notation with Hilbert space constructed from Hilbert
     lattice. $)
  chltohil $a class HLtoHil $.

  ${
    $d a l p q r s $.
    $( Def. 8.6.1, p. 229. $)
    $( Define set of all projective lines in Hilbert lattice. $)
    df-lines $a |- Lines = ( l e. _V |-> { s | E. q e. ( AtomsNEW ` l )
     E. r e. ( AtomsNEW ` l ) ( q =/= r /\
     s = { p e. ( AtomsNEW ` l ) | p ( le ` l ) ( q ( join ` l ) r ) } ) } ) $.

    $( Def. 8.6.2, p. 229. $)
    $( Define set of all projective points in a Hilbert lattice.  A projective
       point is the singleton of a lattice atom. $)
    df-points $a |- Points = ( l e. _V |-> { q |
                   E. p e. ( AtomsNEW ` l ) q = { p } } ) $.

    $( Def. 8.6.3, p. 229. $)
    $( Define set of all projective subspaces. $)
    df-psubsp $a |- PSubSp = ( l e. _V |-> { s | ( s C_ ( AtomsNEW ` l )
      /\ A. p e. s A. q e. s A. r e. ( AtomsNEW ` l )
        ( r ( le ` l ) ( p ( join ` l ) q ) -> r e. s ) ) } ) $.

    $( Def. 8.6.4, p. 230. $)
    $( Define projective map for ` l ` at ` a ` . $)
    df-pmap $a |- pmap = ( l e. _V |-> ( a e. ( base ` l ) |->
               { p e. ( AtomsNEW ` l ) | p ( le ` l ) a } ) ) $.
  $}

  ${
    $d h p q r s A $.  $d h p q r s H $.  $d h s J $.  $d h s R $.
    lineset.1 $e |- R = ( le ` H ) $.
    lineset.2 $e |- J = ( join ` H ) $.
    lineset.3 $e |- A = ( AtomsNEW ` H ) $.
    lineset.4 $e |- L = ( Lines ` H ) $.
    $( The set of lines in a Hilbert lattice. $)
    lineset $p |- ( H e. B -> L = { s | E. q e. A E. r e. A ( q =/= r /\
                      s = { p e. A | p R ( q J r ) } ) } ) $=
      ( vh wcel cvv cv wne co wbr crab wceq wa wrex cab elisset clines cfv cjn
      cple catm fveq2 syl6eqr wb breq syl opreqd breq2d bitrd rabeqbidv eqeq2d
      anbi2d rexeqbidv abbidv df-lines fvex eqeltri csn df-sn snex eqeltrri
      pm3.27 ss2abi ssexi ab2rexex2 fvmpt syl5eq ) DBPDQPZFIRZHRZSZGRZJRZVTWAET
      ZCUAZJAUBZUCZUDZHAUEZIAUEZGUFZUCDBUGVSDUHUIWLFODWBWCWDVTWAORZUJUIZTZWMUKU
      IZUAZJWMULUIZUBZUCZUDZHWRUEZIWRUEZGUFWLQUHWMDUCZXCWKGXDXBWJIWRAXDWRDULUIZ
      AWMDULUMMUNZXDXAWIHWRAXFXDWTWHWBXDWSWGWCXDWQWFJWRAXFXDWQWDWOCUAZWFXDWPCUC
      WQXGUOXDWPDUKUICWMDUKUMKUNWDWOWPCUPUQXDWOWEWDCXDWNEVTWAXDWNDUJUIEWMDUJUML
      UNURUSUTVAVBVCVDVDVEGHIJOVFWIIHGAAAXEQMDULVGVHZXHWIGUFWHGUFZWGVIXIQGWGVJW
      GVKVLWIWHGWBWHVMVNVOVPVQNVRUQ $.
      $( [19-Sep-2011] $)
  $}

  ${
    $d p q r x A $.  $d p q r x H $.  $d x J $.  $d x R $.  $d q r x X $.
    isline.1 $e |- R = ( le ` H ) $.
    isline.2 $e |- J = ( join ` H ) $.
    isline.3 $e |- A = ( AtomsNEW ` H ) $.
    isline.4 $e |- L = ( Lines ` H ) $.
    $( The predicate "is a line". $)
    isline $p |- ( H e. D -> ( X e. L <-> E. q e. A E. r e. A ( q =/= r /\
                      X = { p e. A | p R ( q J r ) } ) ) ) $=
      ( vx wcel cv wne co wbr crab wceq wa wrex cab lineset eleq2d cvv wi catm
      cfv fvex eqeltri rabex eleq1 mpbiri adantl a1i r19.23aivv eqeq1 anbi2d
      2rexbidv elab3 syl6bb ) DBPZGFPGIQZHQZRZOQZJQVFVGESCTZJAUAZUBZUCZHAUDIAUD
      ZOUEZPVHGVKUBZUCZHAUDIAUDZVEFVOGABCDEFOHIJKLMNUFUGVNVROGVQGUHPZIHAAVQVSUI
      VFAPVGAPUCVPVSVHVPVSVKUHPVJJAADUJUKUHMDUJULUMUNGVKUHUOUPUQURUSVIGUBZVMVQI
      HAAVTVLVPVHVIGVKUTVAVBVCVD $.
      $( [19-Sep-2011] $)
  $}

  ${
    $d a h p A $.  $d h p H $.
    pointset.1 $e |- A = ( AtomsNEW ` H ) $.
    pointset.2 $e |- P = ( Points ` H ) $.
    $( The set of points in a Hilbert lattice. $)
    pointset $p |- ( H e. B -> P = { p | E. a e. A p = { a } } ) $=
      ( vh wcel cvv cv csn wceq wrex cab elisset cpoints cfv catm fveq2
      syl6eqr rexeqdv abbidv df-points fvex eqeltri abrexex fvmpt syl5eq syl )
      DBJDKJZCELFLMZNZFAOZEPZNDBQULDRSUPCIDUNFILZTSZOZEPUPKRUQDNZUSUOEUTUNFURAU
      TURDTSZAUQDTUAGUBUCUDEFIUEFEAUMAVAKGDTUFUGUHUIHUJUK $.
      $( [2-Oct-2011] $)
  $}

  ${
    $d a x A $.  $d x H $.  $d a x X $.
    ispoint.1 $e |- A = ( AtomsNEW ` H ) $.
    ispoint.2 $e |- P = ( Points ` H ) $.
    $( The predicate "is a point". $)
    ispoint $p |- ( H e. D -> ( X e. P <-> E. a e. A X = { a } ) ) $=
      ( vx wcel cv csn wceq wrex cab pointset eleq2d cvv wi snex eleq1 mpbiri
      a1i r19.23aiv eqeq1 rexbidv elab3 syl6bb ) DBJZECJEIKZFKZLZMZFANZIOZJEULM
      ZFANZUICUOEABCDIFGHPQUNUQIEUPERJZFAUPURSUKAJUPURULRJUKTEULRUAUBUCUDUJEMUM
      UPFAUJEULUEUFUGUH $.
      $( [2-Oct-2011] $)
  $}

  ${
    $d h r s A $.  $d h p q r s H $.  $d h J $.  $d h R $.
    psubspset.1 $e |- R = ( le ` H ) $.
    psubspset.2 $e |- J = ( join ` H ) $.
    psubspset.3 $e |- A = ( AtomsNEW ` H ) $.
    psubspset.4 $e |- S = ( PSubSp ` H ) $.
    $( The set of projective subspaces in a Hilbert lattice. $)
    psubspset $p |- ( H e. B -> S = { s | ( s C_ A
         /\ A. p e. s A. q e. s A. r e. A ( r R ( p J q ) -> r e. s ) ) } ) $=
      ( vh wcel cvv cv wss co wbr wel wi wral wa cab wceq elisset cpsubsp cfv
      catm cjn cple fveq2 syl6eqr sseq2d opreqd breq2d wb breq syl bitrd
      imbi1d raleqbidv 2ralbidv anbi12d abbidv df-psubsp cpw fvex eqeltri pwex
      df-pw abeq2i anbi1i abbii ssab2 eqsstr3i ssexi fvmpt syl5eq ) EBPEQPZDGRZ
      ASZHRZJRZIRZFTZCUAZHGUBZUCZHAUDZIWCUDJWCUDZUEZGUFZUGEBUHWBEUIUJWODOEWCORZ
      UKUJZSZWEWFWGWPULUJZTZWPUMUJZUAZWJUCZHWQUDZIWCUDJWCUDZUEZGUFWOQUIWPEUGZXF
      WNGXGWRWDXEWMXGWQAWCXGWQEUKUJZAWPEUKUNMUOZUPXGXDWLJIWCWCXGXCWKHWQAXIXGXBW
      IWJXGXBWEWHXAUAZWIXGWTWHWEXAXGWSFWFWGXGWSEULUJFWPEULUNLUOUQURXGXACUGXJWIU
      SXGXAEUMUJCWPEUMUNKUOWEWHXACUTVAVBVCVDVEVFVGGHIJOVHWOAVIZAAXHQMEUKVJVKVLW
      OWCXKPZWMUEZGUFXKXMWNGXLWDWMWDGXKGAVMVNVOVPWMGXKVQVRVSVTNWAVA $.
      $( [2-Oct-2011] $)
  $}

  ${
    $d r x A $.  $d p q r x H $.  $d x J $.  $d x R $.  $d p q r x X $.
    ispsubsp.1 $e |- R = ( le ` H ) $.
    ispsubsp.2 $e |- J = ( join ` H ) $.
    ispsubsp.3 $e |- A = ( AtomsNEW ` H ) $.
    ispsubsp.4 $e |- S = ( PSubSp ` H ) $.
    $( The predicate "is a projective subspace". $)
    ispsubsp $p |- ( H e. D -> ( X e. S <-> ( X C_ A
         /\ A. p e. X A. q e. X A. r e. A ( r R ( p J q ) -> r e. X ) ) ) ) $=
      ( vx wcel cv wss co wbr wel wi wral wa cab psubspset eleq2d cvv catm cfv
      fvex eqeltri ssex adantr wceq sseq1 eleq2 imbi2d ralbidv raleqbi1dv
      anbi12d elab3 syl6bb ) EBPZGDPGOQZARZHQZJQIQFSCTZHOUAZUBZHAUCZIVEUCZJVEUC
      ZUDZOUEZPGARZVHVGGPZUBZHAUCZIGUCZJGUCZUDZVDDVOGABCDEFOHIJKLMNUFUGVNWBOGVP
      GUHPWAGAAEUIUJUHMEUIUKULUMUNVEGUOZVFVPVMWAVEGAUPVLVTJVEGVKVSIVEGWCVJVRHAW
      CVIVQVHVEGVGUQURUSUTUTVAVBVC $.
      $( [2-Oct-2011] $)
  $}

  ${
    $d p q r H $.
    0psub.1 $e |- S = ( PSubSp ` H ) $.
    $( The empty set is a projective subspace. $)
    0psub $p |- ( H e. A -> (/) e. S ) $=
      ( vr vp vq wcel c0 catm cfv wss cv cjn co cple wbr wi wral wa 0ss ral0
      pm3.2i eqid ispsubsp mpbiri ) CAHIBHICJKZLZEMZFMGMCNKZOCPKZQUIIHREUGSGISZ
      FISZTUHUMUGUAULFUBUCUGAUKBCUJIEGFUKUDUJUDUGUDDUEUF $.
      $( [13-Oct-2011] $)
  $}

  ${
    $d a p q r H $.  $d a p q r X $.
    pointpsub.1 $e |- P = ( Points ` H ) $.
    pointpsub.2 $e |- S = ( PSubSp ` H ) $.
    $( A point is a projective subspace. $)
    pointpsub $p |- ( ( H e. OL /\ X e. P ) -> X e. S ) $=
      ( va vr vp vq col wcel cv csn wceq catm cfv wrex wss cjn co cple wbr wi
      wral wa w3a pm3.27 snssi adantr eqsstrd 3adant1 weq clat cbs eqid
      latjidm ollat atombase syl2an breq2d cops wb atomcmp 3com23 3expa olop
      sylanl1 biimpd sylbid 3adantl3 adantld eleq2 elsn syl6bb anbi12d anbi1d
      opreq12 pm5.32i 3ad2ant3 3imtr4d exp4b com23 r19.21adv r19.21aivv jca
      3exp r19.23adv ispoint ispsubsp imp ) CKLZDALZDBLZWLDGMZNZOZGCPQZRDWRSZHM
      ZIMZJMZCTQZUAZCUBQZUCZWTDLZUDZHWRUEZJDUEIDUEZUFZWMWNWLWQXKGWRWLWOWRLZWQXK
      WLXLWQUGZWSXJXLWQWSWLXLWQUFDWPWRXLWQUHXLWPWRSWQWOWRUIUJUKULXMXIIJDDXMXADL
      ZXBDLZUFZXHHWRXMWTWRLZXPXHXMXQXPXFXGXMXQUFZIGUMZJGUMZUFZWTWOWOXCUAZXEUCZU
      FZHGUMZXPXFUFZXGXRYCYEYAWLXLXQYCYEUDWQWLXLUFZXQUFZYCWTWOXEUCZYEYHYBWOWTXE
      YGYBWOOZXQCUNLWOCUOQZLYJWLXLYKXCCWOYKUPZXCUPZUQCURWRYKCWOYLWRUPZUSUTUJVAY
      HYIYECVBLZXLXQYIYEVCZWLYOXLXQYPYOXQXLYPWRCXEWTWOXEUPZYNVDVEVFCVGVHVIVJVKV
      LXMYFYDVCZXQWQWLYRXLWQYFYAXFUFYDWQXPYAXFWQXNXSXOXTWQXNXAWPLXSDWPXAVMIWOVN
      VOWQXOXBWPLXTDWPXBVMJWOVNVOVPVQYAXFYCYAXDYBWTXEXAWOXBWOXCVRVAVSVOVTUJXMXG
      YEVCZXQWQWLYSXLWQXGWTWPLYEDWPWTVMHWOVNVOVTUJWAWBWCWDWEWFWGWHWRKACDGYNEWIW
      RKXEBCXCDHJIYQYMYNFWJWAWK $.
      $( [13-Oct-2011] $)
  $}

  ${
    $d a b c p q r H $. $d a b c p q r X $.
    linepsub.1 $e |- L = ( Lines ` H ) $.
    linepsub.2 $e |- S = ( PSubSp ` H ) $.
    $( A line is a projective subspace. $)
    linepsub $p |- ( ( H e. LatNEW /\ X e. L ) -> X e. S ) $=
      ( va vb vc vr vp vq clat wcel cv wne cjn cfv co cple wbr catm crab wceq
      wa wrex wss wi wral ssrab2 sseq1 mpbiri a1i cbs eqid latjcl 3expb
      atombase anim12i sylan2 w3a latjle biimpd 3exp2 imp3a com23 imp43 adantr
      cpo postrNEW latpos sylan com24 3expib syl5d imp41 adantlrr mpan2d eleq2
      breq1 elrab anim1i sylbi syl6bi anim12d an4 syl6ib imp anim2i anassrs
      syl2an pm3.27 jctild wb syl6bb adantl ad2antrr sylibrd r19.21aiva
      r19.21aivva ex syldan jcad adantld r19.23advv isline ispsubsp 3imtr4d )
      BMNZDCNZDANZXIGOZHOZPZDIOZXLXMBQRZSZBTRZUAZIBUBRZUCZUDZUEZHXTUFGXTUFDXTUG
      ZJOZKOZLOZXPSZXRUAZYEDNZUHZJXTUIZLDUIKDUIZUEZXJXKXIYCYNGHXTXTXIXLXTNZXMXT
      NZUEZYCYNUHXIYQUEZYBYNXNYRYBYDYMYBYDUHYRYBYDYAXTUGXSIXTUJDYAXTUKULUMXIYQX
      QBUNRZNZYBYMUHXIXLYSNZXMYSNZUEYTYQXIUUAUUBYTYSXPBXLXMYSUOZXPUOZUPUQYOUUAY
      PUUBXTYSBXLUUCXTUOZURXTYSBXMUUCUUEURUSUTXIYTUEZYBYMUUFYBUEZYLKLDDUUGYFDNZ
      YGDNZUEZUEZYKJXTUUKYEXTNZUEZYIUULYEXQXRUAZUEZYJUUMYIUUNUULUUFYFYSNZYGYSNZ
      UEZYFXQXRUAZYGXQXRUAZUEZUEZUEZYEYSNZYIUUNUHUUKUULUVCUVDUEYIYHXQXRUAZUUNUV
      CUVEUVDXIYTUURUVAUVEXIUURYTUVAUVEUHZXIUUPUUQYTUVFUHXIUUPUUQYTUVFXIUUPUUQY
      TVAUEUVAUVEYSBXRXPYFYGXQUUCXRUOZUUDVBVCVDVEVFVGVHUUFUURUVDYIUVEUEUUNUHZUV
      AXIYTUURUVDUVHXIYTYHYSNZUVDUVHUHUURXIUVDUVIYTUVHXIUVDUVIYTUVHBVINUVDUVIYT
      VAUVHXIYSBXRYEYHXQUUCUVGVJBVKVLVDVMXIUUPUUQUVIYSXPBYFYGUUCUUDUPVNVOVPVQVR
      UUFYBUUJUVCYBUUJUEUVBUUFYBUUJUVBYBUUJUUPUUSUEZUUQUUTUEZUEUVBYBUUHUVJUUIUV
      KYBUUHYFYANZUVJDYAYFVSUVLYFXTNZUUSUEUVJXSUUSIYFXTXOYFXQXRVTWAUVMUUPUUSXTY
      SBYFUUCUUEURWBWCWDYBUUIYGYANZUVKDYAYGVSUVNYGXTNZUUTUEUVKXSUUTIYGXTXOYGXQX
      RVTWAUVOUUQUUTXTYSBYGUUCUUEURWBWCWDWEUUPUUSUUQUUTWFWGWHWIWJXTYSBYEUUCUUEU
      RWKUUKUULWLWMUUGYJUUOWNZUUJUULYBUVPUUFYBYJYEYANUUODYAYEVSXSUUNIYEXTXOYEXQ
      XRVTWAWOWPWQWRWSWTXAXBXCXDXAXEXTMXRBXPCDHGIUVGUUDUUEEXFXTMXRABXPDJLKUVGUU
      DUUEFXGXHWH $.
      $( [16-Oct-2011] $)
  $}

  ${
    $d p q r A $.  $d p q r H $.
    atpsub.1 $e |- A = ( AtomsNEW ` H ) $.
    atpsub.2 $e |- S = ( PSubSp ` H ) $.
    $( The set of all atoms is a projective subspace. $)
    atpsub $p |- ( H e. B -> A e. S ) $=
      ( vr vp vq wcel wss cv cjn cfv co cple wbr wi wral wa ssid ax-1 rgen a1i
      rgen2a pm3.2i eqid ispsubsp mpbiri ) DBJACJAAKZGLZHLZILZDMNZODPNZQZUKAJZR
      ZGASZIASHASZTUJUTAUAUSHIAUSULAJUMAJTURGAUQUPUBUCUDUEUFABUOCDUNAGIHUOUGUNU
      GEFUHUI $.
      $( [13-Oct-2011] $)
  $}

  ${
    $d a h A $.  $d h x B $.  $d a h x H $.  $d h R $.
    pmapfval.1 $e |- B = ( base ` H ) $.
    pmapfval.2 $e |- R = ( le ` H ) $.
    pmapfval.3 $e |- A = ( AtomsNEW ` H ) $.
    pmapfval.4 $e |- M = ( pmap ` H ) $.
    $( The projective map of a Hilbert lattice. $)
    pmapfval $p |- ( H e. C -> M = ( x e. B |-> { a e. A | a R x } ) ) $=
      ( vh wcel cvv cv wbr crab cmpt wceq elisset cpmap cfv cbs cple catm
      fveq2 syl6eqr wb breq syl rabeqbidv mpteq12dv df-pmap fvex eqeltri
      mptexg ax-mp fvmpt syl5eq ) FDNFONZGACHPZAPZEQZHBRZSZTFDUAVAFUBUCVFGMFAMP
      ZUDUCZVBVCVGUEUCZQZHVGUFUCZRZSVFOUBVGFTZAVHVLCVEVMVHFUDUCZCVGFUDUGIUHVMVJ
      VDHVKBVMVKFUFUCBVGFUFUGKUHVMVIETVJVDUIVMVIFUEUCEVGFUEUGJUHVBVCVIEUJUKULUM
      HAMUNCONVFONCVNOIFUDUOUPACVEOUQURUSLUTUK $.
      $( [2-Oct-2011] $)
  $}

  ${
    $d a x A $.  $d x B $.  $d a x H $.  $d x R $.  $d a x X $.
    pmapval.1 $e |- B = ( base ` H ) $.
    pmapval.2 $e |- R = ( le ` H ) $.
    pmapval.3 $e |- A = ( AtomsNEW ` H ) $.
    pmapval.4 $e |- M = ( pmap ` H ) $.
    $( Value of the projective map of a Hilbert lattice. $)
    pmapval $p |- ( ( H e. C /\ X e. B ) -> ( M ` X ) = { a e. A | a R X } ) $=
      ( vx wcel cfv cv wbr crab cmpt pmapfval fveq1d wceq breq2 rabbidv eqid
      catm cvv fvex eqeltri rabex fvmpt sylan9eq ) ECNZGBNGFOGMBHPZMPZDQZHARZSZ
      OUNGDQZHARZUMGFURMABCDEFHIJKLTUAMGUQUTBURUOGUBUPUSHAUOGUNDUCUDURUEUSHAAEU
      FOUGKEUFUHUIUJUKUL $.
      $( [2-Oct-2011] $)
  $}

  ${
    $d p q r B $.  $d c p q r L $.  $d c p q r X $.
    pmpsub.1 $e |- B = ( base ` L ) $.
    pmpsub.2 $e |- S = ( PSubSp ` L ) $.
    pmpsub.4 $e |- M = ( pmap ` L ) $.
    $( The projective map of a Hilbert lattice maps to projective subspaces. $)
    pmpsub $p |- ( ( L e. LatNEW /\ X e. B ) -> ( M ` X ) e. S ) $=
      ( vc vr vp vq clat wcel wa cfv cv cple wbr catm crab eqid pmapval wss
      cjn co wi wral w3a latjle biimpd 3exp2 imp3a com23 imp43 adantr cpo
      postrNEW latpos sylan com24 latjcl 3expib syl5d imp41 adantlrr mpan2d
      breq1 elrab atombase anim1i sylbi anim12i an4 sylib anim2i syl2an pm3.27
      jctild syl6ibr r19.21aiva r19.21aivva ssrab2 jctil wb ispsubsp mpbird
      eqeltrd ) CMNZEANZOZEDPIQZECRPZSZICTPZUAZBWOAMWMCDEIFWMUBZWOUBZHUCWKWPBNZ
      WPWOUDZJQZKQZLQZCUEPZUFZWMSZXAWPNZUGZJWOUHZLWPUHKWPUHZOZWKXJWTWKXIKLWPWPW
      KXBWPNZXCWPNZOZOZXHJWOXOXAWONZOZXFXPXAEWMSZOXGXQXFXRXPWKXBANZXCANZOZXBEWM
      SZXCEWMSZOZOZOZXAANZXFXRUGXOXPYFYGOXFXEEWMSZXRYFYHYGWIWJYAYDYHWIYAWJYDYHU
      GZWIXSXTWJYIUGWIXSXTWJYIWIXSXTWJUIOYDYHACWMXDXBXCEFWQXDUBZUJUKULUMUNUOUPW
      KYAYGXFYHOXRUGZYDWIWJYAYGYKWIWJXEANZYGYKUGYAWIYGYLWJYKWIYGYLWJYKCUQNYGYLW
      JUIYKWIACWMXAXEEFWQURCUSUTULVAWIXSXTYLAXDCXBXCFYJVBVCVDVEVFVGXNYEWKXNXSYB
      OZXTYCOZOYEXLYMXMYNXLXBWONZYBOYMWNYBIXBWOWLXBEWMVHVIYOXSYBWOACXBFWRVJVKVL
      XMXCWONZYCOYNWNYCIXCWOWLXCEWMVHVIYPXTYCWOACXCFWRVJVKVLVMXSYBXTYCVNVOVPWOA
      CXAFWRVJVQXOXPVRVSWNXRIXAWOWLXAEWMVHVIVTWAWBWNIWOWCWDWIWSXKWEWJWOMWMBCXDW
      PJLKWQYJWRGWFUPWGWH $.
      $( [17-Oct-2011] $)
  $}

  ${
    $d a b d e f g h k l m n p q r s t u v w x y z $.
    $( Def. 8.6.6, p. 230. $)
    $( Define projective sum of two subspaces. $)
    df-plusp $a |- +P = ( l e. _V |-> ( m e. ( PSubSp ` l ) , n e. ( PSubSp ` l
        )
      |-> { p e. ( AtomsNEW ` l ) | E. q e. m E. r e. n
         p ( le ` l ) ( q ( join ` l ) r ) } ) ) $.

    $( Def. 8.6.7, p. 231. $)
    $( Define projective sum of a set of subspaces. $)
    df-sump $a |- sumP = ( l e. _V |-> ( s e. ~P ( PSubSp ` l ) |->
       ( ( +P ` l ) idsumf s ) ) ) $.

    $( Def. 8.6.8, p. 231. $)
    $( Define set of all sets of independent points. $)
    df-indep $a |- Indep = ( l e. _V |-> { s e. ~P ( Points ` l )
    | A. a A. b ( ( ( a u. b ) = s /\ ( a i^i b ) = (/) ) ->
      ( ( ( sumP ` l ) ` a ) i^i ( ( sumP ` l ) ` b ) ) = (/) ) } ) $.

    $( Def. 8.6.9, p. 231. $)
    $( Define all bases for projective subspace $m$. $)
    df-basesp $a |- BasesP = ( l e. _V , m e. _V |-> { s e. ( Indep ` l )
      | ( ( sumP ` l ) ` s ) = m } ) $.

    $( Def. 8.6.10, p. 232. $)
    $( Define rank of projective subspace $m$. $)
    df-rankp $a |- rankP = ( l e. _V , m e. _V |-> ( iota r
    A. b e. ( l Bases m ) r = ( card ` b ) ) ) $.

    $( Def. 8.6.11, p. 232. $)
    $( Define polarity of projective subspace $m$. $)
    df-polarity $a |- _|_P = ( l e. _V |-> ( m e. ( PSubSp ` l ) |->
    |^| { w | E. p e. m w = ( ( pmap ` l ) ` ( ( oc ` l ) ` p ) ) } ) ) $.

    $( Def. 8.6.13, p. 233. $)
    $( Define set of all (projective) hyperplanes. $)
    df-phyp $a |- PHyp = ( l e. _V |-> { h | E. p e. ( Points ` l )
        h = ( ( _|_P ` l ) ` p ) } ) $.

    $( Def. 8.6.14, p. 233. $)
    $( Define designated hyperplane. $)
    df-ww $a |- ww = ( l e. _V , p e. _V |-> ( ( _|_P ` l ) ` { p } ) ) $.

    $( Def. 8.6.15, p. 233. $)
    $( Define W points. $)
    df-wpoints $a |- WPoints = ( l e. _V , p e. _V |-> { x e. ( Points ` l )
      | -. x C_ ( l ww p ) } ) $.

    $( Def. 8.6.16, p. 234. $)
    $( Define set of all projective automorphisms. $)
    df-paut $a |- PAut = ( l e. _V |-> { f | ( f : ( PSubSp ` l ) -1-1-onto->
      ( PSubSp ` l ) /\ A. x e. ( PSubSp ` l ) A. y e. ( PSubSp ` l )
        ( x C_ y <-> ( f ` x ) C_ ( f ` y ) ) ) } ) $.

    $( Def. 8.6.17, p. 234. $)
    $( Define set of all dilations. $)
    df-dil $a |- Dil = ( l e. _V , p e. _V |-> { f e. ( PAut ` l )
     | A. x e. ( PSubSp ` l ) ( x C_ ( l ww p ) -> ( f ` x ) = x ) } ) $.

    $( Def. 8.6.18, p. 234. $)
    $( Define set of all translations. $)
    df-trn $a |- Trn = ( l e. _V , p e. _V |-> { f e. ( l Dil p )
     | A. q e. ( l WPoints p ) A. r e. ( l WPoints p )
        ( ( q ( +P ` l ) ( f ` q ) ) i^i ( l ww p ) )
      = ( ( r ( +P ` l ) ( f ` r ) ) i^i ( l ww p ) ) } ) $.

    $( Def. 8.6.19, p. 235. $)
    $( Define trace of a translation ` f ` . $)
    df-trp $a |- trP = ( l e. _V , p e. _V |-> ( f e. ( l Trn p ) |->
     ( iota x ( x e. ( PSubSp ` l ) /\ A. q e. ( l WPoints p )
        x = ( ( q ( +P ` l ) ( f ` q ) ) i^i ( l ww p ) ) ) ) ) ) $.

    $( Def. 8.6.21, p. 235. $)
    $( Define translation group. $)
    df-tgrp $a |- TGrp = ( l e. _V , p e. _V |-> { <. 1 , ( l Trn p ) >. ,
       <. 2 , ( f e. ( l Trn p ) , g e. ( l Trn p ) |-> ( f o. g ) ) >. } ) $.

    $( Def. 8.6.23, p. 235. $)
    $( Define group endomorphisms of $G$. $)
    df-grpendo $a |- GrpEndo = ( g e. _V |-> { f |
   ( f : ( base ` g ) --> ( base ` g )
      /\ A. x e. ( base ` g ) A. y e. ( base ` g )
       ( x ( +g ` g ) y ) = ( ( f ` x ) ( +g ` g ) ( f ` y ) ) ) } ) $.

    $( Def. 8.6.24, p. 236. $)
    $( Define translation group endomorphisms. $)
    df-tgrpendo $a |- TGrpEndo = ( l e. _V , p e. _V |->
      ( GrpEndo ` ( l TGrp p ) ) ) $.

    $( Def. 8.6.25, p. 236. $)
    $( Define endomorphism ring. $)
    df-ering $a |- ERing = ( l e. _V , p e. _V |-> { <. 1 , ( l TGrpEndo p ) >.
        ,
       <. 2 , ( s e. ( l TGrpEndo p ) , t e. ( l TGrpEndo p ) |->
           ( f e. ( l Trn p ) |-> ( ( s ` f ) o. ( t ` f ) ) ) ) >. ,
       <. 3 , ( s e. ( l TGrpEndo p ) , t e. ( l TGrpEndo p ) |->
           ( f e. ( l Trn p ) |-> ( t ` ( s ` f ) ) ) ) >. } ) $.

    $( Def. 8.6.27, p. 237. $)
    $( Define trace-preserving endomorphisms. $)
    df-tpendo $a |- TPEndo = ( l e. _V , p e. _V |-> { s e. ( l TGrpEndo p ) |
     A. f e. ( base ` ( l TGrp p ) )
         ( ( l trP p ) ` ( s ` f ) ) C_ ( ( l trP p ) ` f ) } ) $.

    $( Def. 8.6.28, p. 237. $)
    $( Define delta ring. $)
    df-dring $a |- DRing = ( l e. _V , p e. _V |->
     { <. 1 , ( l TGrpEndo p ) >. ,
       <. 2 , ( +g ` ( l ERing p ) ) >. ,
       <. 3 , ( .r ` ( l ERing p ) ) >. } ) $.

    $( Def. 8.6.30, p. 237. $)
    $( Define constructed partial vector space A. $)
    df-dveca $a |- DVecA = ( l e. _V , p e. _V |-> ( ( l DRing p )
    u. { <. 4 , ( base ` ( l TGrp p ) ) >. ,
         <. 5 , ( +g ` ( l TGrp p ) ) >. ,
         <. 6 , ( s e. ( l TGrpEndo p ) , f e. ( l Trn p ) |->
                ( s ` f ) ) >. } ) ) $.

    $( Def. 8.6.31, p. 238. $)
    $( Define preliminary projective subspace isomorphism. $)
    df-dvisopre $a |- DVIsoPre = ( l e. _V , p e. _V |->
     ( x e. { y e. ( PSubSp ` l ) | y C_ ( l ww p ) } |-> { f e. ( l Trn p ) |
     ( ( l trP p ) ` f ) C_ x } ) ) $.

    $( Def. 8.6.32, p. 238. $)
    $( Define constructed partial vector space B. $)
    df-dvecb $a |- DVecB = ( l e. _V , p e. _V |-> ( ( l DRing p )
    u. { <. 4 , ( base ` ( l DRing p ) ) >. ,
         <. 5 , ( +g ` ( l DRing p ) ) >. ,
         <. 6 , ( .r ` ( l DRing p ) ) >. } ) ) $.

    $( Def. 8.6.33, p. 239. $)
    $( Define constructed vector space. $)
    df-dvech $a |- DVecH = ( l e. _V , p e. _V |->
        ( ( l DVecA p ) o+ ( l DVecB p ) ) ) $.

    $( Def. 8.6.34, p. 239. $)
    $( Define e vector. $)
    df-ee $a |- ee = ( l e. _V , p e. _V |->
      <. ( 0vNEW ` ( l DVecA p ) ) , ( 1rNEW ` ( l DRing p ) ) >. ) $.

    $( Def. 8.6.36, p. 239. $)
    $( Define projective subspace isomorphism A. $)
    df-dvisoa $a |- DVIsoA = ( l e. _V , p e. _V |->
     ( x e. { y e. ( PSubSp ` l ) | y C_ ( l ww p ) } |->
      <. ( ( l DVIsoPre p ) ` x ) , ( 0vNEW ` ( l DVecB p ) ) >. ) ) $.

    $( Def. 8.6.37, p. 240. $)
    $( Define q-translation. $)
    df-qtr $a |- qtr = ( l e. _V , p e. _V |->
    ( q e. ( l WPoints p ) |->
      <. ( iota f ( f e. ( l Trn p ) /\ ( f ` { p } ) = q ) ) ,
          ( 0vNEW ` ( l DVecA p ) ) >. ) ) $.

    $( Def. 8.6.38, p. 240. $)
    $( Define projective subspace isomorphism B. $)
    df-dvisob $a |- DVIsoB = ( l e. _V , p e. _V |->
    ( q e. ( l WPoints p ) |-> { v e. ( l DVecH p ) | E. s e. ( l DRing p )
       v = ( s ( vsca ` ( l DVecH p ) )
         ( ( l ee p ) ( vadd ` ( l DVecH p ) ) ( ( l qtr p ) ` q ) ) ) } ) ) $.

    $( Def. 8.6.39, p. 240. $)
    $( Define projective subspace isomorphism C. $)
    df-dvisoc $a |- DVIsoC = ( l e. _V , p e. _V |->
     ( x e. { y e. ( PSubSp ` l ) | -. y C_ ( l ww p ) } |->
        ( iota z A. q e. ( l WPoints p ) z = ( ( ( l DVIsoB p ) ` q )
              ( +g ` ( l DVecH p ) )
           ( ( l DVIsoA p ) ` ( x i^i ( l ww p ) ) ) ) ) ) ) $.

    $( Def. 8.6.40, p. 241. $)
    $( Define projective subspace isomorphism. $)
    df-dvisoh $a |- DVIsoH = ( l e. _V , p e. _V |->
          ( ( l DVIsoA p ) u. ( l DVIsoC p ) ) ) $.

    $( Def. 8.6.43, p. 241. $)
    $( Define constructed orthocomplement. $)
    df-soc $a |- S_|_ = ( l e. _V , p e. _V |->
        ( s e. ( SubSpNEW ` ( l DVecH p ) ) |->
          ( ( _|_P ` l ) ` ( `' ( l DVIsoH p ) ` s ) ) ) ) $.

    $( Def. 8.6.44, p. 242. $)
    $( Define the opposite of a ring with multiplication reversed. $)
    df-ropp $a |- Ropp = ( r e. _V |-> ( ( r |` ( _V \ { 3 } ) ) u.
      { <. 3 , ( x e. ( base ` r ) , y e. ( base ` r ) |->
          ( y ( .r ` r ) x ) ) >. } ) ) $.

    $( Def. 8.6.46, p. 243. $)
    $( Define the left dual of a vector space. $)
    df-vldual $a |- Vldual = ( v e. _V |-> ( ( v |` ( _V \ ( 3 ... 6 ) ) ) u.
      { a | E. l E. k E. t E. u E. w (
          ( k = ( base ` v )
            /\ t = ( .r ` ( Ropp ` v ) )
            /\ u = ( vbase ` v ) )
        /\ ( w = { g | ( g : u --> k /\ A. r e. k A. x e. u
                  ( g ` ( r ( vsca ` v ) x ) ) = ( ( g ` x ) t r ) ) }
             /\ a e. ( { <. 3 , t >. , <. 4 , w >. } u.
                  { <. 5 , ( g e. v , h e. v |-> ( x e. u |->
                      ( ( g ` x ) ( +g ` v ) ( h ` x ) ) ) ) >. ,
                    <. 6 , ( r e. k , g e. v |-> ( x e. u |->
                      ( r t ( g ` x ) ) ) ) >. } ) ) ) } ) ) $.

    $( Def. 8.6.47, p. 244. $)
    $( Define vector domain. $)
    df-vecdom $a |- vecdom = ( w e. _V |->
             ( iota d A. f e. ( vbase ` w ) d = dom f ) ) $.

    $( Def. 8.6.48, p. 244. $)
    $( Define kernel of a functional. $)
    df-ker $a |- ker = ( w e. _V |-> ( f e. ( vbase ` w ) |->
       { x e. ( vecdom ` w ) | ( f ` x ) = ( 0g ` w ) } ) ) $.

    $( Def. 8.6.49, p. 245. $)
    $( Define one-dimensional subspace map. $)
    df-mapd $a |- mapd = ( l e. _V , p e. _V |-> { a | E. v E. w
     ( v = ( l DVecH p ) /\ w = ( Vldual ` v )
       /\ a e. ( s e. { r | E. x e. ( vbase ` v )
          r = ( ( span ` v ) ` { x } ) } |->
               ( iota t A. x e. s A. f e. ( vbase ` w )
   ( ( ( ker ` w ) ` f ) = s /\ t = ( ( span ` w ) ` { f } ) ) ) ) ) } ) $.

    $( Def. 8.6.50, p. 246. $)
    $( Define e vector image. $)
    df-eimage $a |- eimage = ( l e. _V , p e. _V |-> { a | E. v E. w E. e
        ( ( v = ( l DVecH p ) /\ w = ( Vldual ` v )
          /\ e = ( l ee p ) )
           /\ a e. ( iota f ( f e. ( ( l mapd p ) ` ( ( spanNEW ` v ) ` { e } )
                ) /\ ( f ` e ) = ( 1rNEW ` w ) ) ) ) } ) $.

    $( Def. 8.6.51, p. 246. $)
    $( Define h map. $)
    df-hmap $a |- hmap = ( l e. _V , p e. _V |-> { a | E. v E. w E. e E. f
   ( ( v = ( l DVecH p ) /\ w = ( Vldual ` v ) /\ e = ( l ee p ) )
     /\ ( f = ( l eimage p )
          /\ a e. ( y e. ( vbase ` v ) |-> if ( y = ( 0vNEW ` v ) ,
              ( 0vNEW ` w ) , if ( y e. ( ( spanNEW ` v ) ` { e } ) ,
   ( iota u ( u e. ( ( spanNEW ` w ) ` { f } ) /\ ( u ` e ) = ( f ` y ) ) ) ,
       ( iota u ( u e. ( vbase ` w )
            /\ ( ( l mapd p ) ` ( ( spanNEW ` v ) ` { y } ) )
                = ( ( spanNEW ` w ) ` { v } )
            /\ ( ( l mapd v ) ` ( ( span ` v ) ` { ( e ( -vNEW ` v ) y ) } ) )
            = ( ( span ` w ) ` { ( f ( -vNEW ` w ) u ) } ) ) ) ) ) ) ) ) } ) $.

    $( Def. 8.6.52, p. 247. $)
    $( Define g map. $)
    df-gmap $a |- gmap = ( l e. _V , p e. _V |-> { a | E. v E. w E. e E. f
     ( v = ( l DVecH p ) /\ w = ( Vldual ` v ) /\ a e. ( f e. ( vbase ` v ) |->
       ( iota g ( g e. ( base ` w ) /\ A. x e. ( vbase ` v )
          ( ( l hmap p ) ` ( f ( vsca ` v ) x ) )
              = ( g ( vsca ` w ) ( ( l hmap l ) ` x ) ) ) ) ) ) } ) $.

    $( Def. 8.6.53, p. 248. $)
    $( Define Hilbert space constructed from Hilbert lattice. $)
    df-hltohil $a |- HLtoHil = ( l e. _V , p e. _V |->
       ( ( l DVecH p ) u.
         { <. 7 , ( l gmap p ) >. ,
           <. 8 , ( a e. ( vbase ` ( l DVecH p ) ) ,
  b e. ( vbase ` ( l DVecH p ) ) |-> ( ( ( l hmap p ) ` b ) ` a ) ) >. } ) ) $.
  $}

