$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical equivalence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the biconditional connective. $)
  $c <-> $. $( Double arrow (read:  'if and only if' or
               'is logically equivalent to') $)

  $( Extend our wff definition to include the biconditional connective. $)
  wb $a wff ( ph <-> ps ) $.

  $( This is our first definition, which introduces and defines the
     biconditional connective ` <-> ` . Unlike most traditional developments,
     we have chosen not to have a separate symbol such as 'Df.' to mean 'is
     defined as.'  Instead, we will later use the biconditional connective
     for this purpose, as it allows us to use logic to manipulate definitions
     directly ( ~ df-or is its first use).  Here we use the biconditional
     connective to define itself, a feat which requires a little care.  We
     define ` ( ph <-> ps ) ` as ` -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) `
     but we don't yet have a notation that can express this directly, so we
     use a more complicated expression using the language that we have so
     far.  The justification for our definition is that if we mechanically
     replace the first wff above (the definiendum i.e. the thing being
     defined) with the second (the definiens i.e. the defining expression) in
     the definition, the definition becomes an instance of previously proved
     theorem ~ bijust . Note that from Metamath's point of view, a definition
     is just another axiom; but from our high level point of view, we are are
     not strengthening the language since if we mechanically eliminate the
     new symbol ` <-> ` we will not end up with any theorems we could not
     prove before.  To indicate this fact we prefix definition labels with
     "df-" instead of "ax-".  (This prefixing is an informal convention that
     means nothing to the Metamath proof verifier; it is just for human
     readability.)  See ~ bii and ~ bi for theorems suggesting the typical
     textbook definition of ` <-> ` . $)
  df-bi $a |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) )
        -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) $.

  $( Property of the biconditional connective. $)
  bi1 $p |- ( ( ph <-> ps ) -> ( ph -> ps ) ) $=
    ( wb wi wn df-bi pm3.26im ax-mp syl ) ABCZABDZBADZEDEZKJMDZMJDZEDENABFNOGHK
    LGI $.
    $( [11-May-1999] $)

  $( Property of the biconditional connective. $)
  bi2 $p |- ( ( ph <-> ps ) -> ( ps -> ph ) ) $=
    ( wb wi wn df-bi pm3.26im ax-mp pm3.27im syl ) ABCZABDZBADZEDEZMKNDZNKDZEDE
    OABFOPGHLMIJ $.
    $( [11-May-1999] $)

  $( Property of the biconditional connective. $)
  bi3 $p |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) $=
    ( wi wb wn df-bi pm3.27im ax-mp expi ) ABCZBACZABDZLJKECEZCZMLCZECEOABFNOGH
    I $.
    $( [11-May-1999] $)

  ${
    biimp.1 $e |- ( ph <-> ps ) $.
    $( Infer an implication from a logical equivalence. $)
    biimp $p |- ( ph -> ps ) $=
      ( wb wi bi1 ax-mp ) ABDABECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    biimpr.1 $e |- ( ph <-> ps ) $.
    $( Infer a converse implication from a logical equivalence. $)
    biimpr $p |- ( ps -> ph ) $=
      ( wb wi bi2 ax-mp ) ABDBAECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    biimpd.1 $e |- ( ph -> ( ps <-> ch ) ) $.

    $( Deduce an implication from a logical equivalence. $)
    biimpd $p |- ( ph -> ( ps -> ch ) ) $=
      ( wb wi bi1 syl ) ABCEBCFDBCGH $.
      $( [5-Aug-1993] $)

   $( Deduce a converse implication from a logical equivalence. $)
    biimprd $p |- ( ph -> ( ch -> ps ) ) $=
      ( wb wi bi2 syl ) ABCECBFDBCGH $.
      $( [5-Aug-1993] $)

   $( Deduce a commuted implication from a logical equivalence. $)
    biimpcd $p |- ( ps -> ( ph -> ch ) ) $=
      ( biimpd com12 ) ABCABCDEF $.
      $( [3-May-1994] $)

   $( Deduce a converse commuted implication from a logical equivalence. $)
    biimprcd $p |- ( ch -> ( ph -> ps ) ) $=
      ( biimprd com12 ) ACBABCDEF $.
      $( [3-May-1994] $)
  $}

  ${
    impbi.1 $e |- ( ph -> ps ) $.
    impbi.2 $e |- ( ps -> ph ) $.
    $( Infer an equivalence from an implication and its converse. $)
    impbi $p |- ( ph <-> ps ) $=
      ( wi wb bi3 mp2 ) ABEBAEABFCDABGH $.
      $( [5-Aug-1993] $)
  $}

  $( Relate the biconditional connective to primitive connectives.  See ~ biigb
     for an unusual version proved directly from axioms. $)
  bii $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wb wi wn bi1 bi2 jc bi3 impi impbi ) ABCZABDZBADZEDELMNABFABGHMNLABIJK $.
    $( [5-Aug-1993] $)

  $( This proof of ~ bii , discovered by Gregory Bush on 8-Mar-04, has
     several curious properties.  First, it has only 17 steps directly
     from the axioms and ~ df-bi , compared to over 800 steps were the proof
     of ~ bii expanded into axioms.  Second, step 2 demands only the property
     of "true"; any axiom (or theorem) could be used.  It might be thought,
     therefore, that it is in some sense redundant, but in fact no proof
     is shorter than this (measured by number of steps).  Third, it illustrates
     how intermediate steps can "blow up" in size even in short proofs.
     Fourth, the compressed proof is only 182 bytes (or 17 bytes in D-proof
     notation), but the generated web page is over 200kB with intermediate
     steps that are essentially incomprehensible to humans (other than Gregory
     Bush).  If there were an obfuscated code contest for proofs, this would be
     a contender. $)
  biigb $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wch wth wb wi wn df-bi ax-1 ax-mp ax-3 ax-2 ) ABEZABFBAFGFGZFNMFGFGZMNEZA
    BHCDCFFZOPFZCDIRGZQGZFZQRFSPOFZSFZFZUASUBISUCTFZFZUDUAFUEUFTGZUCGZFZUEUHUIM
    NHUHUGIJTUCKJUESIJSUCTLJJRQKJJJ $.
    $( [10-Mar-2004] $) $( [10-Mar-2004] $)

  $( Logical equivalence of commuted antecedents.  Part of Theorem *4.87 of
     [WhiteheadRussell] p. 122. $)
  bi2.04 $p |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.04 impbi ) ABCDDBACDDABCEBACEF $.
    $( [5-Aug-1993] $)

  $( Double negation.  Theorem *4.13 of [WhiteheadRussell] p. 117. $)
  pm4.13 $p |- ( ph <-> -. -. ph ) $=
    ( wn negb nega impbi ) AABBACADE $.
    $( [5-Aug-1993] $)

  $( Theorem *4.8 of [WhiteheadRussell] p. 122. $)
  pm4.8 $p |-  ( ( ph -> -. ph ) <-> -. ph ) $=
    ( wn wi pm2.01 ax-1 impbi ) AABZCGADGAEF $.
    $( [5-Feb-2005] $) $( [3-Jan-2005] $)

  $( Theorem *4.81 of [WhiteheadRussell] p. 122. $)
  pm4.81 $p |-  ( ( -. ph -> ph ) <-> ph ) $=
    ( wn wi pm2.18 pm2.24 impbi ) ABACAADAAEF $.
    $( [10-Feb-2005] $) $( [3-Jan-2005] $)

  $( Contraposition.  Theorem *4.1 of [WhiteheadRussell] p. 116. $)
  pm4.1 $p |- ( ( ph -> ps ) <-> ( -. ps -> -. ph ) ) $=
    ( wi wn con3 ax-3 impbi ) ABCBDADCABEBAFG $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Bidirectional version of ~ con2 . $)
  bi2.03 $p |- ( ( ph -> -. ps ) <-> ( ps -> -. ph ) ) $=
    ( wn wi con2 impbi ) ABCDBACDABEBAEF $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Bidirectional version of ~ con1 . $)
  bi2.15 $p |- ( ( -. ph -> ps ) <-> ( -. ps -> ph ) ) $=
    ( wn wi con1 impbi ) ACBDBCADABEBAEF $.
    $( [5-Aug-1993] $)

  $( Antecedent absorption implication.  Theorem *5.4 of
     [WhiteheadRussell] p. 125. $)
  pm5.4 $p |- ( ( ph -> ( ph -> ps ) ) <-> ( ph -> ps ) ) $=
    ( wi pm2.43 ax-1 impbi ) AABCZCGABDGAEF $.
    $( [5-Aug-1993] $)

  $( Distributive law for implication.  Compare Theorem *5.41 of
     [WhiteheadRussell] p. 125. $)
  imdi $p |- ( ( ph -> ( ps -> ch ) ) <->
               ( ( ph -> ps ) -> ( ph -> ch ) ) ) $=
    ( wi ax-2 pm2.86 impbi ) ABCDDABDACDDABCEABCFG $.
    $( [5-Aug-1993] $)

  $( Theorem *5.41 of [WhiteheadRussell] p. 125. $)
  pm5.41 $p |-  ( ( ( ph -> ps ) -> ( ph -> ch ) ) <->
                ( ph -> ( ps -> ch ) ) ) $=
    ( wi pm2.86 ax-2 impbi ) ABDACDDABCDDABCEABCFG $.
    $( [10-Feb-2005] $) $( [3-Jan-2005] $)

  $( Principle of identity for logical equivalence.  Theorem *4.2 of
     [WhiteheadRussell] p. 117. $)
  pm4.2 $p |- ( ph <-> ph ) $=
    ( id impbi ) AAABZDC $.
    $( [5-Aug-1993] $)

  $( Principle of identity with antecedent. $)
  pm4.2i $p |- ( ph -> ( ps <-> ps ) ) $=
    ( wb pm4.2 a1i ) BBCABDE $.
    $( [25-Nov-1995] $)

  ${
    bicom.1 $e |- ( ph <-> ps ) $.
    $( Inference from commutative law for logical equivalence. $)
    bicomi $p |- ( ps <-> ph ) $=
      ( biimpr biimp impbi ) BAABCDABCEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr.1 $e |- ( ph <-> ps ) $.
    bitr.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr $p |- ( ph <-> ch ) $=
      ( biimp syl biimpr impbi ) ACABCABDFBCEFGCBABCEHABDHGI $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr2.1 $e |- ( ph <-> ps ) $.
    bitr2.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr2 $p |- ( ch <-> ph ) $=
      ( bitr bicomi ) ACABCDEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr3.1 $e |- ( ps <-> ph ) $.
    bitr3.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr3 $p |- ( ph <-> ch ) $=
      ( bicomi bitr ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr4.1 $e |- ( ph <-> ps ) $.
    bitr4.2 $e |- ( ch <-> ps ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr4 $p |- ( ph <-> ch ) $=
      ( bicomi bitr ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    3bitr.1 $e |- ( ph <-> ps ) $.
    3bitr.2 $e |- ( ps <-> ch ) $.
    3bitr.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr $p |- ( ph <-> th ) $=
      ( bitr ) ABDEBCDFGHH $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitrr $p |- ( th <-> ph ) $=
      ( bitr2 bitr3 ) DCAGABCEFHI $.
      $( [10-Aug-2006] $) $( [4-Aug-2006] $)
  $}

  ${
    3bitr2.1 $e |- ( ph <-> ps ) $.
    3bitr2.2 $e |- ( ch <-> ps ) $.
    3bitr2.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2 $p |- ( ph <-> th ) $=
      ( bitr4 bitr ) ACDABCEFHGI $.
      $( [10-Aug-2006] $) $( [4-Aug-2006] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2r $p |- ( th <-> ph ) $=
      ( bitr4 bitr2 ) ACDABCEFHGI $.
      $( [10-Aug-2006] $) $( [4-Aug-2006] $)
  $}

  ${
    3bitr3.1 $e |- ( ph <-> ps ) $.
    3bitr3.2 $e |- ( ph <-> ch ) $.
    3bitr3.3 $e |- ( ps <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3 $p |- ( ch <-> th ) $=
      ( bitr3 bitr ) CBDCABFEHGI $.
      $( [19-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3r $p |- ( th <-> ch ) $=
      ( bitr3 ) DBCGBACEFHH $.
      $( [5-Aug-1993] $)
  $}

  ${
    3bitr4.1 $e |- ( ph <-> ps ) $.
    3bitr4.2 $e |- ( ch <-> ph ) $.
    3bitr4.3 $e |- ( th <-> ps ) $.
    $( A chained inference from transitive law for logical equivalence.  This
       inference is frequently used to apply a definition to both sides of a
       logical equivalence. $)
    3bitr4 $p |- ( ch <-> th ) $=
      ( bitr4 bitr ) CADFABDEGHI $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr4r $p |- ( th <-> ch ) $=
      ( bitr4 bitr2 ) CADFABDEGHI $.
      $( [2-Sep-1995] $)
  $}

  $( The next three rules are useful for building up wff's around a
     definition, in order to make use of the definition. $)

  ${
    bi.a $e |- ( ph <-> ps ) $.

    $( Introduce an antecedent to both sides of a logical equivalence. $)
    imbi2i $p |- ( ( ch -> ph ) <-> ( ch -> ps ) ) $=
      ( wi biimp imim2i biimpr impbi ) CAECBEABCABDFGBACABDHGI $.
      $( [5-Aug-1993] $)

    $( Introduce a consequent to both sides of a logical equivalence. $)
    imbi1i $p |- ( ( ph -> ch ) <-> ( ps -> ch ) ) $=
      ( wi biimpr imim1i biimp impbi ) ACEBCEBACABDFGABCABDHGI $.
      $( [5-Aug-1993] $)

    $( Negate both sides of a logical equivalence. $)
    negbii $p |- ( -. ph <-> -. ps ) $=
      ( wn biimpr con3i biimp impbi ) ADBDBAABCEFABABCGFH $.
      $( [5-Aug-1993] $)

  $}

  ${
    imbi12i.1 $e |- ( ph <-> ps ) $.
    imbi12i.2 $e |- ( ch <-> th ) $.
    $( Join two logical equivalences to form equivalence of implications. $)
    imbi12i $p |- ( ( ph -> ch ) <-> ( ps -> th ) ) $=
      ( wi imbi2i imbi1i bitr ) ACGADGBDGCDAFHABDEIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbi.min $e |- ph $.
    mpbi.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbi $p |- ps $=
      ( biimp ax-mp ) ABCABDEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbir.min $e |- ps $.
    mpbir.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbir $p |- ph $=
      ( biimpr ax-mp ) BACABDEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mtbi.1 $e |- -. ph $.
    mtbi.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens. $)
    mtbi $p |- -. ps $=
      ( wn negbii mpbi ) AEBECABDFG $.
      $( [15-Nov-1994] $)
  $}

  ${
    mtbir.1 $e |- -. ps $.
    mtbir.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens. $)
    mtbir $p |- -. ph $=
      ( wn negbii mpbir ) AEBECABDFG $.
      $( [15-Nov-1994] $)
  $}

  ${
    mpbii.min $e |- ps $.
    mpbii.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens. $)
    mpbii $p |- ( ph -> ch ) $=
      ( biimpd mpi ) ABCDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbiri.min $e |- ch $.
    mpbiri.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens. $)
    mpbiri $p |- ( ph -> ps ) $=
      ( biimprd mpi ) ACBDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbid.min $e |- ( ph -> ps ) $.
    mpbid.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbid $p |- ( ph -> ch ) $=
      ( biimpd mpd ) ABCDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbird.min $e |- ( ph -> ch ) $.
    mpbird.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbird $p |- ( ph -> ps ) $=
      ( biimprd mpd ) ACBDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    a1bi.1 $e |- ph $.
    $( Inference rule introducing a theorem as an antecedent. $)
    a1bi $p |- ( ps <-> ( ph -> ps ) ) $=
      ( wi ax-1 pm2.27 ax-mp impbi ) BABDZBAEAIBDCABFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylib.1 $e |- ( ph -> ps ) $.
    sylib.2 $e |- ( ps <-> ch ) $.
    $( A mixed syllogism inference from an implication and a biconditional. $)
    sylib $p |- ( ph -> ch ) $=
      ( biimp syl ) ABCDBCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbi.1 $e |- ( ph <-> ps ) $.
    sylbi.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       Useful for substituting an antecedent with a definition. $)
    sylbi $p |- ( ph -> ch ) $=
      ( biimp syl ) ABCABDFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylibr.1 $e |- ( ph -> ps ) $.
    sylibr.2 $e |- ( ch <-> ps ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       Useful for substituting a consequent with a definition. $)
    sylibr $p |- ( ph -> ch ) $=
      ( biimpr syl ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbir.1 $e |- ( ps <-> ph ) $.
    sylbir.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication. $)
    sylbir $p |- ( ph -> ch ) $=
      ( biimpr syl ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylibd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( A syllogism deduction. $)
    sylibd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDEACDFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylbid.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbid $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDABCEGFH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylibrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibrd.2 $e |- ( ph -> ( th <-> ch ) ) $.
    $( A syllogism deduction. $)
    sylibrd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDEADCFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbird.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    sylbird.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbird $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDACBEGFH $.
      $( [3-Aug-1994] $)
  $}

  ${
    syl5ib.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5ib.2 $e |- ( th <-> ps ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded antecedent with a
       definition. $)
    syl5ib $p |- ( ph -> ( th -> ch ) ) $=
      ( biimp syl5 ) ABCDEDBFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5ibr.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5ibr.2 $e |- ( ps <-> th ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl5ibr $p |- ( ph -> ( th -> ch ) ) $=
      ( biimpr syl5 ) ABCDEBDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bi.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5bi.2 $e |- ( th -> ps ) $.
    $( A mixed syllogism inference. $)
    syl5bi $p |- ( ph -> ( th -> ch ) ) $=
      ( biimpd syl5 ) ABCDABCEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bir.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5bir.2 $e |- ( th -> ch ) $.
    $( A mixed syllogism inference. $)
    syl5bir $p |- ( ph -> ( th -> ps ) ) $=
      ( biimprd syl5 ) ACBDABCEGFH $.
      $( [3-Apr-1994] $)
  $}

  ${
    syl6ib.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ib.2 $e |- ( ch <-> th ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl6ib $p |- ( ph -> ( ps -> th ) ) $=
      ( biimp syl6 ) ABCDECDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6ibr.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ibr.2 $e |- ( th <-> ch ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded consequent with a
       definition. $)
    syl6ibr $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpr syl6 ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}


  ${
    syl6bi.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bi.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bi $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syl6 ) ABCDABCEGFH $.
      $( [2-Jan-1994] $)
  $}

  ${
    syl6bir.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    syl6bir.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bir $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syl6 ) ABCDACBEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    syl7ib.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl7ib.2 $e |- ( ta <-> ch ) $.
    $( A mixed syllogism inference from a doubly nested implication and a
       biconditional. $)
    syl7ib $p |- ( ph -> ( ps -> ( ta -> th ) ) ) $=
      ( biimp syl7 ) ABCDEFECGHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl8ib.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl8ib.2 $e |- ( th <-> ta ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise. $)
    syl8ib $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( biimp syl8 ) ABCDEFDEGHI $.
      $( [1-Aug-1994] $)
  $}

  ${
    3imtr3.1 $e |- ( ph -> ps ) $.
    3imtr3.2 $e |- ( ph <-> ch ) $.
    3imtr3.3 $e |- ( ps <-> th ) $.
    $( A mixed syllogism inference, useful for removing a definition from both
       sides of an implication. $)
    3imtr3 $p |- ( ch -> th ) $=
      ( sylbir sylib ) CBDCABFEHGI $.
      $( [10-Aug-1994] $)
  $}

  ${
    3imtr4.1 $e |- ( ph -> ps ) $.
    3imtr4.2 $e |- ( ch <-> ph ) $.
    3imtr4.3 $e |- ( th <-> ps ) $.
    $( A mixed syllogism inference, useful for applying a definition to both
       sides of an implication. $)
    3imtr4 $p |- ( ch -> th ) $=
      ( sylbi sylibr ) CBDCABFEHGI $.
      $( [5-Aug-1993] $)
  $}

  ${
    con1bii.1 $e |- ( -. ph <-> ps ) $.
    $( A contraposition inference. $)
    con1bii $p |- ( -. ps <-> ph ) $=
      ( wn biimp con1i biimpr con2i impbi ) BDAABADZBCEFBAJBCGHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    con2bii.1 $e |- ( ph <-> -. ps ) $.
    $( A contraposition inference. $)
    con2bii $p |- ( ps <-> -. ph ) $=
      ( wn bicomi con1bii ) ADBBAABDCEFE $.
      $( [5-Aug-1993] $)
  $}

  $( For ~ bicon3 :  See ~ negbii . $)

  $( For ~ con4bii :  Later. $)


