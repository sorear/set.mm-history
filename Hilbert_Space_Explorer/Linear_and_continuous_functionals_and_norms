$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Linear and continuous functionals and norms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

    $( Define the norm of a Hilbert space functional. $)
    df-nmfn $a |- normfn = { <. t , y >. | ( t : H~ --> CC /\ y = sup (
         { x | E. z e. H~ ( ( normh ` z ) <_ 1 /\ x = ( abs ` ( t ` z ) ) ) } ,
              RR* , < ) ) } $.

    $( Define the null space of a Hilbert space functional. $)
    df-nlfn $a |- null = { <. t , y >. | ( t : H~ --> CC /\ y =
                 { x e. H~ | ( t ` x ) = 0 } ) } $.

    $( Define the set of continuous functionals on Hilbert space.  For every
       "epsilon" ( ` y ` ) there is an "delta" ( ` z ` ) such that... $)
    df-cnfn $a |- ConFn = { t | ( t :  H~ --> CC /\ A. x e. H~ A. y e. RR (
      0 < y -> E. z e. RR ( 0 < z /\ A. w e. H~ ( ( normh ` ( w -h x ) ) < z ->
      ( abs ` ( ( t ` w ) - ( t ` x ) ) ) < y ) ) ) ) } $.

    $( Define the set of linear functionals on Hilbert space. $)
    df-lnfn $a |- LinFn = { t | ( t : H~ --> CC /\
           A. x e. CC A. y e. H~ A. z e. H~
       ( t ` ( ( x .h y ) +h z ) ) = ( ( x x. ( t ` y ) ) + ( t ` z ) ) ) } $.

