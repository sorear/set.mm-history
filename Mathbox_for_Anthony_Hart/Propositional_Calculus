$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Propositional Calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( If something is true, it outputs ` T. ` . $)
  truvar $p |- ( ph <-> ( ph <-> T. ) ) $=
    ( wtru tru tbt ) BACD $.
    $( [17-Aug-2011] $) $( [14-Aug-2011] $)

  $( If something is not true, it outputs ` F. ` . $)
  falvar $p |- ( -. ph <-> ( ph <-> F. ) ) $=
    ( wfal notfal nbn ) BACD $.
    $( [17-Aug-2011] $) $( [14-Aug-2011] $)

  $( ` F. ` implies anything. $)
  FiA $p |- ( F. -> ph ) $=
    ( wfal notfal pm2.21i ) BACD $.
    $( [17-Aug-2011] $) $( [1-Aug-2011] $)

  $( Anything implies ` T. ` . $)
  AiT $p |- ( ph -> T. ) $=
    ( wtru tru a1i ) BACD $.
    $( [17-Aug-2011] $) $( [1-Aug-2011] $)

  $( A ` /\ ` identity. $)
  TTAid $p |- ( ( T. /\ T. ) <-> T. ) $=
    ( wtru anidm ) AB $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` /\ ` identity. $)
  TFAid $p |- ( ( T. /\ F. ) <-> F. ) $=
    ( wtru wfal wa wn notfal intnan 2th con4bii ) ABCZBIDBDBAEFEGH $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` /\ ` identity. $)
  FTAid $p |- ( ( F. /\ T. ) <-> F. ) $=
    ( wfal wtru wa wn notfal intnanr 2th con4bii ) ABCZAIDADABEFEGH $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` /\ ` identity. $)
  FFAid $p |- ( ( F. /\ F. ) <-> F. ) $=
    ( wfal anidm ) AB $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` \/ ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  TTOid $p |- ( ( T. \/ T. ) <-> T. ) $=
    ( wtru oridm ) AB $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` \/ ` identity. $)
  TFOid $p |- ( ( T. \/ F. ) <-> T. ) $=
    ( wtru wfal wo tru orci 2th ) ABCAABDEDF $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` \/ ` identity. $)
  FTOid $p |- ( ( F. \/ T. ) <-> T. ) $=
    ( wfal wtru wo tru olci 2th ) ABCBBADEDF $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` \/ ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  FFOid $p |- ( ( F. \/ F. ) <-> F. ) $=
    ( wfal oridm ) AB $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -> ` identity. $)
  TTIid $p |- ( ( T. -> T. ) <-> T. ) $=
    ( wtru wi tru a1i 2th ) AABAAACDCE $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` -> ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  TFIid $p |- ( ( T. -> F. ) <-> F. ) $=
    ( wfal wtru wi tru a1bi bicomi ) ABACBADEF $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -> ` identity. $)
  FTIid $p |- ( ( F. -> T. ) <-> T. ) $=
    ( wfal wtru wi tru a1i 2th ) ABCBBADEDF $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` -> ` identity. $)
  FFIid $p |- ( ( F. -> F. ) <-> T. ) $=
    ( wfal wi wtru id tru 2th ) AABCADEF $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` -. ` identity. $)
  TNid $p |- ( -. T. <-> F. ) $=
    ( wfal wtru wn df-fal bicomi ) ABCDE $.
    $( [23-Oct-2010] $) $( [22-Oct-2010] $)

  $( A ` -. ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  FNid $p |- ( -. F. <-> T. ) $=
    ( wtru wfal TNid con1bii ) ABCD $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  TTBid $p |- ( ( T. <-> T. ) <-> T. ) $=
    ( wtru wb df-tru bicomi ) AAABACD $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  TFBid $p |- ( ( T. <-> F. ) <-> F. ) $=
    ( wtru wfal wb wn TNid nbbn mpbi notfal 2false ) ABCZBADBCJDEABFGHI $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  FTBid $p |- ( ( F. <-> T. ) <-> F. ) $=
    ( wfal wtru wb bicom TFBid bitri ) ABCBACAABDEF $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  FFBid $p |- ( ( F. <-> F. ) <-> T. ) $=
    ( wtru wfal wb df-tru bicomi ) ABBCBDE $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -/\ ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  TTSid $p |- ( ( T. -/\ T. ) <-> F. ) $=
    ( wtru wnand wn wfal nic-justneg TNid bitr3i ) AABACDAEFG $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -/\ ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  TFSid $p |- ( ( T. -/\ F. ) <-> T. ) $=
    ( wtru wfal wnand wa wn df-nand TFAid notbii FNid 3bitri ) ABCABDZEBEAABFKB
    GHIJ $.
    $( [16-May-2011] $) $( [23-Oct-2010] $)

  $( A ` -/\ ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  FTSid $p |- ( ( F. -/\ T. ) <-> T. ) $=
    ( wfal wtru wnand wa wn df-nand FTAid notbii FNid 3bitri ) ABCABDZEAEBABFKA
    GHIJ $.
    $( [16-May-2011] $) $( [23-Oct-2010] $)

  $( A ` -/\ ` identity.  (The proof was shortened by Andrew Salmon,
     13-May-2011.) $)
  FFSid $p |- ( ( F. -/\ F. ) <-> T. ) $=
    ( wfal wnand wn wtru nic-justneg FNid bitr3i ) AABACDAEFG $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( The first of three axioms in the Tarski-Bernays axiom system. $)
  tb-ax1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( imim1 ) ABCD $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( The second of three axioms in the Tarski-Bernays axiom system. $)
  tb-ax2 $p |- ( ph -> ( ps -> ph ) ) $=
    ( ax-1 ) ABC $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( The third of three axioms in the Tarski-Bernays axiom system.

     This axiom, along with ~ ax-mp , ~ tb-ax1 , and ~ tb-ax2 , can be used to
     derive any theorem or rule that uses only ` -> ` . $)
  tb-ax3 $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( peirce ) ABC $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  ${
    tbsyl.1 $e |- ( ph -> ps ) $.
    tbsyl.2 $e |- ( ps -> ch ) $.
    $( The weak syllogism from Tarski-Bernays'. $)
    tbsyl $p |- ( ph -> ch ) $=
      ( wi tb-ax1 ax-mp ) BCFZACFZEABFIJFDABCGHH $.
      $( [17-Aug-2011] $) $( [16-Aug-2011] $)
  $}

  $( Lemma for ~ re1ax2 . $)
  re1ax2lem $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi tb-ax1 tb-ax2 tbsyl tb-ax3 ax-mp ) ABCDZDJCDZACDZDZBLDZAJCEBKDMNDBJKDZ
    KBJBDOBJFJBCEGOKCDKDKJKCEKCHGGBKLEIG $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ ax-2 rederived from the Tarski-Bernays axiom system.  Often ~ tb-ax1 is
     replaced with this theorem to make a "standard" system.  This is because
     this theorem is easier to work with, despite it being longer. $)
  re1ax2 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps )
     -> ( ph -> ch ) ) ) $=
    ( wi re1ax2lem tb-ax1 ax-mp tb-ax3 tbsyl ) ABCDDBACDZDZABDZJDZABCEKLAJDZDZM
    LKNDDKODABJFLKNEGNJDZOMDZNJCDJDJAJCFJCHIOPMDDPQDLNJFOPMEGGII $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Constructor theorem for ` -/\ ` . $)
  naim1 $p |- ( ( ph -> ps ) -> ( ( ps -/\ ch ) -> ( ph -/\ ch ) ) ) $=
    ( wi wn wo wnand con3 pm2.38 wa pm3.13 pm3.14 imim12i df-nand 3imtr4g 3syl
    ) ABDBEZAEZDQCEZFZRSFZDZBCGZACGZDABHSQRIUBBCJEZACJEZUCUDUETUAUFBCKACLMBCNAC
    NOP $.
    $( [13-Sep-2011] $) $( [1-Sep-2011] $)

  $( Constructor theorem for ` -/\ ` . $)
  naim2 $p |- ( ( ph -> ps ) -> ( ( ch -/\ ps ) -> ( ch -/\ ph ) ) ) $=
    ( wi wn wo wnand con3 orim2 wa pm3.13 pm3.14 imim12i df-nand 3imtr4g 3syl
    ) ABDBEZAEZDCEZQFZSRFZDZCBGZCAGZDABHSQRIUBCBJEZCAJEZUCUDUETUAUFCBKCALMCBNCA
    NOP $.
    $( [13-Sep-2011] $) $( [1-Sep-2011] $)

  ${
    naim1i.1 $e |- ( ph -> ps ) $.
    naim1i.2 $e |- ( ps -/\ ch ) $.
    $( Constructor rule for ` -/\ ` . $)
    naim1i $p |- ( ph -/\ ch ) $=
      ( wi wnand naim1 mp2 ) ABFBCGACGDEABCHI $.
      $( [13-Sep-2011] $) $( [2-Sep-2011] $)
  $}

  ${
    naim2i.1 $e |- ( ph -> ps ) $.
    naim2i.2 $e |- ( ch -/\ ps ) $.
    $( Constructor rule for ` -/\ ` . $)
    naim2i $p |- ( ch -/\ ph ) $=
      ( wi wnand naim2 mp2 ) ABFCBGCAGDEABCHI $.
      $( [13-Sep-2011] $) $( [2-Sep-2011] $)
  $}

  ${
    naim12i.1 $e |- ( ph -> ps ) $.
    naim12i.2 $e |- ( ch -> th ) $.
    naim12i.3 $e |- ( ps -/\ th ) $.
    $( Constructor rule for ` -/\ ` . $)
    naim12i $p |- ( ph -/\ ch ) $=
      ( naim1i naim2i ) CDAFABDEGHI $.
      $( [13-Sep-2011] $) $( [2-Sep-2011] $)
  $}

  $( Constructor theorem for ` -/\ ` . $)
  nabi1 $p |- ( ( ph <-> ps ) -> ( ( ph -/\ ch ) <-> ( ps -/\ ch ) ) ) $=
    ( wb wa wn wnand anbi1 notbi biimpi df-nand bibi12i biimpri 3syl ) ABDACEZB
    CEZDZOFZPFZDZACGZBCGZDZABCHQTOPIJUCTUARUBSACKBCKLMN $.
    $( [13-Sep-2011] $) $( [1-Sep-2011] $)

  $( Constructor theorem for ` -/\ ` . $)
  nabi2 $p |- ( ( ph <-> ps ) -> ( ( ch -/\ ph ) <-> ( ch -/\ ps ) ) ) $=
    ( wb wa wn wnand pm3.26 anbi2d anidms notbi biimpi df-nand bibi12i biimpri
    3syl ) ABDZCAEZCBEZDZRFZSFZDZCAGZCBGZDZQTQQEABCQQHIJTUCRSKLUFUCUDUAUEUBCAMC
    BMNOP $.
    $( [13-Sep-2011] $) $( [1-Sep-2011] $)

  ${
    nabi1i.1 $e |- ( ph <-> ps ) $.
    nabi1i.2 $e |- ( ps -/\ ch ) $.
    $( Constructor rule for ` -/\ ` . $)
    nabi1i $p |- ( ph -/\ ch ) $=
      ( wnand wb bicomi nabi1 ax-mp mpbi ) BCFZACFZEBAGLMGABDHBACIJK $.
      $( [13-Sep-2011] $) $( [2-Sep-2011] $)
  $}

  ${
    nabi2i.1 $e |- ( ph <-> ps ) $.
    nabi2i.2 $e |- ( ch -/\ ps ) $.
    $( Constructor rule for ` -/\ ` . $)
    nabi2i $p |- ( ch -/\ ph ) $=
      ( wnand wb bicomi nabi2 ax-mp mpbi ) CBFZCAFZEBAGLMGABDHBACIJK $.
      $( [13-Sep-2011] $) $( [2-Sep-2011] $)
  $}

  ${
    nabi12i.1 $e |- ( ph <-> ps ) $.
    nabi12i.2 $e |- ( ch <-> th ) $.
    nabi12i.3 $e |- ( ps -/\ th ) $.
    $( Constructor rule for ` -/\ ` . $)
    nabi12i $p |- ( ph -/\ ch ) $=
      ( nabi1i nabi2i ) CDAFABDEGHI $.
      $( [13-Sep-2011] $) $( [2-Sep-2011] $)
  $}

  $( The double nand. $)
  w3nand $a wff ( ph -/\ ps -/\ ch ) $.

  $( The double nand.  This definition allows us to express the input of three
     variables only being false if all three are true. $)
  df-3nand $a |- ( ( ph -/\ ps -/\ ch ) <-> ( ph -> ( ps -> -. ch ) ) ) $.

  $( The double nand expressed in terms of pure nand. $)
  df3nandALT1 $p |- ( ( ph -/\ ps -/\ ch ) <-> ( ph -/\ ( ( ps -/\ ch )
    -/\ ( ps -/\ ch ) ) ) ) $=
    ( wn wi wnand wa w3nand iman imnan biimpi jca biimpri adantl impbii
    df-nand anbi12i bitr4i imbi2i anbi2i notbii 3bitr4i df-3nand ) ABCDEZEZABCF
    ZUFFZGZDZABCHAUGFAUFUFGZEAUJDZGZDUEUIAUJIUDUJAUDBCGDZUMGZUJUDUNUDUMUMUDUMBC
    JZKZUPLUMUDUMUDUMUOMNOUFUMUFUMBCPZUQQRSUHULUGUKAUFUFPTUAUBABCUCAUGPUB $.
    $( [13-Sep-2011] $) $( [2-Sep-2011] $)

  $( The double nand expressed in terms of negation and and. $)
  df3nandALT2 $p |- ( ( ph -/\ ps -/\ ch ) <-> -. ( ph /\ ps /\ ch ) ) $=
    ( w3nand wn wi wa w3a df-3nand imnan imbi2i 3anass notbii bitr4i 3bitri )
    ABCDABCEFZFABCGZEZFZABCHZEZABCIPRABCJKSAQGZEUAAQJTUBABCLMNO $.
    $( [13-Sep-2011] $)

  $( Double and in terms of double nand. $)
  andnand1 $p |- ( ( ph /\ ps /\ ch ) <-> ( ( ph -/\ ps -/\ ch ) -/\
    ( ph -/\ ps -/\ ch ) ) ) $=
    ( w3a wn wi w3nand wnand wa 3anass pm4.63 anbi2i annim 3bitr2i df-3nand
    notbii nic-justneg ) ABCDZABCEFZFZEZABCGZEUBUBHRABCIZIASEZIUAABCJUDUCABCKLA
    SMNUBTABCOPUBQN $.
    $( [13-Sep-2011] $) $( [2-Sep-2011] $)

  $( An ` -> ` nand relation. $)
  imnand2 $p |- ( ( -. ph -> ps ) <-> ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) $=
    ( wn wa wnand wi nic-justneg anbi12i notbii iman df-nand 3bitr4i ) ACZBCZDZ
    CAAEZBBEZDZCMBFPQEORMPNQAGBGHIMBJPQKL $.
    $( [13-Sep-2011] $) $( [2-Sep-2011] $)

