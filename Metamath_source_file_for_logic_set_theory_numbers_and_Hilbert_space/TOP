$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
    Metamath source file for logic, set theory, numbers, and Hilbert space
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

set.mm - Version of 17-Sep-2004

                             PUBLIC DOMAIN

This file (specifically, the version of this file with the above date)
is placed in the public domain per the Creative Commons Public Domain
Dedication. http://creativecommons.org/licenses/publicdomain/

Norman Megill - email: nm(at)alum(dot)mit(dot)edu

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          Recent label changes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

If you are using set.mm as the base for your project, you should review
the following changes before updating to this version of set.mm.  For
automated scripts, you can do global substitutions of the ones without
notes in reverse order, matching a space before the label and a space or
end-of-line after the label.  The ones with notes should be processed
manually.

Date       Old       New         Notes
15-Sep-04  19.6      alex
15-Sep-04  alex      alexeq
15-Sep-04  19.11     excom
15-Sep-04  19.11a    excomim
15-Sep-04  19.5      alcom
15-Sep-04  19.7      alnex
15-Sep-04  19.14     exnal
15-Sep-04  alnex     alinexa
15-Sep-04  exnal     exanali
15-Sep-04  dmsn      dmsnop
15-Sep-04  rnsn      rnsnop
13-Sep-04  ppnull    pwpw0
13-Sep-04  pwnull    pw0
13-Sep-04  zfnull2   zfnul
13-Sep-04  nullpss   0pss
13-Sep-04  nullss    0ss
13-Sep-04  nulleq    eq0
13-Sep-04  nnull     n0
13-Sep-04  nnullf    n0f
13-Sep-04  xpdisj    xpsndisj
13-Sep-04  subdist   subdi
13-Sep-04  ecoprdist ecoprdi
13-Sep-04  negdist   negdi
13-Sep-04  nndist    nndi
13-Sep-04  xpindist  xpindi
11-Sep-04  ssd       sseld
11-Sep-04  ssi       sseli
11-Sep-04  vtoclab   elab2
11-Sep-04  vtoclabg  elab2g
11-Sep-04  elab2g    elab3g
 6-Sep-04  comm      com12
 4-Sep-04  opabval   fvopab3
 4-Sep-04  opabvalig fvopab3ig
 4-Sep-04  opabval2g fvopab4g
 4-Sep-04  opabval2  fvopab4
 3-Sep-04  undif2    difun2
 3-Sep-04  undif3    ssundif
 1-Sep-04  dedlem2   [--same--]  swapped arguments of = sign
 1-Sep-04  dedlem1   [--same--]  swapped arguments of = sign
31-Aug-04  pm2.16d   con3d
31-Aug-04  pm2.03d   con2d
31-Aug-04  pm2.15d   con1d
31-Aug-04  pm2.16    con3
31-Aug-04  pm2.03    con2
31-Aug-04  pm2.15    con1
31-Aug-04  con3      con3i
31-Aug-04  con2      con2i
31-Aug-04  con1      con1i
29-Aug-04  oprabelrn elrnoprab
27-Aug-04  ssequn1   [--same--]  swapped arguments of = sign
27-Aug-04  df-ss     dfss
27-Aug-04  imdistanb ---         obsolete; use imdistan
27-Aug-04  imdistan  [--same--]  now includes converse
17-Aug-04  difun2    [--same--]  swapped arguments of = sign
17-Aug-04  undif1    [--same--]  swapped arguments of = sign and union
17-Aug-04  difin     [--same--]  swapped arguments of = sign
17-Aug-04  unindistr undir
17-Aug-04  unindist  undi
17-Aug-04  inundistr indir
17-Aug-04  inundist  indi
17-Aug-04  indist    inindi
16-Aug-04  ss2un     unss12      order of variables changed
15-Aug-04  funmo,dffunmof,dffunmo
                     [--same--]  ordered pair membership -> binary relation
15-Aug-04  dfrel2    [--same--]  swapped arguments of = sign
12-Aug-04  unxp      xpun2
11-Aug-04  elima2    elima3
11-Aug-04  reluni    [--same--]  restricted quantifier and added converse
 9-Aug-04  imun      imaun
 3-Aug-04  1id       om1
 3-Aug-04  oalim     [--same--]  conjoined antecedents; now uses indexed union
 3-Aug-04  divdiv23  divdiv23z
 3-Aug-04  divdiv23i divdiv23
 2-Aug-04  divrec,divrecz [--same--] swapped A and B
 2-Aug-04  zq        zqt
 2-Aug-04  qre       qret
 1-Aug-04  mulcant2  [--same--]  swapped conjunct in antecedent
 1-Aug-04  axrecex,axrrecex,divclt,divcan1t,divcan2t,recidt,divdistrt,divrclt
                     [--same--]  conjoined the two left-most antecedents
 1-Aug-04  peano1c   1nn
 1-Aug-04  1nn       1onn
28-Jul-04  sbco0     sbid2
28-Jul-04  sbid2     sbid2v
26-Jul-04  cardonval oncardval
15-Jun-04  ssin      [--same--]  swapped biconditional order
15-Jun-04  unss      [--same--]  swapped biconditional order
11-Jun-04  dfun2     df-un
11-Jun-04  df-un     dfun2
11-Jun-04  dfin2     df-in
11-Jun-04  df-in     dfin2
 3-Jun-04  ssintss   intss
 3-Jun-04  intss     intss1
30-May-04  r1clos    r1pwcl      now uses antecedent instead of hypothesis
30-May-04  r1powt    r1pw
28-May-04  sqvalt    ---         obsolete; use exp2
28-May-04  expntwo   exp2
28-May-04  expnone   exp1
28-May-04  expnsuc   expp10
28-May-04  expnzer   exp00
26-May-04  ontrt     ---         obsolete; use onelon instead
26-May-04  ddelim*   [--same--]  (*=wildcard) changed order of hypotheses
21-May-04  fvcnvb    f1ocnvfvb
21-May-04  fvcnv     f1ocnvfv
21-May-04  sbcb      sbcbi       now uses antecedent instead of hypothesis
21-May-04  sbci      sbcim
21-May-04  sbb       sbbi
21-May-04  sbo       sbor
21-May-04  sbi       sbim
21-May-04  sbim      sbimi
21-May-04  sba       sban
21-May-04  fvelrn    [--same--]  changed to restricted quantifier
>8-Feb-04  zfpowb    pwexb
>8-Feb-04  zfpowcl   pwex
>8-Feb-04  zfnull    0ex
>8-Feb-04  limelon   [--same--]  changed first -> to /\ in antecedent


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Bibliography
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Bibliographical references are made by bracketing an identifer in a
theorem's comment, such as [RussellWhitehead].  These refer to HTML tags
on the following web pages:

  Logic and set theory - see http://us.metamath.org/mpegif/mmset.html#bib
  Hilbert space - see http://us.metamath.org/mpegif/mmhil.html#ref


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Quick "How To" use this file (under Windows 95/98/NT/2K/XP)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

1. Download the program metamath.exe per the instructions on the
   Metamath home page (http://metamath.org) and put it in the same
   directory as this file (set.mm).
2. In Windows Explorer, double-click on metamath.exe.
3. Type "help" for a list of help topics, and "help demo" for some
   command examples.


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                       Metamath syntax summary
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The HELP LANGUAGE command in the Metamath program will give you a quick
overview of Metamath.  Syntax summary:

          $c ... $. - Constant declaration
          $v ... $. - Variable declaration
          $d ... $. - Disjoint (distinct) variable restriction
  <label> $f ... $. - "Floating" (variable-type) hypothesis
  <label> $e ... $. - "Essential" (logical) hypothesis (e.g. theorem assumption)
  <label> $a ... $. - Axiom or definition or syntax construction
  <label> $p ... $= ... $. - Theorem and its proof
          ${ ... $} - Block for scoping above statements (except $a, $p
                      which are forever active)
$)        $( ... $) $( - Comments (may not be nested); see HELP LANGUAGE
                         for markup features
          $[ ... $] - Include file

The above tokens (i.e. those beginning with "$") are the ONLY primitives
built into the Metamath language.  The only 'logic' Metamath uses in its
proof verification algorithm is the substitution of expressions for
variables while checking for distinct variable violations.  EVERYTHING
ELSE, including the axioms for logic, is defined in this database file.

Here is some more detail about the syntax.  A <token> may not contain
the "$" character but may contain any other non-whitespace printable
character.  A <label> may contain only alphanumeric characters and the
characters ".-_".  Tokens and labels are case-sensitive.

          $c <tokenlist> $. <tokenlist> is a (whitespace-separated) list of
                            distinct tokens unused in current scope.
          $v <tokenlist> $. <tokenlist> is a (whitespace-separated) list of
                            distinct tokens unused in current scope.
          $d <tokenlist> $. <tokenlist> is a (whitespace-separated) list of
                            distinct tokens previously declared with $v in
                            current scope.  It means that substitutions into
                            these tokens may not have variables in common.
  <label> $f <tokenlist> $. <tokenlist> is a list of 2 tokens, the first of
                            which must be previously declared with $c
                            in the current scope.
  <label> $e <tokenlist> $. <tokenlist> is a list of 2 or more tokens, the
                            first of which must be previously declared with $c
                            in the current scope.
  <label> $a <tokenlist> $. <tokenlist> is a list of 2 or more tokens, the
                            first of which must be previously declared with $c
                            in the current scope.
  <label> $p <tokenlist> $= <proof> $. <tokenlist> is a list of 2 or more
                            tokens, the first of which must be previously
                            declared with $c in the current scope.  <proof> is
                            either a whitespace-delimited sequence of previous
                            labels (created by SAVE PROOF <label> /NORMAL) or a
                            compressed proof (created by SAVE PROOF <label>
                            /COMPRESSED).  After using SAVE PROOF, use
                            WRITE SOURCE to save the database file to disk.
          ${ ... $} - Block for scoping the above statements (except $a, $p
                      which are forever active)
$)        $( <any text> $) $( Comment.  Note: <any text> may not contain
                             adjacent "$" and ")" characters.
          $[ <filename> $]   Insert contents of <filename> at this point.
                             If <filename> is current file or has been already
                             been inserted, it will not be inserted again.

Inside of comments, it is recommended that labels be preceded with a tilde (~)
and math symbol tokens be enclosed in grave accents (` `).  This way the
LaTeX and HTML rendition of comments will be accurate, and (future) tools
to globally change labels and math symbols will also change them in comments.
Note that `` inside of grave accents is interpreted as a single ` .
See HELP LANGUAGE for other markup features in comments.

The proofs in this file are in "compressed" format for storage efficiency. The
Metamath program reads the compressed format directly.  This format is
described in an Appendix of the Metamath book.  It is not intended to be
read by humans.  For viewing proofs you should use the various SHOW PROOF
commands described in the Metamath book (or the on-line HELP).


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                           Other notes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

1. To read this source file into the Metamath program, enter the program and
type:  "read set.mm <return>".  You should be familiar with chapters 2 and
4 of the 'Metamath' book to understand the Metamath language.  Chapters 2,
3 and 5 explain how to use the program.  Chapter 3 gives you an informal
overview of what this source file is all about.  Appendix A shows you the
standard mathematical symbols corresponding to the ASCII tokens in this file.
Note: at the end of this file is a big comment containing all tokens
in this file and their LaTeX definitions.  You may want to keep it updated
and use it to replace the latex.def file if you change or add tokens.

The ASCII tokens may seem cryptic at first, even if you are familiar with set
theory, but a review of the definition summary in Chapter 3 should quickly
enable you to see the correspondence to standard mathematical notation. To
easily find the definition of a token, search for the first occurrences of the
token surrounded by spaces.  Some odd-looking ones include "-." for "not", and
"(_" for "is a subset of".  (HELP TEX tells you how to obtain a LaTeX
output to see the real mathematical symbols.)  Let me know if you have
better suggestions for naming ASCII tokens.

2. Logic and set theory provide a foundation for all of mathematics.  To learn
about them, you should study this source file in conjunction with one or more
of the references listed below.  The textbooks provide a motivation for what we
are doing, whereas Metamath lets you see in detail all hidden and implicit
steps. Most standard theorems are accompanied by citations.  Some closely
followed texts include the following:

  Axioms of propositional calculus - [Margaris].
  Axioms of predicate calculus - [Megill] (System S3' in the article referenced).
  Theorems of propositional calculus - [WhiteheadRussell].
  Theorems of pure predicate calculus - [Margaris].
  Theorems of equality and substitution - [Monk2], [Tarski], [Megill].
  Axioms of set theory - [BellMachover].
  Development of set theory - [TakeutiZaring].  (The first part of [Quine]
      has a good explanation of the powerful device of "virtual" or
      abstraction classes, which is essential to our development.)
  Construction of real and complex numbers - [Gleason]
  Theorems about real numbers - [Apostol]

3. Convention:  All $a statements starting with "|-" have labels
starting with "ax-" (axioms) or "df-" (definitions).  "ax-" corresponds
to what is traditionally called an axiom.  "df-" introduces new symbols
or a new relationship among symbols that can be eliminated; they always
extend the definition of a wff or class.  Metamath blindly treats $a
statements as new facts but does not try to justify them; their
justification is the job of mathematicians and philosophers.  Generally
our philosophy is to make definitions easy to eliminate by simple symbol
substitutions.

4. Our method of definition, the axioms for predicate calculus, and the
development of substitution are somewhat different from those found in
standard texts.  The axioms were designed for direct derivation of
standard results without excessive use of metatheorems.  (See Theorem
9.7 of [Megill] for a rigorous justification.)  Typically we are
minimalist when introducing new definitions; they are introduced only
when a clear advantage becomes apparent for reducing the number of
symbols, shortening proofs, etc.  We generally avoid the introduction of
excessive definitions because each one requires associated theorems and
additional elimination steps in proofs.

5. For the most part, the notation conforms to modern conventions, with
variations due to our choice of the axiom system or to make proofs
shorter.  Listed below are some important conventions and how they
correspond to textbook language.  The notation is usually explained in
more detail when first introduced.

  Typically, Greek letters (ph = phi, ps = psi, ch = chi, etc.) are used for
      propositional (wff) variables; x,y,z,... for individual (i.e. set)
      variables; and A,B,C,... for class variables.
  "|-", meaning "It is provable that," is the first token of all assertions
      and hypotheses that aren't syntax constructions.  This is a standard
      convention in logic.  For us, it also prevents any ambiguity with
      statements that are syntax constructions, such as "wff -. ph".
  "$e |- ( ph -> A. x ph ) $." should be read "Assume variable x is
      (effectively) not free in wff phi."  Literally, this says "Assume it is
      provable that phi implies for all x phi."
  "|- ( -. A. x x = y -> ..." should be read "If x and y are distinct
      variables, then..."  This antecedent provides us with a technical
      device (called a "distinctor" in [Megill]) to avoid the need for the
      $d statement early in our development of predicate calculus, permitting
      unrestricted substitituions as conceptually simple as those in
      propositional calculus.  However, the $d eventually becomes a
      requirement, and after that this device is rarely used.
  "[ y / x ] ph" should be read "the wff that results when y is properly
      substituted for x in ph."
  "$d x y $." should be read "Assume x and y are distinct variables."
  "$d x ph $." should be read "Assume x does not occur in phi $."  Sometimes
      a theorem is proved with "$e |- ( ph -> A. x ph ) $." in place of
      "$d x ph $." when a more general result is desired; ~ ax-17 can be used
      to derive the $d version.  For an example of how to get from the $d
      version back to the $e version, see the proof of ~ euf from ~ df-eu .
  "$d x A $." should be read "Assume x is not a variable occurring in class
      A."
  "$d x A $.  $d x ps $.  $e |- ( x = A -> ( ph <-> ps ) ) $." is often used
      instead of explicit substitution, meaning "Assume psi results from the
      substitution of A for x in phi".
  "$e |- A e. V $." should be read "Assume class A is a set (i.e. exists)."
      This is a convenient convention used by [Quine].
  "$d x y $.  $e |- y e. A -> A. x y e. A $." should be read "Assume x is
      (effectively) not a free variable in class A."
  "`' R" should be read "converse of (relation) R" and is the same as
      the more standard notation R^{-1}.
  "( f ` x )" should be read "the value of function f at x" and is the same
      as the more familiar f(x).
  The Deduction Theorem of standard logic is never used.  Instead, in
      set theory we use other tricks to make a $e hypothesis become
      an antecedent.  See the section below called "The Weak Deduction Theorem
      in set theory" for a description of this technique.


A note for anyone attempting to find shorter proofs
---------------------------------------------------

I always like shorter proofs, and any shorter proof I accept will be
acknowledged and put into the next version of the Metamath site.

I will automatically accept shorter proofs conforming to these
guidelines:  (1) only existing, unmodified theorems in the database are
used (the order of theorems may be changed though), (2) the number of
characters in the compressed proof is less than before, (3) the last
step number in SHOW PROOF when the proof is compressed is less than
before, (4) the number of steps in the HTML file (SHOW STATEMENT xxx /
HTML) is less than before, (5) the size of the HTML file is less than
before, (6) no additional axioms are used, and (7) none of the special
cases listed below apply.  If not all of these are the case I may still
accept the proof on a case-by-case basis.

There are several theorems that purposely do not have shortest proofs:

The proof of id1 , ax9a , ax15 , snex , sbth , ordon , ltso and several
other theorems (in particular ones avoiding ax-reg and ax-ac ) could be
made shorter but are longer to illustrate specific points or to avoid
specific axioms.

The following proofs should not be MINIMIZE_WITH'ed in the Proof
Assistant, since they are for illustrative purposes or they involve areas
I want to rework in the future.

   " id1 " using " a2i "
   " id1 " using " id "
   " con3th " using " con3 "
   " meredith " through " ax3 " using anything
   " ax9a " using " ax-9 "
   " ax15 " using " ax-15 "
   " ddelimf2 " using " ddelimf "
   " nnm0r " or anything else now using " om0 ", using " om0x "
   " omex " using " inf3 "
   " ltso " using " ltsor "
   " pjpj " using " pjpj0 "
   " pjoml " using " omls "
   " pjococ " using " omlsi "
   " pjococ " using " ococ "
   " pjpjtht " using " pjtht "
   " pjpjth " using " pjth "

Also, in set theory don't use a8b , eqt2b , a13b , a14b (use set theory
versions cleq1 , cleq2 , eleq1 , eleq2 instead).
Use om0 instead of om0x .
Don't use eirr if efrirr , ordeirr , or oneirr can be used (to avoid the
Axiom of Regularity).

$)

