$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The Division algorithm for polynomials
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c quot $.

  $( Extend class notation to include the quotient of a polynomial division. $)
  cquot $a class quot $.

  ${
    $d f g q r $.
    $( Define the quotient function on polynomials.  This is the ` q ` of the
       expression ` f = g x. q + r ` in the division algorithm. $)
    df-quot $a |- quot = ( f e. ( Poly ` CC ) ,
      g e. ( ( Poly ` CC ) \ { ( CC X. { 0 } ) } ) |->
      ( iota_ q e. ( Poly ` CC ) [ ( f oF - ( g oF x. q ) ) / r ]
        ( r = ( CC X. { 0 } ) \/ ( deg ` r ) < ( deg ` g ) ) ) ) $.
  $}

  ${
    $d f g q F $.  $d f g q G $.  $d f g r R $.
    quotval.1 $e |- R = ( F oF - ( G oF x. q ) ) $.
    $( Value of the quotient function. $)
    quotval $p |- ( ( F e. ( Poly ` S ) /\ G e. ( Poly ` T ) /\
      G =/= ( CC X. { 0 } ) ) -> ( F quot G ) = ( iota_ q e. ( Poly ` CC )
      ( R = ( CC X. { 0 } ) \/ ( deg ` R ) < ( deg ` G ) ) ) ) $=
      ( vf vg vr cply cfv wcel co wceq cdgr clt wbr wo cv cc0 csn cxp wne cquot
      cc crio plyssc sseli wa cdif eldifsn cmul cof cmin wb oveq1 oveq12 sylan2
      wsbc syl6eqr dfsbcq syl cvv ovex eqeltri eqeq1 fveq2 breq1d orbi12d sbcie
      simpr fveq2d breq2d orbi2d syl5bb bitrd riotabidv df-quot riotaex ovmpt2a
      sylan2br 3impb syl3an2 syl3an1 ) DBKLZMDUFKLZMZECKLZMZEUFUAUBUCZUDZDEUENA
      WKOZAPLZEPLZQRZSZFWGUGZOZWFWGDBUHUIWJWHEWGMZWLWSWIWGECUHUIWHWTWLWSWTWLUJW
      HEWGWKUBUKZMWSEWGWKULHIDEWGXAJTZWKOZXBPLZITZPLZQRZSZJHTZXEFTZUMUNZNZUOUNZ
      NZUTZFWGUGWRUEXIDOZXEEOZUJZXOWQFWGXRXOXHJAUTZWQXRXNAOXOXSUPXRXNDEXJXKNZXM
      NZAXQXPXLXTOXNYAOXEEXJXKUQXIDXLXTXMURUSGVAXHJXNAVBVCXSWMWNXFQRZSZXRWQXHYC
      JAAYAVDGDXTXMVEVFXBAOZXCWMXGYBXBAWKVGYDXDWNXFQXBAPVHVIVJVKXRYBWPWMXRXFWOW
      NQXRXEEPXPXQVLVMVNVOVPVQVRHIJFVSWQFWGVTWAWBWCWDWE $.
      $( [23-Jul-2014] $)
  $}

  $(
  @{
    plydivalg.1 @e |- ( ( ph /\ ( x e. S /\ y e. S ) ) -> ( x + y ) e. S ) @.
    plydivalg.2 @e |- ( ( ph /\ ( x e. S /\ y e. S ) ) -> ( x x. y ) e. S ) @.
    plydivalg.3 @e |- ( ( ph /\ ( x e. S /\ x =/= 0 ) ) -> ( 1 / x ) e. S ) @.
    plydivalg.4 @e |- ( ph /\ -u 1 e. S ) @.
    plydivalg.5 @e |- ( ph -> F e. ( Poly ` S ) ) @.
    plydivalg.6 @e |- ( ph -> G e. ( Poly ` S ) ) @.
    plydivalg.7 @e |- ( ph -> G =/= ( CC X. { 0 } ) ) @.
    @{
      plydivalg.8 @e |- R = ( F oF - ( G oF x. q ) ) @.
      @( The division algorithm on polynomials over a subfield ` S ` of the
        complex numbers.  If ` F ` and ` G =/= 0 ` are polynomials over ` S ` ,
       then there is a unique quotient polynomial ` q ` such that the remainder
         ` F - G x. q ` is either zero or has degree less than ` G ` . @)
      plydivalg @p |- ( ph -> E! q e. ( Poly ` S )
        ( R = ( CC X. { 0 } ) \/ ( deg ` R ) < ( deg ` G ) ) ) @=
        ? @.
    @}

    @{
      quotlem.8 @e |- R = ( F oF - ( G oF x. ( F quot G ) ) ) @.
      @( Lemma for properties of the polynomial quotient function. @)
      quotlem @p |- ( ph -> ( ( F quot G ) e. ( Poly ` S ) /\
        ( R = ( CC X. { 0 } ) \/ ( deg ` R ) < ( deg ` G ) ) ) ) @=
        ? @.
    @}

    @( The quotient of two polynomials in a field ` S ` is also in the field.
       @)
    quotcl @p |- ( ph -> ( F quot G ) e. ( Poly ` S ) ) @=
      ? @.
  @}

  @{
    @( Value of the quotient function. @)
    quotcl2 @p |- ( ( F e. ( Poly ` S ) /\ G e. ( Poly ` T ) /\
      G =/= ( CC X. { 0 } ) ) -> ( F quot G ) e. ( Poly ` CC ) ) @=
      ? @.

    quotdgr.1 @e |- R = ( F oF - ( G oF x. ( F quot G ) ) ) @.
    @( Remainder property of the quotient function. @)
    quotdgr @p |- ( ( F e. ( Poly ` S ) /\ G e. ( Poly ` T ) /\
      G =/= ( CC X. { 0 } ) ) ->
      ( R = ( CC X. { 0 } ) \/ ( deg ` R ) < ( deg ` G ) ) ) @=
      ? @.
  @}

  @{
    plyrem.1 @e |- G = ( x e. CC |-> ( x - A ) ) @.
    @( Closure of a linear factor. @)
    plyremlem1 @p |- ( A e. CC ->
      ( G e. ( Poly ` CC ) /\ ( deg ` G ) = 1 ) ) @=
      ? @.

    plyrem.2 @e |- R = ( F oF - ( G oF x. ( F quot G ) ) ) @.
    @( The polynomial remainder theorem, or little B&eacute;zout's theorem (by
       contrast to the regular B&eacute;zout's theorem ~ bezout ).  If a
       polynomial ` F ` is divided by the linear factor ` x - A ` , the
       remainder is equal to ` F ( A ) ` , the evaluation of the polynomial at
       ` A ` (interpreted as a constant polynomial). @)
    plyrem @p |- ( ( F e. ( Poly ` S ) /\ A e. CC ) ->
                   R = ( CC X. { ( F ` A ) } ) ) @=
      ? @.
  @}

  @{
    facth.1 @e |- G = ( x e. CC |-> ( x - A ) ) @.
    @( The factor theorem. If a polynomial ` F ` has a root at ` A ` , then
       ` G = x - A ` is a factor of ` F ` (and the other factor is ` F quot G `
       ). @)
    facth @p |- ( ( F e. ( Poly ` S ) /\ A e. CC /\ ( F ` A ) = 0 ) ->
                   F = ( G oF x. ( F quot G ) ) ) @=
      ? @.
  @}

  @{
    fta1.1 @e |- R = ( `' F " { 0 } ) @.
    @( The easy direction of the Fundamental Theorem of Algebra:  A nonzero
       polynomial has at most ` deg ( F ) ` roots. @)
    fta1 @p |- ( ( F e. ( Poly ` S ) /\ F =/= ( CC X. { 0 } ) ) ->
                 ( R e. Fin /\ ( # ` R ) <_ ( deg ` F ) ) ) @=
      ? @.
  @}

  @{
    quotcan.1 @e |- H = ( F oF x. G ) @.
    @( Exact division with a multiple. @)
    quotcan @p |- ( ( F e. ( Poly ` S ) /\ G e. ( Poly ` T ) /\
      G =/= ( CC X. { 0 } ) ) -> ( H quot G ) = F ) @=
      ? @.

    plydiv.2 @e |- A = ( CC \ ( `' G " { 0 } ) ) @.
    @( Given two polynomials that are known to be multiples of each other, one
       cannot just divide one by the other as functions to recover the
       quotient, because it would leave holes at each zero of the denominator
       function.  However, a more analytic solution to this algebraic problem
       is to extend the function by continuity over the singularities; here
       we show that this does indeed recover the divisor function.  (If they
       are not properly divisible, the result will have poles instead of
       removable singularities and the continuity extension will fail.)  See
       ~ df-zeta for a more general application of this technique. @)
    plydiv @p |- ( ( F e. ( Poly ` S ) /\ G e. ( Poly ` T ) /\
      G =/= ( CC X. { 0 } ) ) -> F =
        ( iota_ f e. ( CC -cn-> CC ) ( f |` A ) = ( ( H oF / G ) |` A ) ) ) @=
      ? @.
  @}
  $)

