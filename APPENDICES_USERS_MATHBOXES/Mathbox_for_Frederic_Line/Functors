$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Functors
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  $( The class of all functors. $)
  $c Func $.

  $( The class of all isomorphisms. $)
  $c Isofunc $.

  $( Extend class notation with the class of all functors. $)
  cfunc $a class Func $.

  $( Extend class notation with the class of all isomorphisms. $)
  cifunc $a class Isofunc $.


  ${
    $d t u v f o p m n $.
    $( Function returning all the functors from a category ` t ` to a category
       ` u ` .  Intuitively a functor associates any morphism of ` t ` to a
       morphism of ` u ` , any object of ` t ` to an object of ` u ` , and
       respects the identity, the composition, the domain and the codomain.
       Here to capture the idea that a functor associates any object of ` t `
       to an object of ` u ` we write it associates any identity of ` t ` to an
       identity of ` u ` which simplifies the definition. $)
    df-func $a |- Func = { <. <. t , u >. , v >. |
      ( ( t e. Cat /\ u e. Cat ) /\
      v = { f | ( f : dom ( dom_ ` t ) --> dom ( dom_ ` u ) /\
      ( A. o e. dom ( id_ ` t )
      E. p e. dom ( id_ ` u ) ( f ` ( ( id_ ` t ) ` o ) ) =
           ( ( id_ ` u ) ` p ) /\
      ( A. m e. dom ( dom_ ` t )
        ( f ` ( ( id_ ` t ) ` ( ( dom_ ` t ) ` m ) ) ) =
           ( ( id_ ` u ) ` ( ( dom_ ` u ) ` ( f ` m ) ) ) /\
       A. m e. dom ( dom_ ` t )
        ( f ` ( ( id_ ` t ) ` ( ( cod_ ` t ) ` m ) ) ) =
           ( ( id_ ` u ) ` ( ( cod_ ` u ) ` ( f ` m ) ) ) ) /\
       A. m e. dom ( dom_ ` t ) A. n e. dom ( dom_ ` t )
        ( ( ( cod_ ` t ) ` n ) = ( ( dom_ ` t ) ` m ) ->
          ( f ` ( m ( o_ ` t ) n ) ) =
           ( ( f ` m ) ( o_ ` u ) ( f ` n ) ) ) ) ) } ) } $.
  $}

  ${
    $d C1 u v $.  $d C2 u v $.  $d D1 u v $.  $d D2 u v $.  $d I1 u v $.
    $d I2 u v $.  $d M1 f m t u v $.  $d M1 x $.  $d M2 f u v $.  $d M2 x $.
    $d O1 o u v $.  $d O2 p u v $.  $d Ro1 u v $.  $d Ro2 u v $.
    $d T f m n o p t u v $.  $d U f m n o p t u v $.
    isfuna.1 $e |- O1 = dom ( id_ ` T ) $.
    isfuna.2 $e |- M1 = dom ( dom_ ` T ) $.
    isfuna.3 $e |- D1 = ( dom_ ` T ) $.
    isfuna.4 $e |- C1 = ( cod_ ` T ) $.
    isfuna.5 $e |- I1 = ( id_ ` T ) $.
    isfuna.6 $e |- Ro1 = ( o_ ` T ) $.
    isfuna.7 $e |- O2 = dom ( id_ ` U ) $.
    isfuna.8 $e |- M2 = dom ( dom_ ` U ) $.
    isfuna.9 $e |- D2 = ( dom_ ` U ) $.
    isfuna.10 $e |- C2 = ( cod_ ` U ) $.
    isfuna.11 $e |- I2 = ( id_ ` U ) $.
    isfuna.12 $e |- Ro2 = ( o_ ` U ) $.
    $( The class of functors between the categories ` T ` and ` U ` .
       (Contributed by FL, 10-Feb-2008.) $)
    isfuna $p |- ( ( T e. Cat /\ U e. Cat ) -> ( Func ` <. T , U >. ) =
      { f | ( f : M1 --> M2 /\
       ( A. o e. O1 E. p e. O2 ( f ` ( I1 ` o ) ) = ( I2 ` p ) /\
        ( A. m e. M1 ( f ` ( I1 ` ( D1 ` m ) ) ) =
            ( I2 ` ( D2 ` ( f ` m ) ) ) /\
          A. m e. M1 ( f ` ( I1 ` ( C1 ` m ) ) ) =
            ( I2 ` ( C2 ` ( f ` m ) ) ) ) /\
          A. m e. M1 A. n e. M1 ( ( C1 ` n ) = ( D1 ` m ) ->
            ( f ` ( m Ro1 n ) ) = ( ( f ` m ) Ro2 ( f ` n ) ) ) ) ) } ) $=
      ( vx vt vu vv ccat wcel cv wf cfv wceq wrex wral wa co wi w3a cab cvv cop
      cfunc cmap wb cdom_ cdm fvex dmex eqeltri pm3.2i a1i elmapg anbi1d abbidv
      syl crab df-rab mapvalg ancoms mapex rabexg syl5eqelr eqeltrrd df-ov cid_
      eqeltrd ccod_ co_ fveq2 dmeqd syl6eqr feq2d fveq1d fveq2d rexbidv fveq12d
      eqeq1d raleqbidv anbi12d eqeq12d oveqd imbi12d 3anbi123d eqcomd rexeqbidv
      feq3 3eqtrd eleq2d bicomd ralbidv2 eleq2i df-func ov2g syl5eqr mpd3an3 )
      AUPUQZBUPUQZIKCURZUSZFURZLUTZYGUTZGURZPUTZVAZGJVBZFHVCZDURZMUTZLUTZYGUTZY
      QYGUTZQUTZPUTZVAZDIVCZYQNUTZLUTZYGUTZUUARUTZPUTZVAZDIVCZVDZEURZNUTZYRVAZY
      QUUNOVEZYGUTZUUAUUNYGUTZSVEZVAZVFZEIVCZDIVCZVGZVDZCVHZVIUQZABVJVKUTZUVGVA
      YEYFVDZYGKIVLVEZUQZUVEVDZCVHZUVGVIUVJUVMUVFCUVJUVLYHUVEUVJKVIUQZIVIUQZVDZ
      UVLYHVMUVQUVJUVOUVPKBVNUTZVOZVIUGUVRBVNVPVQVRZIAVNUTZVOZVIUAUWAAVNVPVQVRZ
      VSZVTKIYGVIVIWAWDWBWCUVJUVNUVECUVKWEZVIUVECUVKWFUVJUVKVIUQUWEVIUQUVJUVKIK
      ULURUSULVHZVIYFYEUVKUWFVAZYFYEVDZUVQUWGUVQUWHUWDVTKIVIVIULWGWDWHUVJUVPUVO
      VDZUWFVIUQUWIUVJUVPUVOUWCUVTVSVTIKVIVIULWIWDWOUVECUVKVIWJWDWKWLYEYFUVHVGU
      VIABVKVEUVGABVKWMUMUNUOABUPUPUMURZVNUTZVOZUNURZVNUTZVOZYGUSZYIUWJWNUTZUTZ
      YGUTZYLUWMWNUTZUTZVAZGUWTVOZVBZFUWQVOZVCZYQUWKUTZUWQUTZYGUTZUUAUWNUTZUWTU
      TZVAZDUWLVCZYQUWJWPUTZUTZUWQUTZYGUTZUUAUWMWPUTZUTZUWTUTZVAZDUWLVCZVDZUUNU
      XNUTZUXGVAZYQUUNUWJWQUTZVEZYGUTZUUAUUSUWMWQUTZVEZVAZVFZEUWLVCZDUWLVCZVGZV
      DZCVHUVGVKIUWOYGUSZYIAWNUTZUTZYGUTZUXAVAZGUXCVBZFUYRVOZVCZYQUWAUTZUYRUTZY
      GUTZUXKVAZDUWBVCZYQAWPUTZUTZUYRUTZYGUTZUXTVAZDUWBVCZVDZUUNVUJUTZVUEVAZYQU
      UNAWQUTZVEZYGUTZUYJVAZVFZEUWBVCZDUWBVCZVGZVDZCVHVIUWJAVAZUYPVVGCVVHUWPUYQ
      UYOVVFVVHUWLIUWOYGVVHUWLUWBIVVHUWKUWAUWJAVNWRZWSZUAWTXAVVHUXFVUDUYCVUPUYN
      VVEVVHUXDVUBFUXEVUCVVHUWQUYRUWJAWNWRZWSVVHUXBVUAGUXCVVHUWSUYTUXAVVHUWRUYS
      YGVVHYIUWQUYRVVKXBXCXFXDXGVVHUXMVUIUYBVUOVVHUXLVUHDUWLUWBVVJVVHUXIVUGUXKV
      VHUXHVUFYGVVHUXGVUEUWQUYRVVKVVHYQUWKUWAVVIXBZXEXCXFXGVVHUYAVUNDUWLUWBVVJV
      VHUXQVUMUXTVVHUXPVULYGVVHUXOVUKUWQUYRVVKVVHYQUXNVUJUWJAWPWRZXBXEXCXFXGXHV
      VHUYMVVDDUWLUWBVVJVVHUYLVVCEUWLUWBVVJVVHUYEVURUYKVVBVVHUYDVUQUXGVUEVVHUUN
      UXNVUJVVMXBVVLXIVVHUYHVVAUYJVVHUYGVUTYGVVHUYFVUSYQUUNUWJAWQWRXJXCXFXKXGXG
      XLXHWCUWMBVAZVVGUVFCVVNUYQYHVVFUVEVVNUWOKVAUYQYHVMVVNUWOUVSKVVNUWNUVRUWMB
      VNWRZWSUGWTUWOKIYGXOWDVVNVUDYPVUPUUMVVEUVDVVNVUBYOFVUCHVVNHVUCHVUCVAVVNTV
      TXMVVNVUAYNGUXCJVVNUXCBWNUTZVOJVVNUWTVVPUWMBWNWRZWSUFWTVVNUYTYKUXAYMVVNUY
      SYJYGVVNYIUYRLVVNLUYRLUYRVAVVNUDVTXMZXBXCVVNYLUWTPVVNUWTVVPPVVQUJWTZXBXIX
      NXGVVNVUIUUEVUOUULVVNVUHUUDDUWBIVVNIUWBIUWBVAVVNUAVTZXMVVNVUGYTUXKUUCVVNV
      UFYSYGVVNVUEYRUYRLVVRVVNYRVUEVVNYQMUWAMUWAVAVVNUBVTXBXMZXEXCVVNUXKUXJVVPU
      TUUAUVRUTZVVPUTUUCVVNUXJUWTVVPVVQXBVVNUXJVWBVVPVVNUUAUWNUVRVVOXBXCVVNVWBU
      UBVVPPVVNPVVPPVVPVAVVNUJVTXMVVNUUAUVRQVVNQUVRQUVRVAVVNUHVTXMXBXEXPXIXGVVN
      VUNUUKDUWBIVVNYQUWBUQZYQIUQZVUNUUKVVNVWDVWCVVNIUWBYQVVTXQXRVVNVUMUUHUXTUU
      JVVNVULUUGYGVVNVUKUUFUYRLVVRVVNYQVUJNVVNNVUJNVUJVAVVNUCVTZXMXBXEXCVVNUXSU
      UIUWTPVVSVVNUUAUXRRVVNUXRBWPUTRUWMBWPWRUIWTXBXEXIXKXSXHVVNVVDUVCDUWBIVVNV
      WCVWDVVDUVCVVNVWDVWCVWDVWCVMVVNIUWBYQUAXTVTXRVVNVVCUVBEUWBIVVNUUNUWBUQZUU
      NIUQZVVCUVBVVNVWGVWFVVNIUWBUUNVVTXQXRVVNVURUUPVVBUVAVVNVUQUUOVUEYRVVNUUOV
      UQVVNUUNNVUJVWEXBXMVWAXIVVNVVAUURUYJUUTVVNVUTUUQYGVVNVUSOYQUUNVVNOVUSOVUS
      VAVVNUEVTXMXJXCVVNUYISUUAUUSVVNUYIBWQUTSUWMBWQWRUKWTXJXIXKXKXSXKXSXLXHWCU
      OUNUMCDEFGYAYBYCYD $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}


  ${
    $d C1 f $.  $d C2 f $.  $d D1 f $.  $d D2 f $.  $d F f m n o p $.
    $d I1 f $.  $d I2 f $.  $d M1 f m $.  $d M2 f $.  $d O1 f o $.
    $d O2 f p $.  $d Ro1 f $.  $d Ro2 f $.  $d T f m n o p $.
    $d U f m n o p $.
    isfunb.1 $e |- O1 = dom ( id_ ` T ) $.
    isfunb.2 $e |- M1 = dom ( dom_ ` T ) $.
    isfunb.3 $e |- D1 = ( dom_ ` T ) $.
    isfunb.4 $e |- C1 = ( cod_ ` T ) $.
    isfunb.5 $e |- I1 = ( id_ ` T ) $.
    isfunb.6 $e |- Ro1 = ( o_ ` T ) $.
    isfunb.7 $e |- O2 = dom ( id_ ` U ) $.
    isfunb.8 $e |- M2 = dom ( dom_ ` U ) $.
    isfunb.9 $e |- D2 = ( dom_ ` U ) $.
    isfunb.10 $e |- C2 = ( cod_ ` U ) $.
    isfunb.11 $e |- I2 = ( id_ ` U ) $.
    isfunb.12 $e |- Ro2 = ( o_ ` U ) $.
    $( The predicate "is a functor" .  (Contributed by FL, 10-Feb-2008.) $)
    isfunb $p |- ( ( T e. Cat /\ U e. Cat /\ F e. A ) ->
       ( F e. ( Func ` <. T , U >. ) <->
       ( F : M1 --> M2 /\ ( A. o e. O1
        E. p e. O2 ( F ` ( I1 ` o ) ) = ( I2 ` p ) /\
      ( A. m e. M1
       ( F ` ( I1 ` ( D1 ` m ) ) ) =
          ( I2 ` ( D2 ` ( F ` m ) ) ) /\
      A. m e. M1
       ( F ` ( I1 ` ( C1 ` m ) ) ) =
          ( I2 ` ( C2 ` ( F ` m ) ) ) ) /\
      A. m e. M1 A. n e. M1
       ( ( C1 ` n ) = ( D1 ` m ) ->
         ( F ` ( m Ro1 n ) ) =
          ( ( F ` m ) Ro2 ( F ` n ) ) ) ) ) ) ) $=
      ( vf ccat wcel w3a cop cfunc cfv cv wf wceq wrex wral wa co wi cab isfuna
      3adant3 eleq2d feq1 eqeq1d rexbidv ralbidv fveq2d eqeq12d anbi12d oveq12d
      wb fveq1 imbi2d 2ralbidv 3anbi123d elabg 3ad2ant3 bitrd ) BUNUOZCUNUOZGAU
      OZUPZGBCUQURUSZUOGJLUMUTZVAZFUTMUSZWMUSZHUTQUSZVBZHKVCZFIVDZDUTZNUSZMUSZW
      MUSZXAWMUSZRUSZQUSZVBZDJVDZXAOUSMUSZWMUSZXESUSZQUSZVBZDJVDZVEZEUTZOUSXBVB
      ZXAXQPVFZWMUSZXEXQWMUSZTVFZVBZVGZEJVDDJVDZUPZVEZUMVHZUOZJLGVAZWOGUSZWQVBZ
      HKVCZFIVDZXCGUSZXAGUSZRUSZQUSZVBZDJVDZXJGUSZYPSUSZQUSZVBZDJVDZVEZXRXSGUSZ
      YPXQGUSZTVFZVBZVGZEJVDDJVDZUPZVEZWKWLYHGWHWIWLYHVBWJBCUMDEFHIJKLMNOPQRSTU
      AUBUCUDUEUFUGUHUIUJUKULVIVJVKWJWHYIUUNVTWIYGUUNUMGAWMGVBZWNYJYFUUMJLWMGVL
      UUOWTYNXPUUFYEUULUUOWSYMFIUUOWRYLHKUUOWPYKWQWOWMGWAVMVNVOUUOXIYTXOUUEUUOX
      HYSDJUUOXDYOXGYRXCWMGWAUUOXFYQQUUOXEYPRXAWMGWAZVPVPVQVOUUOXNUUDDJUUOXKUUA
      XMUUCXJWMGWAUUOXLUUBQUUOXEYPSUUPVPVPVQVOVRUUOYDUUKDEJJUUOYCUUJXRUUOXTUUGY
      BUUIXSWMGWAUUOXEYPYAUUHTUUPXQWMGWAVSVQWBWCWDVRWEWFWG $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}

  ${
    $d F w x y z $.  $d M1 x $.  $d T w x y z $.  $d U w x y z $.
    fmamo.1 $e |- M1 = dom ( dom_ ` T ) $.
    fmamo.2 $e |- M2 = dom ( dom_ ` U ) $.
    $( A functor is a mapping between morphisms.  (Contributed by FL,
       10-Feb-2008.) $)
    fmamo $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) -> F : M1 --> M2 ) ) $=
      ( vz vw vx vy ccat wcel wa cfv wi cv wceq wral eqid cop cfunc wf w3a cid_
      cdm wrex cdom_ ccod_ co_ co isfunb simprbda ex 3expia pm2.43d ) ALMZBLMZN
      CABUAUBOZMZDECUCZUQURUTUTVAPUQURUTUDZUTVAVBUTVAHQAUEOZOCOIQBUEOZORIVDUFZU
      GHVCUFZSJQZAUHOZOZVCOCOVGCOZBUHOZOVDORJDSVGAUIOZOVCOCOVJBUIOZOVDORJDSNKQZ
      VLOVIRVGVNAUJOZUKCOVJVNCOBUJOZUKRPKDSJDSUDUSABJKHCIVFDVEEVCVHVLVOVDVKVMVP
      VFTFVHTVLTVCTVOTVETGVKTVMTVDTVPTULUMUNUOUP $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}

  ${
    $d F m n o p $.  $d O1 o $.  $d O2 p $.  $d T m n o p $.  $d U m n o p $.
    vidfunid.1 $e |- O1 = dom ( id_ ` T ) $.
    vidfunid.2 $e |- I1 = ( id_ ` T ) $.
    vidfunid.3 $e |- O2 = dom ( id_ ` U ) $.
    vidfunid.4 $e |- I2 = ( id_ ` U ) $.
    $( The functor ` F ` associates every object of ` T ` to an object in
       ` U ` .  For the identification of objects with the identities see
       ~ df-func .  JFM CAT_1 th. 97.  (Contributed by FL, 10-Feb-2008.) $)
    vidfunid $p |- ( ( T e. Cat /\ U e. Cat ) ->
       ( F e. ( Func ` <. T , U >. ) ->
         A. o e. O1
        E. p e. O2 ( F ` ( I1 ` o ) ) = ( I2 ` p ) ) ) $=
      ( vm vn cfv cv wceq wral eqid ccat wcel wa cop cfunc wrex w3a cdom_ ccod_
      wi cdm co_ co wf isfunb simplbda simp1d ex 3expia pm2.43d ) AUAUBZBUAUBZU
      CDABUDUEPZUBZCQHPDPEQIPREGUFCFSZVAVBVDVDVEUJVAVBVDUGZVDVEVFVDUCVENQZAUHPZ
      PZHPDPVGDPZBUHPZPIPRNVHUKZSVGAUIPZPHPDPVJBUIPZPIPRNVLSUCZOQZVMPVIRVGVPAUL
      PZUMDPVJVPDPBULPZUMRUJOVLSNVLSZVFVDVLVKUKZDUNVEVOVSUGVCABNOCDEFVLGVTHVHVM
      VQIVKVNVRJVLTVHTVMTKVQTLVTTVKTVNTMVRTUOUPUQURUSUT $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}

  ${
    $d F a b m n $.  $d M1 m $.  $d T a b m n $.  $d U a b m n $.
    iddvvidd.1 $e |- M1 = dom ( dom_ ` T ) $.
    iddvvidd.2 $e |- D1 = ( dom_ ` T ) $.
    iddvvidd.3 $e |- I1 = ( id_ ` T ) $.
    iddvvidd.4 $e |- I2 = ( id_ ` U ) $.
    iddvvidd.5 $e |- D2 = ( dom_ ` U ) $.
    $( Functors preserve domains.  JFM CAT_1 th. 98.  (Contributed by FL,
       5-May-2008.) $)
    iddvvidd $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) ->
         A. m e. M1 ( F ` ( I1 ` ( D1 ` m ) ) ) =
           ( I2 ` ( D2 ` ( F ` m ) ) ) ) ) $=
      ( va cfv cv wceq wral eqid vb vn ccat wcel wa cop cfunc wi w3a ccod_ cid_
      cdm wrex co_ co cdom_ wf isfunb simplbda simp2d simpld ex 3expia pm2.43d
      ) AUCUDZBUCUDZUEDABUFUGPZUDZCQZGPZFPDPVIDPZIPHPRCESZVEVFVHVHVLUHVEVFVHUIZ
      VHVLVMVHUEZVLVIAUJPZPFPDPVKBUJPZPHPRCESZVNOQFPDPUAQHPRUABUKPULZUMOAUKPULZ
      SZVLVQUEZUBQZVOPVJRVIWBAUNPZUODPVKWBDPBUNPZUORUHUBESCESZVMVHEBUPPULZDUQVT
      WAWEUIVGABCUBODUAVSEVRWFFGVOWCHIVPWDVSTJKVOTLWCTVRTWFTNVPTMWDTURUSUTVAVBV
      CVD $.
      $( [1-Jun-2008] $) $( [5-May-2008] $)
  $}

  ${
    $d F a b m n $.  $d M1 m $.  $d T a b m n $.  $d U a b m n $.
    idcvvidc.1 $e |- M1 = dom ( dom_ ` T ) $.
    idcvvidc.2 $e |- C1 = ( cod_ ` T ) $.
    idcvvidc.3 $e |- I1 = ( id_ ` T ) $.
    idcvvidc.4 $e |- I2 = ( id_ ` U ) $.
    idcvvidc.5 $e |- C2 = ( cod_ ` U ) $.
    $( Functors preserve codomains.  JFM CAT_1 th. 98.  (Contributed by FL,
       5-May-2008.) $)
    idcvvidc $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) ->
         A. m e. M1 ( F ` ( I1 ` ( C1 ` m ) ) ) =
           ( I2 ` ( C2 ` ( F ` m ) ) ) ) ) $=
      ( va cfv cv wceq wral eqid vb vn ccat wcel wa cop cfunc wi w3a cdom_ cid_
      cdm wrex co_ co wf isfunb simplbda simp2d simprd ex 3expia pm2.43d ) AUCU
      DZBUCUDZUEDABUFUGPZUDZCQZGPFPDPVHDPZIPHPRCESZVDVEVGVGVJUHVDVEVGUIZVGVJVKV
      GUEZVHAUJPZPZFPDPVIBUJPZPHPRCESZVJVLOQFPDPUAQHPRUABUKPULZUMOAUKPULZSZVPVJ
      UEZUBQZGPVNRVHWAAUNPZUODPVIWADPBUNPZUORUHUBESCESZVKVGEVOULZDUPVSVTWDUIVFA
      BCUBODUAVREVQWEFVMGWBHVOIWCVRTJVMTKLWBTVQTWETVOTNMWCTUQURUSUTVAVBVC $.
      $( [1-Jun-2008] $) $( [5-May-2008] $)
  $}

  ${
    $d F m n x y $.  $d M1 m $.  $d T m n x y $.  $d U m n x y $.
    fmp.1 $e |- M1 = dom ( dom_ ` T ) $.
    fmp.2 $e |- C1 = ( cod_ ` T ) $.
    fmp.3 $e |- D1 = ( dom_ ` T ) $.
    fmp.6 $e |- Ro1 = ( o_ ` T ) $.
    fmp.7 $e |- Ro2 = ( o_ ` U ) $.
    $( Functors preserve morphisms composition.  JFM CAT_1 th. 99.
       (Contributed by FL, 2-Aug-2009.) $)
    fmp $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) ->
         A. m e. M1 A. n e. M1 ( ( C1 ` n ) = ( D1 ` m )
            -> ( F ` ( m Ro1 n ) ) = ( ( F ` m ) Ro2 ( F ` n ) ) ) ) ) $=
      ( wa cfv wceq wral eqid vx vy ccat wcel cop cfunc cv co wi cid_ cdm cdom_
      wrex ccod_ wf w3a isfunb biimpd 3expia pm2.43d imp simprd simp3d ex ) AUC
      UDZBUCUDZPZEABUEUFQZUDZDUGZHQCUGZGQZRVKVJIUHEQVKEQZVJEQJUHRUIDFSCFSZVGVIP
      ZUAUGAUJQZQEQUBUGBUJQZQRUBVQUKZUMUAVPUKZSZVLVPQEQVMBULQZQVQQRCFSVKHQVPQEQ
      VMBUNQZQVQQRCFSPZVNVOFWAUKZEUOZVTWCVNUPZVGVIWEWFPZVGVIWGVEVFVIVIWGUIVEVFV
      IUPVIWGVHABCDUAEUBVSFVRWDVPGHIVQWAWBJVSTKMLVPTNVRTWDTWATWBTVQTOUQURUSUTVA
      VBVCVD $.
      $( [2-Aug-2009] $)
  $}

  ${
    $d T a b m n $.
    $( The identity functor is a functor.  (Contributed by FL, 15-Jul-2008.) $)
    idfisf $p |- ( T e. Cat ->
      ( _I |` dom ( dom_ ` T ) ) e. ( Func ` <. T , T >. ) ) $=
      ( va vb vm vn wcel cfv cvv w3a cv wceq wral wa wi eqid jdmo fvresi adantl
      ex fveq2d ccat cid cdom_ cdm cres cfunc fvex dmex resiexg ax-mp cid_ wrex
      cop wf ccod_ co_ syl fveq2 eqeq2d rcla4ev mpd ralrimiv simpl dmo jca 3syl
      eqcomd eqtrd cdmo cmpmorp eqcoms oveqan12rd sylan9eqr 3adant1 syld 3com23
      co com12 3expib ralrimivv 3jca wf1o f1oi f1of 3ad2ant1 isfunb mpbird 3exp
      jctil mpii pm2.43i ) AUAFZUBAUCGZUDZUEZAAUMUFGFZWLWLWOHFZWPWNHFWQWMAUCUGU
      HWNHUIUJWLWLWQWPWLWLWQIWPWNWNWOUNZBJZAUKGZGZWOGZCJZWTGZKZCWTUDZULZBXFLZDJ
      ZWMGZWTGZWOGZXIWOGZWMGZWTGZKZDWNLZXIAUOGZGZWTGZWOGZXMXRGZWTGZKZDWNLZMZEJZ
      XRGZXJKZXIYGAUPGZVQZWOGZXMYGWOGZYJVQZKZNZEWNLDWNLZIZMZWLWLYSWQWLYRWRWLXHY
      FYQWLXGBXFWLWSXFFZXGWLYTMZXBXAKZXGUUAXAWNFUUBWSAWTWNXFWNOZXFOZWTOZPWNXAQU
      QYTUUBXGNWLYTUUBXGXEUUBCWSXFXCWSKXDXAXBXCWSWTURUSUTSRVASVBWLXQYEWLXPDWNWL
      XIWNFZXPWLUUFMZXLXKXOUUGWLXJXFFZMXKWNFXLXKKUUGWLUUHWLUUFVCZWMAXIWNXFUUCUU
      DWMOZVDVEXJAWTWNXFUUCUUDUUEPWNXKQVFUUFXKXOKWLUUFXJXNWTUUFXIXMWMUUFXMXIWNX
      IQZVGZTTRVHSVBWLYDDWNWLUUFYDUUGYAXTYCUUGWLXSXFFZMXTWNFYAXTKUUGWLUUMUUIXRA
      XIWNXFUUCUUDXROZVIVEXSAWTWNXFUUCUUDUUEPWNXTQVFUUFXTYCKWLUUFXSYBWTUUFXIXMX
      RUULTTRVHSVBVEWLYPDEWNWNWLUUFYGWNFZYPWLUUOUUFYPWLUUOUUFIZYIYKWNFZYOYIUUPU
      UQUUPUUQNXJYHUUPXJYHKUUQXRWMYJAYGXIWNUUCUUJUUNYJOZVJVRVKVRUUOUUFUUQYONWLU
      UOUUFMZUUQYOUUQUUSYLYKYNWNYKQUUSYNYKUUFUUOXMXIYMYGYJUUKWNYGQVLVGVMSVNVOVP
      VSVTWAWNWNWOWBWRWNWCWNWNWOWDUJWIWEHAADEBWOCXFWNXFWNWTWMXRYJWTWMXRYJUUDUUC
      UUJUUNUUEUURUUDUUCUUJUUNUUEUURWFWGWHWJWK $.
      $( [22-Jul-2008] $) $( [15-Jul-2008] $)
  $}

  ${
    $d t u v f g $.
    $( Class of isomorphisms. $)
    df-isof $a |- Isofunc = { <. <. t , u >. , v >. |
      ( ( t e. Cat /\ u e. Cat ) /\
      v = { f e. ( Func ` <. u , v >. ) | E. g e. ( Func ` <. v , u >. )
      ( ( f o. g ) = ( _I |` dom ( dom_ ` v ) ) /\
        ( g o. f ) = ( _I |` dom ( dom_ ` u ) ) ) } ) } $.
  $}

