$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Star rings through Hilbert spaces using extensible structures
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( $c C_rng $. $)
  $( Extend class notation subring. $)
  $( csrng $a class C_rng $. $)

  ${
    $d r s x y $.
    $( Def. 8.5.8, p. 216. $)
    $( Define ` s ` is a subring of ` r ` . $)
    $(
    df-subring $a |- C_rng = { <. s , r >. | ( ( Base ` s ) C_ ( Base ` r )
        /\ A. x e. ( Base ` s ) A. y e. ( Base ` s ) ( ( x ( +g ` s ) y )
  = ( x ( +g ` r ) y ) /\ ( x ( .r ` s ) y ) = ( x ( .r ` r ) y ) ) ) } $.
    $)
  $}

  $c *r $.
  $c *Ring $.

  $( Extend class notation with involution. $)
  cstv $a class *r $.

  $( Extend class notation with class of all *-rings. $)
  csr $a class *Ring $.

  $( Def. 8.5.23, p. 225. $)
  $( Define the involution function of a *-ring. $)
  df-starv $a |- *r = ( v e. _V |-> ( v ` 4 ) ) $.

  $( Utility theorem: index-independent form of ~ df-starv . $)
  starvid $p |- *r = ( f e. _V |-> ( f ` ( *r ` ndx ) ) ) $=
    ( cstv c4 df-starv 4nn ndxid ) BCAADEF $.
    $( [6-Oct-2013] $)

  $( Utility lemma for constructing a star ring. $)
  srnglem $p |- -. ( *r ` ndx )
        e. { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) } $=
    ( vs cnx cstv cfv cbs cplusg cmulr ctp wcel wceq wne c4 ndxarg 4re neeqtrri
    c1 ltneii eqnetri c2 c3 w3o w3a df-starv 4nn 1re 1lt4 basendx 2lt4 df-plusg
    wn 2re 2nn 3re 3lt4 df-mulr 3nn 3pm3.2i ne3anior mpbi fvex eltp mtbir ) BCD
    ZBEDZBFDZBGDZHIVCVDJVCVEJVCVFJUAZVCVDKZVCVEKZVCVFKZUBVGUJVHVIVJVCLVDCLAAUCU
    DMZLPVDPLUENUFQUGORVCLVEVKLSVESLUKNUHQFSAAUIULMORVCLVFVKLTVFTLUMNUNQGTAAUOU
    PMORUQVCVDVCVEVCVFURUSVCVDVEVFBCUTVAVB $.
    $( [18-Nov-2013] $)

  ${
    srngfn.w $e |- W = ( { <. ( Base ` ndx ) , B >. , <. ( +g ` ndx ) , P >. ,
         <. ( .r ` ndx ) , T >. } u. { <. ( *r ` ndx ) , C >. } ) $.
    ${
      srngfn.d $e |- D = ( { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) }
                  u. { ( *r ` ndx ) } ) $.
      $( A constructed star ring is a function with domain ` D ` . $)
      srngfn $p |- W Fn D $=
        ( cnx cbs cfv cplusg cmulr ctp cop cstv fvex eqid rngfn srnglem fnunsn
        ) IJKZILKZIMKZNZCUBAOUCDOUDEONZFIPKBIPQAUEDUFEUFRUERSGHTUA $.
        $( [18-Nov-2013] $)
    $}

    $( The base set of a constructed left vector space. $)
    srngbase $p |- ( B e. X -> B = ( Base ` W ) ) $=
      ( vs cbs cnx cfv cop cplusg cmulr ctp cstv csn cun cvv tpex unex wfn wfun
      snexALT eqeltri eqid srngfn fnfun ax-mp baseid ssun1 opex sselii eleqtrri
      tpid1 strfv ) AEIFHEJIKZALZJMKZCLZJNKZDLZOZJPKZBLZQZRZSGVCVFURUTVBTVEUDUA
      UEEUQUSVAOVDQRZUBEUCABVHCDEGVHUFUGVHEUHUIHUJURVGEVCVGURVCVFUKURUTVBUQAULU
      OUMGUNUP $.
      $( [18-Nov-2013] $)
  $}

  ${
    $d f i k p q r t $.
    $( Def. 8.5.6 p. 216 $)
    $( Define class of all star rings.  A star ring is a ring with an
       involution (conjugation) function.  Involution (unlike say the ring
       zero) is not unique and therefore must be added as a new component to
       the ring.  For example, two possible involutions for complex numbers are
       the identity function and complex conjugation.  Definition of involution
       in [Holland95] p. 204. $)
    df-starrng $a |- *Ring = { f e. Ring |
       E. k E. p E. t E. i ( ( k = ( Base ` f ) /\ p = ( +g ` f ) )
          /\ ( t = ( .r ` f ) /\ i = ( *r ` f ) ) /\
         A. q e. k A. r e. k ( ( i ` q ) e. k
              /\ ( ( i ` ( q p r ) ) = ( ( i ` q ) p ( i ` r ) )
              /\ ( i ` ( q t r ) ) = ( ( i ` r ) t ( i ` q ) )
              /\ ( i ` ( i ` q ) ) = q ) ) ) } $.
  $}

  ${
    $d f i k p q r t I $.  $d f i k p q r t K $.  $d f i k p q r t P $.
    $d f i k p q r t R $.  $d f i k p q r t T $.
    issrng.k $e |- K = ( Base ` R ) $.
    issrng.p $e |- P = ( +g ` R ) $.
    issrng.t $e |- T = ( .r ` R ) $.
    issrng.i $e |- I = ( *r ` R ) $.
    $( The predicate "is a star ring." $)
    issrng $p |- ( R e. *Ring <-> ( R e. Ring
        /\ A. q e. K A. r e. K ( ( I ` q ) e. K
              /\ ( ( I ` ( q P r ) ) = ( ( I ` q ) P ( I ` r ) )
              /\ ( I ` ( q T r ) ) = ( ( I ` r ) T ( I ` q ) )
              /\ ( I ` ( I ` q ) ) = q ) ) ) ) $=
      ( vk vp cv wceq wa cfv co wral wex vt vi vf csr wcel crg w3a cplusg cmulr
      cstv fveq2 syl6eqr eqeq2d anbi12d 3anbi12d 4exbidv df-starrng elrab2 fvex
      cbs eqeltri anbi1d raleqbi1dv oveq fveq2d eqeq12d 3anbi1d anbi2d 2ralbidv
      cvv eleq2 3anbi2d fveq1 eleq1d oveq12d id fveq12d eqeq1d 3anbi123d anbi2i
      ceqsex4v bitri ) BUDUEBUFUEZLNZEOZMNZAOZPZUANZCOZUBNZDOZPZGNZWKQZWDUEZWNF
      NZWFRZWKQZWOWQWKQZWFRZOZWNWQWIRZWKQZWTWOWIRZOZWOWKQZWNOZUGZPZFWDSZGWDSZUG
      ZUBTUATMTLTZPWCWNDQZEUEZWNWQARZDQZXOWQDQZARZOZWNWQCRZDQZXSXOCRZOZXODQZWNO
      ZUGZPZFESGESZPWDUCNZUTQZOZWFYKUHQZOZPZWIYKUIQZOZWKYKUJQZOZPZXLUGZUBTUATMT
      LTXNUCBUFUDYKBOZUUBXMLMUAUBUUCYPWHUUAWMXLUUCYMWEYOWGUUCYLEWDUUCYLBUTQZEYK
      BUTUKHULUMUUCYNAWFUUCYNBUHQZAYKBUHUKIULUMUNUUCYRWJYTWLUUCYQCWIUUCYQBUIQZC
      YKBUIUKJULUMUUCYSDWKUUCYSBUJQZDYKBUJUKKULUMUNUOUPUAUCUBLFGMUQURXNYJWCXLWO
      EUEZXIPZFESZGESUUHXQWKQZWOWTARZOZXFXHUGZPZFESGESUUHUUMYBWKQZWTWOCRZOZXHUG
      ZPZFESGESYJLMUAUBEACDEUUDVJHBUTUSVAAUUEVJIBUHUSVACUUFVJJBUIUSVADUUGVJKBUJ
      USVAXKUUJGWDEXJUUIFWDEWEWPUUHXIWDEWOVKVBVCVCWGUUIUUOGFEEWGXIUUNUUHWGXBUUM
      XFXHWGWSUUKXAUULWGWRXQWKWNWQWFAVDVEWOWTWFAVDVFVGVHVIWJUUOUUTGFEEWJUUNUUSU
      UHWJXFUURUUMXHWJXDUUPXEUUQWJXCYBWKWNWQWICVDVEWTWOWICVDVFVLVHVIWLUUTYIGFEE
      WLUUHXPUUSYHWLWOXOEWNWKDVMZVNWLUUMYAUURYEXHYGWLUUKXRUULXTXQWKDVMWLWOXOWTX
      SAUVAWQWKDVMZVOVFWLUUPYCUUQYDYBWKDVMWLWTXSWOXOCUVBUVAVOVFWLXGYFWNWLWOXOWK
      DWLVPUVAVQVRVSUNVIWAVTWB $.
      $( [22-Sep-2011] $)
  $}

  ${
    $d x y K $.  $d x y R $.  $d x y ph $.
    $( Ring base $)
    issrngd.k $e |- ( ph -> K = ( Base ` R ) ) $.
    $( Ring plus $)
    issrngd.p $e |- ( ph -> P = ( +g ` R ) ) $.
    $( Ring times $)
    issrngd.t $e |- ( ph -> T = ( .r ` R ) ) $.
    $( Involution (e.g. complex conjugate) $)
    issrngd.c $e |- ( ph -> C = ( *r ` R ) ) $.
    issrngd.r $e |- ( ph -> R e. Ring ) $.
    $( Closure $)
    issrngd.cl $e |- ( ( ph /\ x e. K ) -> ( C ` x ) e. K ) $.
    $( Distributive law over addition $)
    issrngd.dp $e |- ( ( ph /\ x e. K /\ y e. K )
           -> ( C ` ( x P y ) ) = ( ( C ` x ) P ( C ` y ) ) ) $.
    $( Distributive law over multiplication $)
    issrngd.dt $e |- ( ( ph /\ x e. K /\ y e. K )
           -> ( C ` ( x T y ) ) = ( ( C ` y ) T ( C ` x ) ) ) $.
    $( Idempotency $)
    issrngd.id $e |- ( ( ph /\ x e. K ) -> ( C ` ( C ` x ) ) = x ) $.
    $( Properties that determine a star ring. $)
    issrngd $p |- ( ph -> R e. *Ring ) $=
      ( wcel cfv co crg cv cstv cbs cplusg wceq cmulr w3a wa csr fveq1d eleq12d
      oveqd fveq12d oveq123d eqeq12d eqeq1d 3anbi123d anbi12d raleqbidv adantrr
      wral anbi2d 3expb 3jca jca ralrimivva mpbi2and eqid issrng sylibr ) AFUAR
      ZBUBZFUCSZSZFUDSZRZVMCUBZFUESZTZVNSZVOVRVNSZVSTZUFZVMVRFUGSZTZVNSZWBVOWET
      ZUFZVOVNSZVMUFZUHZUIZCVPVBZBVPVBZUIZFUJRAVLVMDSZHRZVMVRETZDSZWQVRDSZETZUF
      ZVMVRGTZDSZXAWQGTZUFZWQDSZVMUFZUHZUIZCHVBZBHVBZWPAXMWOVLAXLWNBHVPIAXKWMCH
      VPIAWRVQXJWLAWQVOHVPAVMDVNLUKZIULAXCWDXGWIXIWKAWTWAXBWCAWSVTDVNLAEVSVMVRJ
      UMUNAWQVOXAWBEVSJXNAVRDVNLUKZUOUPAXEWGXFWHAXDWFDVNLAGWEVMVRKUMUNAXAWBWQVO
      GWEKXOXNUOUPAXHWJVMAWQVODVNLXNUNUQURUSUTUTVCMAXKBCHHAVMHRZVRHRZUIUIZWRXJA
      XPWRXQNVAXRXCXGXIAXPXQXCOVDAXPXQXGPVDAXPXIXQQVAVEVFVGVHVSFWEVNVPCBVPVIVSV
      IWEVIVNVIVJVK $.
      $( [18-Nov-2013] $)
  $}

  $c ip $.
  $c PreHil $.

  $( Extend class notation with Hermitian form (inner product). $)
  cipr $a class ip $.

  $( Extend class notation with class all pre-Hilbert spaces. $)
  cprehil $a class PreHil $.

  $( Def. 8.5.25, p. 226. $)
  $( Define Hermitian form (inner product). $)
  df-inprod $a |- ip = ( v e. _V |-> ( v ` 8 ) ) $.

  $( Utility theorem: index-independent form of ~ df-ip . $)
  ipid $p |- ip = ( f e. _V |-> ( f ` ( ip ` ndx ) ) ) $=
    ( cipr c8 df-inprod 8nn ndxid ) BCAADEF $.
    $( [6-Oct-2013] $)

  $( Utility lemma for constructing a pre-Hilbert space. $)
  phllem $p |- -. ( ip ` ndx ) e. ( { ( Base ` ndx ) , ( +g ` ndx ) ,
    ( Scalar ` ndx ) } u. { ( vsca ` ndx ) } ) $=
    ( vx cnx cipr cfv cplusg csca cvsca wcel wceq wo wne c8 ndxarg 8re neeqtrri
    ltneii eqnetri c2 c5 c6 cbs ctp csn cun w3o w3a wn df-inprod 8nn c1 basendx
    1re 1lt8 2re 2lt8 df-plusg 2nn 5re 5lt8 df-sca 5nn 3pm3.2i ne3anior df-vsca
    mpbi 6re 6lt8 6nn eqeq12i nemtbir pm3.2ni elun fvex eltp elsnc bitri mtbir
    orbi12i ) BCDZBUADZBEDZBFDZUBZBGDZUCZUDHZVSVTIVSWAIVSWBIUEZVSWDIZJZWGWHVSVT
    KZVSWAKZVSWBKZUFWGUGWJWKWLVSLVTCLAAUHUIMZLUJVTUJLULNUMPUKOQVSLWAWMLRWARLUNN
    UOPERAAUPUQMOQVSLWBWMLSWBSLURNUSPFSAAUTVAMOQVBVSVTVSWAVSWBVCVEWHLTTLVFNVGPV
    SLWDTWMGTAAVDVHMVIVJVKWFVSWCHZVSWEHZJWIVSWCWEVLWNWGWOWHVSVTWAWBBCVMZVNVSWDW
    PVOVRVPVQ $.
    $( [22-Jun-2014] $) $( [30-Sep-2013] $)

  ${
    phlfn.h $e |- H = ( { <. ( Base ` ndx ) , B >. , <. ( +g ` ndx ) , P >. ,
               <. ( Scalar ` ndx ) , T >. }
            u. { <. ( vsca ` ndx ) , S >. , <. ( ip ` ndx ) , I >. } ) $.
    ${
      phlfn.d $e |- D = ( { ( Base ` ndx ) , ( +g ` ndx ) ,
        ( Scalar ` ndx ) } u. { ( vsca ` ndx ) , ( ip ` ndx ) } ) $.
      $( A constructed pre-Hilbert space is a function.  Starting from ~ lmodfn
         (which has 4 members), we chain ~ fnunsn once more, adding an ordered
         pair to the function, to get all 5 members. $)
      phlfn $p |- H Fn D $=
        ( cnx cfv ctp csn cun cop cipr eqid cpr df-pr uneq2i cplusg csca lmodfn
        cbs cvsca fvex unass 3eqtr4i phllem fnunsn ) JUDKZJUAKZJUBKZLZJUEKZMZNZ
        BUKAOULCOUMEOLZUODOZMZNZFJPKZGJPUFAUQCDEVAVAQUQQUCURUSVBGOZRZNURUTVCMZN
        ZNFVAVENVDVFURUSVCSTHURUTVEUGUHUNUOVBRZNUNUPVBMZNZNBUQVHNVGVIUNUOVBSTIU
        NUPVHUGUHUIUJ $.
        $( [22-Jun-2014] $) $( [1-Oct-2013] $)
    $}

    $( Lemma to shorten proofs of ~ phlbase through ~ phlip . $)
    phlfun $p |- Fun H $=
      ( cnx cbs cfv cplusg csca ctp cvsca cipr cpr cun wfn wfun eqid phlfn
      fnfun ax-mp ) EHIJHKJHLJMHNJHOJPQZRESAUDBCDEFGUDTUAUDEUBUC $.
      $( [22-Jun-2014] $) $( [6-Oct-2013] $)

    $( The base set of a constructed pre-Hilbert space. $)
    phlbase $p |- ( B e. X -> B = ( Base ` H ) ) $=
      ( vx cbs cnx cfv cop cplusg csca ctp cvsca cipr cpr cun tpex prex eqeltri
      cvv unex phlfun baseid ssun1 sseqtr4i opex tpid1 sselii strfv ) AEJGIEKJL
      ZAMZKNLBMZKOLDMZPZKQLCMZKRLFMZSZTZUDHURVAUOUPUQUAUSUTUBUEUCABCDEFHUFIUGUR
      EUOURVBEURVAUHHUIUOUPUQUNAUJUKULUM $.
      $( [22-Jun-2014] $) $( [6-Oct-2013] $)

    $( The additive operation of a constructed pre-Hilbert space. $)
    phlplusg $p |- ( P e. X -> P = ( +g ` H ) ) $=
      ( vx cplusg cnx cbs cfv cop csca ctp cvsca cipr cpr cun tpex prex eqeltri
      cvv unex phlfun plusgid ssun1 sseqtr4i opex tpid2 sselii strfv ) BEJGIEKL
      MANZKJMZBNZKOMDNZPZKQMCNZKRMFNZSZTZUDHURVAUNUPUQUAUSUTUBUEUCABCDEFHUFIUGU
      REUPURVBEURVAUHHUIUNUPUQUOBUJUKULUM $.
      $( [22-Jun-2014] $) $( [6-Oct-2013] $)

    $( The ring of scalars of a constructed pre-Hilbert space. $)
    phlsca $p |- ( T e. X -> T = ( Scalar ` H ) ) $=
      ( vx csca cnx cbs cfv cop cplusg ctp cvsca cipr cpr cun tpex prex eqeltri
      cvv unex phlfun scaid ssun1 sseqtr4i opex tpid3 sselii strfv ) DEJGIEKLMA
      NZKOMBNZKJMZDNZPZKQMCNZKRMFNZSZTZUDHURVAUNUOUQUAUSUTUBUEUCABCDEFHUFIUGURE
      UQURVBEURVAUHHUIUNUOUQUPDUJUKULUM $.
      $( [22-Jun-2014] $) $( [6-Oct-2013] $)

    $( The scalar product operation of a constructed pre-Hilbert space. $)
    phlvsca $p |- ( S e. X -> S = ( vsca ` H ) ) $=
      ( vx cvsca cnx cbs cfv cop cplusg csca ctp cipr cpr cun tpex prex eqeltri
      cvv unex phlfun vscaid ssun2 sseqtr4i opex prid1 sselii strfv ) CEJGIEKLM
      ANZKOMBNZKPMDNZQZKJMZCNZKRMFNZSZTZUDHUQVAUNUOUPUAUSUTUBUEUCABCDEFHUFIUGVA
      EUSVAVBEVAUQUHHUIUSUTURCUJUKULUM $.
      $( [22-Jun-2014] $) $( [6-Oct-2013] $)

    $( The inner product (Hermitian form) operation of a constructed
       pre-Hilbert space. $)
    phlip $p |- ( I e. X -> I = ( ip ` H ) ) $=
      ( vx cipr cnx cbs cfv cop cplusg csca ctp cvsca cpr cun tpex prex eqeltri
      cvv unex phlfun ipid ssun2 sseqtr4i opex prid2 sselii strfv ) FEJGIEKLMAN
      ZKOMBNZKPMDNZQZKRMCNZKJMZFNZSZTZUDHUQVAUNUOUPUAURUTUBUEUCABCDEFHUFIUGVAEU
      TVAVBEVAUQUHHUIURUTUSFUJUKULUM $.
      $( [22-Jun-2014] $) $( [6-Oct-2013] $)
  $}

  ${
    $d a f g h q v x y z $.
    $( Def. 8.5.24, p. 225. $)
    $( Define class all generalized pre-Hilbert (inner product) spaces. $)
    df-prehil $a |- PreHil = { g e. LVec |
      [ ( Base ` g ) / v ] [ ( ip ` g ) / h ] [ ( Scalar ` g ) / f ]
        ( f e. *Ring /\ A. q e. ( Base ` f ) A. x e. v A. y e. v A. z e. v
               ( ( x h y ) e. ( Base ` f )
              /\ ( ( ( ( q ( vsca ` g ) x ) ( +g ` g ) y ) h z )
                 = ( ( q ( .r ` f ) ( x h z ) ) ( +g ` f ) ( y h z ) )
              /\ ( ( x h x ) = ( 0g ` f ) -> x = ( 0g ` g ) )
              /\ ( ( *r ` f ) ` ( x h y ) ) = ( y h x ) ) ) ) } $.
  $}

  ${
    $d f g h v A $.  $d f g h q v x y z F $.  $d f g h v I $.  $d f g h v N $.
    $d f g h q v x y z H $.  $d f g h v P $.  $d f g h v S $.  $d f g h v T $.
    $d f g h q v K $.  $d f g h q v x y z V $.  $d f g h q v x y z W $.
    $d f g h v Z $.
    isphil.v $e |- V = ( Base ` W ) $.
    isphil.a $e |- A = ( +g ` W ) $.
    isphil.f $e |- F = ( Scalar ` W ) $.
    isphil.s $e |- S = ( vsca ` W ) $.
    isphil.h $e |- H = ( ip ` W ) $.
    isphil.z $e |- Z = ( 0g ` W ) $.
    isphil.k $e |- K = ( Base ` F ) $.
    isphil.p $e |- P = ( +g ` F ) $.
    isphil.t $e |- T = ( .r ` F ) $.
    isphil.i $e |- I = ( *r ` F ) $.
    isphil.n $e |- N = ( 0g ` F ) $.
    $( The predicate "is a generalized pre-Hilbert (inner product) space". $)
    isphil $p |- ( W e. PreHil <-> ( W e. LVec /\ F e. *Ring
       /\ A. q e. K A. x e. V A. y e. V A. z e. V ( ( x H y ) e. K
              /\ ( ( ( ( q S x ) A y ) H z )
                  = ( ( q T ( x H z ) ) P ( y H z ) )
         /\ ( ( x H x ) = N -> x = Z )
              /\ ( I ` ( x H y ) ) = ( y H x ) ) ) ) ) $=
      ( vf vh vg vv cprehil wcel clvec csr cv co wceq wi cfv w3a wral cbs cvsca
      wa cplusg cmulr c0g cstv csca wsbc cipr fveq2 syl6eqr dfsbcq syl cvv fvex
      oveqd eqidd oveq123d oveq1d eqeq1d eqeq2d imbi2d 3anbi12d anbi2d 2ralbidv
      wb eqeltri sbcbidv mpan2 bitrd simp3 eleq1d fveq2d eleq12d eqeq12d imbi1d
      fveq12d 3anbi123d anbi12d raleqbidv sbc3ie syl6bb df-prehil elrab2 3anass
      simp1 simp2 bitr4i ) NULUMNUNUMZHUOUMZAUPZBUPZIUQZKUMZPUPZXNFUQZXODUQZCUP
      ZIUQZXRXNYAIUQZGUQZXOYAIUQZEUQZURZXNXNIUQZLURZXNOURZUSZXPJUTZXOXNIUQZURZV
      AZVEZCMVBZBMVBZAMVBZPKVBZVEZVEXLXMYTVAUHUPZUOUMZXNXOUIUPZUQZUUBVCUTZUMZXR
      XNUJUPZVDUTZUQZXOUUHVFUTZUQZYAUUDUQZXRXNYAUUDUQZUUBVGUTZUQZXOYAUUDUQZUUBV
      FUTZUQZURZXNXNUUDUQZUUBVHUTZURZXNUUHVHUTZURZUSZUUEUUBVIUTZUTZXOXNUUDUQZUR
      ZVAZVEZCUKUPZVBBUVMVBZAUVMVBPUUFVBZVEZUHUUHVJUTZVKZUIUUHVLUTZVKZUKUUHVCUT
      ZVKZUUAUJNUNULUUHNURZUWBUUCUUGXTYAUUDUQZUUSURZUVCYJUSZUVJVAZVEZCUVMVBZBUV
      MVBZAUVMVBZPUUFVBZVEZUHHVKZUIIVKZUKMVKZUUAUWCUWBUVTUKMVKZUWPUWCUWAMURUWBU
      WQWIUWCUWANVCUTZMUUHNVCVMQVNUVTUKUWAMVOVPUWCMVQUMUWQUWPWIMUWRVQQNVCVRWJZU
      WCUVTUWOUKMVQUWCUVTUVRUIIVKZUWOUWCUVSIURUVTUWTWIUWCUVSNVLUTZIUUHNVLVMUAVN
      UVRUIUVSIVOVPUWCIVQUMUWTUWOWIIUXAVQUANVLVRWJZUWCUVRUWNUIIVQUWCUVRUVPUHHVK
      ZUWNUWCUVQHURUVRUXCWIUWCUVQNVJUTZHUUHNVJVMSVNUVPUHUVQHVOVPUWCHVQUMUXCUWNW
      IHUXDVQSNVJVRWJZUWCUVPUWMUHHVQUWCUVOUWLUUCUWCUVNUWJPAUUFUVMUWCUVLUWHBCUVM
      UVMUWCUVKUWGUUGUWCUUTUWEUVFUWFUVJUWCUUMUWDUUSUWCUULXTYAUUDUWCUUJXSXOXOUUK
      DUWCUUKNVFUTDUUHNVFVMRVNUWCUUIFXRXNUWCUUINVDUTFUUHNVDVMTVNVSUWCXOVTWAWBWC
      UWCUVEYJUVCUWCUVDOXNUWCUVDNVHUTOUUHNVHVMUBVNWDWEWFWGWHWHWGWKWLWMWKWLWMWKW
      LWMUWMUUAUKUIUHMIHUWSUXBUXEUVMMURZUUDIURZUUBHURZVAZUUCXMUWLYTUXIUUBHUOUXF
      UXGUXHWNZWOUXIUWKYSPUUFKUXIUUFHVCUTKUXIUUBHVCUXJWPUCVNZUXIUWJYRAUVMMUXFUX
      GUXHXIZUXIUWIYQBUVMMUXLUXIUWHYPCUVMMUXLUXIUUGXQUWGYOUXIUUEXPUUFKUXIUUDIXN
      XOUXFUXGUXHXJZVSZUXKWQUXIUWEYGUWFYKUVJYNUXIUWDYBUUSYFUXIUUDIXTYAUXMVSUXIU
      UPYDUUQYEUUREUXIUURHVFUTEUXIUUBHVFUXJWPUDVNUXIXRXRUUNYCUUOGUXIUUOHVGUTGUX
      IUUBHVGUXJWPUEVNUXIXRVTUXIUUDIXNYAUXMVSWAUXIUUDIXOYAUXMVSWAWRUXIUVCYIYJUX
      IUVAYHUVBLUXIUUDIXNXNUXMVSUXIUVBHVHUTLUXIUUBHVHUXJWPUGVNWRWSUXIUVHYLUVIYM
      UXIUUEXPUVGJUXIUVGHVIUTJUXIUUBHVIUXJWPUFVNUXNWTUXIUUDIXOXNUXMVSWRXAXBXCXC
      XCXCXBXDXEABCUKUHUJUIPXFXGXLXMYTXHXK $.
      $( [22-Jun-2014] $) $( [22-Sep-2011] $)
  $}


  ${
    $d q x y z K $.  $d x y z V $.  $d q x y z W $.  $d q x y z ph $.
    $( Set of vectors $)
    isphild.v $e |- ( ph -> V = ( Base ` W ) ) $.
    $( Vector addition $)
    isphild.a $e |- ( ph -> A = ( +g ` W ) ) $.
    $( Scalar product $)
    isphild.s $e |- ( ph -> S = ( vsca ` W ) ) $.
    $( Inner product (Hermitian form) $)
    isphild.i $e |- ( ph -> I = ( ip ` W ) ) $.
    $( Zero vector $)
    isphild.z $e |- ( ph -> Z = ( 0g ` W ) ) $.
    $( Set of scalars $)
    isphild.f $e |- ( ph -> F = ( Scalar ` W ) ) $.
    $( Division ring (skew field) base $)
    isphild.k $e |- ( ph -> K = ( Base ` F ) ) $.
    $( Division ring (skew field) plus $)
    isphild.p $e |- ( ph -> P = ( +g ` F ) ) $.
    $( Division ring (skew field) times $)
    isphild.t $e |- ( ph -> T = ( .r ` F ) ) $.
    $( Involution (e.g. complex conjugate) $)
    isphild.c $e |- ( ph -> C = ( *r ` F ) ) $.
    $( Division ring zero $)
    isphild.o $e |- ( ph -> O = ( 0g ` F ) ) $.
    isphild.l $e |- ( ph -> W e. LVec ) $.
    isphild.r $e |- ( ph -> F e. *Ring ) $.
    $( Closure of inner product $)
    isphild.cl $e |- ( ( ph /\ x e. V /\ y e. V ) -> ( x I y ) e. K ) $.
    $( Distributive law for inner product $)
    isphild.d $e |- ( ( ph /\ q e. K /\ ( x e. V /\ y e. V /\ z e. V ) )
          -> ( ( ( q S x ) A y ) I z ) = ( ( q T ( x I z ) ) P ( y I z ) ) ) $.
    $( Nonsingularity $)
    isphild.ns $e |- ( ( ph /\ x e. V /\ ( x I x ) = O ) -> x = Z ) $.
    $( Conjugation law $)
    isphild.cj $e |- ( ( ph /\ x e. V /\ y e. V )
            -> ( C ` ( x I y ) ) = ( y I x ) ) $.
    $( Properties that determine a pre-Hilbert (inner product) space. $)
    isphild $p |- ( ph -> W e. PreHil ) $=
      ( clvec wcel csca cfv csr cv cipr co cbs cvsca cplusg cmulr wceq c0g cstv
      wi w3a wral cprehil eqeltrrd simpll simplrr simprl syl3anc simplrl simprr
      wa syl113anc 3expia syl2anc 3jca jca ralrimivva eqtrd oveqd eleq12d eqidd
      fveq2d oveq123d eqeq12d imbi12d fveq12d 3anbi123d anbi12d raleqbidv mpbid
      eqeq2d eqid isphil syl3anbrc ) AOUOUPOUQURZUSUPBUTZCUTZOVAURZVBZXEVCURZUP
      ZQUTZXFOVDURZVBZXGOVEURZVBZDUTZXHVBZXLXFXQXHVBZXEVFURZVBZXGXQXHVBZXEVEURZ
      VBZVGZXFXFXHVBZXEVHURZVGZXFOVHURZVGZVJZXIXEVIURZURZXGXFXHVBZVGZVKZWAZDOVC
      URZVLZCYRVLZBYRVLZQXJVLZOVMUPUIAJXEUSUCUJVNAXFXGKVBZLUPZXLXFHVBZXGEVBZXQK
      VBZXLXFXQKVBZIVBZXGXQKVBZGVBZVGZXFXFKVBZMVGZXFPVGZVJZUUCFURZXGXFKVBZVGZVK
      ZWAZDNVLZCNVLZBNVLZQLVLUUBAUVCQBLNAXLLUPZXFNUPZWAZWAZUVACDNNUVHXGNUPZXQNU
      PZWAZWAZUUDUUTUVLAUVFUVIUUDAUVGUVKVOZAUVEUVFUVKVPZUVHUVIUVJVQZUKVRUVLUULU
      UPUUSUVLAUVEUVFUVIUVJUULUVMAUVEUVFUVKVSUVNUVOUVHUVIUVJVTULWBUVLAUVFUUPUVM
      UVNAUVFUUNUUOUMWCWDUVLAUVFUVIUUSUVMUVNUVOUNVRWEWFWGWGAUVDUUAQLXJALJVCURXJ
      UDAJXEVCUCWLWHZAUVCYTBNYRRAUVBYSCNYRRAUVAYQDNYRRAUUDXKUUTYPAUUCXILXJAKXHX
      FXGUAWIZUVPWJAUULYEUUPYKUUSYOAUUGXRUUKYDAUUFXPXQXQKXHUAAUUEXNXGXGEXOSAHXM
      XLXFTWIAXGWKWMAXQWKWMAUUIYAUUJYBGYCAGJVEURYCUEAJXEVEUCWLWHAXLXLUUHXSIXTAI
      JVFURXTUFAJXEVFUCWLWHAXLWKAKXHXFXQUAWIWMAKXHXGXQUAWIWMWNAUUNYHUUOYJAUUMYF
      MYGAKXHXFXFUAWIAMJVHURYGUHAJXEVHUCWLWHWNAPYIXFUBXAWOAUUQYMUURYNAUUCXIFYLA
      FJVIURYLUGAJXEVIUCWLWHUVQWPAKXHXGXFUAWIWNWQWRWSWSWSWSWTBCDXOYCXMXTXEXHYLX
      JYGYROYIQYRXBXOXBXEXBXMXBXHXBYIXBXJXBYCXBXTXBYLXBYGXBXCXD $.
      $( [22-Jun-2014] $) $( [18-Nov-2013] $)
  $}

  $c ocv $.
  $c CSubSp $.
  $c Hil $.

  $( Extend class notation with orthocomplement of a subspace. $)
  cocv $a class ocv $.

  $( Extend class notation with set of closed subspaces. $)
  ccsubsp $a class CSubSp $.

  $( Extend class notation with class of all Hilbert spaces. $)
  chs $a class Hil $.

  ${
    $d h s t u v w x y $.
    $( Def. 8.5.27, p. 227. $)
    $( Define orthocomplement of a subspace. $)
    df-ocv $a |- ocv = ( h e. _V |-> ( s e. ~P ( Base ` h ) |->
   { x e. ( Base ` h ) | A. y e. s ( x ( ip ` h ) y ) = ( 0g ` h ) } ) ) $.

    $( Def. 8.5.28, p. 226. $)
    $( Define set of closed subspaces. $)
    df-csubsp $a |- CSubSp = ( h e. _V |-> { s e. ~P ( Base ` h ) |
      s = ( ( ocv ` h ) ` ( ( ocv ` h ) ` s ) ) } ) $.

    $( Def. 8.5.30, p. 228. $)
    $( Define class of all Hilbert spaces.  Based on Proposition 4.5, p. 176,
       Gudrun Kalmbach, Quantum Measures and Spaces, Kluwer, Dordrecht,
       1998. $)
    df-hil $a |- Hil = { h e. PreHil | A. s e. ( CSubSp ` h )
          ( s ( LSSum ` h ) ( ( ocv ` h ) ` s ) ) = ( Base ` h ) } $.
  $}

  ${
    $d h s x y H $.  $d h I $.  $d h s x V $.  $d h Z $.
    ocvfval.v $e |- V = ( Base ` H ) $.
    ocvfval.i $e |- I = ( ip ` H ) $.
    ocvfval.z $e |- Z = ( 0g ` H ) $.
    ocvfval.o $e |- O = ( ocv ` H ) $.
    $( The orthocomplement operation. $)
    ocvfval $p |- ( H e. A -> O = ( s e. ~P V |->
                          { x e. V | A. y e. s ( x I y ) = Z } ) ) $=
      ( vh cfv cv wceq cvv cbs cipr wcel cocv cpw wral crab cmpt elex c0g fveq2
      co syl6eqr pweqd oveqd eqeq12d ralbidv rabeqbidv mpteq12dv df-ocv eqeltri
      fvex pwex mptex fvmpt syl syl5eq ) DCUAZFDUBOZIGUCZAPZBPZEUJZHQZBIPZUDZAG
      UEZUFZMVFDRUAVGVPQDCUGNDINPZSOZUCZVIVJVQTOZUJZVQUHOZQZBVMUDZAVRUEZUFVPRUB
      VQDQZIVSWEVHVOWFVRGWFVRDSOZGVQDSUIJUKZULWFWDVNAVRGWHWFWCVLBVMWFWAVKWBHWFV
      TEVIVJWFVTDTOEVQDTUIKUKUMWFWBDUHOHVQDUHUILUKUNUOUPUQABNIURIVHVOGGWGRJDSUT
      USVAVBVCVDVE $.
      $( [22-Jun-2014] $) $( [7-Oct-2011] $)

    $d s I $.  $d s x y S $.  $d s Z $.
    $( Value of the orthocomplement of a subset (normally a subspace) of a
       pre-Hilbert space. $)
    ocvval $p |- ( ( H e. A /\ S C_ V )
              -> ( O ` S ) = { x e. V | A. y e. S ( x I y ) = Z } ) $=
      ( vs wcel cfv cv wceq wral crab wss cpw co ocvfval fveq1d cbs cvv eqeltri
      cmpt fvex elpw2 raleq rabbidv eqid rabex fvmpt sylbir sylan9eq ) ECOZDHUA
      ZDGPDNHUBZAQBQFUCIRZBNQZSZAHTZUIZPZVBBDSZAHTZUSDGVFABCEFGHINJKLMUDUEUTDVA
      OVGVIRDHHEUFPUGJEUFUJUHZUKNDVEVIVAVFVCDRVDVHAHVBBVCDULUMVFUNVHAHVJUOUPUQU
      R $.
      $( [7-Oct-2011] $)
  $}

  ${
    $d h s H $.  $d h O $.  $d h s V $.
    csubspset.v $e |- V = ( Base ` H ) $.
    csubspset.o $e |- O = ( ocv ` H ) $.
    csubspset.c $e |- C = ( CSubSp ` H ) $.
    $( The set of closed subspaces of a pre-Hilbert space. $)
    csubspset $p |- ( H e. A -> C = { s e. ~P V | s = ( O ` ( O ` s ) ) } ) $=
      ( vh wcel cvv cv cfv wceq cpw crab ccsubsp cocv cbs fveq2 syl6eqr fveq12d
      elex pweqd fveq1d eqeq2d rabeqbidv df-csubsp fvex pwex rabex fvmpt syl5eq
      eqeltri syl ) CAKCLKZBFMZURDNZDNZOZFEPZQZOCAUDUQBCRNVCIJCURURJMZSNZNZVENZ
      OZFVDTNZPZQVCLRVDCOZVHVAFVJVBVKVIEVKVICTNZEVDCTUAGUBUEVKVGUTURVKVFUSVEDVK
      VECSNDVDCSUAHUBZVKURVEDVMUFUCUGUHJFUIVAFVBEEVLLGCTUJUOUKULUMUNUP $.
      $( [22-Jun-2014] $) $( [7-Oct-2011] $)
  $}

  ${
    $d s H $.  $d s O $.  $d s S $.  $d s V $.
    iscsubsp.v $e |- V = ( Base ` H ) $.
    iscsubsp.o $e |- O = ( ocv ` H ) $.
    iscsubsp.c $e |- C = ( CSubSp ` H ) $.
    $( The predicate "is a closed subspace" (of a pre-Hilbert space). $)
    iscsubsp $p |- ( H e. A
              -> ( S e. C <-> ( S C_ V /\ S = ( O ` ( O ` S ) ) ) ) ) $=
      ( vs wcel cv cfv wceq cpw crab wss wa fveq2d cbs csubspset eleq2d eqeq12d
      id elrab cvv fvex eqeltri elpw2 anbi1i bitri syl6bb ) DAKZCBKCJLZUNEMZEMZ
      NZJFOZPZKZCFQZCCEMZEMZNZRZUMBUSCABDEFJGHIUAUBUTCURKZVDRVEUQVDJCURUNCNZUNC
      UPVCVGUDZVGUOVBEVGUNCEVHSSUCUEVFVAVDCFFDTMUFGDTUGUHUIUJUKUL $.
      $( [22-Jun-2014] $) $( [7-Oct-2011] $)
  $}

  ${
    $d h s C $.  $d h s H $.  $d h O $.  $d h S $.  $d h V $.
    ishil.v $e |- V = ( Base ` H ) $.
    ishil.s $e |- S = ( LSSum ` H ) $.
    ishil.o $e |- O = ( ocv ` H ) $.
    ishil.c $e |- C = ( CSubSp ` H ) $.
    $( The predicate "is a Hilbert space" (over a *-division ring). $)
    ishil $p |- ( H e. Hil
        <-> ( H e. PreHil /\ A. s e. C ( s S ( O ` s ) ) = V ) ) $=
      ( vh cv cocv cfv clsm cbs wceq ccsubsp fveq2 syl6eqr co cprehil chs eqidd
      wral fveq1d oveq123d eqeq12d raleqbidv df-hil elrab2 ) FLZULKLZMNZNZUMONZ
      UAZUMPNZQZFUMRNZUEULULDNZBUAZEQZFAUEKCUBUCUMCQZUSVCFUTAVDUTCRNAUMCRSJTVDU
      QVBUREVDULULUOVAUPBVDUPCONBUMCOSHTVDULUDVDULUNDVDUNCMNDUMCMSITUFUGVDURCPN
      EUMCPSGTUHUIKFUJUK $.
      $( [22-Jun-2014] $) $( [7-Oct-2011] $)
  $}

