$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Modules and vector spaces
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c vbase $.
  $c vadd $.
  $c vsca $.
  $c LMod $.
  $c LVec $.

  $( Extend class notation with set of vectors in a left module or a vector
     space. $)
  cvbase $a class vbase $.

  $( Extend class notation with vector addition. $)
  cvadd $a class vadd $.

  $( Extend class notation with scalar product. $)
  cvsca $a class vsca $.

  $( Extend class notation with class of all left modules. $)
  clmod $a class LMod $.

  $( Extend class notation with class of all left vector spaces. $)
  clvec $a class LVec $.

  $( Def. 8.5.12, p. 219. $)
  $( Define set of vectors in a vector space ` v ` . $)
  df-vbase $a |- vbase = ( v e. _V |-> ( v ` 5 ) ) $.

  $( Def. 8.5.12, p. 219. $)
  $( Define vector addition. $)
  df-vadd $a |- vadd = ( v e. _V |-> ( v ` 6 ) ) $.

  $( Def. 8.5.12, p. 219. $)
  $( Define scalar product. $)
  df-vsca $a |- vsca = ( v e. _V |-> ( v ` 7 ) ) $.

  $( Utility theorem: index-independent form of vector base set ~ df-vbase . $)
  vbaseid $p |- vbase = ( f e. _V |-> ( f ` ( vbase ` ndx ) ) ) $=
    ( cvbase c5 df-vbase 5nn ndxid ) BCAADEF $.
    $( [2-Oct-2013] $)

  $( Utility theorem: index-independent form of vector addition ~ df-vadd . $)
  vaddid $p |- vadd = ( f e. _V |-> ( f ` ( vadd ` ndx ) ) ) $=
    ( cvadd c6 df-vadd 6nn ndxid ) BCAADEF $.
    $( [2-Oct-2013] $)

  $( Utility theorem: index-independent form of scalar product ~ df-vsca . $)
  vscaid $p |- vsca = ( f e. _V |-> ( f ` ( vsca ` ndx ) ) ) $=
    ( cvsca c7 df-vsca 7nn ndxid ) BCAADEF $.
    $( [2-Oct-2013] $)

  $( Utility lemma for constructing a left module or left vector space. $)
  lmodlem1 $p |- -. ( vbase ` ndx )
        e. { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) } $=
    ( vs cnx cvbase cfv cbs cplusg cmulr ctp wcel wceq wne c5 ndxarg 5re ltneii
    c1 neeqtrri eqnetri c2 c3 w3o w3a wn df-vbase 5nn 1re 1lt5 basendx 2re 2lt5
    df-plusg 2nn 3re 3lt5 df-mulr 3nn 3pm3.2i ne3anior mpbi fvex eltp mtbir ) B
    CDZBEDZBFDZBGDZHIVCVDJVCVEJVCVFJUAZVCVDKZVCVEKZVCVFKZUBVGUCVHVIVJVCLVDCLAAU
    DUEMZLPVDPLUFNUGOUHQRVCLVEVKLSVESLUINUJOFSAAUKULMQRVCLVFVKLTVFTLUMNUNOGTAAU
    OUPMQRUQVCVDVCVEVCVFURUSVCVDVEVFBCUTVAVB $.
    $( [30-Sep-2013] $)

  $( Utility lemma for constructing a left module or left vector space. $)
  lmodlem2 $p |- -. ( vadd ` ndx ) e. ( { ( Base ` ndx ) , ( +g ` ndx ) ,
         ( .r ` ndx ) } u. { ( vbase ` ndx ) } ) $=
    ( vs cnx cvadd cfv cplusg cmulr cvbase wcel wceq wo wne ndxarg 6re neeqtrri
    c6 ltneii eqnetri c2 c3 c5 cbs ctp csn cun w3o w3a df-vadd 6nn 1lt6 basendx
    wn 1re 2re 2lt6 df-plusg 2nn 3re 3lt6 df-mulr 3nn 3pm3.2i ne3anior mpbi 5re
    c1 5lt6 df-vbase 5nn df-ne pm3.2ni elun fvex eltp elsnc orbi12i bitri mtbir
    ) BCDZBUADZBEDZBFDZUBZBGDZUCZUDHZVRVSIVRVTIVRWAIUEZVRWCIZJZWFWGVRVSKZVRVTKZ
    VRWAKZUFWFUKWIWJWKVROVSCOAAUGUHLZOVEVSVEOULMUIPUJNQVROVTWLORVTROUMMUNPERAAU
    OUPLNQVROWAWLOSWASOUQMURPFSAAUSUTLNQVAVRVSVRVTVRWAVBVCVRWCKWGUKVROWCWLOTWCT
    OVDMVFPGTAAVGVHLNQVRWCVIVCVJWEVRWBHZVRWDHZJWHVRWBWDVKWMWFWNWGVRVSVTWABCVLZV
    MVRWCWOVNVOVPVQ $.
    $( [30-Sep-2013] $)

  $( Utility lemma for constructing a left module or left vector space. $)
  lmodlem3 $p |- -. ( vsca ` ndx ) e. ( { ( Base ` ndx ) , ( +g ` ndx ) ,
         ( .r ` ndx ) } u. { ( vbase ` ndx ) , ( vadd ` ndx ) } ) $=
    ( vs cnx cvsca cfv cplusg cmulr wcel wceq wo wne ndxarg 7re ltneii neeqtrri
    c7 eqnetri c2 c3 c5 c6 cbs ctp cvbase cvadd cpr cun w3o w3a df-vsca 7nn 1re
    wn 1lt7 basendx 2re 2lt7 df-plusg 2nn 3re 3lt7 df-mulr 3nn 3pm3.2i ne3anior
    mpbi 5re 5lt7 df-vbase 5nn 6re 6lt7 df-vadd 6nn pm3.2i neanior pm3.2ni elun
    c1 wa fvex eltp elpr orbi12i bitri mtbir ) BCDZBUADZBEDZBFDZUBZBUCDZBUDDZUE
    ZUFGZWFWGHWFWHHWFWIHUGZWFWKHWFWLHIZIZWOWPWFWGJZWFWHJZWFWIJZUHWOULWRWSWTWFOW
    GCOAAUIUJKZOVRWGVROUKLUMMUNNPWFOWHXAOQWHQOUOLUPMEQAAUQURKNPWFOWIXAORWIROUSL
    UTMFRAAVAVBKNPVCWFWGWFWHWFWIVDVEWFWKJZWFWLJZVSWPULXBXCWFOWKXAOSWKSOVFLVGMUC
    SAAVHVIKNPWFOWLXAOTWLTOVJLVKMUDTAAVLVMKNPVNWFWKWFWLVOVEVPWNWFWJGZWFWMGZIWQW
    FWJWMVQXDWOXEWPWFWGWHWIBCVTZWAWFWKWLXFWBWCWDWE $.
    $( [30-Sep-2013] $)

  ${
    lvecfn.w $e |- W = ( { <. ( Base ` ndx ) , B >. , <. ( +g ` ndx ) , P >. ,
                   <. ( .r ` ndx ) , T >. }
                u. { <. ( vbase ` ndx ) , V >. , <. ( vadd ` ndx ) , A >. ,
                   <. ( vsca ` ndx ) , S >. } ) $.
    ${
      lvecfn.d $e |- D = ( { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) }
                  u. { ( vbase ` ndx ) , ( vadd ` ndx ) , ( vsca ` ndx ) } ) $.
      $( A constructed left module or left vector space is a function on
         ` D ` .  Starting from ~ rngfn (which has 3 members), we chain
         ~ fnunsn 3 times, each time adding an ordered pair to the function, to
         get all 6 members. $)
      lmodfn $p |- W Fn D $=
        ( cnx cfv ctp cun cop fvex csn eqid uneq2i unass cbs cplusg cmulr cvadd
        cvbase cvsca rngfn lmodlem1 fnunsn df-pr eqtr4i lmodlem2 df-tp lmodlem3
        cpr 3eqtr4i ) KUALZKUBLZKUCLZMZKUELZKUDLZUOZNZCUQBOURDOUSFOMZVAGOZVBAOZ
        UOZNZHKUFLZEKUFPUTVAQZNZVDVEVFQZNZVIVBAKUDPUTVLVEVNVAGKUEPBUTDVEFVERUTR
        UGVNRVLRUHUIVIVEVMVGQZNZNVNVONVHVPVEVFVGUJSVEVMVOTUKVDUTVKVBQZNZNVLVQNV
        CVRUTVAVBUJSUTVKVQTUKULUIVEVFVGVJEOZMZNVEVHVSQZNZNHVIWANVTWBVEVFVGVSUMS
        IVEVHWATUPUTVAVBVJMZNUTVCVJQZNZNCVDWDNWCWEUTVAVBVJUMSJUTVCWDTUPUNUI $.
        $( [1-Oct-2013] $)
    $}

    $( Lemma to shorten proofs of ~ lmodbase through ~ lmodvsca . $)
    lmodfun $p |- Fun W $=
      ( cnx cbs cfv cplusg cmulr ctp cvbase cvadd cvsca cun wfn wfun eqid fnfun
      lmodfn ax-mp ) GIJKILKIMKNIOKIPKIQKNRZSGTABUECDEFGHUEUAUCUEGUBUD $.
      $( [4-Oct-2013] $)

    $( The base set of a constructed left vector space. $)
    lmodbase $p |- ( B e. X -> B = ( Base ` W ) ) $=
      ( vs cbs cnx cfv cop cplusg cmulr ctp cvbase cvadd tpex cvsca cun eqeltri
      cvv unex lmodfun baseid ssun1 opex tpid1 sselii eleqtrri strfv ) BGKHJGLK
      MZBNZLOMCNZLPMENZQZLRMFNZLSMANZLUAMDNZQZUBZUDIURVBUOUPUQTUSUTVATUEUCABCDE
      FGIUFJUGUOVCGURVCUOURVBUHUOUPUQUNBUIUJUKIULUM $.
      $( [2-Oct-2013] $)

    $( The additive operation of a constructed left vector space. $)
    lmodplusg $p |- ( P e. X -> P = ( +g ` W ) ) $=
      ( vs cplusg cnx cbs cfv cop cmulr ctp cvbase cvadd tpex cvsca cun eqeltri
      cvv unex lmodfun plusgid ssun1 opex tpid2 sselii eleqtrri strfv ) CGKHJGL
      MNBOZLKNZCOZLPNEOZQZLRNFOZLSNAOZLUANDOZQZUBZUDIURVBUNUPUQTUSUTVATUEUCABCD
      EFGIUFJUGUPVCGURVCUPURVBUHUNUPUQUOCUIUJUKIULUM $.
      $( [2-Oct-2013] $)

    $( The multiplicative operation of a constructed left vector space. $)
    lmodmulr $p |- ( T e. X -> T = ( .r ` W ) ) $=
      ( vs cmulr cnx cbs cfv cop cplusg ctp cvbase cvadd tpex cvsca cun eqeltri
      cvv unex lmodfun mulrid ssun1 opex tpid3 sselii eleqtrri strfv ) EGKHJGLM
      NBOZLPNCOZLKNZEOZQZLRNFOZLSNAOZLUANDOZQZUBZUDIURVBUNUOUQTUSUTVATUEUCABCDE
      FGIUFJUGUQVCGURVCUQURVBUHUNUOUQUPEUIUJUKIULUM $.
      $( [2-Oct-2013] $)

    $( The set of vectors of a constructed left vector space. $)
    lmodvbase $p |- ( V e. X -> V = ( vbase ` W ) ) $=
      ( vs cvbase cnx cbs cfv cop cplusg cmulr ctp cvadd tpex cvsca cun eqeltri
      cvv unex lmodfun vbaseid ssun2 opex tpid1 sselii eleqtrri strfv ) FGKHJGL
      MNBOZLPNCOZLQNEOZRZLKNZFOZLSNAOZLUANDOZRZUBZUDIUQVBUNUOUPTUSUTVATUEUCABCD
      EFGIUFJUGUSVCGVBVCUSVBUQUHUSUTVAURFUIUJUKIULUM $.
      $( [2-Oct-2013] $)

    $( The vector addition operation of a constructed left vector space. $)
    lmodvadd $p |- ( A e. X -> A = ( vadd ` W ) ) $=
      ( vs cvadd cnx cbs cfv cop cplusg cmulr ctp cvbase tpex cvsca cun eqeltri
      cvv unex lmodfun vaddid ssun2 opex tpid2 sselii eleqtrri strfv ) AGKHJGLM
      NBOZLPNCOZLQNEOZRZLSNFOZLKNZAOZLUANDOZRZUBZUDIUQVBUNUOUPTURUTVATUEUCABCDE
      FGIUFJUGUTVCGVBVCUTVBUQUHURUTVAUSAUIUJUKIULUM $.
      $( [2-Oct-2013] $)

    $( The scalar product operation of a constructed left vector space. $)
    lmodvsca $p |- ( S e. X -> S = ( vsca ` W ) ) $=
      ( vs cvsca cnx cbs cfv cop cplusg cmulr ctp cvbase tpex cvadd cun eqeltri
      cvv unex lmodfun vscaid ssun2 opex tpid3 sselii eleqtrri strfv ) DGKHJGLM
      NBOZLPNCOZLQNEOZRZLSNFOZLUANAOZLKNZDOZRZUBZUDIUQVBUNUOUPTURUSVATUEUCABCDE
      FGIUFJUGVAVCGVBVCVAVBUQUHURUSVAUTDUIUJUKIULUM $.
      $( [2-Oct-2013] $)
  $}

  ${
    $d a f k p q r s t v w x $.
    $( Def. 8.5.11, p. 218. $)
    $( Define the class of all left modules, which are generalizations of left
       vector spaces.  A left module is a ring together with an Abelian group
       and a left scalar product connecting them. $)
    df-lmod $a |- LMod = { f e. Ring |
      E. k E. p E. t E. v E. a E. s
         ( ( k = ( Base ` f ) /\ p = ( +g ` f ) /\ t = ( .r ` f ) )
          /\ ( v = ( vbase ` f ) /\ a = ( vadd ` f ) /\ s = ( vsca ` f ) )
          /\ ( { <. ( Base ` ndx ) , v >. , <. ( +g ` ndx ) , a >. } e. Abel
             /\ A. q e. k A. r e. k A. x e. v A. w e. v
               ( ( ( r s w ) e. v
                 /\ ( r s ( w a x ) ) = ( ( r s w ) a ( r s x ) )
                 /\ ( ( q p r ) s w ) = ( ( q s w ) a ( r s w ) )
               ) /\ ( ( ( q t r ) s w ) = ( q s ( r s w ) )
                 /\ ( ( 1r ` f ) s w ) = w ) ) ) ) } $.
  $}

  ${
    $d a f k p q r s t v w x A $.  $d a s G $.  $d a f k p q r s t v K $.
    $d a f k p q r s t v w x P $.  $d a f k p q r s t v w x S $.
    $d a f k p q r s t v w x T $.  $d a f k p s t v U $.
    $d a f k p q r s t v w x V $.  $d a f k p q r s t v w x W $.
    islmod.k $e |- K = ( Base ` W ) $.
    islmod.p $e |- P = ( +g ` W ) $.
    islmod.t $e |- T = ( .r ` W ) $.
    islmod.v $e |- V = ( vbase ` W ) $.
    islmod.a $e |- A = ( vadd ` W ) $.
    islmod.s $e |- S = ( vsca ` W ) $.
    islmod.u $e |- U = ( 1r ` W ) $.
    islmod.g $e |- G = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( The predicate "is a left module". $)
    islmod $p |- ( W e. LMod <-> ( W e. Ring /\ G e. Abel
        /\ A. q e. K A. r e. K A. x e. V A. w e. V
               ( ( ( r S w ) e. V
                 /\ ( r S ( w A x ) ) = ( ( r S w ) A ( r S x ) )
                 /\ ( ( q P r ) S w ) = ( ( q S w ) A ( r S w ) )
               ) /\ ( ( ( q T r ) S w ) = ( q S ( r S w ) )
                 /\ ( U S w ) = w ) ) ) ) $=
      ( vk vp vt vv va vs vf crg wcel wceq w3a cnx cbs cfv cop cplusg cpr cabel
      cv co wral wex clmod cvv fvex eqeltri cmulr cvbase cvadd cvsca raleqbi1dv
      wa raleq anbi2d opreq opreq1d eqeq1d 3anbi3d anbi1d 2ralbidv opeq2 preq1d
      eleq1d 3anbi1d anbi12d preq2d syl6eqr opreq2d 3anbi23d opreq12d 3anbi123d
      eleq2 eqeq12d eqeq2d id eqidd opreq123d ceqsex6v anbi2i cur fveq2 3exbidv
      df-lmod elrab2 3anass 3bitr4i ) KUIUJZUBUTZIUKZUCUTZDUKZUDUTZFUKZULZUEUTZ
      JUKZUFUTZCUKZUGUTZEUKZULZUMUNUOZXPUPZUMUQUOZXRUPZURZUSUJZLUTZBUTZXTVAZXPU
      JZYIYJAUTZXRVAZXTVAZYKYIYMXTVAZXRVAZUKZMUTZYIXKVAZYJXTVAZYSYJXTVAZYKXRVAZ
      UKZULZYSYIXMVAZYJXTVAZYSYKXTVAZUKZGYJXTVAZYJUKZVMZVMZBXPVBAXPVBZLXIVBZMXI
      VBZVMZULZUGVCUFVCUEVCZUDVCUCVCUBVCZVMXHHUSUJZYIYJEVAZJUJZYIYJYMCVAZEVAZUV
      BYIYMEVAZCVAZUKZYSYIDVAZYJEVAZYSYJEVAZUVBCVAZUKZULZYSYIFVAZYJEVAZYSUVBEVA
      ZUKZGYJEVAZYJUKZVMZVMZBJVBAJVBZLIVBMIVBZVMZVMKVDUJXHUVAUWDULUUTUWEXHUUQYH
      UUNLIVBZMIVBZVMYHYLYRUVIYJXTVAZUUCUKZULZUULVMZBXPVBAXPVBZLIVBMIVBZVMYHUWJ
      UVOYJXTVAZUUHUKZUUKVMZVMZBXPVBZAXPVBZLIVBMIVBZVMYCJUPZYFURZUSUJZYKJUJZYRU
      WIULZUWPVMZBJVBZAJVBZLIVBMIVBZVMUVAUXDYIUVDXTVAZYKYPCVAZUKZUWHUUBYKCVAZUK
      ZULZUWPVMZBJVBAJVBZLIVBMIVBZVMUWEUBUCUDUEUFUGIDFJCEIKUNUOZVENKUNVFVGDKUQU
      OZVEOKUQVFVGFKVHUOZVEPKVHVFVGJKVIUOZVEQKVIVFVGCKVJUOZVERKVJVFVGEKVKUOZVES
      KVKVFVGXJUUPUWGYHUUOUWFMXIIUUNLXIIVNVLVOXLUWGUWMYHXLUUNUWLMLIIXLUUMUWKABX
      PXPXLUUEUWJUULXLUUDUWIYLYRXLUUAUWHUUCXLYTUVIYJXTYSYIXKDVPVQVRVSVTWAWAVOXN
      UWMUWTYHXNUWLUWSMLIIXNUWKUWQABXPXPXNUULUWPUWJXNUUIUWOUUKXNUUGUWNUUHXNUUFU
      VOYJXTYSYIXMFVPVQVRVTVOWAWAVOXQYHUXCUWTUXIXQYGUXBUSXQYDUXAYFXPJYCWBWCWDXQ
      UWSUXHMLIIUWRUXGAXPJUWQUXFBXPJXQUWJUXEUWPXQYLUXDYRUWIXPJYKWMWEVTVLVLWAWFX
      SUXCUVAUXIUXRXSUXBHUSXSUXBUXAYECUPZURHXSYFUYEUXAXRCYEWBWGUAWHWDXSUXHUXQML
      IIXSUXFUXPABJJXSUXEUXOUWPXSYRUXLUWIUXNUXDXSYOUXJYQUXKXSYNUVDYIXTYJYMXRCVP
      WIYKYPXRCVPWNXSUUCUXMUWHUUBYKXRCVPWOWJVTWAWAWFYAUXRUWDUVAYAUXQUWCMLIIYAUX
      PUWBABJJYAUXOUVNUWPUWAYAUXDUVCUXLUVHUXNUVMYAYKUVBJYIYJXTEVPZWDYAUXJUVEUXK
      UVGYIUVDXTEVPYAYKUVBYPUVFCUYFYIYMXTEVPWKWNYAUWHUVJUXMUVLUVIYJXTEVPYAUUBUV
      KYKUVBCYSYJXTEVPUYFWKWNWLYAUWOUVRUUKUVTYAUWNUVPUUHUVQUVOYJXTEVPYAYSYSYKUV
      BXTEYAWPYAYSWQUYFWRWNYAUUJUVSYJGYJXTEVPVRWFWFWAWAVOWSWTXIUHUTZUNUOZUKZXKU
      YGUQUOZUKZXMUYGVHUOZUKZULZXPUYGVIUOZUKZXRUYGVJUOZUKZXTUYGVKUOZUKZULZYHUUE
      UUIUYGXAUOZYJXTVAZYJUKZVMZVMZBXPVBAXPVBZLXIVBMXIVBZVMZULZUGVCUFVCUEVCZUDV
      CUCVCUBVCUUTUHKUIVDUYGKUKZVUKUUSUBUCUDVULVUJUURUEUFUGVULUYNXOVUAYBVUIUUQV
      ULUYIXJUYKXLUYMXNVULUYHIXIVULUYHUXSIUYGKUNXBNWHWOVULUYJDXKVULUYJUXTDUYGKU
      QXBOWHWOVULUYLFXMVULUYLUYAFUYGKVHXBPWHWOWLVULUYPXQUYRXSUYTYAVULUYOJXPVULU
      YOUYBJUYGKVIXBQWHWOVULUYQCXRVULUYQUYCCUYGKVJXBRWHWOVULUYSEXTVULUYSUYDEUYG
      KVKXBSWHWOWLVULVUHUUPYHVULVUGUUNMLXIXIVULVUFUUMABXPXPVULVUEUULUUEVULVUDUU
      KUUIVULVUCUUJYJVULVUBGYJXTVULVUBKXAUOGUYGKXAXBTWHVQVRVOVOWAWAVOWLXCXCABUE
      UDUHUBUGLMUCUFXDXEXHUVAUWDXFXG $.
      $( [4-Nov-2013] $)

    $d q r w x Q $.  $d q r w x R $.  $d q r w x U $.  $d w x X $.  $d w Y $.
    $( Lemma for properties of a left module. $)
    lmodlema $p |- ( ( W e. LMod /\ ( Q e. K /\ R e. K )
          /\ ( X e. V /\ Y e. V ) ) ->
               ( ( ( R S Y ) e. V
                 /\ ( R S ( Y A X ) ) = ( ( R S Y ) A ( R S X ) )
                 /\ ( ( Q P R ) S Y ) = ( ( Q S Y ) A ( R S Y ) )
               ) /\ ( ( ( Q T R ) S Y ) = ( Q S ( R S Y ) )
                 /\ ( U S Y ) = Y ) ) ) $=
      ( vr vw vx vq clmod wcel wa wceq w3a crg cabel wral islmod opreq1 opreq1d
      co eqeq12d 3anbi3d anbi1d anbi12d 2ralbidv eleq1d opreq12d opreq2 opreq2d
      cv wi 3anbi123d rcla42v 3anbi2d com12 syl6com imp3a 3ad2ant3 sylbi 3impib
      id ) KUFUGZCIUGDIUGUHZLJUGMJUGUHZDMEUQZJUGZDMLAUQZEUQZWBDLEUQZAUQZUIZCDBU
      QZMEUQZCMEUQZWBAUQZUIZUJZCDFUQZMEUQZCWBEUQZUIZGMEUQZMUIZUHZUHZVSKUKUGZHUL
      UGZUBVGZUCVGZEUQZJUGZXEXFUDVGZAUQZEUQZXGXEXIEUQZAUQZUIZUEVGZXEBUQZXFEUQZX
      OXFEUQZXGAUQZUIZUJZXOXEFUQZXFEUQZXOXGEUQZUIZGXFEUQZXFUIZUHZUHZUCJUMUDJUMZ
      UBIUMUEIUMZUJVTWAUHXBVHZUDUCABEFGHIJKUBUENOPQRSTUAUNYKXCYLXDYKVTWAXBVTYKD
      XFEUQZJUGZDXJEUQZYMDXIEUQZAUQZUIZWIXFEUQZCXFEUQZYMAUQZUIZUJZWOXFEUQZCYMEU
      QZUIZYGUHZUHZUCJUMUDJUMZWAXBVHYJUUIXHXNCXEBUQZXFEUQZYTXGAUQZUIZUJZCXEFUQZ
      XFEUQZCXGEUQZUIZYGUHZUHZUCJUMUDJUMUEUBCDIIXOCUIZYIUUTUDUCJJUVAYAUUNYHUUSU
      VAXTUUMXHXNUVAXQUUKXSUULUVAXPUUJXFEXOCXEBUOUPUVAXRYTXGAXOCXFEUOUPURUSUVAY
      EUURYGUVAYCUUPYDUUQUVAYBUUOXFEXOCXEFUOUPXOCXGEUOURUTVAVBXEDUIZUUTUUHUDUCJ
      JUVBUUNUUCUUSUUGUVBXHYNXNYRUUMUUBUVBXGYMJXEDXFEUOZVCUVBXKYOXMYQXEDXJEUOUV
      BXGYMXLYPAUVCXEDXIEUOVDURUVBUUKYSUULUUAUVBUUJWIXFEXEDCBVEUPUVBXGYMYTAUVCV
      FURVIUVBUURUUFYGUVBUUPUUDUUQUUEUVBUUOWOXFEXEDCFVEUPUVBXGYMCEUVCVFURUTVAVB
      VJWAUUIXBUUHXBYNDXFLAUQZEUQZYMWFAUQZUIZUUBUJZUUGUHUDUCLMJJXILUIZUUCUVHUUG
      UVIYRUVGYNUUBUVIYOUVEYQUVFUVIXJUVDDEXILXFAVEVFUVIYPWFYMAXILDEVEVFURVKUTXF
      MUIZUVHWNUUGXAUVJYNWCUVGWHUUBWMUVJYMWBJXFMDEVEZVCUVJUVEWEUVFWGUVJUVDWDDEX
      FMLAUOVFUVJYMWBWFAUVKUPURUVJYSWJUUAWLXFMWIEVEUVJYTWKYMWBAXFMCEVEUVKVDURVI
      UVJUUFWRYGWTUVJUUDWPUUEWQXFMWOEVEUVJYMWBCEUVKVFURUVJYFWSXFMXFMGEVEUVJVRUR
      VAVAVJVLVMVNVOVPVQ $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d q r w x A $.  $d q r w x V $.  $d q r w x W $.
    lmodlemb.v $e |- V = ( vbase ` W ) $.
    lmodlemb.a $e |- A = ( vadd ` W ) $.
    lmodlemb.g $e |- G = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. }
        $.
    $( Lemma for properties of a left module. $)
    lmodlemb $p |- ( W e. LMod -> ( W e. Ring /\ G e. Abel ) ) $=
      ( vr vw vx vq wcel cv cfv co wceq w3a wa wral eqid clmod crg cabel cplusg
      cvsca cmulr cur cbs islmod 3simpa sylbi ) DUALDUBLZBUCLZHMZIMZDUENZOZCLUN
      UOJMZAOUPOUQUNURUPOAOPKMZUNDUDNZOUOUPOUSUOUPOUQAOPQUSUNDUFNZOUOUPOUSUQUPO
      PDUGNZUOUPOUOPRRICSJCSHDUHNZSKVCSZQULUMRJIAUTUPVAVBBVCCDHKVCTUTTVATEFUPTV
      BTGUIULUMVDUJUK $.
      $( [8-Dec-2013] $)

    $( The vectors in a left module form an Abelian group. $)
    lmodabl $p |- ( W e. LMod -> G e. Abel ) $=
      ( clmod wcel crg cabel lmodlemb simprd ) DHIDJIBKIABCDEFGLM $.
      $( [8-Dec-2013] $)
  $}

  $( A left module is a ring. $)
  lmodrng $p |- ( W e. LMod -> W e. Ring ) $=
    ( clmod wcel crg cnx cbs cfv cvbase cplusg cvadd cabel eqid lmodlemb simpld
    cop cpr ) ABCADCEFGAHGZOEIGAJGZOPZKCRSQAQLRLSLMN $.
    $( [8-Dec-2013] $)

  $( A left module (i.e. the left module's ring) is a group. $)
  lmodgrp $p |- ( W e. LMod -> W e. Grp ) $=
    ( clmod wcel crg cgrp lmodrng rnggrp syl ) ABCADCAECAFAGH $.
    $( [12-Jan-2014] $)

  ${
    lmodbn0.b $e |- B = ( Base ` W ) $.
    $( The base set of a left module is nonempty. $)
    lmodbn0 $p |- ( W e. LMod -> B =/= (/) ) $=
      ( clmod wcel cgrp c0 wne lmodgrp grpn0 syl ) BDEBFEAGHBIABCJK $.
      $( [8-Dec-2013] $)
  $}

  ${
    lmodacl.k $e |- K = ( Base ` W ) $.
    lmodacl.p $e |- P = ( +g ` W ) $.
    $( Closure of ring addition for a left module. $)
    lmodacl $p |- ( ( W e. LMod /\ X e. K /\ Y e. K ) -> ( X P Y ) e. K ) $=
      ( clmod wcel crg co lmodrng rngacl syl3an1 ) CHICJIDBIEBIDEAKBICLBACDEFGM
      N $.
      $( [14-Jan-2014] $)
  $}

  ${
    lmodmcl.k $e |- K = ( Base ` W ) $.
    lmodmcl.t $e |- T = ( .r ` W ) $.
    $( Closure of ring multiplication for a left module. $)
    lmodmcl $p |- ( ( W e. LMod /\ X e. K /\ Y e. K ) -> ( X T Y ) e. K ) $=
      ( clmod wcel crg co lmodrng rngcl syl3an1 ) CHICJIDBIEBIDEAKBICLBCADEFGMN
      $.
      $( [14-Jan-2014] $)
  $}

  ${
    lmodvn0.v $e |- V = ( vbase ` W ) $.
    $( The set of vectors in a left module is nonempty. $)
    lmodvn0 $p |- ( W e. LMod -> V =/= (/) ) $=
      ( clmod wcel cnx cbs cfv cop cplusg cvadd cpr cabel cgrp wne eqid lmodabl
      c0 cvv cvbase ablgrp wceq fvex eqeltri grpbase ax-mp grpn0 3syl ) BDEFGHA
      IFJHBKHZILZMEUJNEAROUIUJABCUIPUJPZQUJUAAUJASEAUJGHUBABTHSCBTUCUDAUIUJSUKU
      EUFUGUH $.
      $( [8-Dec-2013] $)
  $}

  ${
    lmodvacl.v $e |- V = ( vbase ` W ) $.
    lmodvacl.a $e |- A = ( vadd ` W ) $.
    $( Closure of vector addition for a left module. $)
    lmodvacl $p |- ( ( W e. LMod /\ X e. V /\ Y e. V ) -> ( X A Y ) e. V ) $=
      ( wcel cnx cbs cfv cop cplusg cvv wceq cvbase fvex eqeltri ax-mp cvadd co
      clmod cpr cgrp cabel eqid lmodabl ablgrp grpbase grpplusg grpcl syl3an1
      syl ) CUBHZIJKBLIMKALUCZUDHZDBHEBHDEAUABHUNUOUEHUPAUOBCFGUOUFZUGUOUHUMBAU
      ODEBNHBUOJKOBCPKNFCPQRBAUONUQUISANHAUOMKOACTKNGCTQRBAUONUQUJSUKUL $.
      $( [8-Dec-2013] $)

    $( Left module vector sum is commutative. $)
    lmodcom $p |- ( ( W e. LMod /\ X e. V /\ Y e. V )
        -> ( X A Y ) = ( Y A X ) ) $=
      ( wcel cnx cbs cfv cop cplusg co wceq cvv cvbase fvex eqeltri ax-mp clmod
      cpr cabel eqid lmodabl grpbase cvadd grpplusg ablcom syl3an1 ) CUAHIJKBLI
      MKALUBZUCHDBHEBHDEANEDANOAUKBCFGUKUDZUEBAUKDEBPHBUKJKOBCQKPFCQRSBAUKPULUF
      TAPHAUKMKOACUGKPGCUGRSBAUKPULUHTUIUJ $.
      $( [1-Jan-2014] $)

    $( Left module vector sum is commutative. $)
    lmodass $p |- ( ( W e. LMod /\ ( X e. V /\ Y e. V /\ Z e. V ) )
        -> ( ( X A Y ) A Z ) = ( X A ( Y A Z ) ) ) $=
      ( wcel cnx cbs cfv cop cplusg co wceq cvv cvbase fvex eqeltri clmod cabel
      cpr cgrp w3a lmodabl ablgrp syl grpbase ax-mp cvadd grpplusg grpass sylan
      eqid ) CUAIZJKLBMJNLAMUCZUDIZDBIEBIFBIUEDEAOFAODEFAOAOPUPUQUBIURAUQBCGHUQ
      UOZUFUQUGUHBAUQDEFBQIBUQKLPBCRLQGCRSTBAUQQUSUIUJAQIAUQNLPACUKLQHCUKSTBAUQ
      QUSULUJUMUN $.
      $( [10-Jan-2014] $)

    $( Commutative/associative law for left module vector sum. $)
    lmod4 $p |- ( ( W e. LMod /\ ( X e. V /\ Y e. V ) /\ ( Z e. V /\ U e. V ) )
        -> ( ( X A Y ) A ( Z A U ) ) = ( ( X A Z ) A ( Y A U ) ) ) $=
      ( wcel cnx cbs cfv cop cplusg wa co wceq cvv cvbase clmod cabel eqid fvex
      cpr lmodabl eqeltri grpbase ax-mp cvadd grpplusg abl4 syl3an1 ) DUAJKLMCN
      KOMANUEZUBJECJFCJPGCJBCJPEFAQGBAQAQEGAQFBAQAQRAUNCDHIUNUCZUFCAUNBEFGCSJCU
      NLMRCDTMSHDTUDUGCAUNSUOUHUIASJAUNOMRADUJMSIDUJUDUGCAUNSUOUKUIULUM $.
      $( [4-Feb-2014] $)

    $( Left cancellation law for vector sum. $)
    lmodlcan $p |- ( ( W e. LMod /\ ( X e. V /\ Y e. V /\ Z e. V ) )
           -> ( ( Z A X ) = ( Z A Y ) <-> X = Y ) ) $=
      ( wcel cnx cbs cfv cop cplusg co wceq cvv cvbase fvex eqeltri cpr cgrp wb
      clmod w3a cabel eqid lmodabl ablgrp syl grpbase ax-mp cvadd grplcan sylan
      grpplusg ) CUDIZJKLBMJNLAMUAZUBIZDBIEBIFBIUEFDAOFEAOPDEPUCUQURUFIUSAURBCG
      HURUGZUHURUIUJBAURDEFBQIBURKLPBCRLQGCRSTBAURQUTUKULAQIAURNLPACUMLQHCUMSTB
      AURQUTUPULUNUO $.
      $( [12-Jan-2014] $)
  $}

  ${
    lmodvscl.k $e |- K = ( Base ` W ) $.
    lmodvscl.v $e |- V = ( vbase ` W ) $.
    lmodvscl.s $e |- S = ( vsca ` W ) $.
    $( Closure of scalar product for a left module. $)
    lmodvscl $p |- ( ( W e. LMod /\ R e. K /\ X e. V ) -> ( R S X ) e. V ) $=
      ( clmod wcel w3a co cfv wceq cplusg wa cnx cop eqid cvadd cmulr cur simp1
      simp2 simp3 cbs cpr lmodlema syl122anc simpl1 syl ) EJKZACKZFDKZLZAFBMZDK
      ZAFFEUANZMBMUQUQUSMZOZAAEPNZMFBMUTOZLAAEUBNZMFBMAUQBMOEUCNZFBMFOQZQZURUPU
      MUNUNUOUOVGUMUNUOUDUMUNUOUEZVHUMUNUOUFZVIUSVBAABVDVERUGNDSRPNUSSUHZCDEFFG
      VBTVDTHUSTIVETVJTUIUJURVAVCVFUKUL $.
      $( [8-Dec-2013] $)
  $}

  ${
    lmodvsdi1.k $e |- K = ( Base ` W ) $.
    lmodvsdi1.v $e |- V = ( vbase ` W ) $.
    lmodvsdi1.a $e |- A = ( vadd ` W ) $.
    lmodvsdi1.s $e |- S = ( vsca ` W ) $.
    $( Distributive law for scalar product. $)
    lmodvsdi1 $p |- ( ( W e. LMod /\ R e. K
          /\ ( X e. V /\ Y e. V ) )
       -> ( R S ( X A Y ) ) = ( ( R S X ) A ( R S Y ) ) ) $=
      ( wcel wa w3a co wceq cplusg cfv eqid clmod cmulr cur simp1 simp3r simp3l
      simp2 cnx cbs cop cpr lmodlema syl122anc simpl2 syl ) FUAMZBDMZGEMZHEMZNZ
      OZBGCPZEMZBGHAPCPVBBHCPAPQZBBFRSZPGCPVBVBAPQZOBBFUBSZPGCPBVBCPQFUCSZGCPGQ
      NZNZVDVAUPUQUQUSURVJUPUQUTUDUPUQUTUGZVKUPUQURUSUEUPUQURUSUFAVEBBCVGVHUHUI
      SEUJUHRSAUJUKZDEFHGIVETVGTJKLVHTVLTULUMVCVDVFVIUNUO $.
      $( [10-Jan-2014] $)
  $}

  ${
    lmodvsdi2.k $e |- K = ( Base ` W ) $.
    lmodvsdi2.p $e |- P = ( +g ` W ) $.
    lmodvsdi2.v $e |- V = ( vbase ` W ) $.
    lmodvsdi2.a $e |- A = ( vadd ` W ) $.
    lmodvsdi2.s $e |- S = ( vsca ` W ) $.
    $( Distributive law for scalar product. $)
    lmodvsdi2 $p |- ( ( W e. LMod /\ ( Q e. K /\ R e. K )
          /\ X e. V )
       -> ( ( Q P R ) S X ) = ( ( Q S X ) A ( R S X ) ) ) $=
      ( wcel wa co wceq cfv eqid clmod w3a cmulr cur simp1 simp2l simp3 cnx cbs
      simp2r cop cplusg cpr lmodlema syl122anc simpl3 syl ) HUAOZCFOZDFOZPZIGOZ
      UBZDIEQZGOZDIIAQEQVDVDAQRZCDBQIEQCIEQVDAQRZUBCDHUCSZQIEQCVDEQRHUDSZIEQIRP
      ZPZVGVCURUSUTVBVBVKURVAVBUEURUSUTVBUFURUSUTVBUJURVAVBUGZVLABCDEVHVIUHUISG
      UKUHULSAUKUMZFGHIIJKVHTLMNVITVMTUNUOVEVFVGVJUPUQ $.
      $( [10-Jan-2014] $)
  $}

  ${
    lmodvsass.k $e |- K = ( Base ` W ) $.
    lmodvsass.t $e |- T = ( .r ` W ) $.
    lmodvsass.v $e |- V = ( vbase ` W ) $.
    lmodvsass.s $e |- S = ( vsca ` W ) $.
    $( Associative law for scalar product. $)
    lmodvsass $p |- ( ( W e. LMod /\ ( Q e. K /\ R e. K )
          /\ X e. V )
      -> ( ( Q T R ) S X ) = ( Q S ( R S X ) ) ) $=
      ( wcel wa w3a co cfv wceq cplusg eqid clmod cvadd cur simp1 simp2l simp2r
      simp3 cnx cbs cop cpr lmodlema syl122anc simprl syl ) GUAMZAEMZBEMZNZHFMZ
      OZBHCPZFMBHHGUBQZPCPVBVBVCPRABGSQZPHCPAHCPVBVCPROZABDPHCPAVBCPRZGUCQZHCPH
      RZNNZVFVAUPUQURUTUTVIUPUSUTUDUPUQURUTUEUPUQURUTUFUPUSUTUGZVJVCVDABCDVGUHU
      IQFUJUHSQVCUJUKZEFGHHIVDTJKVCTLVGTVKTULUMVEVFVHUNUO $.
      $( [10-Jan-2014] $)
  $}

  ${
    $d x S $.  $d x U $.  $d x V $.  $d x W $.  $d x X $.
    lmodvs1.v $e |- V = ( vbase ` W ) $.
    lmodvs1.s $e |- S = ( vsca ` W ) $.
    lmodvs1.u $e |- U = ( 1r ` W ) $.
    $( Scalar product with ring unit. $)
    lmodvs1 $p |- ( ( W e. LMod /\ X e. V ) -> ( U S X ) = X ) $=
      ( vx wcel co wceq cbs cfv eqid w3a cplusg wa cnx cop clmod cv wex lmodbn0
      wi c0 wne n0 sylib cvadd cmulr simp1 simp2 simp3 cpr syl122anc simprr syl
      lmodlema 3exp exlimdv mpd imp ) DUAJZECJZBEAKELZVDIUBZDMNZJZIUCZVEVFUEZVD
      VHUFUGVJVHDVHOZUDIVHUHUIVDVIVKIVDVIVEVFVDVIVEPZVGEAKZCJVGEEDUJNZKAKVNVNVO
      KZLVGVGDQNZKEAKVPLPZVGVGDUKNZKEAKVGVNAKLZVFRRZVFVMVDVIVIVEVEWAVDVIVEULVDV
      IVEUMZWBVDVIVEUNZWCVOVQVGVGAVSBSMNCTSQNVOTUOZVHCDEEVLVQOVSOFVOOGHWDOUSUPV
      RVTVFUQURUTVAVBVC $.
      $( [10-Jan-2014] $)
  $}

  ${
    lmod0cl.k $e |- K = ( Base ` W ) $.
    lmod0cl.z $e |- Z = ( 0g ` W ) $.
    $( The ring zero in a left module belongs to the ring base set. $)
    lmod0cl $p |- ( W e. LMod -> Z e. K ) $=
      ( clmod wcel crg lmodrng rng0cl syl ) BFGBHGCAGBIABCDEJK $.
      $( [11-Jan-2014] $)
  $}

  ${
    lmod1cl.k $e |- K = ( Base ` W ) $.
    lmod1cl.u $e |- U = ( 1r ` W ) $.
    $( The ring unit in a left module belongs to the ring base set. $)
    lmod1cl $p |- ( W e. LMod -> U e. K ) $=
      ( clmod wcel crg lmodrng rngidcl syl ) CFGCHGABGCIBCADEJK $.
      $( [11-Jan-2014] $)
  $}

  $c 0v $.

  $( Extend class notation with zero vector. $)
  czv $a class 0v $.

  $( Def. 8.5.13, p. 219. $)
  $( Define zero vector. $)
  df-zv $a |- 0v = ( v e. _V |-> ( 0g ` { <. ( Base ` ndx ) , ( vbase ` v ) >.
         , <. ( +g ` ndx ) , ( vadd ` v ) >. } ) ) $.

  ${
    $d w A $.  $d w V $.  $d w W $.
    0vval.v $e |- V = ( vbase ` W ) $.
    0vval.a $e |- A = ( vadd ` W ) $.
    0vval.z $e |- Z = ( 0v ` W ) $.
    0vval.u $e |- U = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( Value of the zero vector. $)
    0vval $p |- ( W e. X -> Z = ( 0g ` U ) ) $=
      ( vw wcel cvv c0g cfv wceq czv cop cvbase cvadd elisset cnx cbs cplusg cv
      cpr fveq2 syl6eqr opeq2d preq12d fveq2d df-zv fvex fvmpt fveq2i 3eqtr4g
      syl ) DELDMLZFBNOZPDEUAURDQOUBUCOZCRZUBUDOZARZUFZNOZFUSKDUTKUEZSOZRZVBVFT
      OZRZUFZNOVEMQVFDPZVKVDNVLVHVAVJVCVLVGCUTVLVGDSOCVFDSUGGUHUIVLVIAVBVLVIDTO
      AVFDTUGHUHUIUJUKKULVDNUMUNIBVDNJUOUPUQ $.
      $( [10-Jan-2014] $)
  $}

  ${
    0vcl.v $e |- V = ( vbase ` W ) $.
    0vcl.z $e |- Z = ( 0v ` W ) $.
    $( The zero vector is a vector. $)
    0vcl $p |- ( W e. LMod -> Z e. V ) $=
      ( clmod wcel cnx cbs cfv cop cplusg cvadd cpr c0g eqid 0vval cabel cvbase
      cvv cgrp lmodabl ablgrp wceq fvex eqeltri grpbase ax-mp grpidcl eqeltrd
      3syl ) BFGZCHIJAKHLJBMJZKNZOJZAUMUNABFCDUMPZEUNPZQULUNRGUNUAGUOAGUMUNABDU
      PUQUBUNUCAUNUOATGAUNIJUDABSJTDBSUEUFAUMUNTUQUGUHUOPUIUKUJ $.
      $( [10-Jan-2014] $)
  $}

  ${
    0vlid.v $e |- V = ( vbase ` W ) $.
    0vlid.a $e |- A = ( vadd ` W ) $.
    0vlid.z $e |- Z = ( 0v ` W ) $.
    $( Left identity law for the zero vector. $)
    0vlid $p |- ( ( W e. LMod /\ X e. V ) -> ( Z A X ) = X ) $=
      ( clmod wcel co cnx cbs cfv cop cplusg wceq eqid cvv cvbase cpr c0g 0vval
      opreq1d adantr cgrp cabel lmodabl ablgrp fvex eqeltri grpbase ax-mp cvadd
      wa syl grpplusg grplid sylan eqtrd ) CIJZDBJZUOEDAKZLMNBOLPNAOUAZUBNZDAKZ
      DVAVCVFQVBVAEVEDAAVDBCIEFGHVDRZUCUDUEVAVDUFJZVBVFDQVAVDUGJVHAVDBCFGVGUHVD
      UIUPBAVDVEDBSJBVDMNQBCTNSFCTUJUKBAVDSVGULUMASJAVDPNQACUNNSGCUNUJUKBAVDSVG
      UQUMVERURUSUT $.
      $( [10-Jan-2014] $)

    $( Right identity law for the zero vector. $)
    0vrid $p |- ( ( W e. LMod /\ X e. V ) -> ( X A Z ) = X ) $=
      ( clmod wcel wa co wceq 0vcl adantr lmodcom mpd3an3 0vlid eqtrd ) CIJZDBJ
      ZKDEALZEDALZDTUAEBJZUBUCMTUDUABCEFHNOABCDEFGPQABCDEFGHRS $.
      $( [10-Jan-2014] $)

    $( Identity equivalent to the value of the zero vector.  Provides a
       convenient way to compute the value. $)
    0vid $p |- ( ( W e. LMod /\ X e. V ) -> ( ( X A X ) = X <-> Z = X ) ) $=
      ( clmod wcel wceq cnx cbs cfv cop cplusg eqid cvv cvbase fvex wa cpr cgrp
      co c0g wb cabel lmodabl ablgrp eqeltri grpbase ax-mp cvadd grpplusg grpid
      syl sylan 0vval adantr eqeq1d bitr4d ) CIJZDBJZUAZDDAUDDKZLMNBOLPNAOUBZUE
      NZDKZEDKVBVFUCJZVCVEVHUFVBVFUGJVIAVFBCFGVFQZUHVFUIUPBAVFVGDBRJBVFMNKBCSNR
      FCSTUJBAVFRVJUKULARJAVFPNKACUMNRGCUMTUJBAVFRVJUNULVGQUOUQVDEVGDVBEVGKVCAV
      FBCIEFGHVJURUSUTVA $.
      $( [9-Mar-2014] $)
  $}

  ${
    lmod0vs.o $e |- O = ( 0g ` W ) $.
    lmod0vs.v $e |- V = ( vbase ` W ) $.
    lmod0vs.s $e |- S = ( vsca ` W ) $.
    lmod0vs.z $e |- Z = ( 0v ` W ) $.
    $( Zero times a vector is the zero vector.  Equation 1a of [Kreyszig]
       p. 51. $)
    lmod0vs $p |- ( ( W e. LMod /\ X e. V ) -> ( O S X ) = Z ) $=
      ( clmod wcel wa co cvadd cfv wceq eqid opreq1d adantr cur cplusg cgrp cbs
      0vrid lmodgrp lmod1cl grprid syl11anc lmod0cl lmodvsdi2 syl121anc lmodvs1
      simpl simpr 3eqtr3d 3eqtr2rd wb lmodvscl syl111anc 0vcl lmodlcan syl13anc
      mpbid ) DKLZECLZMZEBEANZDOPZNZEFVINZQZVHFQZVGVKEDUAPZEANZVHVINZVJVICDEFHV
      IRZJUEVGVNBDUBPZNZEANZVOVPEVEVTVOQVFVEVSVNEAVEDUCLVNDUDPZLZVSVNQDUFVNWADW
      ARZVNRZUGZWAVRDBVNWCVRRZGUHUISTVGVEWBBWALZVFVTVPQVEVFUNZVEWBVFWETVEWGVFWA
      DBWCGUJTZVEVFUOZVIVRVNBAWACDEWCWFHVQIUKULAVNCDEHIWDUMZUPVGVOEVHVIWKSUQVGV
      EVHCLZFCLZVFVLVMURWHVGVEWGVFWLWHWIWJBAWACDEWCHIUSUTVEWMVFCDFHJVATWJVICDVH
      FEHVQVBVCVD $.
      $( [12-Jan-2014] $)
  $}

  ${
    lmodvs0.k $e |- K = ( Base ` W ) $.
    lmodvs0.s $e |- S = ( vsca ` W ) $.
    lmodvs0.z $e |- Z = ( 0v ` W ) $.
    $( Anything times the zero vector is the zero vector.  Equation 1b of
       [Kreyszig] p. 51. $)
    lmodvs0 $p |- ( ( W e. LMod /\ X e. K ) -> ( X S Z ) = Z ) $=
      ( clmod wcel wa co c0g cfv cmulr cvbase wceq simpl eqid adantr simpr 0vcl
      lmod0cl lmodvsass syl121anc lmod0vs mpdan opreq2d crg lmodrng rngrz sylan
      eqtr2d opreq1d 3eqtrd ) CIJZDBJZKZDEALZDCMNZCONZLZEALZUTEALZEURVCDVDALZUS
      URUPUQUTBJZECPNZJZVCVEQUPUQRUPUQUAUPVFUQBCUTFUTSZUCTUPVHUQVGCEVGSZHUBZTDU
      TAVABVGCEFVASZVJGUDUEUPVEUSQUQUPVDEDAUPVHVDEQZVKAUTVGCEEVIVJGHUFUGZUHTUMU
      RVBUTEAUPCUIJUQVBUTQCUJBCVADUTFVLVIUKULUNUPVMUQVNTUO $.
      $( [12-Jan-2014] $)
  $}

  $c LSubSp $.

  $( Extend class notation with all (not necessarily closed) linear subspaces
     of a left module or left vector space. $)
  clss $a class LSubSp $.

  ${
    $d a b s x w $.
    $( Define the set of all (not necessarily closed) linear subspaces of a
       left module or left vector space. $)
    df-lss $a |- LSubSp = ( w e. _V |-> { s e. ~P ( vbase ` w ) | ( s =/= (/)
        /\ A. a e. s A. b e. s A. x e. ( Base ` w )
           ( a ( vadd ` w ) ( x ( vsca ` w ) b ) ) e. s ) } ) $.
  $}

  ${
    $d w x B $.  $d w P $.  $d w T $.  $d s w V $.  $d a b s w x W $.
    lssset.b $e |- B = ( Base ` W ) $.
    lssset.v $e |- V = ( vbase ` W ) $.
    lssset.p $e |- P = ( vadd ` W ) $.
    lssset.t $e |- T = ( vsca ` W ) $.
    lssset.s $e |- S = ( LSubSp ` W ) $.
    $( The set of all (not necessarily closed) linear subspaces of a left
       module or left vector space. $)
    lssset $p |- ( W e. X -> S = { s e. ~P V | ( s =/= (/)
         /\ A. a e. s A. b e. s A. x e. B ( a P ( x T b ) ) e. s ) } ) $=
      ( wcel cv wral cfv vw cvv c0 wne co wa crab wceq elisset clss cvsca cvadd
      cpw cbs cvbase fveq2 syl6eqr pweqd eqidd opreqd opreq123d eleq1d 2ralbidv
      raleqbidv anbi2d rabeqbidv df-lss fvex eqeltri pwex rabex fvmpt syl5eq
      syl ) GHQGUBQZDIRZUCUDZJRZARZKRZEUEZCUEZVPQZABSZKVPSJVPSZUFZIFUMZUGZUHGHU
      IVODGUJTWHPUAGVQVRVSVTUARZUKTZUEZWIULTZUEZVPQZAWIUNTZSZKVPSJVPSZUFZIWIUOT
      ZUMZUGWHUBUJWIGUHZWRWFIWTWGXAWSFXAWSGUOTZFWIGUOUPMUQURXAWQWEVQXAWPWDJKVPV
      PXAWNWCAWOBXAWOGUNTBWIGUNUPLUQXAWMWBVPXAVRVRWKWAWLCXAWLGULTCWIGULUPNUQXAV
      RUSXAWJEVSVTXAWJGUKTEWIGUKUPOUQUTVAVBVDVCVEVFAUAIJKVGWFIWGFFXBUBMGUOVHVIV
      JVKVLVMVN $.
      $( [8-Dec-2013] $)

    $d s B $.  $d s P $.  $d s T $.  $d a b s x U $.
    $( The predicate "is a subspace" (of a left module or left vector
       space). $)
    islss $p |- ( W e. X -> ( U e. S <-> ( U C_ V /\ U =/= (/)
          /\ A. a e. U A. b e. U A. x e. B ( a P ( x T b ) ) e. U ) ) ) $=
      ( vs wcel cv wral c0 wne co wa cpw crab wss w3a lssset eleq2d neeq1 eleq2
      wceq ralbidv raleqbi1dv anbi12d elrab 3anass cvbase cfv cvv eqeltri elpw2
      fvex 3anbi1i 3bitr2i syl6bb ) HIRZFDRFQSZUAUBZJSASKSEUCCUCZVIRZABTZKVITZJ
      VITZUDZQGUEZUFZRZFGUGZFUAUBZVKFRZABTZKFTZJFTZUHZVHDVRFABCDEGHIQJKLMNOPUIU
      JVSFVQRZWAWEUDZUDWGWAWEUHWFVPWHQFVQVIFUMZVJWAVOWEVIFUAUKVNWDJVIFVMWCKVIFW
      IVLWBABVIFVKULUNUOUOUPUQWGWAWEURWGVTWAWEFGGHUSUTVAMHUSVDVBVCVEVFVG $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x W $.  $d a b x ph $.
    islssd.b $e |- ( ph -> B = ( Base ` W ) ) $.
    islssd.v $e |- ( ph -> V = ( vbase ` W ) ) $.
    islssd.p $e |- ( ph -> P = ( vadd ` W ) ) $.
    islssd.t $e |- ( ph -> T = ( vsca ` W ) ) $.
    islssd.s $e |- ( ph -> S = ( LSubSp ` W ) ) $.
    islssd.u $e |- ( ph -> U C_ V ) $.
    islssd.z $e |- ( ph -> U =/= (/) ) $.
    islssd.c $e |- ( ( ph /\ ( a e. U /\ b e. U /\ x e. B ) ) ->
            ( a P ( x T b ) ) e. U ) $.
    $( Properties that determine a subspace of a left module or left vector
       space. $)
    islssd $p |- ( ( ph /\ W e. X ) -> U e. S ) $=
      ( wcel wa clss cfv cvbase wss c0 wne cv cvsca co cvadd cbs sseqtrd adantr
      wral w3a wi 3exp2 imp32 wb eleq2d eqidd opreqd opreq123d 3imtr3d ralrimiv
      eleq1d ralrimivva 3jca eqid islss adantl mpbird wceq eleqtrrd ) AIJUAZUBZ
      GIUCUDZEVRGVSUAZGIUEUDZUFZGUGUHZKUIZBUIZLUIZIUJUDZUKZIULUDZUKZGUAZBIUMUDZ
      UPZLGUPKGUPZUQZVRWBWCWNAWBVQAGHWARNUNUOAWCVQSUOAWNVQAWMKLGGAWDGUAZWFGUAZU
      BZUBZWKBWLWSWECUAZWDWEWFFUKZDUKZGUAZWEWLUAZWKAWPWQWTXCURAWPWQWTXCTUSUTAWT
      XDVAWRACWLWEMVBUOAXCWKVAWRAXBWJGAWDWDXAWHDWIOAWDVCAFWGWEWFPVDVEVHUOVFVGVI
      UOVJVQVTWOVAABWLWIVSWGGWAIJKLWLVKWAVKWIVKWGVKVSVKVLVMVNAEVSVOVQQUOVP $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x V $.  $d a b x W $.
    lssss.v $e |- V = ( vbase ` W ) $.
    lssss.s $e |- S = ( LSubSp ` W ) $.
    $( A subspace is a set of vectors. $)
    lssss $p |- ( ( W e. X /\ U e. S ) -> U C_ V ) $=
      ( va vx vb wcel wss c0 wne cv cvsca cfv co wral eqid cvadd cbs w3a syl6bi
      islss simp1 imp ) DEKZBAKZBCLZUHUIUJBMNZHOIOJODPQZRDUAQZRBKIDUBQZSJBSHBSZ
      UCUJIUNUMAULBCDEHJUNTFUMTULTGUEUJUKUOUFUDUG $.
      $( [8-Dec-2013] $)

    $( A subspace member is a vector. $)
    lssel $p |- ( ( W e. Y /\ U e. S /\ X e. U ) -> X e. V ) $=
      ( wcel wa lssss sseld 3impia ) DFIZBAIZEBIECINOJBCEABCDFGHKLM $.
      $( [11-Jan-2014] $)

    $( The set of vectors in a left module is a subspace. $)
    lss1 $p |- ( W e. LMod -> V e. S ) $=
      ( vx va vb clmod wcel cbs cfv cvadd eqidd wceq a1i eqid cv co syl111anc
      cvsca cvbase clss wss ssid czv c0 wne 0vcl syl w3a wa simpl simpr1 simpr3
      ne0i simpr2 lmodvscl lmodvacl islssd anidms ) CIJZBAJVBFCKLZCMLZACUALZBBC
      IGHVBVCNBCUBLOVBDPVBVDNVBVENACUCLOVBEPBBUDVBBUEPVBCUFLZBJBUGUHBCVFDVFQUIB
      VFUPUJVBGRZBJZHRZBJZFRZVCJZUKZULZVBVHVKVIVESZBJZVGVOVDSBJVBVMUMZVBVHVJVLU
      NVNVBVLVJVPVQVBVHVJVLUOVBVHVJVLUQVKVEVCBCVIVCQDVEQURTVDBCVGVODVDQUSTUTVA
      $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x W $.
    lssn0.s $e |- S = ( LSubSp ` W ) $.
    $( A subspace is not empty. $)
    lssn0 $p |- ( ( W e. X /\ U e. S ) -> U =/= (/) ) $=
      ( va vx vb wcel c0 wne cvbase cfv wss cv cvsca co cvadd wral eqid cbs w3a
      islss simp2 syl6bi imp ) CDIZBAIZBJKZUGUHBCLMZNZUIFOGOHOCPMZQCRMZQBIGCUAM
      ZSHBSFBSZUBUIGUNUMAULBUJCDFHUNTUJTUMTULTEUCUKUIUOUDUEUF $.
      $( [12-Jan-2014] $)
  $}

  ${
    $d x y z B $.  $d x y z P $.  $d x y z T $.  $d x y z U $.  $d x y z W $.
    $d x y z X $.  $d y z Y $.  $d z Z $.
    lsscl.b $e |- B = ( Base ` W ) $.
    lsscl.p $e |- P = ( vadd ` W ) $.
    lsscl.t $e |- T = ( vsca ` W ) $.
    lsscl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure property of a subspace. $)
    lsscl $p |- ( ( ( W e. V /\ U e. S ) /\ ( X e. U /\ Y e. U /\ Z e. B ) )
       -> ( X P ( Z T Y ) ) e. U ) $=
      ( vx vz vy wcel co wral w3a cvbase cfv wss c0 wne cv wi eqid islss opreq1
      wa wceq eleq1d ralbidv opreq2 opreq2d rcla42v rcla4cv syl6com exp3a 3impd
      3ad2ant3 syl6bi imp31 ) GFRZECRZHERZIERZJARZUAZHJIDSZBSZERZVFVGEGUBUCZUDZ
      EUEUFZOUGZPUGZQUGZDSZBSZERZPATZQETOETZUAVKVNUHZPABCDEVOGFOQKVOUILMNUJWEVP
      WFVQWEVHVIVJVNWEVHVIVJVNUHZVHVIULWEHVSIDSZBSZERZPATZWGWDWKHWABSZERZPATOQH
      IEEVRHUMZWCWMPAWNWBWLEVRHWABUKUNUOVTIUMZWMWJPAWOWLWIEWOWAWHHBVTIVSDUPUQUN
      UOURWJVNPJAVSJUMZWIVMEWPWHVLHBVSJIDUKUQUNUSUTVAVBVCVDVE $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d x S $.  $d x U $.  $d x y z W $.  $d x y z Z $.
    lss0cl.z $e |- Z = ( 0v ` W ) $.
    lss0cl.s $e |- S = ( LSubSp ` W ) $.
    $( The zero vector belongs to every subspace. $)
    lss0cl $p |- ( ( W e. LMod /\ U e. S ) -> Z e. U ) $=
      ( vx clmod wcel wa cv wex c0 cfv co wceq eqid 3ad2ant1 syl11anc opreq1d
      wne lssn0 sylib w3a cur cminusg cvsca cvadd c0g cplusg cbs cvbase lmod1cl
      n0 simp1 cgrp lmodgrp grpinvcl lssel lmodvsdi2 syl121anc grprinv 3eqtr3rd
      lmodvs1 lmod0vs eqtrd simp2 simp3 lsscl syl23anc eqeltrrd 3expia exlimdv
      mpd ) CHIZBAIZJZGKZBIZGLZDBIZVQBMUAVTABCHFUBGBUNUCVQVSWAGVOVPVSWAVOVPVSUD
      ZVRCUENZCUFNZNZVRCUGNZOZCUHNZOZDBWBWICUINZVRWFOZDWBWCWECUJNZOZVRWFOZWCVRW
      FOZWGWHOZWKWIWBVOWCCUKNZIZWEWQIZVRCULNZIZWNWPPVOVPVSUOZVOVPWRVSWCWQCWQQZW
      CQZUMZRVOVPWSVSVOCUPIZWRWSCUQZXEWQWLCWDWCXCWLQZWDQZURSRZABWTCVRHWTQZFUSZW
      HWLWCWEWFWQWTCVRXCXHXKWHQZWFQZUTVAVOVPWNWKPVSVOWMWJVRWFVOXFWRWMWJPXGXEWQW
      LCWDWJWCXCXHWJQZXIVBSTRWBWOVRWGWHWBVOXAWOVRPXBXLWFWCWTCVRXKXNXDVDSTVCWBVO
      XAWKDPXBXLWFWJWTCVRDXOXKXNEVESVFWBVOVPVSVSWSWIBIXBVOVPVSVGVOVPVSVHZXPXJWQ
      WHAWFBHCVRVRWEXCXMXNFVIVJVKVLVMVN $.
      $( [12-Jan-2014] $)

    $( The singleton of the zero vector is a subspace. $)
    lsssn0 $p |- ( W e. LMod -> { Z } e. S ) $=
      ( vz vx vy clmod wcel cfv eqidd wceq a1i eqid czv cv co elsni syl csn cbs
      cvadd cvsca cvbase clss 0vcl snssd c0 wne cvv fvex eqeltri snnz wa simpr1
      simpr2 opreq2d lmodvs0 3ad2antr3 eqtrd opreq12d adantr 0vlid syldan oprex
      w3a elsnc sylibr islssd anidms ) BIJZCUAZAJVLFBUBKZBUCKZABUDKZVMBUEKZBIGH
      VLVNLVLVQLVLVOLVLVPLABUFKMVLENVLCVQVQBCVQOZDUGZUHVMUIUJVLCCBPKUKDBPULUMUN
      NVLGQZVMJZHQZVMJZFQZVNJZVGZUOZVTWDWBVPRZVORZCMWIVMJWGWICCVORZCWGVTCWHCVOW
      GWAVTCMVLWAWCWEUPVTCSTWGWHWDCVPRZCWGWBCWDVPWGWCWBCMVLWAWCWEUQWBCSTURVLWAW
      EWKCMWCVPVNBWDCVNOVPODUSUTVAVBVLWFCVQJZWJCMVLWLWFVSVCVOVQBCCVRVOODVDVEVAW
      ICVTWHVOVFVHVIVJVK $.
      $( [13-Jan-2014] $)
  $}

  ${
    lssvacl.p $e |- P = ( vadd ` W ) $.
    lssvacl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of vector addition in a subspace. $)
    lssvacl $p |- ( ( ( W e. LMod /\ U e. S ) /\ ( X e. U /\ Y e. U ) )
       -> ( X P Y ) e. U ) $=
      ( clmod wcel wa cur cfv cvsca co cvbase wceq simpll simplr eqid syl111anc
      simprr lssel lmodvs1 syl11anc opreq2d cbs lmod1cl ad2antrr lsscl syl23anc
      simprl eqeltrrd ) DIJZCBJZKZECJZFCJZKZKZEDLMZFDNMZOZAOZEFAOCUTVCFEAUTUNFD
      PMZJZVCFQUNUOUSRZUTUNUOURVFVGUNUOUSSZUPUQURUBZBCVEDFIVETZHUCUAVBVAVEDFVJV
      BTZVATZUDUEUFUTUNUOUQURVADUGMZJZVDCJVGVHUPUQURULVIUNVNUOUSVAVMDVMTZVLUHUI
      VMABVBCIDEFVAVOGVKHUJUKUM $.
      $( [11-Jan-2014] $)
  $}

  ${
    lssvscl.b $e |- B = ( Base ` W ) $.
    lssvscl.t $e |- T = ( vsca ` W ) $.
    lssvscl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of scalar product in a subspace. $)
    lssvscl $p |- ( ( ( W e. LMod /\ U e. S ) /\ ( X e. B /\ Y e. U ) )
       -> ( X T Y ) e. U ) $=
      ( clmod wcel wa czv cfv co cvadd cvbase eqid syl111anc wceq simpll simprl
      simplr simprr lssel lmodvscl 0vlid syl11anc lss0cl adantr lsscl syl23anc
      eqeltrrd ) EKLZDBLZMZFALZGDLZMZMZENOZFGCPZEQOZPZVCDVAUOVCEROZLZVEVCUAUOUP
      UTUBZVAUOURGVFLZVGVHUQURUSUCZVAUOUPUSVIVHUOUPUTUDZUQURUSUEZBDVFEGKVFSZJUF
      TFCAVFEGHVMIUGTVDVFEVCVBVMVDSZVBSZUHUIVAUOUPVBDLZUSURVEDLVHVKUQVPUTBDEVBV
      OJUJUKVLVJAVDBCDKEVBGFHVNIJULUMUN $.
      $( [11-Jan-2014] $)
  $}

  ${
    $d k m n v x y z K $.  $d k m n v x y z T $.  $d m n v x y z V $.
    $d k m n v x y z W $.  $d k m n v x y z X $.
    lss1d.k $e |- K = ( Base ` W ) $.
    lss1d.v $e |- V = ( vbase ` W ) $.
    lss1d.t $e |- T = ( vsca ` W ) $.
    lss1d.s $e |- S = ( LSubSp ` W ) $.
    $( One-dimensional subspace (or zero-dimensional if ` X ` is the zero
       vector). $)
    lss1d $p |- ( ( W e. LMod /\ X e. V )
        -> { v e. V | E. k e. K v = ( k T X ) } e. S ) $=
      ( vm vn wcel co wceq wrex wa cfv vz vx vy clmod crab cvadd cbs a1i cvbase
      eqid cvsca clss wss ssrab2 czv wne 0vcl adantr c0g lmod0cl lmod0vs eqcomd
      cv c0 opreq1 eqeq2d rcla4ev syl11anc eqeq1 rexbidv elrab sylanbrc syl w3a
      ne0i weq cbvrexv anbi2i bitri biid 3anbi123i df-3an reeanv 3bitr2i anbi1i
      an4 ancom 3bitri simp1l simp23l simp3 simp23r lmodvscl syl111anc lmodvacl
      wi cmulr cplusg simp21l simp21r lmodmcl lmodacl simp22l simp22r lmodvsass
      opreq2d simp1r syl121anc eqtr4d opreq12d lmodvsdi2 3expd rexlimdvv syl5bi
      3exp imp4c imp islssd anabss1 ) GUDOZHFOZAVCZDVCZHCPZQZDERZAFUEZBOXTYASZU
      AEGUFTZBCYGFGUDUBUCEGUGTQYHIUHFGUITQYHJUHYIYIQYHYIUJZUHCGUKTQYHKUHBGULTQY
      HLUHYGFUMYHYFAFUNUHYHGUOTZYGOZYGVDUPYHYKFOZYKYDQZDERZYLXTYMYAFGYKJYKUJZUQ
      URYHGUSTZEOZYKYQHCPZQZYOXTYRYAEGYQIYQUJZUTURYHYSYKCYQFGHYKUUAJKYPVAVBYNYT
      DYQEYCYQQYDYSYKYCYQHCVEVFVGVHYFYOAYKFYBYKQYEYNDEYBYKYDVIVJVKVLYGYKVOVMYHU
      BVCZYGOZUCVCZYGOZUAVCZEOZVNZUUBUUFUUDCPZYIPZYGOZUUHUUBMVCZHCPZQZUUDNVCZHC
      PZQZSZNERMERZUUBFOZUUDFOZSZSZUUGSZYHUUKUUHUUTUUNMERZSZUVAUUQNERZSZUUGVNUV
      FUVHSZUUGSUVDUUCUVFUUEUVHUUGUUGUUCUUTUUBYDQZDERZSUVFYFUVKAUUBFAUBVPYEUVJD
      EYBUUBYDVIVJVKUVKUVEUUTUVJUUNDMEDMVPYDUUMUUBYCUULHCVEVFVQVRVSUUEUVAUUDYDQ
      ZDERZSUVHYFUVMAUUDFAUCVPYEUVLDEYBUUDYDVIVJVKUVMUVGUVAUVLUUQDNEDNVPYDUUPUU
      DYCUUOHCVEVFVQVRVSUUGVTWAUVFUVHUUGWBUVIUVCUUGUVIUVBUVEUVGSZSUVBUUSSUVCUUT
      UVEUVAUVGWFUUSUVNUVBUUNUUQMNEEWCVRUVBUUSWGWDWEWHYHUUSUVBUUGUUKYHUURUVBUUG
      UUKWPZWPMNEEYHUULEOZUUOEOZSZUURUVBUVOYHUVRUURUVBVNZUUGUUKYHUVSUUGVNZUUJFO
      ZUUJYDQZDERZUUKUVTXTUUTUUIFOZUWAXTYAUVSUUGWIZUUTUVAUVRUURYHUUGWJUVTXTUUGU
      VAUWDUWEYHUVSUUGWKZUUTUVAUVRUURYHUUGWLUUFCEFGUUDIJKWMWNYIFGUUBUUIJYJWOWNU
      VTUULUUFUUOGWQTZPZGWRTZPZEOZUUJUWJHCPZQZUWCUVTXTUVPUWHEOZUWKUWEUVPUVQUURU
      VBYHUUGWSZUVTXTUUGUVQUWNUWEUWFUVPUVQUURUVBYHUUGWTZUWGEGUUFUUOIUWGUJZXAWNZ
      UWIEGUULUWHIUWIUJZXBWNUVTUUJUUMUWHHCPZYIPZUWLUVTUUBUUMUUIUWTYIUUNUUQUVRUV
      BYHUUGXCUVTUUIUUFUUPCPZUWTUVTUUDUUPUUFCUUNUUQUVRUVBYHUUGXDXFUVTXTUUGUVQYA
      UWTUXBQUWEUWFUWPXTYAUVSUUGXGZUUFUUOCUWGEFGHIUWQJKXEXHXIXJUVTXTUVPUWNYAUWL
      UXAQUWEUWOUWRUXCYIUWIUULUWHCEFGHIUWSJYJKXKXHXIUWBUWMDUWJEYCUWJQYDUWLUUJYC
      UWJHCVEVFVGVHYFUWCAUUJFYBUUJQYEUWBDEYBUUJYDVIVJVKVLXOXLXMXPXNXQXRXS $.
      $( [14-Jan-2014] $)
  $}

  ${
    $d a b x y A $.  $d a b x y S $.  $d a b x y W $.
    lssintcl.s $e |- S = ( LSubSp ` W ) $.
    $( The intersection of a nonempty set of subspaces is a subspace. $)
    lssintcl $p |- ( ( W e. LMod /\ A C_ S /\ A =/= (/) ) -> |^| A e. S ) $=
      ( vx va vb vy clmod wcel wss c0 wne w3a cfv eqidd cv wa simpr eqid cvbase
      cint simp1 cbs cvadd cvsca clss wceq a1i n0 biimpi 3ad2ant3 intss1 adantl
      wex simpl1 simpl2 sseldd lssss syl11anc sstrd exlimdv mpd czv wral lss0cl
      ex ralrimiva fvex elint2 sylibr syl co wel simpll1 simpll2 simplr1 elinti
      ne0i sylc simplr2 simplr3 lsscl syl23anc oprex islssd mpdan ) CIJZABKZALM
      ZNZWHAUBZBJWHWIWJUCWKECUDOZCUEOZBCUFOZWLCUAOZCIFGWKWMPWKWPPWKWNPWKWOPBCUG
      OUHWKDUIWKHQZAJZHUOZWLWPKZWJWHWSWIWJWSHAUJUKULWKWRWTHWKWRWTWKWRRZWLWQWPWR
      WLWQKWKWQAUMUNXAWHWQBJZWQWPKWHWIWJWRUPZXAABWQWHWIWJWRUQWKWRSURZBWQWPCIWPT
      DUSUTVAVGVBVCWKCVDOZWLJZWLLMWKXEWQJZHAVEXFWKXGHAXAWHXBXGXCXDBWQCXEXETDVFU
      TVHHXEACVDVIVJVKWLXEVSVLWKFQZWLJZGQZWLJZEQZWMJZNZRZXHXLXJWOVMZWNVMZWQJZHA
      VEXQWLJXOXRHAXOWRRZWHXBFHVNZGHVNZXMXRWHWIWJXNWRVOXSABWQWHWIWJXNWRVPXOWRSZ
      URXSXIWRXTXIXKXMWKWRVQYBXHAWQVRVTXSXKWRYAXIXKXMWKWRWAYBXJAWQVRVTXIXKXMWKW
      RWBWMWNBWOWQICXHXJXLWMTWNTWOTDWCWDVHHXQAXHXPWNWEVJVKWFWG $.
      $( [8-Dec-2013] $)

    $( The intersection of two subspaces is a subspace. $)
    lssincl $p |- ( ( W e. LMod /\ T e. S /\ U e. S ) -> ( T i^i U ) e. S ) $=
      ( clmod wcel w3a cpr cint cin wceq intprg 3adant1 wss c0 wne simp1 3simpc
      wa wb prssg mpbid prnzg 3ad2ant2 lssintcl syl111anc eqeltrrd ) DFGZBAGZCA
      GZHZBCIZJZBCKZAUJUKUNUOLUIBCAAMNULUIUMAOZUMPQZUNAGUIUJUKRULUJUKTZUPUIUJUK
      SUJUKURUPUAUIBCAAAUBNUCUJUIUQUKBCAUDUEUMADEUFUGUH $.
      $( [7-Mar-2014] $)
  $}

  $c LSpan $.

  $( Extend class notation with span of a set of vectors. $)
  clspn $a class LSpan $.

  ${
    $d w s t $.
    $( Define span of a set of vectors of a left module or left vector
       space. $)
    df-lsp $a |- LSpan = ( w e. _V |-> ( s e. ~P ( vbase ` w ) |->
         |^| { t e. ( LSubSp ` w ) | s C_ t } ) ) $.
  $}

  ${
    $d t w S $.  $d s w V $.  $d s t w W $.
    lspval.v $e |- V = ( vbase ` W ) $.
    lspval.s $e |- S = ( LSubSp ` W ) $.
    lspval.n $e |- N = ( LSpan ` W ) $.
    $( The span function for a left vector space (or a left module). $)
    lspfval $p |- ( W e. X
      -> N = ( s e. ~P V |-> |^| { t e. S | s C_ t } ) ) $=
      ( vw wcel cvv cpw cv crab cint cfv cvbase clss cmpt elisset clspn syl6eqr
      wss wceq fveq2 pweqd biidd rabeqbidv inteqd mpteq12dv df-lsp fvex eqeltri
      pwex mptexg ax-mp fvmpt syl5eq syl ) EFLEMLZCGDNZGOAOUEZABPZQZUAZUFEFUBVB
      CEUCRVGJKEGKOZSRZNZVDAVHTRZPZQZUAVGMUCVHEUFZGVJVMVCVFVNVIDVNVIESRZDVHESUG
      HUDUHVNVLVEVNVDVDAVKBVNVKETRBVHETUGIUDVNVDUIUJUKULKAGUMVCMLVGMLDDVOMHESUN
      UOUPGVCVFMUQURUSUTVA $.
      $( [8-Dec-2013] $)

    $d s S $.  $d s t U $.  $d t V $.
    $( The span of a set of vectors (in a left module). $)
    lspval $p |- ( ( W e. LMod /\ U C_ V )
       -> ( N ` U ) = |^| { t e. S | U C_ t } ) $=
      ( vs clmod wcel wss cfv cv crab cint wceq cvv cvbase wa cpw fveq1d adantr
      cmpt lspfval fvex eqeltri elpw2 biimpri adantl wrex lss1 rcla4ev intexrab
      sseq2 sylan sylib sseq1 rabbidv inteqd eqid fvmptg syl11anc eqtrd ) FKLZC
      EMZUAZCDNZCJEUBZJOZAOZMZABPZQZUEZNZCVLMZABPZQZVFVIVQRVGVFCDVPABDEFKJGHIUF
      UCUDVHCVJLZVTSLZVQVTRVGWAVFWAVGCEEFTNSGFTUGUHUIUJUKVHVRABULZWBVFEBLVGWCBE
      FGHUMVRVGAEBVLECUPUNUQVRABUOURJCVOVTVJSVPVKCRZVNVSWDVMVRABVKCVLUSUTVAVPVB
      VCVDVE $.
      $( [8-Dec-2013] $)

    $( The span of a set of vectors is a subspace. $)
    lspcl $p |- ( ( W e. LMod /\ U C_ V ) -> ( N ` U ) e. S ) $=
      ( vt clmod wcel wss wa cfv cv crab cint lspval c0 wne anim1i sseq2 sylibr
      lss1 elrab ne0i syl ssrab2 lssintcl mp3an2 syldan eqeltrd ) EJKZBDLZMZBCN
      BIOZLZIAPZQZAIABCDEFGHRUMUNURSTZUSAKZUODURKZUTUODAKZUNMVBUMVCUNADEFGUDUAU
      QUNIDAUPDBUBUEUCURDUFUGUMURALUTVAUQIAUHURAEGUIUJUKUL $.
      $( [9-Dec-2013] $)
  $}

  ${
    $d t S $.  $d t U $.  $d t W $.
    lspid.s $e |- S = ( LSubSp ` W ) $.
    lspid.n $e |- N = ( LSpan ` W ) $.
    $( The span of a subspace is itself. $)
    lspid $p |- ( ( W e. LMod /\ U e. S ) -> ( N ` U ) = U ) $=
      ( vt clmod wcel wa cfv cv wss crab cint cvbase wceq eqid lssss lspval
      syldan intmin adantl eqtrd ) DHIZBAIZJBCKZBGLMGANOZBUEUFBDPKZMUGUHQABUIDH
      UIRZESGABCUIDUJEFTUAUFUHBQUEGBAUBUCUD $.
      $( [15-Dec-2013] $)
  $}

  ${
    $d t T $.  $d t U $.  $d t V $.  $d t W $.
    lspss.v $e |- V = ( vbase ` W ) $.
    lspss.n $e |- N = ( LSpan ` W ) $.
    $( A span is a set of vectors. $)
    lspssv $p |- ( ( W e. LMod /\ U C_ V ) -> ( N ` U ) C_ V ) $=
      ( clmod wcel wss cfv clss eqid lspcl lssss syldan ) DGHACIABJZDKJZHPCIQAB
      CDEQLZFMQPCDGERNO $.
      $( [22-Feb-2014] $)

    $( Span preserves subset ordering. $)
    lspss $p |- ( ( W e. LMod /\ U C_ V /\ T C_ U )
          -> ( N ` T ) C_ ( N ` U ) ) $=
      ( vt clmod wcel wss w3a cv clss cfv crab cint wi wceq lspval sstr2 adantr
      3ad2ant3 ss2rabdv intss syl simp1 ancoms 3adant1 syl11anc 3adant3 3sstr4d
      sstr eqid ) EIJZBDKZABKZLZAHMZKZHENOZPZQZBUSKZHVAPZQZACOZBCOZURVEVBKVCVFK
      URVDUTHVAURVDUTRZUSVAJUQUOVIUPABUSUAUCUBUDVEVBUEUFURUOADKZVGVCSUOUPUQUGUP
      UQVJUOUQUPVJABDUMUHUIHVAACDEFVAUNZGTUJUOUPVHVFSUQHVABCDEFVKGTUKUL $.
      $( [11-Dec-2013] $)

    $( A set of vectors is a subset of its span. $)
    lspssid $p |- ( ( W e. LMod /\ U C_ V ) -> U C_ ( N ` U ) ) $=
      ( vt clmod wcel wss wa clss cfv crab cint ssintub eqid lspval syl5sseqr
      cv ) DHIACJKAGTJGDLMZNOAABMGAUAPGUAABCDEUAQFRS $.
      $( [6-Feb-2014] $)

    $( The span of a set of vectors is idempotent. $)
    lspidm $p |- ( ( W e. LMod /\ U C_ V )
                  -> ( N ` ( N ` U ) ) = ( N ` U ) ) $=
      ( clmod wcel wss cfv clss wceq eqid lspcl lspid syldan ) DGHACIABJZDKJZHQ
      BJQLRABCDERMZFNRQBDSFOP $.
      $( [22-Feb-2014] $)

    $( The span of union is the span of the union of spans. $)
    lspun $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( N ` ( T u. U ) ) = ( N ` ( ( N ` T ) u. ( N ` U ) ) ) ) $=
      ( clmod wss cun cfv lspssv 3adant3 3adant2 unssd syl11anc lspss syl111anc
      lspssid a1i wcel w3a simp1 unss12 wa 3simpc unss sylib ssun1 ssun2 lspidm
      wceq sseqtrd eqssd ) EHUAZADIZBDIZUBZABJZCKZACKZBCKZJZCKZURUOVCDIUSVCIZUT
      VDIUOUPUQUCZURVAVBDUOUPVADIUQACDEFGLMUOUQVBDIUPBCDEFGLNOURAVAIZBVBIZVEUOU
      PVGUQACDEFGSMUOUQVHUPBCDEFGSNAVABVBUDPUSVCCDEFGQRURVDUTCKZUTURUOUTDIZVCUT
      IVDVIIVFURUOUSDIZVJVFURUPUQUEVKUOUPUQUFABDUGUHZUSCDEFGLPURVAVBUTURUOVKAUS
      IZVAUTIVFVLVMURABUITAUSCDEFGQRURUOVKBUSIZVBUTIVFVLVNURBAUJTBUSCDEFGQROVCU
      TCDEFGQRURUOVKVIUTULVFVLUSCDEFGUKPUMUN $.
      $( [22-Feb-2014] $)
  $}

  ${
    $d k s v K $.  $d v N $.  $d k s v T $.  $d s v V $.  $d k s v W $.
    $d k s v X $.
    lspsn.k $e |- K = ( Base ` W ) $.
    lspsn.v $e |- V = ( vbase ` W ) $.
    lspsn.t $e |- T = ( vsca ` W ) $.
    lspsn.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton of a vector. $)
    lspsn $p |- ( ( W e. LMod /\ X e. V )
        -> ( N ` { X } ) = { v e. V | E. k e. K v = ( k T X ) } ) $=
      ( vs wcel wa cfv cv wceq crab wi clmod csn cin wrex clss snssi eqid lspcl
      co wss sylan2 lssss syldan sseqin2 sylib cint lspval snssg rabbidv inteqd
      adantl eqtr4d eleq2d adantr wel wral visset elintrab eleq2 syl6bb imbi12d
      wb rabid rcla4cv lss1d simpr lmod1cl lmodvs1 eqcomd opreq1 eqeq2d rcla4ev
      cur syl11anc eqeq1 rexbidv elrab sylanbrc a1i embantd simp13 simp11 simp2
      syl5 w3a simp12 simp3 lssvscl syl22anc eqeltrd ralrimiv rexlimdv ad2antrr
      3exp impbid syl5bb bitrd rabbi2dva eqtr3d ) GUANZHFNZOZFHUBZEPZUCZXNAQZCQ
      ZHBUIZRZCDUDZAFSZXLXNFUJZXOXNRXJXKXNGUEPZNZYBXKXJXMFUJZYDHFUFZYCXMEFGJYCU
      GZLUHUKYCXNFGUAJYGULUMXNFUNUOXLXTAFXNXLXPFNZOZXPXNNZXPHMQZNZMYCSZUPZNZXTX
      LYJYOVLYHXLXNYNXPXLXNXMYKUJZMYCSZUPZYNXKXJYEXNYRRYFMYCXMEFGJYGLUQUKXKYNYR
      RXJXKYMYQXKYLYPMYCHYKFURUSUTVAVBVCVDYOYLAMVEZTZMYCVFZYIXTYLMXPYCAVGVHYIUU
      AXTXLUUAXTTYHUUAYAYCNZHYANZYHXTOZTZTXLXTYTUUEMYAYCYKYARZYLUUCYSUUDYKYAHVI
      UUFYSXPYANUUDYKYAXPVIXTAFVMVJVKVNXLUUBUUEXTAYCBCDFGHIJKYGVOXLUUCUUDXTXLXK
      HXRRZCDUDZUUCXJXKVPXLGWCPZDNZHUUIHBUIZRZUUHXJUUJXKUUIDGIUUIUGZVQVDXLUUKHB
      UUIFGHJKUUMVRVSUUGUULCUUIDXQUUIRXRUUKHXQUUIHBVTWAWBWDXTUUHAHFXPHRXSUUGCDX
      PHXRWEWFWGWHUUDXTTXLYHXTVPWIWJWJWNVDXJXTUUATXKYHXJXSUUACDXJXQDNZXSUUAXJUU
      NXSWOZYTMYCUUOYKYCNZYLYSUUOUUPYLWOZXPXRYKXJUUNXSUUPYLWKUUQXJUUPUUNYLXRYKN
      XJUUNXSUUPYLWLUUOUUPYLWMXJUUNXSUUPYLWPUUOUUPYLWQDYCBYKGXQHIKYGWRWSWTXDXAX
      DXBXCXEXFXGXHXI $.
      $( [14-Jan-2014] $)

    $d k v U $.
    $( Member of span of the singleton of a vector. $)
    lspsnel $p |- ( ( W e. LMod /\ X e. V )
       -> ( U e. ( N ` { X } ) <-> ( U e. V /\ E. k e. K U = ( k T X ) ) ) ) $=
      ( vv clmod wcel wa csn cv wceq wrex cfv co crab lspsn eqeq1 rexbidv elrab
      eleq2d syl6bb ) GNOHFOPZBHQEUAZOBMRZCRHAUBZSZCDTZMFUCZOBFOBUMSZCDTZPUJUKU
      PBMACDEFGHIJKLUDUHUOURMBFULBSUNUQCDULBUMUEUFUGUI $.
      $( [22-Feb-2014] $)

    $d k R $.
    $( The scalar product of a vector belongs to the span of its singleton. $)
    lspsneli $p |- ( ( W e. LMod /\ R e. K /\ X e. V )
       -> ( R T X ) e. ( N ` { X } ) ) $=
      ( vk clmod wcel w3a co csn cfv cv wceq wrex lspsnel 3adant2 lmodvscl eqid
      wa wb opreq1 eqeq2d rcla4ev mpan2 3ad2ant2 mpbir2and ) FMNZACNZGENZOAGBPZ
      GQDRNZUQENZUQLSZGBPZTZLCUAZUNUPURUSVCUFUGUOBUQLCDEFGHIJKUBUCABCEFGHIJUDUO
      UNVCUPUOUQUQTZVCUQUEVBVDLACUTATVAUQUQUTAGBUHUIUJUKULUM $.
      $( [22-Feb-2014] $)
  $}

  ${
    $d v N $.  $d k v W $.  $d k v Z $.
    lspsn0.z $e |- Z = ( 0v ` W ) $.
    lspsn0.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton of the zero vector. $)
    lspsn0 $p |- ( W e. LMod -> ( N ` { Z } ) = { Z } ) $=
      ( vv vk clmod wcel csn cfv cv cvsca co wceq wrex crab eqid wa syl lmodvs0
      cbs cvbase lspsn mpdan adantlr eqeq2d rexbidva wb c0 wne lmodbn0 r19.9rzv
      0vcl adantr bitr4d rabbidva rabsn 3eqtrd ) BHIZCJZAKZFLZGLZCBMKZNZOZGBUBK
      ZPZFBUCKZQZVCCOZFVJQZVAUTCVJIZVBVKOVJBCVJRZDUNZFVEGVHAVJBCVHRZVOVERZEUDUE
      UTVIVLFVJUTVCVJIZSZVIVLGVHPZVLVTVGVLGVHVTVDVHIZSVFCVCUTWBVFCOVSVEVHBVDCVQ
      VRDUAUFUGUHUTVLWAUIZVSUTVHUJUKWCVHBVQULVLGVHUMTUOUPUQUTVNVMVAOVPFVJCURTUS
      $.
      $( [15-Jan-2014] $)
  $}

  $c LSSum $.

  $( Extend class notation with subspace sum. $)
  clsm $a class LSSum $.

  ${
    $d w t u x y $.
    $( Define subspace sum. $)
    df-lsm $a |- LSSum = ( w e. _V |->
       ( t e. ~P ( vbase ` w ) , u e. ~P ( vbase ` w ) |->
   { z e. ( vbase ` w ) | E. x e. t E. y e. u z = ( x ( vadd ` w ) y ) } ) ) $.
  $}

  ${
    $d w A $.  $d t u w z V $.  $d t u w x y z W $.
    lsmfval.v $e |- V = ( vbase ` W ) $.
    lsmfval.a $e |- A = ( vadd ` W ) $.
    lsmfval.s $e |- S = ( LSSum ` W ) $.
    $( The subspace sum function (for a left module or left vector space). $)
    lsmfval $p |- ( W e. X
      -> S = ( t e. ~P V , u e. ~P V |->
    { z e. V | E. x e. t E. y e. u z = ( x A y ) } ) ) $=
      ( vw cvv cv wceq wrex cfv cvbase wcel crab cmpt2 elisset clsm cvadd fveq2
      co syl6eqr pweqd opreqd eqeq2d 2rexbidv rabeqbidv mpt2eq123dv df-lsm fvex
      cpw eqeltri pwex mpt2ex fvmpt syl5eq syl ) IJUAIOUAZGEDHURZVFCPZAPZBPZFUH
      ZQZBDPZRAEPZRZCHUBZUCZQIJUDVEGIUESVPMNIEDNPZTSZURZVSVGVHVIVQUFSZUHZQZBVLR
      AVMRZCVRUBZUCVPOUEVQIQZEDVSVSWDVFVFVOWEVRHWEVRITSZHVQITUGKUIZUJZWHWEWCVNC
      VRHWGWEWBVKABVMVLWEWAVJVGWEVTFVHVIWEVTIUFSFVQIUFUGLUIUKULUMUNUOABCNDEUPED
      VFVFVOHHWFOKITUQUSUTZWIVAVBVCVD $.
      $( [28-Jan-2014] $)

    $d t u A $.  $d t u x z T $.  $d u x y z U $.
    $( Subspace sum value (for a left module or left vector space).  Extended
       domain version of ~ lsmval . $)
    lsmvalx $p |- ( ( W e. X /\ T C_ V /\ U C_ V )
       -> ( T S U ) = { z e. V | E. x e. T E. y e. U z = ( x A y ) } ) $=
      ( vt vu wcel co cv wceq wrex wss w3a cpw crab lsmfval 3ad2ant1 opreqd cvv
      cmpt2 cvbase cfv fvex eqeltri elpw2 biimpri 3ad2ant2 3ad2ant3 rabex rexeq
      a1i rabbidv rexbidv eqid ovmpt2g syl111anc eqtrd ) IJPZFHUAZGHUAZUBZFGEQF
      GNOHUCZVKCRARBRDQSZBORZTZANRZTZCHUDZUIZQZVLBGTZAFTZCHUDZVJEVRFGVGVHEVRSVI
      ABCONDEHIJKLMUEUFUGVJFVKPZGVKPZWBUHPZVSWBSVHVGWCVIWCVHFHHIUJUKUHKIUJULUMZ
      UNUOUPVIVGWDVHWDVIGHWFUNUOUQWEVJWACHWFURUTNOFGVKVKVQWBVRVNAFTZCHUDUHVOFSV
      PWGCHVNAVOFUSVAVMGSZWGWACHWHVNVTAFVLBVMGUSVBVAVRVCVDVEVF $.
      $( [28-Jan-2014] $)

    $d x A $.  $d y T $.  $d x y V $.  $d x y z X $.
    $( Subspace sum membership (for a left module or left vector space).
       Extended domain version of ~ lsmelval . $)
    lsmelvalx $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( X e. ( T S U ) <-> E. y e. T E. z e. U X = ( y A z ) ) ) $=
      ( vx clmod wcel wss cv wceq wrex wa co crab lsmvalx eleq2d eqeq1 2rexbidv
      w3a elrab syl6bb wi simpl1 simpl2 simprl sseldd simpl3 simprr ex lmodvacl
      3jca eleq1a syl syl6 rexlimdvv pm4.71rd bitr4d ) HNOZEGPZFGPZUGZIEFDUAZOZ
      IGOZIAQZBQZCUAZRZBFSAESZTZVQVIVKIMQZVORZBFSAESZMGUBZOVRVIVJWBIABMCDEFGHNJ
      KLUCUDWAVQMIGVSIRVTVPABEFVSIVOUEUFUHUIVIVQVLVIVPVLABEFVIVMEOZVNFOZTZVFVMG
      OZVNGOZUGZVPVLUJZVIWEWHVIWETZVFWFWGVFVGVHWEUKWJEGVMVFVGVHWEULVIWCWDUMUNWJ
      FGVNVFVGVHWEUOVIWCWDUPUNUSUQWHVOGOWICGHVMVNJKURVOGIUTVAVBVCVDVE $.
      $( [28-Jan-2014] $)

    $d y z A $.  $d y z Y $.
    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelvalix $p |- ( ( ( W e. LMod /\ T C_ V /\ U C_ V ) /\
               ( X e. T /\ Y e. U ) ) -> ( X A Y ) e. ( T S U ) ) $=
      ( vy vz wcel wss wa co cv wceq wrex w3a simprl simprr rcla4eopr syl111anc
      clmod eqidd wb lsmelvalx adantr mpbird ) FUFNCEODEOUAZGCNZHDNZPZPZGHAQZCD
      BQNZUQLRMRAQSMDTLCTZUPUMUNUQUQSUSULUMUNUBULUMUNUCUPUQUGLMCDGHUQAUDUEULURU
      SUHUOLMABCDEFUQIJKUIUJUK $.
      $( [4-Feb-2014] $)
  $}

  ${
    $d x y z R $.  $d x S $.  $d x y z T $.  $d x y z U $.  $d x y z V $.
    $d x y z W $.
    lsmless2.v $e |- V = ( vbase ` W ) $.
    lsmless2.s $e |- S = ( LSSum ` W ) $.
    $( Subspace sum commutes (extended domain version). $)
    lsmcomx $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( T S U ) = ( U S T ) ) $=
      ( vx vz vy clmod wcel wss co cv wceq wrex wa sseldd lsmelvalx simpl1 eqid
      w3a cvadd cfv simpl2 simprl simpl3 simprr lmodcom syl111anc eqeq2d rexcom
      2rexbidva syl6bb wb 3com23 3bitr4d eqrdv ) EKLZBDMZCDMZUCZHBCANZCBANZVCHO
      ZIOZJOZEUDUEZNZPZJCQIBQZVFVHVGVINZPZIBQJCQZVFVDLVFVELZVCVLVNJCQIBQVOVCVKV
      NIJBCVCVGBLZVHCLZRZRZVJVMVFVTUTVGDLVHDLVJVMPUTVAVBVSUAVTBDVGUTVAVBVSUFVCV
      QVRUGSVTCDVHUTVAVBVSUHVCVQVRUISVIDEVGVHFVIUBZUJUKULUNVNIJBCUMUOIJVIABCDEV
      FFWAGTUTVBVAVPVOUPJIVIACBDEVFFWAGTUQURUS $.
      $( [25-Feb-2014] $)

    $( Subset implies subspace sum subset (extended domain version). $)
    lsmless1x $p |- ( ( ( W e. LMod /\ T C_ V /\ U C_ V ) /\ R C_ T )
       -> ( R S U ) C_ ( T S U ) ) $=
      ( vx vy vz clmod wcel wss co cv wrex wb lsmelvalx syl111anc w3a cvadd cfv
      wa wceq simpr sseld anim1d reximdv2 simpl1 simpl2 syl11anc simpl3 3imtr4d
      sstr eqid ssrdv ) FLMZCENZDENZUAZACNZUDZIADBOZCDBOZVCIPZJPZKPFUBUCZOUEKDQ
      ZJAQZVIJCQZVFVDMZVFVEMZVCVIVIJACVCVGAMVGCMVIVCACVGVAVBUFZUGUHUIVCURAENZUT
      VLVJRURUSUTVBUJZVCVBUSVOVNURUSUTVBUKZACEUOULURUSUTVBUMZJKVHBADEFVFGVHUPZH
      STVCURUSUTVMVKRVPVQVRJKVHBCDEFVFGVSHSTUNUQ $.
      $( [22-Feb-2014] $)

    $( Subset implies subspace sum subset (extended domain version). $)
    lsmless2x $p |- ( ( ( W e. LMod /\ R C_ V /\ U C_ V ) /\ T C_ U )
       -> ( R S T ) C_ ( R S U ) ) $=
      ( clmod wcel wss w3a wa co simpl1 simpl3 simpl2 simpr wceq lsmcomx adantr
      lsmless1x syl31anc sstrd syl111anc 3sstr4d ) FIJZAEKZDEKZLZCDKZMZCABNZDAB
      NZACBNZADBNZULUGUIUHUKUMUNKUGUHUIUKOZUGUHUIUKPZUGUHUIUKQZUJUKRZCBDAEFGHUB
      UCULUGUHCEKUOUMSUQUSULCDEUTURUDBACEFGHTUEUJUPUNSUKBADEFGHTUAUF $.
      $( [25-Feb-2014] $)
  $}

  ${
    lsmval.v $e |- V = ( vbase ` W ) $.
    lsmval.a $e |- A = ( vadd ` W ) $.
    lsmval.s $e |- S = ( LSubSp ` W ) $.
    lsmval.p $e |- P = ( LSSum ` W ) $.
    $d x z T $.  $d x y z U $.  $d z V $.  $d x y z W $.
    $( Subspace sum value (for a left module or left vector space). $)
    lsmval $p |- ( ( W e. X /\ T e. S /\ U e. S )
       -> ( T P U ) = { z e. V | E. x e. T E. y e. U z = ( x A y ) } ) $=
      ( wcel wss co cv wceq w3a wrex crab simp1 lssss 3adant3 3adant2 syl111anc
      lsmvalx ) JKPZGFPZHFPZUAUJGIQZHIQZGHERCSASBSDRTBHUBAGUBCIUCTUJUKULUDUJUKU
      MULFGIJKLNUEUFUJULUNUKFHIJKLNUEUGABCDEGHIJKLMOUIUH $.
      $( [4-Feb-2014] $)
  $}

  ${
    $d y z T $.  $d y z U $.  $d y z W $.  $d y z X $.
    lsmelval.a $e |- A = ( vadd ` W ) $.
    lsmelval.s $e |- S = ( LSubSp ` W ) $.
    lsmelval.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelval $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( X e. ( T P U ) <-> E. y e. T E. z e. U X = ( y A z ) ) ) $=
      ( clmod wcel w3a wss co cv wrex lssss cvbase cfv wb simp1 3adant3 3adant2
      wceq eqid lsmelvalx syl111anc ) HMNZFENZGENZOUKFHUAUBZPZGUNPZIFGDQNIARBRC
      QUGBGSAFSUCUKULUMUDUKULUOUMEFUNHMUNUHZKTUEUKUMUPULEGUNHMUQKTUFABCDFGUNHIU
      QJLUIUJ $.
      $( [4-Feb-2014] $)

    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelvali $p |- ( ( ( W e. LMod /\ T e. S /\ U e. S ) /\
               ( X e. T /\ Y e. U ) ) -> ( X A Y ) e. ( T P U ) ) $=
      ( clmod wcel w3a wa cvbase wss co lssss syl11anc cfv simpl1 simpl2 simpl3
      eqid simpr lsmelvalix syl31anc ) FLMZDCMZECMZNZGDMHEMOZOZUIDFPUAZQZEUOQZU
      MGHARDEBRMUIUJUKUMUBZUNUIUJUPURUIUJUKUMUCCDUOFLUOUEZJSTUNUIUKUQURUIUJUKUM
      UDCEUOFLUSJSTULUMUFABDEUOFGHUSIKUGUH $.
      $( [4-Feb-2014] $)
  $}

  ${
    $d a d e f g u v P $.  $d a d e f g u v S $.  $d a d e f g u v x y z T $.
    $d a d e f g u v x y z U $.  $d a d e f g u v x y z W $.
    lsmcl.s $e |- S = ( LSubSp ` W ) $.
    lsmcl.p $e |- P = ( LSSum ` W ) $.
    $( The sum of two subspaces is a subspace. $)
    lsmcl $p |- ( ( W e. LMod /\ T e. S /\ U e. S ) -> ( T P U ) e. S ) $=
      ( vz vx vy clmod wcel co cfv wceq cv wrex eqid syl111anc wa va vu w3a cbs
      vv vd ve vf vg simp1 cvadd cvsca cvbase eqidd clss a1i crab lsmval ssrab2
      wss eqsstrd czv wne lss0cl 3adant3 3adant2 3ad2ant1 0vlid syl11anc eqcomd
      c0 0vcl rcla4eopr lsmelval mpbird ne0i syl anbi12d simpl3 opreq2d simpl11
      wi simpr2 simpl12 simpr1l lssel simpl13 simpr1r lmodvsdi1 syl112anc eqtrd
      simpr3 opreq12d simpl2l lmodvscl lmod4 syl122anc lsscl syl23anc lsmelvali
      simpl2r syl32anc eqeltrd 3exp2 3exp imp3a sylbid exp3a 3imp2 islssd mpdan
      rexlimdvv ) EKLZCBLZDBLZUCZXMCDAMZBLXMXNXOUJZXPUAEUDNZEUKNZBEULNZXQEUMNZE
      KUBUEXPXSUNXPYBUNXPXTUNXPYAUNBEUONOXPFUPXPXQHPIPJPXTMZOJDQICQZHYBUQZYBIJH
      XTABCDYBEKYBRZXTRZFGURYEYBUTXPYDHYBUSUPVAXPEVBNZXQLZXQVKVCXPYIYHYCOJDQICQ
      ZXPYHCLZYHDLZYHYHYHXTMZOYJXMXNYKXOBCEYHYHRZFVDVEXMXOYLXNBDEYHYNFVDVFXPYMY
      HXPXMYHYBLZYMYHOXRXMXNYOXOYBEYHYFYNVLVGXTYBEYHYHYFYGYNVHVIVJIJCDYHYHYHXTV
      MSIJXTABCDEYHYGFGVNVOXQYHVPVQXPUBPZXQLZUEPZXQLZUAPZXSLZYPYTYRYAMZXTMZXQLZ
      XPYQYSUUAUUDWBZXPYQYSTYPUFPZUGPZXTMZOZUGDQUFCQZYRUHPZUIPZXTMZOZUIDQUHCQZT
      UUEXPYQUUJYSUUOUFUGXTABCDEYPYGFGVNUHUIXTABCDEYRYGFGVNVRXPUUJUUOUUEXPUUIUU
      OUUEWBZUFUGCDXPUUFCLZUUGDLZTZUUIUUPXPUUSUUIUCZUUNUUEUHUICDUUTUUKCLZUULDLZ
      TZUUNUUAUUDUUTUVCUUNUUAUCZTZUUCUUHYTUUKYAMZYTUULYAMZXTMZXTMZXQUVEYPUUHUUB
      UVHXTXPUUSUUIUVDVSUVEUUBYTUUMYAMZUVHUVEYRUUMYTYAUUTUVCUUNUUAWCVTUVEXMUUAU
      UKYBLZUULYBLZUVJUVHOXMXNXOUUSUUIUVDWAZUUTUVCUUNUUAWLZUVEXMXNUVAUVKUVMXMXN
      XOUUSUUIUVDWDZUVAUVBUUNUUAUUTWEZBCYBEUUKKYFFWFSZUVEXMXOUVBUVLUVMXMXNXOUUS
      UUIUVDWGZUVAUVBUUNUUAUUTWHZBDYBEUULKYFFWFSZXTYTYAXSYBEUUKUULXSRZYFYGYARZW
      IWJWKWMUVEUVIUUFUVFXTMZUUGUVGXTMZXTMZXQUVEXMUUFYBLZUUGYBLZUVFYBLZUVGYBLZU
      VIUWEOUVMUVEXMXNUUQUWFUVMUVOUUQUURXPUUIUVDWNZBCYBEUUFKYFFWFSUVEXMXOUURUWG
      UVMUVRUUQUURXPUUIUVDXAZBDYBEUUGKYFFWFSUVEXMUUAUVKUWHUVMUVNUVQYTYAXSYBEUUK
      UWAYFUWBWOSUVEXMUUAUVLUWIUVMUVNUVTYTYAXSYBEUULUWAYFUWBWOSXTUVGYBEUUFUUGUV
      FYFYGWPWQUVEXMXNXOUWCCLZUWDDLZUWEXQLUVMUVOUVRUVEXMXNUUQUVAUUAUWLUVMUVOUWJ
      UVPUVNXSXTBYACKEUUFUUKYTUWAYGUWBFWRWSUVEXMXOUURUVBUUAUWMUVMUVRUWKUVSUVNXS
      XTBYADKEUUGUULYTUWAYGUWBFWRWSXTABCDEUWCUWDYGFGWTXBXCXCXDXLXEXLXFXGXHXIXJX
      K $.
      $( [4-Feb-2014] $)

    $d x P $.  $d x S $.
    $( Union of subspaces is a subset of subspace sum. $)
    lsmunss $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( T u. U ) C_ ( T P U ) ) $=
      ( vx vy vz clmod wcel co cv cfv wceq wrex eqid syl11anc syl111anc w3a cun
      wo elun cvadd wa czv simpr simpl1 simpl3 lss0cl cvbase simpl2 lssel 0vrid
      eqcomd rcla4eopr 0vlid jaodan ex lsmelval sylibrd syl5bi ssrdv ) EKLZCBLZ
      DBLZUAZHCDUBZCDAMZHNZVILVKCLZVKDLZUCZVHVKVJLZVKCDUDVHVNVKINJNEUEOZMPJDQIC
      QZVOVHVNVQVHVLVQVMVHVLUFZVLEUGOZDLZVKVKVSVPMZPVQVHVLUHZVRVEVGVTVEVFVGVLUI
      ZVEVFVGVLUJBDEVSVSRZFUKSVRWAVKVRVEVKEULOZLZWAVKPWCVRVEVFVLWFWCVEVFVGVLUMW
      BBCWEEVKKWERZFUNTVPWEEVKVSWGVPRZWDUOSUPIJCDVKVSVKVPUQTVHVMUFZVSCLZVMVKVSV
      KVPMZPVQWIVEVFWJVEVFVGVMUIZVEVFVGVMUMBCEVSWDFUKSVHVMUHZWIWKVKWIVEWFWKVKPW
      LWIVEVGVMWFWLVEVFVGVMUJWMBDWEEVKKWGFUNTVPWEEVKVSWGWHWDURSUPIJCDVSVKVKVPUQ
      TUSUTIJVPABCDEVKWHFGVAVBVCVD $.
      $( [6-Feb-2014] $)

    $d y z S $.
    $( Subspace sum commutes. $)
    lsmcom $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( T P U ) = ( U P T ) ) $=
      ( clmod wcel w3a cvbase cfv wss co wceq simp1 eqid lssss 3adant3 3adant2
      lsmcomx syl111anc ) EHIZCBIZDBIZJUCCEKLZMZDUFMZCDANDCANOUCUDUEPUCUDUGUEBC
      UFEHUFQZFRSUCUEUHUDBDUFEHUIFRTACDUFEUIGUAUB $.
      $( [6-Feb-2014] $)

    $( Subspace sum is an upper bound of its arguments. $)
    lsmub1 $p |- ( ( W e. LMod /\ T e. S /\ U e. S ) -> T C_ ( T P U ) ) $=
      ( vx clmod wcel w3a co cv wa czv cfv cvadd cvbase eqid syl11anc syl111anc
      simpl1 simpl2 simpr lssel 0vrid simpl3 lss0cl lsmelvali syl32anc eqeltrrd
      wceq ex ssrdv ) EIJZCBJZDBJZKZHCCDALZURHMZCJZUTUSJURVANZUTEOPZEQPZLZUTUSV
      BUOUTERPZJZVEUTULUOUPUQVAUBZVBUOUPVAVGVHUOUPUQVAUCZURVAUDZBCVFEUTIVFSZFUE
      UAVDVFEUTVCVKVDSZVCSZUFTVBUOUPUQVAVCDJZVEUSJVHVIUOUPUQVAUGZVJVBUOUQVNVHVO
      BDEVCVMFUHTVDABCDEUTVCVLFGUIUJUKUMUN $.
      $( [6-Feb-2014] $)

    $( Subspace sum is an upper bound of its arguments. $)
    lsmub2 $p |- ( ( W e. LMod /\ T e. S /\ U e. S ) -> U C_ ( T P U ) ) $=
      ( clmod wcel w3a co wss lsmub1 3com23 lsmcom sseqtr4d ) EHIZCBIZDBIZJDDCA
      KZCDAKQSRDTLABDCEFGMNABCDEFGOP $.
      $( [6-Feb-2014] $)

    $( Subset implies subspace sum subset. $)
    lsmless1 $p |- ( ( W e. LMod /\ ( T e. S /\ U e. S /\ V e. S ) /\ T C_ U )
       -> ( T P V ) C_ ( U P V ) ) $=
      ( clmod wcel w3a wss cvbase cfv co simp1 simp22 eqid lssss syl11anc simp3
      simp23 lsmless1x syl31anc ) FIJZCBJZDBJZEBJZKZCDLZKZUEDFMNZLZEULLZUJCEAOD
      EAOLUEUIUJPZUKUEUGUMUOUEUFUGUHUJQBDULFIULRZGSTUKUEUHUNUOUEUFUGUHUJUBBEULF
      IUPGSTUEUIUJUACADEULFUPHUCUD $.
      $( [6-Feb-2014] $)

    $( Subset implies subspace sum subset. $)
    lsmless2 $p |- ( ( ( W e. LMod /\ T e. S /\ V e. S ) /\ U C_ V )
       -> ( T P U ) C_ ( T P V ) ) $=
      ( clmod wcel w3a wss wa cvbase cfv co simpl1 simpl2 lssss syl11anc simpl3
      eqid simpr lsmless2x syl31anc ) FIJZCBJZEBJZKZDELZMZUFCFNOZLZEULLZUJCDAPC
      EAPLUFUGUHUJQZUKUFUGUMUOUFUGUHUJRBCULFIULUBZGSTUKUFUHUNUOUFUGUHUJUABEULFI
      UPGSTUIUJUCCADEULFUPHUDUE $.
      $( [25-Feb-2014] $)

    $( Subspace sum is idempotent. $)
    lsmidm $p |- ( ( W e. LMod /\ U e. S )
       -> ( U P U ) = U ) $=
      ( vx vy vz clmod wcel wa co cv cvadd cfv wceq wrex wb 3anidm23 wi lssvacl
      eqid lsmelval ex eleq1a syl6 rexlimdvv sylbid ssrdv wss lsmub1 eqssd ) DJ
      KZCBKZLZCCAMZCUPGUQCUPGNZUQKZURHNZINZDOPZMZQZICRHCRZURCKZUNUOUSVESHIVBABC
      CDURVBUCZEFUDTUPVDVFHICCUPUTCKVACKLZVCCKZVDVFUAUPVHVIVBBCDUTVAVGEUBUEVCCU
      RUFUGUHUIUJUNUOCUQUKABCCDEFULTUM $.
      $( [6-Feb-2014] $)

    $( Least upper bound property of subspace sum. $)
    lsmlub $p |- ( ( W e. LMod /\ ( T e. S /\ U e. S /\ V e. S ) )
       -> ( ( T C_ V /\ U C_ V ) <-> ( T P U ) C_ V ) ) $=
      ( clmod wcel wa wss lsmless1 syl131anc wceq sseqtrd 3adant3r3 sstr sylan
      co simpll simplr1 simplr3 simplr2 simprl lsmcom syl111anc simprr syl11anc
      w3a lsmidm sstrd lsmub1 lsmub2 jca impbida ) FIJZCBJZDBJZEBJZUJZKZCELZDEL
      ZKZCDATZELZVBVEKZVFDEATZEVHVFEDATZVIVHUQURUTUSVCVFVJLUQVAVEUAZURUSUTUQVEU
      BURUSUTUQVEUCZURUSUTUQVEUDZVBVCVDUEABCEDFGHMNVHUQUTUSVJVIOVKVLVMABEDFGHUF
      UGPVHVIEEATZEVHUQUSUTUTVDVIVNLVKVMVLVLVBVCVDUHABDEEFGHMNVHUQUTVNEOVKVLABE
      FGHUKUIPULVBVGKVCVDVBCVFLZVGVCUQURUSVOUTABCDFGHUMQCVFERSVBDVFLZVGVDUQURUS
      VPUTABCDFGHUNQDVFERSUOUP $.
      $( [6-Feb-2014] $)

    $( Subspace sum with a subset. $)
    lsmss2 $p |- ( ( W e. LMod /\ ( T e. S /\ U e. S ) /\ T C_ U )
       -> ( T P U ) = U ) $=
      ( clmod wcel wa wss w3a co wb simp1 simp2l simp2r lsmlub syl13anc simp3
      ssid a1i mpbi2and lsmub2 syl111anc eqssd ) EHIZCBIZDBIZJZCDKZLZCDAMZDULUK
      DDKZUMDKZULUGUHUIUIUKUNJUONUGUJUKOZUGUHUIUKPZUGUHUIUKQZURABCDDEFGRSUGUJUK
      TUNULDUAUBUCULUGUHUIDUMKUPUQURABCDEFGUDUEUF $.
      $( [27-Mar-2014] $)

    $( Subspace sum with a subset. $)
    lsmss1 $p |- ( ( W e. LMod /\ ( T e. S /\ U e. S ) /\ U C_ T )
       -> ( T P U ) = T ) $=
      ( clmod wcel wa wss w3a wceq simp1 simp2l simp2r lsmcom syl111anc simp3
      co lsmss2 syl121anc eqtrd ) EHIZCBIZDBIZJZDCKZLZCDATZDCATZCUIUDUEUFUJUKMU
      DUGUHNZUDUEUFUHOZUDUEUFUHPZABCDEFGQRUIUDUFUEUHUKCMULUNUMUDUGUHSABDCEFGUAU
      BUC $.
      $( [27-Mar-2014] $)

    $( Subspace sum is associative. $)
    lsmass $p |- ( ( W e. LMod /\ ( R e. S /\ T e. S /\ U e. S ) )
       -> ( ( R P T ) P U ) = ( R P ( T P U ) ) ) $=
      ( wcel wa co wss wb lsmcl syl111anc lsmlub syl13anc lsmub1 lsmub2 sstrd
      clmod w3a simpl simpr1 simpr2 simpr3 mpbi2and eqssd ) FUAIZBCIZDCIZECIZUB
      ZJZBDAKZEAKZBDEAKZAKZUNUOURLZEURLZUPURLZUNUIUOCIZULURCIZUSUTJVAMUIUMUCZUN
      UIUJUKVBVDUIUJUKULUDZUIUJUKULUEZACBDFGHNOZUIUJUKULUFZUNUIUJUQCIZVCVDVEUNU
      IUKULVIVDVFVHACDEFGHNOZACBUQFGHNOZACUOEURFGHPQUNBURLZDURLZUSUNUIUJUKVCVLV
      MJUSMVDVEVFVKACBDURFGHPQUNUIUJVIVLVDVEVJACBUQFGHROUNDUQURUNUIUKULDUQLVDVF
      VHACDEFGHROUNUIUJVIUQURLVDVEVJACBUQFGHSOZTUGUNEUQURUNUIUKULEUQLVDVFVHACDE
      FGHSOVNTUGUNBUPLZUQUPLZURUPLZUNUIUJVIUPCIZVOVPJVQMVDVEVJUNUIVBULVRVDVGVHA
      CUOEFGHNOZACBUQUPFGHPQUNBUOUPUNUIUJUKBUOLVDVEVFACBDFGHROUNUIVBULUOUPLVDVG
      VHACUOEFGHROZTUNDUPLZEUPLZVPUNUIUKULVRWAWBJVPMVDVFVHVSACDEUPFGHPQUNDUOUPU
      NUIUJUKDUOLVDVEVFACBDFGHSOVTTUNUIVBULWBVDVGVHACUOEFGHSOUGUGUH $.
      $( [2-Mar-2014] $)
  $}

  ${
    lsm01.z $e |- Z = ( 0v ` W ) $.
    lsm01.s $e |- S = ( LSubSp ` W ) $.
    lsm01.p $e |- P = ( LSSum ` W ) $.
    $( The zero subspace is included in every subspace. $)
    lsm0ss $p |- ( ( W e. LMod /\ X e. S ) -> { Z } C_ X ) $=
      ( clmod wcel wa lss0cl snssd ) CIJDBJKEDBDCEFGLM $.
      $( [27-Mar-2014] $)

    $( Subspace sum with the zero subspace. $)
    lsm01 $p |- ( ( W e. LMod /\ X e. S ) -> ( X P { Z } ) = X ) $=
      ( clmod wcel wa csn wss co wceq simpl simpr lsssn0 adantr lsm0ss lsmss1
      syl121anc ) CIJZDBJZKUCUDELZBJZUEDMDUEANDOUCUDPUCUDQUCUFUDBCEFGRSABCDEFGH
      TABDUECGHUAUB $.
      $( [27-Mar-2014] $)

    $( Subspace sum with the zero subspace. $)
    lsm02 $p |- ( ( W e. LMod /\ X e. S ) -> ( { Z } P X ) = X ) $=
      ( clmod wcel wa csn wss co wceq simpl lsssn0 adantr simpr lsm0ss lsmss2
      syl121anc ) CIJZDBJZKUCELZBJZUDUEDMUEDANDOUCUDPUCUFUDBCEFGQRUCUDSABCDEFGH
      TABUEDCGHUAUB $.
      $( [27-Mar-2014] $)
  $}

  ${
    $d s P $.  $d s S $.  $d s T $.  $d s U $.  $d s W $.
    lsmsp.s $e |- S = ( LSubSp ` W ) $.
    lsmsp.n $e |- N = ( LSpan ` W ) $.
    lsmsp.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum in terms of span. $)
    lsmsp $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( T P U ) = ( N ` ( T u. U ) ) ) $=
      ( vs clmod wcel w3a cfv wss wa lssss ex syl11anc syl5ss co wb simp1 simp2
      simp3 cvbase eqid anim12d 3impib unss sylib lspcl lsmlub syl13anc lspssid
      cun ssun1 ssun2 mpbi2and cv crab cint lspval lsmcl lsmunss sseq2 sylanbrc
      wceq elrab intss1 syl eqsstrd eqssd ) FKLZCBLZDBLZMZCDAUAZCDUPZENZVQCVTOZ
      DVTOZVRVTOZVQVNVOVPVTBLZWAWBPWCUBVNVOVPUCZVNVOVPUDVNVOVPUEVQVNVSFUFNZOZWD
      WEVQCWFOZDWFOZPZWGVNVOVPWJVNVOWHVPWIVNVOWHBCWFFKWFUGZGQRVNVPWIBDWFFKWKGQR
      UHUICDWFUJUKZBVSEWFFWKGHULSABCDVTFGIUMUNVQCVSVTCDUQVQVNWGVSVTOWEWLVSEWFFW
      KHUOSZTVQDVSVTDCURWMTUSVQVTVSJUTZOZJBVAZVBZVRVQVNWGVTWQVHWEWLJBVSEWFFWKGH
      VCSVQVRWPLZWQVROVQVRBLVSVROZWRABCDFGIVDABCDFGIVEWOWSJVRBWNVRVSVFVIVGVRWPV
      JVKVLVM $.
      $( [6-Feb-2014] $)
  $}

  ${
    lsmsp2.v $e |- V = ( vbase ` W ) $.
    lsmsp2.n $e |- N = ( LSpan ` W ) $.
    lsmsp2.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum of spans of subsets is the span of their union. $)
    lsmsp2 $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( ( N ` T ) P ( N ` U ) ) = ( N ` ( T u. U ) ) ) $=
      ( clmod wcel wss w3a cfv co cun clss wceq simp1 lspcl 3adant3 lsmsp lspun
      eqid 3adant2 syl111anc eqtr4d ) FJKZBELZCELZMZBDNZCDNZAOZULUMPDNZBCPDNUKU
      HULFQNZKZUMUPKZUNUORUHUIUJSUHUIUQUJUPBDEFGUPUDZHTUAUHUJURUIUPCDEFGUSHTUEA
      UPULUMDFUSHIUBUFBCDEFGHUCUG $.
      $( [22-Feb-2014] $)
  $}

  ${
    $d k x A $.  $d k x N $.  $d k x V $.  $d k x W $.  $d k x X $.
    $d k x Y $.
    lspvadd.v $e |- V = ( vbase ` W ) $.
    lspvadd.a $e |- A = ( vadd ` W ) $.
    lspvadd.n $e |- N = ( LSpan ` W ) $.
    $( The span of a vector sum is included in the span of its arguments. $)
    lspvadd $p |- ( ( W e. LMod /\ X e. V /\ Y e. V )
       -> ( N ` { ( X A Y ) } ) C_ ( N ` { X , Y } ) ) $=
      ( vx vk wcel co csn cfv wceq wa eqid syl11anc syl111anc clmod w3a cpr cbs
      cv cvsca wrex simp1 lmodvacl lspsnel clsm simpll1 simpr simpll2 lmodvsdi1
      wb simpll3 syl112anc clss snssd lspcl lspsneli lsmelvali syl32anc eqeltrd
      wss lsmsp2 df-pr fveq2i syl6eqr eleqtrd eleq1 syl5ibrcom rexlimdva sylbid
      cun expimpd ssrdv ) DUALZECLZFCLZUBZJEFAMZNBOZEFUCZBOZWBJUEZWDLZWGCLZWGKU
      EZWCDUFOZMZPZKDUDOZUGZQZWGWFLZWBVSWCCLWHWPUPVSVTWAUHACDEFGHUIWKWGKWNBCDWC
      WNRZGWKRZIUJSWBWIWOWQWBWIQZWMWQKWNWTWJWNLZQZWQWMWLWFLXBWLENZBOZFNZBOZDUKO
      ZMZWFXBWLWJEWKMZWJFWKMZAMZXHXBVSXAVTWAWLXKPVSVTWAWIXAULZWTXAUMZVSVTWAWIXA
      UNZVSVTWAWIXAUQZAWJWKWNCDEFWRGHWSUOURXBVSXDDUSOZLZXFXPLZXIXDLZXJXFLZXKXHL
      XLXBVSXCCVFZXQXLXBECXNUTZXPXCBCDGXPRZIVASXBVSXECVFZXRXLXBFCXOUTZXPXEBCDGY
      CIVASXBVSXAVTXSXLXMXNWJWKWNBCDEWRGWSIVBTXBVSXAWAXTXLXMXOWJWKWNBCDFWRGWSIV
      BTAXGXPXDXFDXIXJHYCXGRZVCVDVEXBXHXCXEVPZBOZWFXBVSYAYDXHYHPXLYBYEXGXCXEBCD
      GIYFVGTWEYGBEFVHVIVJVKWGWLWFVLVMVNVQVOVR $.
      $( [22-Feb-2014] $)
  $}

  ${
    lsmvadd.v $e |- V = ( vbase ` W ) $.
    lsmvadd.a $e |- A = ( vadd ` W ) $.
    lsmvadd.n $e |- N = ( LSpan ` W ) $.
    lsmvadd.p $e |- P = ( LSSum ` W ) $.
    $( The span of a vector sum is included in subspace sum of the span of its
       arguments. $)
    lsmvadd $p |- ( ( W e. LMod /\ X e. V /\ Y e. V )
       -> ( N ` { ( X A Y ) } ) C_ ( ( N ` { X } ) P ( N ` { Y } ) ) ) $=
      ( clmod wcel w3a co csn cfv cpr wss snssi lspvadd cun wceq simp1 3ad2ant2
      3ad2ant3 lsmsp2 syl111anc df-pr fveq2i syl6reqr sseqtrd ) ELMZFDMZGDMZNZF
      GAOPCQFGRZCQZFPZCQGPZCQBOZACDEFGHIJUAUPVAUSUTUBZCQZURUPUMUSDSZUTDSZVAVCUC
      UMUNUOUDUNUMVDUOFDTUEUOUMVEUNGDTUFBUSUTCDEHJKUGUHUQVBCFGUIUJUKUL $.
      $( [24-Feb-2014] $)
  $}

  $( Define the class of all left vector spaces.  A left vector space is a
     division ring together with an Abelian group and a left scalar product
     connecting them.  Some authors call this a "left module over a division
     ring", reserving "vector space" for those where the division ring is
     commutative i.e. a field. $)
  df-lvec $a |- LVec = ( LMod i^i DivRing ) $.

  $( The predicate "is a left vector space". $)
  islvec2 $p |- ( W e. LVec <-> ( W e. LMod /\ W e. DivRing ) ) $=
    ( clvec wcel clmod cdr cin wa df-lvec eleq2i elin bitri ) ABCADEFZCADCAECGB
    LAHIADEJK $.
    $( [11-Nov-2013] $)

  $( A left vector space is a left module. $)
  lveclmod $p |- ( W e. LVec -> W e. LMod ) $=
    ( clvec wcel clmod cdr wa islvec2 simpl sylbi ) ABCADCZAECZFJAGJKHI $.
    $( [9-Dec-2013] $)

  ${
    $d x w A r q $.  $d x w P r q $.  $d x w S r q $.  $d x w T r q $.
    $d x w V r q $.  $d x w W r q $.  $d K r q $.
    islvec.k $e |- K = ( Base ` W ) $.
    islvec.p $e |- P = ( +g ` W ) $.
    islvec.t $e |- T = ( .r ` W ) $.
    islvec.v $e |- V = ( vbase ` W ) $.
    islvec.a $e |- A = ( vadd ` W ) $.
    islvec.s $e |- S = ( vsca ` W ) $.
    islvec.u $e |- U = ( 1r ` W ) $.
    islvec.g $e |- G = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( The predicate "is a left vector space".  (Revised by FL,
       11-Nov-2013.) $)
    islvec $p |- ( W e. LVec <-> ( W e. DivRing /\ G e. Abel
        /\ A. q e. K A. r e. K A. x e. V A. w e. V
               ( ( ( r S w ) e. V
                 /\ ( r S ( w A x ) ) = ( ( r S w ) A ( r S x ) )
                 /\ ( ( q P r ) S w ) = ( ( q S w ) A ( r S w ) )
               ) /\ ( ( ( q T r ) S w ) = ( q S ( r S w ) )
                 /\ ( U S w ) = w ) ) ) ) $=
      ( clvec wcel clmod cdr cin cabel cv wceq w3a wral df-lvec eleq2i crg elin
      co wa islmod biid anbi12i simpr simpl2 simpl3 3jca drngrng 3ad2ant1 simp2
      simp3 simp1 jca impbii 3bitri bitri ) KUBUCKUDUEUFZUCZKUEUCZHUGUCZLUHZBUH
      ZEUPZJUCVRVSAUHZCUPEUPVTVRWAEUPCUPUIMUHZVRDUPVSEUPWBVSEUPVTCUPUIUJWBVRFUP
      VSEUPWBVTEUPUIGVSEUPVSUIUQUQBJUKAJUKLIUKMIUKZUJZUBVNKULUMVOKUDUCZVPUQKUNU
      CZVQWCUJZVPUQZWDKUDUEUOWEWGVPVPABCDEFGHIJKLMNOPQRSTUAURVPUSUTWHWDWHVPVQWC
      WGVPVAWFVQWCVPVBWFVQWCVPVCVDWDWGVPWDWFVQWCVPVQWFWCKVEVFVPVQWCVGVPVQWCVHVD
      VPVQWCVIVJVKVLVM $.
      $( [11-Nov-2013] $) $( [21-Sep-2011] $)
  $}

  ${
    $d x y z A $.  $d q r u w x y z B $.  $d x y z P $.  $d x y z S $.
    $d x y z T $.  $d x U $.  $d u w x y z V $.  $d q r u w W $.
    $d q r u w x y z ph $.
    islvecd.b $e |- ( ph -> B = ( Base ` W ) ) $.
    islvecd.p $e |- ( ph -> P = ( +g ` W ) ) $.
    islvecd.t $e |- ( ph -> T = ( .r ` W ) ) $.
    islvecd.u $e |- ( ph -> U = ( 1r ` W ) ) $.
    islvecd.v $e |- ( ph -> V = ( vbase ` W ) ) $.
    islvecd.a $e |- ( ph -> A = ( vadd ` W ) ) $.
    islvecd.s $e |- ( ph -> S = ( vsca ` W ) ) $.
    islvecd.r $e |- ( ph -> W e. DivRing ) $.
    $( Abelian group operations $)
    islvecd.g $e |- ( ph -> G
          = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } ) $.
    islvecd.l $e |- ( ph -> G e. Abel ) $.
    $( Scalar product operation $)
    islvecd.w $e |- ( ( ph /\ x e. B /\ y e. V ) -> ( x S y ) e. V ) $.
    islvecd.c $e |- ( ( ph /\ ( x e. B /\ y e. V /\ z e. V ) )
        -> ( x S ( y A z ) ) = ( ( x S y ) A ( x S z ) ) ) $.
    islvecd.d $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x P y ) S z ) = ( ( x S z ) A ( y S z ) ) ) $.
    islvecd.e $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x T y ) S z ) = ( x S ( y S z ) ) ) $.
    islvecd.f $e |- ( ( ph /\ x e. V ) -> ( U S x ) = x ) $.
    $( Properties that determine a left vector space. $)
    islvecd $p |- ( ph -> W e. LVec ) $=
      ( vr vw vu vq cdr wcel cnx cbs cfv cvbase cop cplusg cvadd cabel cv cvsca
      cpr co wceq w3a cmulr cur wa wral clvec simp1 simp2r simp3r wi weq opreq1
      eleq1d imbi2d opreq2 3expb expcom vtocl2ga impcom syl12anc simp3l eqeq12d
      opreq12d opreq2d opreq1d vtocl3ga syl13anc simp2l 3jca vtoclga sylc jca32
      id1 3expia ralrimivv ralrimivva opeq2d preq12d eqtrd opreqd eleq12d eqidd
      opreq123d 3anbi123d eqeq1d anbi12d raleqbidv 3anbi23d mpbid islvec sylibr
      eqid ) AMUMUNZUOUPUQZMURUQZUSZUOUTUQZMVAUQZUSZVEZVBUNZUIVCZUJVCZMVDUQZVFZ
      YBUNZYIYJUKVCZYEVFZYKVFZYLYIYNYKVFZYEVFZVGZULVCZYIMUTUQZVFZYJYKVFZYTYJYKV
      FZYLYEVFZVGZVHZYTYIMVIUQZVFZYJYKVFZYTYLYKVFZVGZMVJUQZYJYKVFZYJVGZVKZVKZUJ
      YBVLZUKYBVLZUIMUPUQZVLZULUUTVLZVHZMVMUNAXTKVBUNZYIYJHVFZLUNZYIYJYNEVFZHVF
      ZUVEYIYNHVFZEVFZVGZYTYIGVFZYJHVFZYTYJHVFZUVEEVFZVGZVHZYTYIIVFZYJHVFZYTUVE
      HVFZVGZJYJHVFZYJVGZVKZVKZUJLVLZUKLVLZUIFVLZULFVLZVHUVCAXTUVDUWIUAUCAUWGUL
      UIFFAYTFUNZYIFUNZVKZVKUWEUKUJLLAUWLYNLUNZYJLUNZVKZUWEAUWLUWOVHZUVQUWAUWCU
      WPUVFUVKUVPUWPAUWKUWNUVFAUWLUWOVNZAUWJUWKUWOVOZAUWLUWMUWNVPZUWKUWNVKAUVFA
      BVCZCVCZHVFZLUNZVQAYIUXAHVFZLUNZVQAUVFVQBCYIYJFLBUIVRZUXCUXEAUXFUXBUXDLUW
      TYIUXAHVSZVTWACUJVRZUXEUVFAUXHUXDUVELUXAYJYIHWBZVTWAAUWTFUNZUXALUNZVKUXCA
      UXJUXKUXCUDWCWDWEWFWGUWPAUWKUWNUWMUVKUWQUWRUWSAUWLUWMUWNWHUWKUWNUWMVHAUVK
      AUWTUXADVCZEVFZHVFZUXBUWTUXLHVFZEVFZVGZVQAYIUXMHVFZUXDYIUXLHVFZEVFZVGZVQA
      YIYJUXLEVFZHVFZUVEUXSEVFZVGZVQAUVKVQBCDYIYJYNFLLUXFUXQUYAAUXFUXNUXRUXPUXT
      UWTYIUXMHVSUXFUXBUXDUXOUXSEUXGUWTYIUXLHVSWJWIWAUXHUYAUYEAUXHUXRUYCUXTUYDU
      XHUXMUYBYIHUXAYJUXLEVSWKUXHUXDUVEUXSEUXIWLWIWADUKVRZUYEUVKAUYFUYCUVHUYDUV
      JUYFUYBUVGYIHUXLYNYJEWBWKUYFUXSUVIUVEEUXLYNYIHWBWKWIWAAUXJUXKUXLLUNZVHUXQ
      UEWDWMWFWNUWPAUWJUWKUWNUVPUWQAUWJUWKUWOWOZUWRUWSUWJUWKUWNVHZAUVPAUWTUXAGV
      FZUXLHVFZUXOUXAUXLHVFZEVFZVGZVQAYTUXAGVFZUXLHVFZYTUXLHVFZUYLEVFZVGZVQAUVL
      UXLHVFZUYQUXSEVFZVGZVQAUVPVQBCDYTYIYJFFLBULVRZUYNUYSAVUCUYKUYPUYMUYRVUCUY
      JUYOUXLHUWTYTUXAGVSWLVUCUXOUYQUYLEUWTYTUXLHVSWLWIWACUIVRZUYSVUBAVUDUYPUYT
      UYRVUAVUDUYOUVLUXLHUXAYIYTGWBWLVUDUYLUXSUYQEUXAYIUXLHVSZWKWIWADUJVRZVUBUV
      PAVUFUYTUVMVUAUVOUXLYJUVLHWBVUFUYQUVNUXSUVEEUXLYJYTHWBUXLYJYIHWBZWJWIWAAU
      XJUXAFUNUYGVHZUYNUFWDWMWFWNWPUWPAUWJUWKUWNUWAUWQUYHUWRUWSUYIAUWAAUWTUXAIV
      FZUXLHVFZUWTUYLHVFZVGZVQAYTUXAIVFZUXLHVFZYTUYLHVFZVGZVQAUVRUXLHVFZYTUXSHV
      FZVGZVQAUWAVQBCDYTYIYJFFLVUCVULVUPAVUCVUJVUNVUKVUOVUCVUIVUMUXLHUWTYTUXAIV
      SWLUWTYTUYLHVSWIWAVUDVUPVUSAVUDVUNVUQVUOVURVUDVUMUVRUXLHUXAYIYTIWBWLVUDUY
      LUXSYTHVUEWKWIWAVUFVUSUWAAVUFVUQUVSVURUVTUXLYJUVRHWBVUFUXSUVEYTHVUGWKWIWA
      AVUHVULUGWDWMWFWNUWPUWNAUWCUWSUWQAJUWTHVFZUWTVGZVQAUWCVQBYJLBUJVRZVVAUWCA
      VVBVUTUWBUWTYJUWTYJJHWBVVBWTWIWAAUWTLUNVVAUHWDWQWRWSXAXBXCWPAUVDYHUWIUVBX
      TAKYGVBAKYALUSZYDEUSZVEYGUBAVVCYCVVDYFALYBYARXDAEYEYDSXDXEXFVTAUWHUVAULFU
      UTNAUWGUUSUIFUUTNAUWFUURUKLYBRAUWEUUQUJLYBRAUVQUUGUWDUUPAUVFYMUVKYSUVPUUF
      AUVEYLLYBAHYKYIYJTXGZRXHAUVHYPUVJYRAYIYIUVGYOHYKTAYIXIAEYEYJYNSXGXJAUVEYL
      UVIYQEYESVVEAHYKYIYNTXGXJWIAUVMUUCUVOUUEAUVLUUBYJYJHYKTAGUUAYTYIOXGAYJXIZ
      XJAUVNUUDUVEYLEYESAHYKYTYJTXGVVEXJWIXKAUWAUULUWCUUOAUVSUUJUVTUUKAUVRUUIYJ
      YJHYKTAIUUHYTYIPXGVVFXJAYTYTUVEYLHYKTAYTXIVVEXJWIAUWBUUNYJAJUUMYJYJHYKTQV
      VFXJXLXMXMXNXNXNXNXOXPUKUJYEUUAYKUUHUUMYGUUTYBMUIULUUTXSUUAXSUUHXSYBXSYEX
      SYKXSUUMXSYGXSXQXR $.
      $( [6-Oct-2013] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x O $.  $d x y z P $.  $d x y z S $.
    $d x y z T $.  $d x U $.  $d x y z V $.  $d x y z ph $.
    islvec2d.b $e |- ( ph -> B = ( Base ` W ) ) $.
    islvec2d.p $e |- ( ph -> P = ( +g ` W ) ) $.
    islvec2d.t $e |- ( ph -> T = ( .r ` W ) ) $.
    islvec2d.u $e |- ( ph -> U = ( 1r ` W ) ) $.
    islvec2d.v $e |- ( ph -> V = ( vbase ` W ) ) $.
    islvec2d.a $e |- ( ph -> A = ( vadd ` W ) ) $.
    islvec2d.s $e |- ( ph -> S = ( vsca ` W ) ) $.
    islvec2d.r $e |- ( ph -> W e. DivRing ) $.
    $( Abelian group (vector) addition $)
    islvec2d.h $e |- ( ( ph /\ x e. V /\ y e. V ) -> ( x A y ) e. V ) $.
    islvec2d.i $e |- ( ( ph /\ ( x e. V /\ y e. V /\ z e. V ) )
        -> ( ( x A y ) A z ) = ( x A ( y A z ) ) ) $.
    islvec2d.j $e |- ( ph -> O e. V ) $.
    islvec2d.k $e |- ( ( ph /\ x e. V ) -> ( O A x ) = x ) $.
    islvec2d.l $e |- ( ( ph /\ x e. V ) -> N e. V ) $.
    islvec2d.m $e |- ( ( ph /\ x e. V ) -> ( N A x ) = O ) $.
    islvec2d.n $e |- ( ( ph /\ x e. V /\ y e. V ) -> ( x A y ) = ( y A x ) ) $.
    $( Scalar product operations $)
    islvec2d.w $e |- ( ( ph /\ x e. B /\ y e. V ) -> ( x S y ) e. V ) $.
    islvec2d.c $e |- ( ( ph /\ ( x e. B /\ y e. V /\ z e. V ) )
        -> ( x S ( y A z ) ) = ( ( x S y ) A ( x S z ) ) ) $.
    islvec2d.d $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x P y ) S z ) = ( ( x S z ) A ( y S z ) ) ) $.
    islvec2d.e $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x T y ) S z ) = ( x S ( y S z ) ) ) $.
    islvec2d.f $e |- ( ( ph /\ x e. V ) -> ( U S x ) = x ) $.
    $( Properties that determine a left vector space.  The hypotheses of this
       version of ~ islvecd include all explicit properties of the vector space
       so that a separate proof of the Abelian group of vectors is not
       required.  Note that the negative element ` N ` is a function of ` x `
       (i.e. allows ` x ` as a free variable). $)
    islvec2d $p |- ( ph -> W e. LVec ) $=
      ( cnx cbs cfv cop cplusg cpr eqidd cvv wcel wceq cvbase fvex eqeltrd eqid
      a1i grpbase syl cvadd grpplusg prex isgrpd isabld islvecd ) ABCDEFGHIJUOU
      PUQMURZUOUSUQEURZUTZMNOPQRSTUAUBAVTVAABCMEVTABCDMEVTKLAMVBVCMVTUPUQVDAMNV
      EUQZVBSWAVBVCANVEVFVIVGMEVTVBVTVHZVJVKZAEVBVCEVTUSUQVDAENVLUQZVBTWDVBVCAN
      VLVFVIVGMEVTVBWBVMVKZVTVBVCAVRVSVNVIUCUDUEUFUGUHVOWCWEUIVPUJUKULUMUNVQ $.
      $( [6-Oct-2013] $)
  $}


