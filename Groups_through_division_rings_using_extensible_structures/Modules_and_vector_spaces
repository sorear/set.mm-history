$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Modules and vector spaces
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c vbaseLMx $.
  $c vaddLMx $.
  $c vscaLMx $.
  $c LModLMx $.
  $c LVecLMx $.

  $( Extend class notation with set of vectors in a left module or a vector
     space. $)
  cvbaseLMOLD $a class vbaseLMx $.

  $( Extend class notation with vector addition. $)
  cvaddLMOLD $a class vaddLMx $.

  $( Extend class notation with scalar product. $)
  cvscaLMOLD $a class vscaLMx $.

  $( Extend class notation with class of all left modules. $)
  clmodLMOLD $a class LModLMx $.

  $( Extend class notation with class of all left vector spaces. $)
  clvecLMOLD $a class LVecLMx $.

  $( Def. 8.5.12, p. 219. $)
  $( Define set of vectors in a vector space ` v ` . $)
  df-vbaseLMOLD $a |- vbaseLMx = ( v e. _V |-> ( v ` 5 ) ) $.

  $( Def. 8.5.12, p. 219. $)
  $( Define vector addition. $)
  df-vaddLMOLD $a |- vaddLMx = ( v e. _V |-> ( v ` 6 ) ) $.

  $( Def. 8.5.12, p. 219. $)
  $( Define scalar product. $)
  df-vscaLMOLD $a |- vscaLMx = ( v e. _V |-> ( v ` 7 ) ) $.

  $( Utility theorem: index-independent form of vector base set
     ~ df-vbaseLMOLD . $)
  vbaseidLMOLD $p |- vbaseLMx = ( f e. _V |-> ( f ` ( vbaseLMx ` ndx ) ) ) $=
    ( cvbaseLMOLD c5 df-vbaseLMOLD 5nn ndxid ) BCAADEF $.
    $( [2-Oct-2013] $)

  $( Utility theorem: index-independent form of vector addition
     ~ df-vaddLMOLD . $)
  vaddidLMOLD $p |- vaddLMx = ( f e. _V |-> ( f ` ( vaddLMx ` ndx ) ) ) $=
    ( cvaddLMOLD c6 df-vaddLMOLD 6nn ndxid ) BCAADEF $.
    $( [2-Oct-2013] $)

  $( Utility theorem: index-independent form of scalar product
     ~ df-vscaLMOLD . $)
  vscaidLMOLD $p |- vscaLMx = ( f e. _V |-> ( f ` ( vscaLMx ` ndx ) ) ) $=
    ( cvscaLMOLD c7 df-vscaLMOLD 7nn ndxid ) BCAADEF $.
    $( [2-Oct-2013] $)

  $( Utility lemma for constructing a left module or left vector space. $)
  lmodlem1LMOLD $p |- -. ( vbaseLMx ` ndx )
        e. { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) } $=
    ( vs cnx cvbaseLMOLD cfv cbs cplusg cmulr ctp wcel wceq c5 ndxarg c1 ltneii
    wne 5re neeqtrri eqnetri c2 c3 w3o w3a wn df-vbaseLMOLD 5nn 1re basendx 2re
    1lt5 2lt5 df-plusg 2nn 3re 3lt5 df-mulr 3nn 3pm3.2i ne3anior mpbi fvex eltp
    mtbir ) BCDZBEDZBFDZBGDZHIVCVDJVCVEJVCVFJUAZVCVDOZVCVEOZVCVFOZUBVGUCVHVIVJV
    CKVDCKAAUDUELZKMVDMKUFPUINUGQRVCKVEVKKSVESKUHPUJNFSAAUKULLQRVCKVFVKKTVFTKUM
    PUNNGTAAUOUPLQRUQVCVDVCVEVCVFURUSVCVDVEVFBCUTVAVB $.
    $( [30-Sep-2013] $)

  $( Utility lemma for constructing a left module or left vector space. $)
  lmodlem2LMOLD $p |- -. ( vaddLMx ` ndx ) e. ( { ( Base ` ndx ) , ( +g ` ndx )
      ,
         ( .r ` ndx ) } u. { ( vbaseLMx ` ndx ) } ) $=
    ( vs cnx cvaddLMOLD cfv cplusg cmulr cvbaseLMOLD wcel wceq wo wne c6 ndxarg
    6re ltneii neeqtrri eqnetri c2 c3 c5 cbs ctp csn cun w3o wn df-vaddLMOLD c1
    w3a 6nn 1re 1lt6 basendx 2re 2lt6 df-plusg 2nn 3re 3lt6 df-mulr 3nn 3pm3.2i
    ne3anior mpbi 5re 5lt6 df-vbaseLMOLD 5nn df-ne pm3.2ni elun fvex eltp elsnc
    orbi12i bitri mtbir ) BCDZBUADZBEDZBFDZUBZBGDZUCZUDHZVRVSIVRVTIVRWAIUEZVRWC
    IZJZWFWGVRVSKZVRVTKZVRWAKZUIWFUFWIWJWKVRLVSCLAAUGUJMZLUHVSUHLUKNULOUMPQVRLV
    TWLLRVTRLUNNUOOERAAUPUQMPQVRLWAWLLSWASLURNUSOFSAAUTVAMPQVBVRVSVRVTVRWAVCVDV
    RWCKWGUFVRLWCWLLTWCTLVENVFOGTAAVGVHMPQVRWCVIVDVJWEVRWBHZVRWDHZJWHVRWBWDVKWM
    WFWNWGVRVSVTWABCVLZVMVRWCWOVNVOVPVQ $.
    $( [30-Sep-2013] $)

  $( Utility lemma for constructing a left module or left vector space. $)
  lmodlem3LMOLD $p |- -. ( vscaLMx ` ndx ) e. ( { ( Base ` ndx ) , ( +g ` ndx )
      ,
         ( .r ` ndx ) } u. { ( vbaseLMx ` ndx ) , ( vaddLMx ` ndx ) } ) $=
    ( vs cnx cvscaLMOLD cfv cplusg cmulr wcel wceq wo c7 ndxarg ltneii neeqtrri
    wne 7re eqnetri c2 c3 c5 c6 cbs ctp cvbaseLMOLD cvaddLMOLD cpr df-vscaLMOLD
    cun w3o w3a 7nn 1re 1lt7 basendx 2re 2lt7 df-plusg 2nn 3re 3lt7 df-mulr 3nn
    wn c1 3pm3.2i ne3anior mpbi wa 5re 5lt7 df-vbaseLMOLD 5nn 6lt7 df-vaddLMOLD
    6re 6nn pm3.2i neanior pm3.2ni elun fvex eltp elpr orbi12i bitri mtbir ) BC
    DZBUADZBEDZBFDZUBZBUCDZBUDDZUEZUGGZWFWGHWFWHHWFWIHUHZWFWKHWFWLHIZIZWOWPWFWG
    NZWFWHNZWFWINZUIWOVBWRWSWTWFJWGCJAAUFUJKZJVCWGVCJUKOULLUMMPWFJWHXAJQWHQJUNO
    UOLEQAAUPUQKMPWFJWIXAJRWIRJUROUSLFRAAUTVAKMPVDWFWGWFWHWFWIVEVFWFWKNZWFWLNZV
    GWPVBXBXCWFJWKXAJSWKSJVHOVILUCSAAVJVKKMPWFJWLXAJTWLTJVNOVLLUDTAAVMVOKMPVPWF
    WKWFWLVQVFVRWNWFWJGZWFWMGZIWQWFWJWMVSXDWOXEWPWFWGWHWIBCVTZWAWFWKWLXFWBWCWDW
    E $.
    $( [30-Sep-2013] $)

  ${
    lvecfn.w $e |- W = ( { <. ( Base ` ndx ) , B >. , <. ( +g ` ndx ) , P >. ,
                   <. ( .r ` ndx ) , T >. }
                u. { <. ( vbaseLMx ` ndx ) , V >. , <. ( vaddLMx ` ndx ) , A >.
        ,
                   <. ( vscaLMx ` ndx ) , S >. } ) $.
    ${
      lvecfn.d $e |- D = ( { ( Base ` ndx ) , ( +g ` ndx ) , ( .r ` ndx ) }
                  u. { ( vbaseLMx ` ndx ) , ( vaddLMx ` ndx ) , ( vscaLMx ` ndx
          ) } ) $.
      $( A constructed left module or left vector space is a function on
         ` D ` .  Starting from ~ rngfn (which has 3 members), we chain
         ~ fnunsn 3 times, each time adding an ordered pair to the function, to
         get all 6 members. $)
      lmodfnLMOLD $p |- W Fn D $=
        ( cnx cfv ctp cun cop fvex csn eqid uneq2i unass cbs cplusg cvbaseLMOLD
        cmulr cvaddLMOLD cpr cvscaLMOLD rngfn lmodlem1LMOLD fnunsn df-pr eqtr4i
        lmodlem2LMOLD df-tp 3eqtr4i lmodlem3LMOLD ) KUALZKUBLZKUDLZMZKUCLZKUELZ
        UFZNZCUQBOURDOUSFOMZVAGOZVBAOZUFZNZHKUGLZEKUGPUTVAQZNZVDVEVFQZNZVIVBAKU
        EPUTVLVEVNVAGKUCPBUTDVEFVERUTRUHVNRVLRUIUJVIVEVMVGQZNZNVNVONVHVPVEVFVGU
        KSVEVMVOTULVDUTVKVBQZNZNVLVQNVCVRUTVAVBUKSUTVKVQTULUMUJVEVFVGVJEOZMZNVE
        VHVSQZNZNHVIWANVTWBVEVFVGVSUNSIVEVHWATUOUTVAVBVJMZNUTVCVJQZNZNCVDWDNWCW
        EUTVAVBVJUNSJUTVCWDTUOUPUJ $.
        $( [1-Oct-2013] $)
    $}

    $( Lemma to shorten proofs of ~ lmodbaseLMOLD through ~ lmodvscaLMOLD . $)
    lmodfunLMOLD $p |- Fun W $=
      ( cnx cbs cfv cplusg cmulr ctp cvbaseLMOLD cvaddLMOLD cvscaLMOLD cun wfun
      wfn eqid lmodfnLMOLD fnfun ax-mp ) GIJKILKIMKNIOKIPKIQKNRZTGSABUECDEFGHUE
      UAUBUEGUCUD $.
      $( [4-Oct-2013] $)

    $( The base set of a constructed left vector space. $)
    lmodbaseLMOLD $p |- ( B e. X -> B = ( Base ` W ) ) $=
      ( vs cbs cnx cfv cop cplusg cmulr ctp cvbaseLMOLD cvaddLMOLD tpex cun cvv
      cvscaLMOLD unex eqeltri lmodfunLMOLD baseid ssun1 opex tpid1 sselii strfv
      eleqtrri ) BGKHJGLKMZBNZLOMCNZLPMENZQZLRMFNZLSMANZLUCMDNZQZUAZUBIURVBUOUP
      UQTUSUTVATUDUEABCDEFGIUFJUGUOVCGURVCUOURVBUHUOUPUQUNBUIUJUKIUMUL $.
      $( [2-Oct-2013] $)

    $( The additive operation of a constructed left vector space. $)
    lmodplusgLMOLD $p |- ( P e. X -> P = ( +g ` W ) ) $=
      ( vs cplusg cnx cbs cfv cop cmulr ctp cvbaseLMOLD cvaddLMOLD tpex cun cvv
      cvscaLMOLD eqeltri lmodfunLMOLD plusgid ssun1 tpid2 sselii eleqtrri strfv
      unex opex ) CGKHJGLMNBOZLKNZCOZLPNEOZQZLRNFOZLSNAOZLUCNDOZQZUAZUBIURVBUNU
      PUQTUSUTVATULUDABCDEFGIUEJUFUPVCGURVCUPURVBUGUNUPUQUOCUMUHUIIUJUK $.
      $( [2-Oct-2013] $)

    $( The multiplicative operation of a constructed left vector space. $)
    lmodmulrLMOLD $p |- ( T e. X -> T = ( .r ` W ) ) $=
      ( vs cmulr cnx cbs cfv cop cplusg ctp cvbaseLMOLD cvaddLMOLD tpex cun cvv
      cvscaLMOLD unex eqeltri lmodfunLMOLD mulrid ssun1 opex tpid3 sselii strfv
      eleqtrri ) EGKHJGLMNBOZLPNCOZLKNZEOZQZLRNFOZLSNAOZLUCNDOZQZUAZUBIURVBUNUO
      UQTUSUTVATUDUEABCDEFGIUFJUGUQVCGURVCUQURVBUHUNUOUQUPEUIUJUKIUMUL $.
      $( [2-Oct-2013] $)

    $( The set of vectors of a constructed left vector space. $)
    lmodvbaseLMOLD $p |- ( V e. X -> V = ( vbaseLMx ` W ) ) $=
      ( vs cvbaseLMOLD cnx cbs cfv cop cplusg cmulr ctp cvaddLMOLD tpex cun cvv
      cvscaLMOLD unex eqeltri lmodfunLMOLD vbaseidLMOLD ssun2 opex tpid1 sselii
      eleqtrri strfv ) FGKHJGLMNBOZLPNCOZLQNEOZRZLKNZFOZLSNAOZLUCNDOZRZUAZUBIUQ
      VBUNUOUPTUSUTVATUDUEABCDEFGIUFJUGUSVCGVBVCUSVBUQUHUSUTVAURFUIUJUKIULUM $.
      $( [2-Oct-2013] $)

    $( The vector addition operation of a constructed left vector space. $)
    lmodvaddLMOLD $p |- ( A e. X -> A = ( vaddLMx ` W ) ) $=
      ( vs cvaddLMOLD cnx cbs cfv cop cplusg cmulr ctp cvbaseLMOLD tpex cun cvv
      cvscaLMOLD unex lmodfunLMOLD vaddidLMOLD ssun2 opex tpid2 sselii eleqtrri
      eqeltri strfv ) AGKHJGLMNBOZLPNCOZLQNEOZRZLSNFOZLKNZAOZLUCNDOZRZUAZUBIUQV
      BUNUOUPTURUTVATUDULABCDEFGIUEJUFUTVCGVBVCUTVBUQUGURUTVAUSAUHUIUJIUKUM $.
      $( [2-Oct-2013] $)

    $( The scalar product operation of a constructed left vector space. $)
    lmodvscaLMOLD $p |- ( S e. X -> S = ( vscaLMx ` W ) ) $=
      ( vs cvscaLMOLD cnx cbs cfv cop cplusg cmulr ctp cvbaseLMOLD tpex cun cvv
      cvaddLMOLD unex lmodfunLMOLD vscaidLMOLD ssun2 opex tpid3 sselii eleqtrri
      eqeltri strfv ) DGKHJGLMNBOZLPNCOZLQNEOZRZLSNFOZLUCNAOZLKNZDOZRZUAZUBIUQV
      BUNUOUPTURUSVATUDULABCDEFGIUEJUFVAVCGVBVCVAVBUQUGURUSVAUTDUHUIUJIUKUM $.
      $( [2-Oct-2013] $)
  $}

  ${
    $d a f k p q r s t v w x $.
    $( Def. 8.5.11, p. 218. $)
    $( Define the class of all left modules, which are generalizations of left
       vector spaces.  A left module is a ring together with an Abelian group
       and a left scalar product connecting them. $)
    df-lmodLMOLD $a |- LModLMx = { f e. Ring |
      E. k E. p E. t E. v E. a E. s
         ( ( k = ( Base ` f ) /\ p = ( +g ` f ) /\ t = ( .r ` f ) )
          /\ ( v = ( vbaseLMx ` f ) /\ a = ( vaddLMx ` f ) /\ s = ( vscaLMx ` f
        ) )
          /\ ( { <. ( Base ` ndx ) , v >. , <. ( +g ` ndx ) , a >. } e. Abel
             /\ A. q e. k A. r e. k A. x e. v A. w e. v
               ( ( ( r s w ) e. v
                 /\ ( r s ( w a x ) ) = ( ( r s w ) a ( r s x ) )
                 /\ ( ( q p r ) s w ) = ( ( q s w ) a ( r s w ) )
               ) /\ ( ( ( q t r ) s w ) = ( q s ( r s w ) )
                 /\ ( ( 1r ` f ) s w ) = w ) ) ) ) } $.
  $}

  ${
    $d a f k p q r s t v w x A $.  $d a s G $.  $d a f k p q r s t v K $.
    $d a f k p q r s t v w x P $.  $d a f k p q r s t v w x S $.
    $d a f k p q r s t v w x T $.  $d a f k p s t v U $.
    $d a f k p q r s t v w x V $.  $d a f k p q r s t v w x W $.
    islmod.k $e |- K = ( Base ` W ) $.
    islmod.p $e |- P = ( +g ` W ) $.
    islmod.t $e |- T = ( .r ` W ) $.
    islmod.v $e |- V = ( vbaseLMx ` W ) $.
    islmod.a $e |- A = ( vaddLMx ` W ) $.
    islmod.s $e |- S = ( vscaLMx ` W ) $.
    islmod.u $e |- U = ( 1r ` W ) $.
    islmod.g $e |- G = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( The predicate "is a left module". $)
    islmodLMOLD $p |- ( W e. LModLMx <-> ( W e. Ring /\ G e. Abel
        /\ A. q e. K A. r e. K A. x e. V A. w e. V
               ( ( ( r S w ) e. V
                 /\ ( r S ( w A x ) ) = ( ( r S w ) A ( r S x ) )
                 /\ ( ( q P r ) S w ) = ( ( q S w ) A ( r S w ) )
               ) /\ ( ( ( q T r ) S w ) = ( q S ( r S w ) )
                 /\ ( U S w ) = w ) ) ) ) $=
      ( vk vp vt vv va vs vf crg wcel wceq w3a cnx cbs cfv cop cplusg cpr cabel
      cv co wa wral wex clmodLMOLD cvv fvex eqeltri cmulr cvaddLMOLD cvscaLMOLD
      cvbaseLMOLD raleq raleqbi1dv anbi2d oveq1d eqeq1d 3anbi3d anbi1d 2ralbidv
      opeq2 preq1d eleq1d eleq2 3anbi1d anbi12d preq2d syl6eqr eqeq12d 3anbi23d
      oveq oveq2d eqeq2d oveq12d 3anbi123d eqidd oveq123d ceqsex6v anbi2i fveq2
      id cur 3exbidv df-lmodLMOLD elrab2 3anass 3bitr4i ) KUIUJZUBUTZIUKZUCUTZD
      UKZUDUTZFUKZULZUEUTZJUKZUFUTZCUKZUGUTZEUKZULZUMUNUOZXPUPZUMUQUOZXRUPZURZU
      SUJZLUTZBUTZXTVAZXPUJZYIYJAUTZXRVAZXTVAZYKYIYMXTVAZXRVAZUKZMUTZYIXKVAZYJX
      TVAZYSYJXTVAZYKXRVAZUKZULZYSYIXMVAZYJXTVAZYSYKXTVAZUKZGYJXTVAZYJUKZVBZVBZ
      BXPVCAXPVCZLXIVCZMXIVCZVBZULZUGVDUFVDUEVDZUDVDUCVDUBVDZVBXHHUSUJZYIYJEVAZ
      JUJZYIYJYMCVAZEVAZUVBYIYMEVAZCVAZUKZYSYIDVAZYJEVAZYSYJEVAZUVBCVAZUKZULZYS
      YIFVAZYJEVAZYSUVBEVAZUKZGYJEVAZYJUKZVBZVBZBJVCAJVCZLIVCMIVCZVBZVBKVEUJXHU
      VAUWDULUUTUWEXHUUQYHUUNLIVCZMIVCZVBYHYLYRUVIYJXTVAZUUCUKZULZUULVBZBXPVCAX
      PVCZLIVCMIVCZVBYHUWJUVOYJXTVAZUUHUKZUUKVBZVBZBXPVCZAXPVCZLIVCMIVCZVBYCJUP
      ZYFURZUSUJZYKJUJZYRUWIULZUWPVBZBJVCZAJVCZLIVCMIVCZVBUVAUXDYIUVDXTVAZYKYPC
      VAZUKZUWHUUBYKCVAZUKZULZUWPVBZBJVCAJVCZLIVCMIVCZVBUWEUBUCUDUEUFUGIDFJCEIK
      UNUOZVFNKUNVGVHDKUQUOZVFOKUQVGVHFKVIUOZVFPKVIVGVHJKVLUOZVFQKVLVGVHCKVJUOZ
      VFRKVJVGVHEKVKUOZVFSKVKVGVHXJUUPUWGYHUUOUWFMXIIUUNLXIIVMVNVOXLUWGUWMYHXLU
      UNUWLMLIIXLUUMUWKABXPXPXLUUEUWJUULXLUUDUWIYLYRXLUUAUWHUUCXLYTUVIYJXTYSYIX
      KDWKVPVQVRVSVTVTVOXNUWMUWTYHXNUWLUWSMLIIXNUWKUWQABXPXPXNUULUWPUWJXNUUIUWO
      UUKXNUUGUWNUUHXNUUFUVOYJXTYSYIXMFWKVPVQVSVOVTVTVOXQYHUXCUWTUXIXQYGUXBUSXQ
      YDUXAYFXPJYCWAWBWCXQUWSUXHMLIIUWRUXGAXPJUWQUXFBXPJXQUWJUXEUWPXQYLUXDYRUWI
      XPJYKWDWEVSVNVNVTWFXSUXCUVAUXIUXRXSUXBHUSXSUXBUXAYECUPZURHXSYFUYEUXAXRCYE
      WAWGUAWHWCXSUXHUXQMLIIXSUXFUXPABJJXSUXEUXOUWPXSYRUXLUWIUXNUXDXSYOUXJYQUXK
      XSYNUVDYIXTYJYMXRCWKWLYKYPXRCWKWIXSUUCUXMUWHUUBYKXRCWKWMWJVSVTVTWFYAUXRUW
      DUVAYAUXQUWCMLIIYAUXPUWBABJJYAUXOUVNUWPUWAYAUXDUVCUXLUVHUXNUVMYAYKUVBJYIY
      JXTEWKZWCYAUXJUVEUXKUVGYIUVDXTEWKYAYKUVBYPUVFCUYFYIYMXTEWKWNWIYAUWHUVJUXM
      UVLUVIYJXTEWKYAUUBUVKYKUVBCYSYJXTEWKUYFWNWIWOYAUWOUVRUUKUVTYAUWNUVPUUHUVQ
      UVOYJXTEWKYAYSYSYKUVBXTEYAXAYAYSWPUYFWQWIYAUUJUVSYJGYJXTEWKVQWFWFVTVTVOWR
      WSXIUHUTZUNUOZUKZXKUYGUQUOZUKZXMUYGVIUOZUKZULZXPUYGVLUOZUKZXRUYGVJUOZUKZX
      TUYGVKUOZUKZULZYHUUEUUIUYGXBUOZYJXTVAZYJUKZVBZVBZBXPVCAXPVCZLXIVCMXIVCZVB
      ZULZUGVDUFVDUEVDZUDVDUCVDUBVDUUTUHKUIVEUYGKUKZVUKUUSUBUCUDVULVUJUURUEUFUG
      VULUYNXOVUAYBVUIUUQVULUYIXJUYKXLUYMXNVULUYHIXIVULUYHUXSIUYGKUNWTNWHWMVULU
      YJDXKVULUYJUXTDUYGKUQWTOWHWMVULUYLFXMVULUYLUYAFUYGKVIWTPWHWMWOVULUYPXQUYR
      XSUYTYAVULUYOJXPVULUYOUYBJUYGKVLWTQWHWMVULUYQCXRVULUYQUYCCUYGKVJWTRWHWMVU
      LUYSEXTVULUYSUYDEUYGKVKWTSWHWMWOVULVUHUUPYHVULVUGUUNMLXIXIVULVUFUUMABXPXP
      VULVUEUULUUEVULVUDUUKUUIVULVUCUUJYJVULVUBGYJXTVULVUBKXBUOGUYGKXBWTTWHVPVQ
      VOVOVTVTVOWOXCXCABUEUDUHUBUGLMUCUFXDXEXHUVAUWDXFXG $.
      $( [4-Nov-2013] $)

    $d q r w x Q $.  $d q r w x R $.  $d q r w x U $.  $d w x X $.  $d w Y $.
    $( Lemma for properties of a left module. $)
    lmodlemaLMOLD $p |- ( ( W e. LModLMx /\ ( Q e. K /\ R e. K )
          /\ ( X e. V /\ Y e. V ) ) ->
               ( ( ( R S Y ) e. V
                 /\ ( R S ( Y A X ) ) = ( ( R S Y ) A ( R S X ) )
                 /\ ( ( Q P R ) S Y ) = ( ( Q S Y ) A ( R S Y ) )
               ) /\ ( ( ( Q T R ) S Y ) = ( Q S ( R S Y ) )
                 /\ ( U S Y ) = Y ) ) ) $=
      ( vr vw vx vq clmodLMOLD wcel wa co wceq w3a cabel cv wral wi islmodLMOLD
      oveq1 oveq1d eqeq12d 3anbi3d anbi1d anbi12d 2ralbidv eleq1d oveq12d oveq2
      crg oveq2d 3anbi123d rcla42v 3anbi2d id com12 imp3a 3ad2ant3 sylbi 3impib
      syl6com ) KUFUGZCIUGDIUGUHZLJUGMJUGUHZDMEUIZJUGZDMLAUIZEUIZWBDLEUIZAUIZUJ
      ZCDBUIZMEUIZCMEUIZWBAUIZUJZUKZCDFUIZMEUIZCWBEUIZUJZGMEUIZMUJZUHZUHZVSKVGU
      GZHULUGZUBUMZUCUMZEUIZJUGZXEXFUDUMZAUIZEUIZXGXEXIEUIZAUIZUJZUEUMZXEBUIZXF
      EUIZXOXFEUIZXGAUIZUJZUKZXOXEFUIZXFEUIZXOXGEUIZUJZGXFEUIZXFUJZUHZUHZUCJUNU
      DJUNZUBIUNUEIUNZUKVTWAUHXBUOZUDUCABEFGHIJKUBUENOPQRSTUAUPYKXCYLXDYKVTWAXB
      VTYKDXFEUIZJUGZDXJEUIZYMDXIEUIZAUIZUJZWIXFEUIZCXFEUIZYMAUIZUJZUKZWOXFEUIZ
      CYMEUIZUJZYGUHZUHZUCJUNUDJUNZWAXBUOYJUUIXHXNCXEBUIZXFEUIZYTXGAUIZUJZUKZCX
      EFUIZXFEUIZCXGEUIZUJZYGUHZUHZUCJUNUDJUNUEUBCDIIXOCUJZYIUUTUDUCJJUVAYAUUNY
      HUUSUVAXTUUMXHXNUVAXQUUKXSUULUVAXPUUJXFEXOCXEBUQURUVAXRYTXGAXOCXFEUQURUSU
      TUVAYEUURYGUVAYCUUPYDUUQUVAYBUUOXFEXOCXEFUQURXOCXGEUQUSVAVBVCXEDUJZUUTUUH
      UDUCJJUVBUUNUUCUUSUUGUVBXHYNXNYRUUMUUBUVBXGYMJXEDXFEUQZVDUVBXKYOXMYQXEDXJ
      EUQUVBXGYMXLYPAUVCXEDXIEUQVEUSUVBUUKYSUULUUAUVBUUJWIXFEXEDCBVFURUVBXGYMYT
      AUVCVHUSVIUVBUURUUFYGUVBUUPUUDUUQUUEUVBUUOWOXFEXEDCFVFURUVBXGYMCEUVCVHUSV
      AVBVCVJWAUUIXBUUHXBYNDXFLAUIZEUIZYMWFAUIZUJZUUBUKZUUGUHUDUCLMJJXILUJZUUCU
      VHUUGUVIYRUVGYNUUBUVIYOUVEYQUVFUVIXJUVDDEXILXFAVFVHUVIYPWFYMAXILDEVFVHUSV
      KVAXFMUJZUVHWNUUGXAUVJYNWCUVGWHUUBWMUVJYMWBJXFMDEVFZVDUVJUVEWEUVFWGUVJUVD
      WDDEXFMLAUQVHUVJYMWBWFAUVKURUSUVJYSWJUUAWLXFMWIEVFUVJYTWKYMWBAXFMCEVFUVKV
      EUSVIUVJUUFWRYGWTUVJUUDWPUUEWQXFMWOEVFUVJYMWBCEUVKVHUSUVJYFWSXFMXFMGEVFUV
      JVLUSVBVBVJVMVRVNVOVPVQ $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d q r w x A $.  $d q r w x V $.  $d q r w x W $.
    lmodlemb.v $e |- V = ( vbaseLMx ` W ) $.
    lmodlemb.a $e |- A = ( vaddLMx ` W ) $.
    lmodlemb.g $e |- G = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. }
        $.
    $( Lemma for properties of a left module. $)
    lmodlembLMOLD $p |- ( W e. LModLMx -> ( W e. Ring /\ G e. Abel ) ) $=
      ( vr vw vx vq wcel cv cfv co wceq w3a wa wral eqid clmodLMOLD cabel cmulr
      crg cvscaLMOLD cplusg cur cbs islmodLMOLD 3simpa sylbi ) DUALDUDLZBUBLZHM
      ZIMZDUENZOZCLUNUOJMZAOUPOUQUNURUPOAOPKMZUNDUFNZOUOUPOUSUOUPOUQAOPQUSUNDUC
      NZOUOUPOUSUQUPOPDUGNZUOUPOUOPRRICSJCSHDUHNZSKVCSZQULUMRJIAUTUPVAVBBVCCDHK
      VCTUTTVATEFUPTVBTGUIULUMVDUJUK $.
      $( [8-Dec-2013] $)

    $( The vectors in a left module form an Abelian group. $)
    lmodablLMOLD $p |- ( W e. LModLMx -> G e. Abel ) $=
      ( clmodLMOLD wcel crg cabel lmodlembLMOLD simprd ) DHIDJIBKIABCDEFGLM $.
      $( [8-Dec-2013] $)
  $}

  $( A left module is a ring. $)
  lmodrngLMOLD $p |- ( W e. LModLMx -> W e. Ring ) $=
    ( clmodLMOLD wcel crg cnx cbs cfv cvbaseLMOLD cop cvaddLMOLD cpr cabel eqid
    cplusg lmodlembLMOLD simpld ) ABCADCEFGAHGZIENGAJGZIKZLCRSQAQMRMSMOP $.
    $( [8-Dec-2013] $)

  $( A left module (i.e. the left module's ring) is a group. $)
  lmodgrpLMOLD $p |- ( W e. LModLMx -> W e. Grp ) $=
    ( clmodLMOLD wcel crg cgrp lmodrngLMOLD rnggrp syl ) ABCADCAECAFAGH $.
    $( [12-Jan-2014] $)

  ${
    lmodbn0.b $e |- B = ( Base ` W ) $.
    $( The base set of a left module is nonempty. $)
    lmodbn0LMOLD $p |- ( W e. LModLMx -> B =/= (/) ) $=
      ( clmodLMOLD wcel cgrp c0 wne lmodgrpLMOLD grpn0 syl ) BDEBFEAGHBIABCJK
      $.
      $( [8-Dec-2013] $)
  $}

  ${
    lmodacl.k $e |- K = ( Base ` W ) $.
    lmodacl.p $e |- P = ( +g ` W ) $.
    $( Closure of ring addition for a left module. $)
    lmodaclLMOLD $p |- ( ( W e. LModLMx /\ X e. K /\ Y e. K ) -> ( X P Y ) e. K
        ) $=
      ( clmodLMOLD wcel crg co lmodrngLMOLD rngacl syl3an1 ) CHICJIDBIEBIDEAKBI
      CLBACDEFGMN $.
      $( [14-Jan-2014] $)
  $}

  ${
    lmodmcl.k $e |- K = ( Base ` W ) $.
    lmodmcl.t $e |- T = ( .r ` W ) $.
    $( Closure of ring multiplication for a left module. $)
    lmodmclLMOLD $p |- ( ( W e. LModLMx /\ X e. K /\ Y e. K ) -> ( X T Y ) e. K
        ) $=
      ( clmodLMOLD wcel crg co lmodrngLMOLD rngcl syl3an1 ) CHICJIDBIEBIDEAKBIC
      LBCADEFGMN $.
      $( [14-Jan-2014] $)
  $}

  ${
    lmodvn0.v $e |- V = ( vbaseLMx ` W ) $.
    $( The set of vectors in a left module is nonempty. $)
    lmodvn0LMOLD $p |- ( W e. LModLMx -> V =/= (/) ) $=
      ( clmodLMOLD wcel cnx cbs cfv cop cplusg cvaddLMOLD cpr cabel cgrp c0 wne
      eqid lmodablLMOLD cvv cvbaseLMOLD ablgrp wceq eqeltri grpbase ax-mp grpn0
      fvex 3syl ) BDEFGHAIFJHBKHZILZMEUJNEAOPUIUJABCUIQUJQZRUJUAAUJASEAUJGHUBAB
      THSCBTUGUCAUIUJSUKUDUEUFUH $.
      $( [8-Dec-2013] $)
  $}

  ${
    lmodvacl.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvacl.a $e |- A = ( vaddLMx ` W ) $.
    $( Closure of vector addition for a left module. $)
    lmodvaclLMOLD $p |- ( ( W e. LModLMx /\ X e. V /\ Y e. V ) -> ( X A Y ) e.
        V ) $=
      ( wcel cnx cbs cfv cop cvv wceq cvbaseLMOLD fvex eqeltri ax-mp cvaddLMOLD
      cplusg clmodLMOLD cpr cgrp co cabel eqid lmodablLMOLD ablgrp syl grpplusg
      grpbase grpcl syl3an1 ) CUAHZIJKBLITKALUBZUCHZDBHEBHDEAUDBHUNUOUEHUPAUOBC
      FGUOUFZUGUOUHUIBAUODEBMHBUOJKNBCOKMFCOPQBAUOMUQUKRAMHAUOTKNACSKMGCSPQBAUO
      MUQUJRULUM $.
      $( [8-Dec-2013] $)

    $( Left module vector sum is commutative. $)
    lmodcomLMOLD $p |- ( ( W e. LModLMx /\ X e. V /\ Y e. V )
        -> ( X A Y ) = ( Y A X ) ) $=
      ( wcel cnx cbs cfv cop cplusg co wceq cvv cvbaseLMOLD fvex eqeltri ax-mp
      clmodLMOLD cpr cabel eqid lmodablLMOLD grpbase cvaddLMOLD grpplusg ablcom
      syl3an1 ) CUAHIJKBLIMKALUBZUCHDBHEBHDEANEDANOAUKBCFGUKUDZUEBAUKDEBPHBUKJK
      OBCQKPFCQRSBAUKPULUFTAPHAUKMKOACUGKPGCUGRSBAUKPULUHTUIUJ $.
      $( [1-Jan-2014] $)

    $( Left module vector sum is commutative. $)
    lmodassLMOLD $p |- ( ( W e. LModLMx /\ ( X e. V /\ Y e. V /\ Z e. V ) )
        -> ( ( X A Y ) A Z ) = ( X A ( Y A Z ) ) ) $=
      ( wcel cnx cbs cfv cop cplusg co wceq cvv cvbaseLMOLD fvex eqeltri ablgrp
      clmodLMOLD cpr cgrp w3a eqid lmodablLMOLD syl grpbase cvaddLMOLD grpplusg
      cabel ax-mp grpass sylan ) CUBIZJKLBMJNLAMUCZUDIZDBIEBIFBIUEDEAOFAODEFAOA
      OPUPUQULIURAUQBCGHUQUFZUGUQUAUHBAUQDEFBQIBUQKLPBCRLQGCRSTBAUQQUSUIUMAQIAU
      QNLPACUJLQHCUJSTBAUQQUSUKUMUNUO $.
      $( [10-Jan-2014] $)

    $( Commutative/associative law for left module vector sum. $)
    lmod4LMOLD $p |- ( ( W e. LModLMx /\ ( X e. V /\ Y e. V ) /\ ( Z e. V /\ U
        e. V ) )
        -> ( ( X A Y ) A ( Z A U ) ) = ( ( X A Z ) A ( Y A U ) ) ) $=
      ( wcel cnx cbs cfv cop cplusg wa co wceq cvv cvbaseLMOLD clmodLMOLD cabel
      cpr eqid lmodablLMOLD fvex eqeltri grpbase ax-mp cvaddLMOLD grpplusg abl4
      syl3an1 ) DUAJKLMCNKOMANUCZUBJECJFCJPGCJBCJPEFAQGBAQAQEGAQFBAQAQRAUNCDHIU
      NUDZUECAUNBEFGCSJCUNLMRCDTMSHDTUFUGCAUNSUOUHUIASJAUNOMRADUJMSIDUJUFUGCAUN
      SUOUKUIULUM $.
      $( [4-Feb-2014] $)

    $( Left cancellation law for vector sum. $)
    lmodlcanLMOLD $p |- ( ( W e. LModLMx /\ ( X e. V /\ Y e. V /\ Z e. V ) )
           -> ( ( Z A X ) = ( Z A Y ) <-> X = Y ) ) $=
      ( wcel cnx cbs cfv cop cplusg co wceq cvv cvbaseLMOLD fvex eqeltri cpr wb
      clmodLMOLD cgrp w3a cabel eqid lmodablLMOLD ablgrp syl grpbase cvaddLMOLD
      ax-mp grpplusg grplcan sylan ) CUCIZJKLBMJNLAMUAZUDIZDBIEBIFBIUEFDAOFEAOP
      DEPUBUQURUFIUSAURBCGHURUGZUHURUIUJBAURDEFBQIBURKLPBCRLQGCRSTBAURQUTUKUMAQ
      IAURNLPACULLQHCULSTBAURQUTUNUMUOUP $.
      $( [12-Jan-2014] $)
  $}

  ${
    lmodvscl.k $e |- K = ( Base ` W ) $.
    lmodvscl.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvscl.s $e |- S = ( vscaLMx ` W ) $.
    $( Closure of scalar product for a left module. $)
    lmodvsclLMOLD $p |- ( ( W e. LModLMx /\ R e. K /\ X e. V ) -> ( R S X ) e.
        V ) $=
      ( clmodLMOLD wcel w3a co cfv wceq cplusg wa cnx cop eqid cvaddLMOLD cmulr
      cur simp1 simp2 simp3 cbs cpr lmodlemaLMOLD syl122anc simpl1 syl ) EJKZAC
      KZFDKZLZAFBMZDKZAFFEUANZMBMUQUQUSMZOZAAEPNZMFBMUTOZLAAEUBNZMFBMAUQBMOEUCN
      ZFBMFOQZQZURUPUMUNUNUOUOVGUMUNUOUDUMUNUOUEZVHUMUNUOUFZVIUSVBAABVDVERUGNDS
      RPNUSSUHZCDEFFGVBTVDTHUSTIVETVJTUIUJURVAVCVFUKUL $.
      $( [8-Dec-2013] $)
  $}

  ${
    lmodvsdi1.k $e |- K = ( Base ` W ) $.
    lmodvsdi1.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsdi1.a $e |- A = ( vaddLMx ` W ) $.
    lmodvsdi1.s $e |- S = ( vscaLMx ` W ) $.
    $( Distributive law for scalar product. $)
    lmodvsdi1LMOLD $p |- ( ( W e. LModLMx /\ R e. K
          /\ ( X e. V /\ Y e. V ) )
       -> ( R S ( X A Y ) ) = ( ( R S X ) A ( R S Y ) ) ) $=
      ( wcel wa w3a co wceq cplusg cfv eqid clmodLMOLD cmulr simp1 simp2 simp3r
      cur simp3l cnx cbs cop cpr lmodlemaLMOLD syl122anc simpl2 syl ) FUAMZBDMZ
      GEMZHEMZNZOZBGCPZEMZBGHAPCPVBBHCPAPQZBBFRSZPGCPVBVBAPQZOBBFUBSZPGCPBVBCPQ
      FUFSZGCPGQNZNZVDVAUPUQUQUSURVJUPUQUTUCUPUQUTUDZVKUPUQURUSUEUPUQURUSUGAVEB
      BCVGVHUHUISEUJUHRSAUJUKZDEFHGIVETVGTJKLVHTVLTULUMVCVDVFVIUNUO $.
      $( [10-Jan-2014] $)
  $}

  ${
    lmodvsdi2.k $e |- K = ( Base ` W ) $.
    lmodvsdi2.p $e |- P = ( +g ` W ) $.
    lmodvsdi2.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsdi2.a $e |- A = ( vaddLMx ` W ) $.
    lmodvsdi2.s $e |- S = ( vscaLMx ` W ) $.
    $( Distributive law for scalar product. $)
    lmodvsdi2LMOLD $p |- ( ( W e. LModLMx /\ ( Q e. K /\ R e. K )
          /\ X e. V )
       -> ( ( Q P R ) S X ) = ( ( Q S X ) A ( R S X ) ) ) $=
      ( wcel wa co wceq cfv eqid clmodLMOLD w3a cmulr simp1 simp2l simp2r simp3
      cur cnx cbs cop cplusg cpr lmodlemaLMOLD syl122anc simpl3 syl ) HUAOZCFOZ
      DFOZPZIGOZUBZDIEQZGOZDIIAQEQVDVDAQRZCDBQIEQCIEQVDAQRZUBCDHUCSZQIEQCVDEQRH
      UHSZIEQIRPZPZVGVCURUSUTVBVBVKURVAVBUDURUSUTVBUEURUSUTVBUFURVAVBUGZVLABCDE
      VHVIUIUJSGUKUIULSAUKUMZFGHIIJKVHTLMNVITVMTUNUOVEVFVGVJUPUQ $.
      $( [10-Jan-2014] $)
  $}

  ${
    lmodvsass.k $e |- K = ( Base ` W ) $.
    lmodvsass.t $e |- T = ( .r ` W ) $.
    lmodvsass.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsass.s $e |- S = ( vscaLMx ` W ) $.
    $( Associative law for scalar product. $)
    lmodvsassLMOLD $p |- ( ( W e. LModLMx /\ ( Q e. K /\ R e. K )
          /\ X e. V )
      -> ( ( Q T R ) S X ) = ( Q S ( R S X ) ) ) $=
      ( wcel wa w3a co cfv wceq cplusg eqid clmodLMOLD cvaddLMOLD simp2l simp2r
      cur simp1 simp3 cnx cbs cop cpr lmodlemaLMOLD syl122anc simprl syl ) GUAM
      ZAEMZBEMZNZHFMZOZBHCPZFMBHHGUBQZPCPVBVBVCPRABGSQZPHCPAHCPVBVCPROZABDPHCPA
      VBCPRZGUEQZHCPHRZNNZVFVAUPUQURUTUTVIUPUSUTUFUPUQURUTUCUPUQURUTUDUPUSUTUGZ
      VJVCVDABCDVGUHUIQFUJUHSQVCUJUKZEFGHHIVDTJKVCTLVGTVKTULUMVEVFVHUNUO $.
      $( [10-Jan-2014] $)
  $}

  ${
    $d x S $.  $d x U $.  $d x V $.  $d x W $.  $d x X $.
    lmodvs1.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvs1.s $e |- S = ( vscaLMx ` W ) $.
    lmodvs1.u $e |- U = ( 1r ` W ) $.
    $( Scalar product with ring unit. $)
    lmodvs1LMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> ( U S X ) = X ) $=
      ( vx wcel co wceq cbs cfv eqid w3a cplusg wa cnx cop clmodLMOLD cv wex wi
      c0 lmodbn0LMOLD n0 sylib cvaddLMOLD cmulr simp1 simp2 simp3 lmodlemaLMOLD
      wne cpr syl122anc simprr syl 3exp exlimdv mpd imp ) DUAJZECJZBEAKELZVDIUB
      ZDMNZJZIUCZVEVFUDZVDVHUEUOVJVHDVHOZUFIVHUGUHVDVIVKIVDVIVEVFVDVIVEPZVGEAKZ
      CJVGEEDUINZKAKVNVNVOKZLVGVGDQNZKEAKVPLPZVGVGDUJNZKEAKVGVNAKLZVFRRZVFVMVDV
      IVIVEVEWAVDVIVEUKVDVIVEULZWBVDVIVEUMZWCVOVQVGVGAVSBSMNCTSQNVOTUPZVHCDEEVL
      VQOVSOFVOOGHWDOUNUQVRVTVFURUSUTVAVBVC $.
      $( [10-Jan-2014] $)
  $}

  ${
    lmod0cl.k $e |- K = ( Base ` W ) $.
    lmod0cl.z $e |- Z = ( 0g ` W ) $.
    $( The ring zero in a left module belongs to the ring base set. $)
    lmod0clLMOLD $p |- ( W e. LModLMx -> Z e. K ) $=
      ( clmodLMOLD wcel crg lmodrngLMOLD rng0cl syl ) BFGBHGCAGBIABCDEJK $.
      $( [11-Jan-2014] $)
  $}

  ${
    lmod1cl.k $e |- K = ( Base ` W ) $.
    lmod1cl.u $e |- U = ( 1r ` W ) $.
    $( The ring unit in a left module belongs to the ring base set. $)
    lmod1clLMOLD $p |- ( W e. LModLMx -> U e. K ) $=
      ( clmodLMOLD wcel crg lmodrngLMOLD rngidcl syl ) CFGCHGABGCIBCADEJK $.
      $( [11-Jan-2014] $)
  $}

  $c 0vLMx $.
  $c vnegLMx $.
  $c vsubLMx $.

  $( Extend class notation with the zero vector. $)
  czvLMOLD $a class 0vLMx $.

  $( Extend class notation with vector subtraction. $)
  cvnLMOLD $a class vnegLMx $.

  $( Extend class notation with vector subtraction. $)
  cvsLMOLD $a class vsubLMx $.

  $( Def. 8.5.13, p. 219. $)
  $( Define the zero vector. $)
  df-zvLMOLD $a |- 0vLMx = ( v e. _V |-> ( 0g ` { <. ( Base ` ndx ) ,
    ( vbaseLMx ` v ) >. , <. ( +g ` ndx ) , ( vaddLMx ` v ) >. } ) ) $.

  $( Define the negative of a vector. $)
  df-vnegLMOLD $a |- vnegLMx = ( v e. _V |-> ( invg ` { <. ( Base ` ndx ) ,
    ( vbaseLMx ` v ) >. , <. ( +g ` ndx ) , ( vaddLMx ` v ) >. } ) ) $.

  $( Define vector subtraction. $)
  df-vsubLMOLD $a |- vsubLMx = ( v e. _V |-> ( -g ` { <. ( Base ` ndx ) ,
    ( vbaseLMx ` v ) >. , <. ( +g ` ndx ) , ( vaddLMx ` v ) >. } ) ) $.

  ${
    $d w A $.  $d w V $.  $d w W $.
    0vval.v $e |- V = ( vbaseLMx ` W ) $.
    0vval.a $e |- A = ( vaddLMx ` W ) $.
    0vval.z $e |- Z = ( 0vLMx ` W ) $.
    0vval.u $e |- U = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( Value of the zero vector. $)
    0vvalLMOLD $p |- ( W e. X -> Z = ( 0g ` U ) ) $=
      ( vw wcel cvv c0g cfv wceq czvLMOLD cop cvbaseLMOLD cvaddLMOLD cnx cplusg
      elex cbs cpr cv fveq2 syl6eqr opeq2d preq12d fveq2d df-zvLMOLD fvex fvmpt
      fveq2i 3eqtr4g syl ) DELDMLZFBNOZPDEUCURDQOUAUDOZCRZUAUBOZARZUEZNOZFUSKDU
      TKUFZSOZRZVBVFTOZRZUEZNOVEMQVFDPZVKVDNVLVHVAVJVCVLVGCUTVLVGDSOCVFDSUGGUHU
      IVLVIAVBVLVIDTOAVFDTUGHUHUIUJUKKULVDNUMUNIBVDNJUOUPUQ $.
      $( [10-Jan-2014] $)
  $}

  ${
    $d w A $.  $d w V $.  $d w W $.
    lmodvnegfval.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvnegfval.a $e |- A = ( vaddLMx ` W ) $.
    lmodvnegfval.n $e |- N = ( vnegLMx ` W ) $.
    lmodvnegfval.u $e |- U =
         { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( Value of vector subtraction. $)
    lmodvnegfvalLMOLD $p |- ( W e. X -> N = ( invg ` U ) ) $=
      ( vw wcel cvv cminusg cfv wceq cvnLMOLD cop cvbaseLMOLD cvaddLMOLD cplusg
      elex cnx cbs cpr cv fveq2 syl6eqr opeq2d preq12d fveq2d df-vnegLMOLD fvex
      fvmpt fveq2i 3eqtr4g syl ) EFLEMLZCBNOZPEFUBUREQOUCUDOZDRZUCUAOZARZUEZNOZ
      CUSKEUTKUFZSOZRZVBVFTOZRZUEZNOVEMQVFEPZVKVDNVLVHVAVJVCVLVGDUTVLVGESODVFES
      UGGUHUIVLVIAVBVLVIETOAVFETUGHUHUIUJUKKULVDNUMUNIBVDNJUOUPUQ $.
      $( [31-Mar-2014] $)
  $}

  ${
    $d w A $.  $d w V $.  $d w W $.
    lmodvsubfval.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsubfval.a $e |- A = ( vaddLMx ` W ) $.
    lmodvsubfval.m $e |- M = ( vsubLMx ` W ) $.
    lmodvsubfval.u $e |- U =
         { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( Value of vector subtraction. $)
    lmodvsubfvalLMOLD $p |- ( W e. X -> M = ( -g ` U ) ) $=
      ( vw wcel cvv csg cfv wceq cvsLMOLD cop cvbaseLMOLD cvaddLMOLD cnx cplusg
      elex cbs cpr fveq2 syl6eqr opeq2d preq12d fveq2d df-vsubLMOLD fvex fveq2i
      cv fvmpt 3eqtr4g syl ) EFLEMLZCBNOZPEFUCUREQOUAUDOZDRZUAUBOZARZUEZNOZCUSK
      EUTKUNZSOZRZVBVFTOZRZUEZNOVEMQVFEPZVKVDNVLVHVAVJVCVLVGDUTVLVGESODVFESUFGU
      GUHVLVIAVBVLVIETOAVFETUFHUGUHUIUJKUKVDNULUOIBVDNJUMUPUQ $.
      $( [31-Mar-2014] $)
  $}

  ${
    0vcl.v $e |- V = ( vbaseLMx ` W ) $.
    0vcl.z $e |- Z = ( 0vLMx ` W ) $.
    $( The zero vector is a vector. $)
    0vclLMOLD $p |- ( W e. LModLMx -> Z e. V ) $=
      ( clmodLMOLD wcel cnx cbs cfv cop cplusg cvaddLMOLD eqid 0vvalLMOLD cabel
      cpr c0g cvv cvbaseLMOLD cgrp lmodablLMOLD wceq fvex eqeltri grpbase ax-mp
      ablgrp grpidcl 3syl eqeltrd ) BFGZCHIJAKHLJBMJZKQZRJZAUMUNABFCDUMNZEUNNZO
      ULUNPGUNUAGUOAGUMUNABDUPUQUBUNUHAUNUOASGAUNIJUCABTJSDBTUDUEAUMUNSUQUFUGUO
      NUIUJUK $.
      $( [10-Jan-2014] $)
  $}

  ${
    0vlid.v $e |- V = ( vbaseLMx ` W ) $.
    0vlid.a $e |- A = ( vaddLMx ` W ) $.
    0vlid.z $e |- Z = ( 0vLMx ` W ) $.
    $( Left identity law for the zero vector. $)
    0vlidLMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> ( Z A X ) = X ) $=
      ( clmodLMOLD wcel co cnx cbs cfv cop cplusg wceq eqid cvv cvbaseLMOLD cpr
      wa c0g 0vvalLMOLD oveq1d adantr cgrp lmodablLMOLD ablgrp syl fvex eqeltri
      cabel grpbase ax-mp cvaddLMOLD grpplusg grplid sylan eqtrd ) CIJZDBJZUBED
      AKZLMNBOLPNAOUAZUCNZDAKZDVAVCVFQVBVAEVEDAAVDBCIEFGHVDRZUDUEUFVAVDUGJZVBVF
      DQVAVDUMJVHAVDBCFGVGUHVDUIUJBAVDVEDBSJBVDMNQBCTNSFCTUKULBAVDSVGUNUOASJAVD
      PNQACUPNSGCUPUKULBAVDSVGUQUOVERURUSUT $.
      $( [10-Jan-2014] $)

    $( Right identity law for the zero vector. $)
    0vridLMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> ( X A Z ) = X ) $=
      ( clmodLMOLD wcel wa wceq 0vclLMOLD lmodcomLMOLD mpd3an3 0vlidLMOLD eqtrd
      co adantr ) CIJZDBJZKDEARZEDARZDTUAEBJZUBUCLTUDUABCEFHMSABCDEFGNOABCDEFGH
      PQ $.
      $( [10-Jan-2014] $)

    $( Identity equivalent to the value of the zero vector.  Provides a
       convenient way to compute the value. $)
    0vidLMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> ( ( X A X ) = X <-> Z = X )
        ) $=
      ( clmodLMOLD wcel wceq cnx cbs cfv cop cplusg eqid cvv cvbaseLMOLD fvex
      wa co cpr c0g cgrp wb cabel lmodablLMOLD ablgrp syl eqeltri grpbase ax-mp
      cvaddLMOLD grpplusg grpid sylan 0vvalLMOLD adantr eqeq1d bitr4d ) CIJZDBJ
      ZUAZDDAUBDKZLMNBOLPNAOUCZUDNZDKZEDKVBVFUEJZVCVEVHUFVBVFUGJVIAVFBCFGVFQZUH
      VFUIUJBAVFVGDBRJBVFMNKBCSNRFCSTUKBAVFRVJULUMARJAVFPNKACUNNRGCUNTUKBAVFRVJ
      UOUMVGQUPUQVDEVGDVBEVGKVCAVFBCIEFGHVJURUSUTVA $.
      $( [9-Mar-2014] $)
  $}

  ${
    lmod0vs.o $e |- O = ( 0g ` W ) $.
    lmod0vs.v $e |- V = ( vbaseLMx ` W ) $.
    lmod0vs.s $e |- S = ( vscaLMx ` W ) $.
    lmod0vs.z $e |- Z = ( 0vLMx ` W ) $.
    $( Zero times a vector is the zero vector.  Equation 1a of [Kreyszig]
       p. 51. $)
    lmod0vsLMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> ( O S X ) = Z ) $=
      ( clmodLMOLD wcel wa co cvaddLMOLD cfv wceq eqid oveq1d adantr 0vridLMOLD
      cur cplusg cgrp cbs lmodgrpLMOLD lmod1clLMOLD grprid syl2anc lmod0clLMOLD
      simpl simpr lmodvsdi2LMOLD lmodvs1LMOLD 3eqtr3d 3eqtr2rd wb lmodvsclLMOLD
      syl121anc syl3anc 0vclLMOLD lmodlcanLMOLD syl13anc mpbid ) DKLZECLZMZEBEA
      NZDOPZNZEFVINZQZVHFQZVGVKEDUBPZEANZVHVINZVJVICDEFHVIRZJUAVGVNBDUCPZNZEANZ
      VOVPEVEVTVOQVFVEVSVNEAVEDUDLVNDUEPZLZVSVNQDUFVNWADWARZVNRZUGZWAVRDBVNWCVR
      RZGUHUISTVGVEWBBWALZVFVTVPQVEVFUKZVEWBVFWETVEWGVFWADBWCGUJTZVEVFULZVIVRVN
      BAWACDEWCWFHVQIUMUSAVNCDEHIWDUNZUOVGVOEVHVIWKSUPVGVEVHCLZFCLZVFVLVMUQWHVG
      VEWGVFWLWHWIWJBAWACDEWCHIURUTVEWMVFCDFHJVATWJVICDVHFEHVQVBVCVD $.
      $( [12-Jan-2014] $)
  $}

  ${
    lmodvs0.k $e |- K = ( Base ` W ) $.
    lmodvs0.s $e |- S = ( vscaLMx ` W ) $.
    lmodvs0.z $e |- Z = ( 0vLMx ` W ) $.
    $( Anything times the zero vector is the zero vector.  Equation 1b of
       [Kreyszig] p. 51. $)
    lmodvs0LMOLD $p |- ( ( W e. LModLMx /\ X e. K ) -> ( X S Z ) = Z ) $=
      ( clmodLMOLD wcel wa co c0g cfv cmulr cvbaseLMOLD wceq simpl eqid adantr
      simpr lmod0clLMOLD 0vclLMOLD lmodvsassLMOLD syl121anc lmod0vsLMOLD oveq2d
      mpdan eqtr2d crg lmodrngLMOLD rngrz sylan oveq1d 3eqtrd ) CIJZDBJZKZDEALZ
      DCMNZCONZLZEALZUTEALZEURVCDVDALZUSURUPUQUTBJZECPNZJZVCVEQUPUQRUPUQUAUPVFU
      QBCUTFUTSZUBTUPVHUQVGCEVGSZHUCZTDUTAVABVGCEFVASZVJGUDUEUPVEUSQUQUPVDEDAUP
      VHVDEQZVKAUTVGCEEVIVJGHUFUHZUGTUIURVBUTEAUPCUJJUQVBUTQCUKBCVADUTFVLVIULUM
      UNUPVMUQVNTUO $.
      $( [12-Jan-2014] $)
  $}

  ${
    lmodvnegcl.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvnegcl.n $e |- N = ( vnegLMx ` W ) $.
    $( Closure of vector negative. $)
    lmodvnegclLMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> ( N ` X ) e. V ) $=
      ( clmodLMOLD wcel cfv cnx cbs cop cplusg cvaddLMOLD wceq eqid cvbaseLMOLD
      wa adantr cvv cpr lmodvnegfvalLMOLD fveq1d cgrp cabel lmodablLMOLD ablgrp
      cminusg syl simpr fvex eqeltri grpbase ax-mp grpinvcl syl2anc eqeltrd ) C
      GHZDBHZRZDAIDJKIBLJMICNIZLUAZUHIZIZBUTDAVCURAVCOUSVAVBABCGEVAPZFVBPZUBSUC
      UTVBUDHZUSVDBHUTVBUEHZVGURVHUSVAVBBCEVEVFUFSVBUGUIURUSUJBVBVCDBTHBVBKIOBC
      QITECQUKULBVAVBTVFUMUNVCPUOUPUQ $.
      $( [18-Apr-2014] $)
  $}

  ${
    lmodvnegid.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvnegid.p $e |- P = ( vaddLMx ` W ) $.
    lmodvnegid.n $e |- N = ( vnegLMx ` W ) $.
    lmodvnegid.z $e |- Z = ( 0vLMx ` W ) $.
    $( Addition of a vector with its negative. $)
    lmodvnegidLMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> ( X P ( N ` X ) ) = Z
        ) $=
      ( clmodLMOLD wcel cnx cbs cfv cop cplusg wceq eqid cvv wa cpr cminusg c0g
      cgrp cabel lmodablLMOLD ablgrp syl cvbaseLMOLD fvex eqeltri grpbase ax-mp
      co cvaddLMOLD grpplusg grprinv lmodvnegfvalLMOLD adantr fveq1d 0vvalLMOLD
      sylan oveq2d 3eqtr4d ) DKLZECLZUAZEEMNOCPMQOAPUBZUCOZOZAUOZVIUDOZEEBOZAUO
      FVFVIUELZVGVLVMRVFVIUFLVOAVICDGHVISZUGVIUHUICAVIVJVMECTLCVINORCDUJOTGDUJU
      KULCAVITVPUMUNATLAVIQORADUPOTHDUPUKULCAVITVPUQUNVMSVJSURVCVHVNVKEAVHEBVJV
      FBVJRVGAVIBCDKGHIVPUSUTVAVDVFFVMRVGAVICDKFGHJVPVBUTVE $.
      $( [18-Apr-2014] $)
  $}

  ${
    lmodvneg1.u $e |- U = ( 1r ` W ) $.
    lmodvneg1.m $e |- M = ( invg ` W ) $.
    lmodvneg1.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvneg1.s $e |- S = ( vscaLMx ` W ) $.
    lmodvneg1.n $e |- N = ( vnegLMx ` W ) $.
    $( Minus 1 times a vector is the negative of the vector.  Equation 2 of
       [Kreyszig] p. 51. $)
    lmodvneg1LMOLD $p |- ( ( W e. LModLMx /\ X e. V )
         -> ( ( M ` U ) S X ) = ( N ` X ) ) $=
      ( wcel cfv co wceq adantr syl eqid syl2anc clmodLMOLD czvLMOLD cvaddLMOLD
      wa simpl cbs crg lmodrngLMOLD rnggrp rngidcl grpinvcl simpr lmodvsclLMOLD
      cgrp lmodvnegclLMOLD lmodassLMOLD syl13anc lmodvs1LMOLD oveq2d cplusg c0g
      syl3anc lmodgrpLMOLD lmod1clLMOLD grplinv oveq1d lmodvsdi2LMOLD syl121anc
      lmod0vsLMOLD eqtr3d lmodvnegidLMOLD 0vlidLMOLD syldan 0vridLMOLD 3eqtr3rd
      3eqtr3d ) FUAMZGEMZUDZFUBNZGDNZFUCNZOZBCNZGAOZVTWBOZWAWEVSWEGWBOZWAWBOZWE
      GWAWBOZWBOZWCWFVSVQWEEMZVRWAEMZWHWJPVQVRUEZVSVQWDFUFNZMZVRWKWMVSFUNMZBWNM
      ZWOVSFUGMZWPVQWRVRFUHQZFUIRVSWRWQWSWNFBWNSZHUJRZWNFCBWTIUKTZVQVRULZWDAWNE
      FGWTJKUMVBZXCDEFGJLUOZWBEFWEGWAJWBSZUPUQVSWGVTWAWBVSWEBGAOZWBOZWGVTVSXGGW
      EWBABEFGJKHURUSVSWDBFUTNZOZGAOZFVANZGAOXHVTVSXJXLGAVQXJXLPZVRVQWPWQXMFVCB
      WNFWTHVDWNXIFCXLBWTXISZXLSZIVETQVFVSVQWOWQVRXKXHPWMXBXAXCWBXIWDBAWNEFGWTX
      NJXFKVGVHAXLEFGVTXOJKVTSZVIVPVJVFVSWIVTWEWBWBDEFGVTJXFLXPVKUSVPVQVRWLWCWA
      PXEWBEFWAVTJXFXPVLVMVQVRWKWFWEPXDWBEFWEVTJXFXPVNVMVO $.
      $( [18-Apr-2014] $)
  $}

  ${
    lmodvsubcl.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsubcl.m $e |- M = ( vsubLMx ` W ) $.
    $( Closure of vector subtraction. $)
    lmodvsubclLMOLD $p |- ( ( W e. LModLMx /\ X e. V /\ Y e. V )
        -> ( X M Y ) e. V ) $=
      ( clmodLMOLD wcel w3a cnx cbs cfv cop wceq eqid 3ad2ant1 cvv cvbaseLMOLD
      co cplusg cvaddLMOLD cpr lmodvsubfvalLMOLD oveqd cgrp lmodablLMOLD ablgrp
      csg cabel simp2 simp3 fvex eqeltri grpbase ax-mp grpsubcl syl3anc eqeltrd
      syl ) CHIZDBIZEBIZJZDEATDEKLMBNKUAMCUBMZNUCZUIMZTZBVDAVGDEVAVBAVGOVCVEVFA
      BCHFVEPZGVFPZUDQUEVDVFUFIZVBVCVHBIVDVFUJIZVKVAVBVLVCVEVFBCFVIVJUGQVFUHUTV
      AVBVCUKVAVBVCULBVFVGDEBRIBVFLMOBCSMRFCSUMUNBVEVFRVJUOUPVGPUQURUS $.
      $( [31-Mar-2014] $)
  $}

  ${
    lmodvsubneg.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsubneg.a $e |- A = ( vaddLMx ` W ) $.
    lmodvsubneg.n $e |- N = ( vnegLMx ` W ) $.
    lmodvsubneg.m $e |- M = ( vsubLMx ` W ) $.
    $( Vector subtraction in terms of negative. $)
    lmodvsubnegLMOLD $p |- ( ( W e. LModLMx /\ X e. V /\ Y e. V )
          -> ( X M Y ) = ( X A ( N ` Y ) ) ) $=
      ( clmodLMOLD wcel cnx cbs cfv co wceq eqid cvv w3a cop cplusg cpr cminusg
      csg cgrp cabel lmodablLMOLD ablgrp cvbaseLMOLD fvex eqeltri grpbase ax-mp
      cvaddLMOLD grpplusg grpsubval syl3an1 lmodvsubfvalLMOLD lmodvnegfvalLMOLD
      syl 3ad2ant1 oveqd fveq1d oveq2d 3eqtr4d ) ELMZFDMZGDMZUAZFGNOPDUBNUCPAUB
      UDZUFPZQZFGVLUEPZPZAQZFGBQFGCPZAQVHVLUGMZVIVJVNVQRVHVLUHMVSAVLDEHIVLSZUIV
      LUJVBDAVLVOVMUGFGDTMDVLOPRDEUKPTHEUKULUMDAVLTVTUNUOATMAVLUCPRAEUPPTIEUPUL
      UMDAVLTVTUQUOVOSVMSURUSVKBVMFGVHVIBVMRVJAVLBDELHIKVTUTVCVDVKVRVPFAVKGCVOV
      HVICVORVJAVLCDELHIJVTVAVCVEVFVG $.
      $( [18-Apr-2014] $)
  $}

  ${
    lmodvaddsub4.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvaddsub4.p $e |- P = ( vaddLMx ` W ) $.
    lmodvaddsub4.m $e |- M = ( vsubLMx ` W ) $.
    $( Relationship between vector subtraction and addition. $)
    lmodvsubaddLMOLD $p |- ( ( W e. LModLMx /\ ( A e. V /\ B e. V /\ C e. V ) )
          -> ( ( A M B ) = C <-> ( B P C ) = A ) ) $=
      ( clmodLMOLD wcel co wceq cnx cbs cfv cop cplusg cvv wa lmodvsubfvalLMOLD
      w3a cpr csg adantr oveqd eqeq1d cabel wb lmodablLMOLD cvbaseLMOLD eqeltri
      eqid fvex grpbase ax-mp cvaddLMOLD grpplusg ablsubadd sylan bitrd ) GKLZA
      FLBFLCFLUCZUAZABEMZCNABOPQFROSQDRUDZUEQZMZCNZBCDMANZVEVFVICVEEVHABVCEVHNV
      DDVGEFGKHIJVGUNZUBUFUGUHVCVGUILVDVJVKUJDVGFGHIVLUKFDVGVHABCFTLFVGPQNFGULQ
      THGULUOUMFDVGTVLUPUQDTLDVGSQNDGURQTIGURUOUMFDVGTVLUSUQVHUNUTVAVB $.
      $( [31-Mar-2014] $)

    $( Vector addition/subtraction law. $)
    lmodvaddsub4LMOLD $p |- ( ( W e. LModLMx
       /\ ( A e. V /\ B e. V ) /\ ( C e. V /\ D e. V ) )
   -> ( ( A P B ) = ( C P D ) <-> ( A M C ) = ( D M B ) ) ) $=
      ( clmodLMOLD wcel wa co wceq cnx cbs cfv cvv w3a cop cplusg cpr csg cabel
      wb eqid lmodablLMOLD cvbaseLMOLD fvex eqeltri grpbase cvaddLMOLD grpplusg
      ax-mp abladdsub4 syl3an1 lmodvsubfvalLMOLD 3ad2ant1 oveqd eqeq12d bitr4d
      ) HLMZAGMBGMNZCGMDGMNZUAZABEOCDEOPZACQRSGUBQUCSEUBUDZUESZOZDBVJOZPZACFOZD
      BFOZPVDVIUFMVEVFVHVMUGEVIGHIJVIUHZUIGEVIVJDABCGTMGVIRSPGHUJSTIHUJUKULGEVI
      TVPUMUPETMEVIUCSPEHUNSTJHUNUKULGEVITVPUOUPVJUHUQURVGVNVKVOVLVGFVJACVDVEFV
      JPVFEVIFGHLIJKVPUSUTZVAVGFVJDBVQVAVBVC $.
      $( [31-Mar-2014] $)

    $( Vector analog of ~ pncan . $)
    lmodvpncanLMOLD $p |- ( ( W e. LModLMx /\ A e. V /\ B e. V ) ->
        ( ( A P B ) M B ) = A ) $=
      ( clmodLMOLD wcel co cnx cbs cfv cop cplusg wceq eqid cvv w3a oveqd cabel
      cpr csg lmodvsubfvalLMOLD 3ad2ant1 cgrp lmodablLMOLD syl cvbaseLMOLD fvex
      ablgrp eqeltri grpbase ax-mp cvaddLMOLD grpplusg grppncan syl3an1 eqtrd )
      FJKZAEKZBEKZUAZABCLZBDLVFBMNOEPMQOCPUDZUEOZLZAVEDVHVFBVBVCDVHRVDCVGDEFJGH
      IVGSZUFUGUBVBVGUHKZVCVDVIARVBVGUCKVKCVGEFGHVJUIVGUMUJECVGVHABETKEVGNOREFU
      KOTGFUKULUNECVGTVJUOUPCTKCVGQORCFUQOTHFUQULUNECVGTVJURUPVHSUSUTVA $.
      $( [16-Apr-2014] $)

    $( Vector analog of ~ npcan . $)
    lmodvnpcanLMOLD $p |- ( ( W e. LModLMx /\ A e. V /\ B e. V ) ->
        ( ( A M B ) P B ) = A ) $=
      ( clmodLMOLD wcel co cnx cbs cfv cop cplusg wceq eqid cvv 3ad2ant1 oveq1d
      w3a cpr csg lmodvsubfvalLMOLD oveqd cabel lmodablLMOLD ablgrp cvbaseLMOLD
      cgrp syl eqeltri grpbase ax-mp cvaddLMOLD grpplusg grpnpcan syl3an1 eqtrd
      fvex ) FJKZAEKZBEKZUCZABDLZBCLABMNOEPMQOCPUDZUEOZLZBCLZAVFVGVJBCVFDVIABVC
      VDDVIRVECVHDEFJGHIVHSZUFUAUGUBVCVHULKZVDVEVKARVCVHUHKVMCVHEFGHVLUIVHUJUME
      CVHVIABETKEVHNOREFUKOTGFUKVBUNECVHTVLUOUPCTKCVHQORCFUQOTHFUQVBUNECVHTVLUR
      UPVISUSUTVA $.
      $( [19-Apr-2014] $)
  $}

  ${
    lmodvsubval2.n $e |- N = ( invg ` W ) $.
    lmodvsubval2.u $e |- U = ( 1r ` W ) $.
    lmodvsubval2.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsubval2.p $e |- P = ( vaddLMx ` W ) $.
    lmodvsubval2.s $e |- S = ( vscaLMx ` W ) $.
    lmodvsubval2.m $e |- M = ( vsubLMx ` W ) $.
    $( Value of vector subtraction in terms of addition. $)
    lmodvsubval2LMOLD $p |- ( ( W e. LModLMx /\ A e. V /\ B e. V )
          -> ( A M B ) = ( A P ( ( N ` U ) S B ) ) ) $=
      ( wcel co cfv wceq eqid clmodLMOLD w3a cbs cgrp crg lmodrngLMOLD 3ad2ant1
      cabel rngabl syl lmod1clLMOLD grpinvcl syl2anc lmodvsclLMOLD lmodcomLMOLD
      ablgrp syld3an2 syld3an3 oveq2d czvLMOLD cplusg c0g oveq1d lmodvsdi2LMOLD
      grprinv simp1 syl121anc lmod0vsLMOLD 3adant2 3eqtr3rd lmodvs1LMOLD eqtr2d
      simp3 simp2 syl13anc 0vlidLMOLD 3adant3 3eqtr3d eqtrd wb lmodvsubaddLMOLD
      lmodassLMOLD lmodvaclLMOLD mpbird ) IUAPZAHPZBHPZUBZABFQAEGRZBDQZCQZSZBWK
      CQZASZWHWMBWJACQZCQZAWHWKWOBCWEWFWGWJHPZWKWOSWEWIIUCRZPZWFWGWQWHIUDPZEWRP
      ZWSWHIUHPZWTWHIUEPZXBWEWFXCWGIUFUGIUIUJIUPUJZWEWFXAWGEWRIWRTZKUKUGZWRIGEX
      EJULUMZWIDWRHIBXELNUNUQZCHIAWJLMUOURUSWHBWJCQZACQZIUTRZACQZWPAWHXIXKACWHX
      KEBDQZWJCQZXIWHEWIIVARZQZBDQZIVBRZBDQZXNXKWHXPXRBDWHWTXAXPXRSXDXFWRXOIGXR
      EXEXOTZXRTZJVEUMVCWHWEXAWSWGXQXNSWEWFWGVFZXFXGWEWFWGVMZCXOEWIDWRHIBXEXTLM
      NVDVGWEWGXSXKSWFDXRHIBXKYALNXKTZVHVIVJWHXMBWJCWEWGXMBSWFDEHIBLNKVKVIVCVLV
      CWHWEWGWQWFXJWPSYBYCXHWEWFWGVNZCHIBWJALMWBVOWEWFXLASWGCHIAXKLMYDVPVQVRVSW
      HWEWFWGWKHPZWLWNVTYBYEYCWEWFWGWQYFXHCHIAWJLMWCURABWKCFHILMOWAVOWD $.
      $( [31-Mar-2014] $)
  $}

  ${
    lmodvsubeq0.v $e |- V = ( vbaseLMx ` W ) $.
    lmodvsubeq0.o $e |- O = ( 0vLMx ` W ) $.
    lmodvsubeq0.m $e |- M = ( vsubLMx ` W ) $.
    $( If the difference between two vectors is zero, they are equal. $)
    lmodvsubeq0LMOLD $p |- ( ( W e. LModLMx /\ A e. V /\ B e. V )
                  -> ( ( A M B ) = O <-> A = B ) ) $=
      ( clmodLMOLD wcel co wceq cnx cbs cfv cop wb eqid cvv w3a cpr csg eqeq12d
      cplusg cvaddLMOLD lmodvsubfvalLMOLD 0vvalLMOLD 3ad2ant1 cgrp lmodablLMOLD
      c0g oveqd cabel ablgrp syl cvbaseLMOLD fvex eqeltri grpbase ax-mp syl3an1
      grpsubeq0 bitrd ) FJKZAEKZBEKZUAABCLZDMZABNOPEQNUEPFUFPZQUBZUCPZLZVKULPZM
      ZABMZVEVFVIVORVGVEVHVMDVNVECVLABVJVKCEFJGVJSZIVKSZUGUMVJVKEFJDGVQHVRUHUDU
      IVEVKUJKZVFVGVOVPRVEVKUNKVSVJVKEFGVQVRUKVKUOUPEVKVLVNABETKEVKOPMEFUQPTGFU
      QURUSEVJVKTVRUTVAVNSVLSVCVBVD $.
      $( [31-Mar-2014] $)

    $( Subtraction of a vector from itself.  TODO: shorten with
       ~ lmodvnegidLMOLD and ~ lmodvsubnegLMOLD ? $)
    lmodvsubidLMOLD $p |- ( ( W e. LModLMx /\ A e. V ) -> ( A M A ) = O ) $=
      ( clmodLMOLD wcel cnx cbs cfv cop co wceq eqid cvv cvbaseLMOLD adantr cpr
      cplusg cvaddLMOLD csg c0g cgrp cabel lmodablLMOLD ablgrp syl fvex eqeltri
      grpbase ax-mp grpsubid sylan lmodvsubfvalLMOLD oveqd 0vvalLMOLD 3eqtr4d
      wa ) EIJZADJZVAAAKLMDNKUBMEUCMZNUAZUDMZOZVEUEMZAABOZCVBVEUFJZVCVGVHPVBVEU
      GJVJVDVEDEFVDQZVEQZUHVEUIUJDVEVFVHADRJDVELMPDESMRFESUKULDVDVERVLUMUNVHQVF
      QUOUPVBVIVGPVCVBBVFAAVDVEBDEIFVKHVLUQURTVBCVHPVCVDVEDEICFVKGVLUSTUT $.
      $( [16-Apr-2014] $)
  $}

  $c LSubSpLMx $.

  $( Extend class notation with all (not necessarily closed) linear subspaces
     of a left module or left vector space. $)
  clssLMOLD $a class LSubSpLMx $.

  ${
    $d a b s x w $.
    $( Define the set of all (not necessarily closed) linear subspaces of a
       left module or left vector space. $)
    df-lssLMOLD $a |- LSubSpLMx = ( w e. _V |->
     { s e. ~P ( vbaseLMx ` w ) | ( s =/= (/)
        /\ A. a e. s A. b e. s A. x e. ( Base ` w )
           ( a ( vaddLMx ` w ) ( x ( vscaLMx ` w ) b ) ) e. s ) } ) $.
  $}

  ${
    $d w x B $.  $d w P $.  $d w T $.  $d s w V $.  $d a b s w x W $.
    lssset.b $e |- B = ( Base ` W ) $.
    lssset.v $e |- V = ( vbaseLMx ` W ) $.
    lssset.p $e |- P = ( vaddLMx ` W ) $.
    lssset.t $e |- T = ( vscaLMx ` W ) $.
    lssset.s $e |- S = ( LSubSpLMx ` W ) $.
    $( The set of all (not necessarily closed) linear subspaces of a left
       module or left vector space. $)
    lsssetLMOLD $p |- ( W e. X -> S = { s e. ~P V | ( s =/= (/)
         /\ A. a e. s A. b e. s A. x e. B ( a P ( x T b ) ) e. s ) } ) $=
      ( wcel cv wral cfv vw cvv c0 wne co wa cpw crab wceq clssLMOLD cvscaLMOLD
      elex cvaddLMOLD cbs cvbaseLMOLD fveq2 syl6eqr pweqd eqidd oveq123d eleq1d
      oveqd raleqbidv 2ralbidv anbi2d rabeqbidv df-lssLMOLD eqeltri rabex fvmpt
      fvex pwex syl5eq syl ) GHQGUBQZDIRZUCUDZJRZARZKRZEUEZCUEZVPQZABSZKVPSJVPS
      ZUFZIFUGZUHZUIGHULVODGUJTWHPUAGVQVRVSVTUARZUKTZUEZWIUMTZUEZVPQZAWIUNTZSZK
      VPSJVPSZUFZIWIUOTZUGZUHWHUBUJWIGUIZWRWFIWTWGXAWSFXAWSGUOTZFWIGUOUPMUQURXA
      WQWEVQXAWPWDJKVPVPXAWNWCAWOBXAWOGUNTBWIGUNUPLUQXAWMWBVPXAVRVRWKWAWLCXAWLG
      UMTCWIGUMUPNUQXAVRUSXAWJEVSVTXAWJGUKTEWIGUKUPOUQVBUTVAVCVDVEVFAUAIJKVGWFI
      WGFFXBUBMGUOVKVHVLVIVJVMVN $.
      $( [8-Dec-2013] $)

    $d s B $.  $d s P $.  $d s T $.  $d a b s x U $.
    $( The predicate "is a subspace" (of a left module or left vector
       space). $)
    islssLMOLD $p |- ( W e. X -> ( U e. S <-> ( U C_ V /\ U =/= (/)
          /\ A. a e. U A. b e. U A. x e. B ( a P ( x T b ) ) e. U ) ) ) $=
      ( vs wcel cv wral c0 wne co wa cpw crab wss lsssetLMOLD eleq2d wceq neeq1
      w3a eleq2 ralbidv raleqbi1dv anbi12d elrab 3anass cvbaseLMOLD cfv eqeltri
      cvv fvex elpw2 3anbi1i 3bitr2i syl6bb ) HIRZFDRFQSZUAUBZJSASKSEUCCUCZVIRZ
      ABTZKVITZJVITZUDZQGUEZUFZRZFGUGZFUAUBZVKFRZABTZKFTZJFTZULZVHDVRFABCDEGHIQ
      JKLMNOPUHUIVSFVQRZWAWEUDZUDWGWAWEULWFVPWHQFVQVIFUJZVJWAVOWEVIFUAUKVNWDJVI
      FVMWCKVIFWIVLWBABVIFVKUMUNUOUOUPUQWGWAWEURWGVTWAWEFGGHUSUTVBMHUSVCVAVDVEV
      FVG $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x W $.  $d a b x ph $.
    islssd.b $e |- ( ph -> B = ( Base ` W ) ) $.
    islssd.v $e |- ( ph -> V = ( vbaseLMx ` W ) ) $.
    islssd.p $e |- ( ph -> P = ( vaddLMx ` W ) ) $.
    islssd.t $e |- ( ph -> T = ( vscaLMx ` W ) ) $.
    islssd.s $e |- ( ph -> S = ( LSubSpLMx ` W ) ) $.
    islssd.u $e |- ( ph -> U C_ V ) $.
    islssd.z $e |- ( ph -> U =/= (/) ) $.
    islssd.c $e |- ( ( ph /\ ( a e. U /\ b e. U /\ x e. B ) ) ->
            ( a P ( x T b ) ) e. U ) $.
    $( Properties that determine a subspace of a left module or left vector
       space. $)
    islssdLMOLD $p |- ( ( ph /\ W e. X ) -> U e. S ) $=
      ( wa clssLMOLD cfv cvbaseLMOLD wss c0 wne cv cvscaLMOLD co cvaddLMOLD cbs
      wcel w3a sseqtrd adantr wi 3exp2 imp32 eleq2d eqidd oveqd oveq123d eleq1d
      wral wb 3imtr3d ralrimiv ralrimivva 3jca eqid adantl mpbird wceq eleqtrrd
      islssLMOLD ) AIJUMZUAZGIUBUCZEVRGVSUMZGIUDUCZUEZGUFUGZKUHZBUHZLUHZIUIUCZU
      JZIUKUCZUJZGUMZBIULUCZVEZLGVEKGVEZUNZVRWBWCWNAWBVQAGHWARNUOUPAWCVQSUPAWNV
      QAWMKLGGAWDGUMZWFGUMZUAZUAZWKBWLWSWECUMZWDWEWFFUJZDUJZGUMZWEWLUMZWKAWPWQW
      TXCUQAWPWQWTXCTURUSAWTXDVFWRACWLWEMUTUPAXCWKVFWRAXBWJGAWDWDXAWHDWIOAWDVAA
      FWGWEWFPVBVCVDUPVGVHVIUPVJVQVTWOVFABWLWIVSWGGWAIJKLWLVKWAVKWIVKWGVKVSVKVP
      VLVMAEVSVNVQQUPVO $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x V $.  $d a b x W $.
    lssss.v $e |- V = ( vbaseLMx ` W ) $.
    lssss.s $e |- S = ( LSubSpLMx ` W ) $.
    $( A subspace is a set of vectors. $)
    lssssLMOLD $p |- ( ( W e. X /\ U e. S ) -> U C_ V ) $=
      ( va vx vb wcel wss c0 wne cv cvscaLMOLD cfv co wral eqid cvaddLMOLD cbs
      w3a islssLMOLD simp1 syl6bi imp ) DEKZBAKZBCLZUHUIUJBMNZHOIOJODPQZRDUAQZR
      BKIDUBQZSJBSHBSZUCUJIUNUMAULBCDEHJUNTFUMTULTGUDUJUKUOUEUFUG $.
      $( [8-Dec-2013] $)

    $( A subspace member is a vector. $)
    lsselLMOLD $p |- ( ( W e. Y /\ U e. S /\ X e. U ) -> X e. V ) $=
      ( wcel wa lssssLMOLD sseld 3impia ) DFIZBAIZEBIECINOJBCEABCDFGHKLM $.
      $( [11-Jan-2014] $)

    $( The set of vectors in a left module is a subspace. $)
    lss1LMOLD $p |- ( W e. LModLMx -> V e. S ) $=
      ( vx va vb clmodLMOLD wcel cbs cfv cvaddLMOLD eqidd wceq a1i eqid syl3anc
      cv co cvscaLMOLD cvbaseLMOLD clssLMOLD wss ssid czvLMOLD c0 wne 0vclLMOLD
      ne0i syl w3a simpr1 simpr3 simpr2 lmodvsclLMOLD lmodvaclLMOLD islssdLMOLD
      wa simpl anidms ) CIJZBAJVBFCKLZCMLZACUALZBBCIGHVBVCNBCUBLOVBDPVBVDNVBVEN
      ACUCLOVBEPBBUDVBBUEPVBCUFLZBJBUGUHBCVFDVFQUIBVFUJUKVBGSZBJZHSZBJZFSZVCJZU
      LZUSZVBVHVKVIVETZBJZVGVOVDTBJVBVMUTZVBVHVJVLUMVNVBVLVJVPVQVBVHVJVLUNVBVHV
      JVLUOVKVEVCBCVIVCQDVEQUPRVDBCVGVODVDQUQRURVA $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x W $.
    lssn0.s $e |- S = ( LSubSpLMx ` W ) $.
    $( A subspace is not empty. $)
    lssn0LMOLD $p |- ( ( W e. X /\ U e. S ) -> U =/= (/) ) $=
      ( va vx vb wcel c0 wne cvbaseLMOLD cfv cv cvscaLMOLD cvaddLMOLD wral eqid
      wss co cbs w3a islssLMOLD simp2 syl6bi imp ) CDIZBAIZBJKZUGUHBCLMZSZUIFNG
      NHNCOMZTCPMZTBIGCUAMZQHBQFBQZUBUIGUNUMAULBUJCDFHUNRUJRUMRULREUCUKUIUOUDUE
      UF $.
      $( [12-Jan-2014] $)
  $}

  ${
    $d x y z B $.  $d x y z P $.  $d x y z T $.  $d x y z U $.  $d x y z W $.
    $d x y z X $.  $d y z Y $.  $d z Z $.
    lsscl.b $e |- B = ( Base ` W ) $.
    lsscl.p $e |- P = ( vaddLMx ` W ) $.
    lsscl.t $e |- T = ( vscaLMx ` W ) $.
    lsscl.s $e |- S = ( LSubSpLMx ` W ) $.
    $( Closure property of a subspace. $)
    lssclLMOLD $p |- ( ( ( W e. V /\ U e. S )
      /\ ( X e. U /\ Y e. U /\ Z e. B ) ) -> ( X P ( Z T Y ) ) e. U ) $=
      ( vx vz vy wcel co wral w3a cvbaseLMOLD cfv wss c0 wne cv eqid islssLMOLD
      wi wa wceq oveq1 eleq1d ralbidv oveq2 rcla42v rcla4cv syl6com exp3a 3impd
      oveq2d 3ad2ant3 syl6bi imp31 ) GFRZECRZHERZIERZJARZUAZHJIDSZBSZERZVFVGEGU
      BUCZUDZEUEUFZOUGZPUGZQUGZDSZBSZERZPATZQETOETZUAVKVNUJZPABCDEVOGFOQKVOUHLM
      NUIWEVPWFVQWEVHVIVJVNWEVHVIVJVNUJZVHVIUKWEHVSIDSZBSZERZPATZWGWDWKHWABSZER
      ZPATOQHIEEVRHULZWCWMPAWNWBWLEVRHWABUMUNUOVTIULZWMWJPAWOWLWIEWOWAWHHBVTIVS
      DUPVBUNUOUQWJVNPJAVSJULZWIVMEWPWHVLHBVSJIDUMVBUNURUSUTVAVCVDVE $.
      $( [8-Dec-2013] $)
  $}

  ${
    lssvsubcl.m $e |- M = ( vsubLMx ` W ) $.
    lssvsubcl.s $e |- S = ( LSubSpLMx ` W ) $.
    $( Closure of vector subtraction in a subspace. $)
    lssvsubclLMOLD $p |- ( ( ( W e. LModLMx /\ U e. S )
          /\ ( X e. U /\ Y e. U ) ) -> ( X M Y ) e. U ) $=
      ( clmodLMOLD wa co cur cfv cminusg cvscaLMOLD lsselLMOLD syl3anc ad2antrr
      wcel eqid cvaddLMOLD cvbaseLMOLD wceq simpll simplr lmodvsubval2LMOLD cbs
      simprl simprr crg lmodrngLMOLD rnggrp syl lmod1clLMOLD syl2anc lssclLMOLD
      cgrp grpinvcl syl23anc eqeltrd ) DISZBASZJZEBSZFBSZJZJZEFCKZEDLMZDNMZMZFD
      OMZKDUAMZKZBVGVAEDUBMZSZFVOSZVHVNUCVAVBVFUDZVGVAVBVDVPVRVAVBVFUEZVCVDVEUH
      ZABVODEIVOTZHPQVGVAVBVEVQVRVSVCVDVEUIZABVODFIWAHPQEFVMVLVICVJVODVJTZVITZW
      AVMTZVLTZGUFQVGVAVBVDVEVKDUGMZSZVNBSVRVSVTWBVGDUQSZVIWGSZWHVGDUJSZWIVAWKV
      BVFDUKRDULUMVAWJVBVFVIWGDWGTZWDUNRWGDVJVIWLWCURUOWGVMAVLBIDEFVKWLWEWFHUPU
      SUT $.
      $( [31-Mar-2014] $)
  $}

  ${
    $d x S $.  $d x U $.  $d x y z W $.  $d x y z Z $.
    lss0cl.z $e |- Z = ( 0vLMx ` W ) $.
    lss0cl.s $e |- S = ( LSubSpLMx ` W ) $.
    $( The zero vector belongs to every subspace. $)
    lss0clLMOLD $p |- ( ( W e. LModLMx /\ U e. S ) -> Z e. U ) $=
      ( vx clmodLMOLD wcel wa cv wex c0 cfv wceq eqid 3ad2ant1 syl2anc oveq1d
      co wne lssn0LMOLD n0 w3a cur cminusg cvscaLMOLD cvaddLMOLD c0g cplusg cbs
      sylib cvbaseLMOLD simp1 lmod1clLMOLD lmodgrpLMOLD grpinvcl lmodvsdi2LMOLD
      cgrp lsselLMOLD syl121anc grprinv lmodvs1LMOLD 3eqtr3rd eqtrd simp2 simp3
      lmod0vsLMOLD lssclLMOLD syl23anc eqeltrrd 3expia exlimdv mpd ) CHIZBAIZJZ
      GKZBIZGLZDBIZVQBMUAVTABCHFUBGBUCULVQVSWAGVOVPVSWAVOVPVSUDZVRCUENZCUFNZNZV
      RCUGNZTZCUHNZTZDBWBWICUINZVRWFTZDWBWCWECUJNZTZVRWFTZWCVRWFTZWGWHTZWKWIWBV
      OWCCUKNZIZWEWQIZVRCUMNZIZWNWPOVOVPVSUNZVOVPWRVSWCWQCWQPZWCPZUOZQVOVPWSVSV
      OCUSIZWRWSCUPZXEWQCWDWCXCWDPZUQRQZABWTCVRHWTPZFUTZWHWLWCWEWFWQWTCVRXCWLPZ
      XJWHPZWFPZURVAVOVPWNWKOVSVOWMWJVRWFVOXFWRWMWJOXGXEWQWLCWDWJWCXCXLWJPZXHVB
      RSQWBWOVRWGWHWBVOXAWOVROXBXKWFWCWTCVRXJXNXDVCRSVDWBVOXAWKDOXBXKWFWJWTCVRD
      XOXJXNEVHRVEWBVOVPVSVSWSWIBIXBVOVPVSVFVOVPVSVGZXPXIWQWHAWFBHCVRVRWEXCXMXN
      FVIVJVKVLVMVN $.
      $( [12-Jan-2014] $)

    $( The singleton of the zero vector is a subspace. $)
    lsssn0LMOLD $p |- ( W e. LModLMx -> { Z } e. S ) $=
      ( vz vx vy clmodLMOLD wcel cfv eqidd wceq a1i eqid czvLMOLD cv elsni syl
      co csn cbs cvaddLMOLD cvscaLMOLD cvbaseLMOLD clssLMOLD 0vclLMOLD snssd c0
      wne cvv fvex eqeltri snnz w3a simpr1 simpr2 oveq2d lmodvs0LMOLD 3ad2antr3
      wa eqtrd oveq12d adantr 0vlidLMOLD syldan elsnc sylibr islssdLMOLD anidms
      ovex ) BIJZCUAZAJVLFBUBKZBUCKZABUDKZVMBUEKZBIGHVLVNLVLVQLVLVOLVLVPLABUFKM
      VLENVLCVQVQBCVQOZDUGZUHVMUIUJVLCCBPKUKDBPULUMUNNVLGQZVMJZHQZVMJZFQZVNJZUO
      ZVAZVTWDWBVPTZVOTZCMWIVMJWGWICCVOTZCWGVTCWHCVOWGWAVTCMVLWAWCWEUPVTCRSWGWH
      WDCVPTZCWGWBCWDVPWGWCWBCMVLWAWCWEUQWBCRSURVLWAWEWKCMWCVPVNBWDCVNOVPODUSUT
      VBVCVLWFCVQJZWJCMVLWLWFVSVDVOVQBCCVRVOODVEVFVBWICVTWHVOVKVGVHVIVJ $.
      $( [13-Jan-2014] $)

    $( The zero subspace is included in every subspace.  ( ~ sh0le analog.) $)
    lss0ssLMOLD $p |- ( ( W e. LModLMx /\ X e. S ) -> { Z } C_ X ) $=
      ( clmodLMOLD wcel wa lss0clLMOLD snssd ) BGHCAHIDCACBDEFJK $.
      $( [27-Mar-2014] $)

    $( No subspace is smaller than the zero subspace.  ( ~ shle0 analog.) $)
    lssle0LMOLD $p |- ( ( W e. LModLMx /\ X e. S )
         -> ( X C_ { Z } <-> X = { Z } ) ) $=
      ( clmodLMOLD wcel wa csn wss wceq lss0ssLMOLD biantrud eqss syl6bbr ) BGH
      CAHIZCDJZKZSRCKZICRLQTSABCDEFMNCROP $.
      $( [20-Apr-2014] $)

    $d y X $.
    $( A nonzero subspace has a nonzero vector.  ( ~ shne0i analog.) $)
    lssne0LMOLD $p |- ( ( W e. LModLMx /\ X e. S )
      -> ( X =/= { Z } <-> E. y e. X y =/= Z ) ) $=
      ( csn wne wceq wn clmodLMOLD wcel wa cv wrex df-ne wss wex nss necon3bbii
      df-rex bitr4i lssle0LMOLD notbid syl5rbbr elsn rexbii syl6bb syl5bb ) DEH
      ZIDUKJZKZCLMDBMNZAOZEIZADPZDUKQUNUMUOUKMZKZADPZUQUTDUKRZKZUNUMVBUODMUSNAS
      UTADUKTUSADUBUCUNVAULBCDEFGUDUEUFUSUPADURUOEAEUGUAUHUIUJ $.
      $( [20-Apr-2014] $)
  $}

  ${
    lssvacl.p $e |- P = ( vaddLMx ` W ) $.
    lssvacl.s $e |- S = ( LSubSpLMx ` W ) $.
    $( Closure of vector addition in a subspace. $)
    lssvaclLMOLD $p |- ( ( ( W e. LModLMx /\ U e. S ) /\ ( X e. U /\ Y e. U ) )
       -> ( X P Y ) e. U ) $=
      ( clmodLMOLD wcel wa cur cfv cvscaLMOLD co cvbaseLMOLD wceq simpll simplr
      eqid simprr lsselLMOLD syl3anc lmodvs1LMOLD syl2anc lmod1clLMOLD ad2antrr
      oveq2d cbs simprl lssclLMOLD syl23anc eqeltrrd ) DIJZCBJZKZECJZFCJZKZKZED
      LMZFDNMZOZAOZEFAOCUTVCFEAUTUNFDPMZJZVCFQUNUOUSRZUTUNUOURVFVGUNUOUSSZUPUQU
      RUAZBCVEDFIVETZHUBUCVBVAVEDFVJVBTZVATZUDUEUHUTUNUOUQURVADUIMZJZVDCJVGVHUP
      UQURUJVIUNVNUOUSVAVMDVMTZVLUFUGVMABVBCIDEFVAVOGVKHUKULUM $.
      $( [11-Jan-2014] $)
  $}

  ${
    lssvscl.b $e |- B = ( Base ` W ) $.
    lssvscl.t $e |- T = ( vscaLMx ` W ) $.
    lssvscl.s $e |- S = ( LSubSpLMx ` W ) $.
    $( Closure of scalar product in a subspace. $)
    lssvsclLMOLD $p |- ( ( ( W e. LModLMx /\ U e. S ) /\ ( X e. B /\ Y e. U ) )
       -> ( X T Y ) e. U ) $=
      ( clmodLMOLD wcel wa czvLMOLD cfv co cvaddLMOLD cvbaseLMOLD eqid syl3anc
      wceq simpll simprl simplr lsselLMOLD lmodvsclLMOLD 0vlidLMOLD lss0clLMOLD
      simprr syl2anc adantr lssclLMOLD syl23anc eqeltrrd ) EKLZDBLZMZFALZGDLZMZ
      MZENOZFGCPZEQOZPZVCDVAUOVCEROZLZVEVCUAUOUPUTUBZVAUOURGVFLZVGVHUQURUSUCZVA
      UOUPUSVIVHUOUPUTUDZUQURUSUIZBDVFEGKVFSZJUETFCAVFEGHVMIUFTVDVFEVCVBVMVDSZV
      BSZUGUJVAUOUPVBDLZUSURVEDLVHVKUQVPUTBDEVBVOJUHUKVLVJAVDBCDKEVBGFHVNIJULUM
      UN $.
      $( [11-Jan-2014] $)
  $}

  ${
    $d k m n v x y z K $.  $d k m n v x y z T $.  $d m n v x y z V $.
    $d k m n v x y z W $.  $d k m n v x y z X $.
    lss1d.k $e |- K = ( Base ` W ) $.
    lss1d.v $e |- V = ( vbaseLMx ` W ) $.
    lss1d.t $e |- T = ( vscaLMx ` W ) $.
    lss1d.s $e |- S = ( LSubSpLMx ` W ) $.
    $( One-dimensional subspace (or zero-dimensional if ` X ` is the zero
       vector). $)
    lss1dLMOLD $p |- ( ( W e. LModLMx /\ X e. V )
        -> { v e. V | E. k e. K v = ( k T X ) } e. S ) $=
      ( vm vn wcel co wceq wrex wa cfv vz vx clmodLMOLD crab cvaddLMOLD cbs a1i
      vy cv cvbaseLMOLD eqid cvscaLMOLD clssLMOLD wss ssrab2 czvLMOLD 0vclLMOLD
      c0 wne adantr c0g lmod0clLMOLD lmod0vsLMOLD eqcomd eqeq2d rcla4ev syl2anc
      oveq1 eqeq1 rexbidv elrab sylanbrc ne0i syl w3a cbvrexv anbi2i bitri biid
      weq 3anbi123i df-3an reeanv ancom 3bitr2i anbi1i 3bitri wi simp1l simp23l
      an4 simp3 simp23r lmodvsclLMOLD syl3anc lmodvaclLMOLD cplusg lmodmclLMOLD
      simp21l simp21r lmodaclLMOLD simp22l simp22r oveq2d simp1r lmodvsassLMOLD
      cmulr syl121anc eqtr4d oveq12d lmodvsdi2LMOLD 3exp 3expd rexlimdvv syl5bi
      imp4c imp islssdLMOLD anabss1 ) GUCOZHFOZAUIZDUIZHCPZQZDERZAFUDZBOXTYASZU
      AEGUETZBCYGFGUCUBUHEGUFTQYHIUGFGUJTQYHJUGYIYIQYHYIUKZUGCGULTQYHKUGBGUMTQY
      HLUGYGFUNYHYFAFUOUGYHGUPTZYGOZYGURUSYHYKFOZYKYDQZDERZYLXTYMYAFGYKJYKUKZUQ
      UTYHGVATZEOZYKYQHCPZQZYOXTYRYAEGYQIYQUKZVBUTYHYSYKCYQFGHYKUUAJKYPVCVDYNYT
      DYQEYCYQQYDYSYKYCYQHCVHVEVFVGYFYOAYKFYBYKQYEYNDEYBYKYDVIVJVKVLYGYKVMVNYHU
      BUIZYGOZUHUIZYGOZUAUIZEOZVOZUUBUUFUUDCPZYIPZYGOZUUHUUBMUIZHCPZQZUUDNUIZHC
      PZQZSZNERMERZUUBFOZUUDFOZSZSZUUGSZYHUUKUUHUUTUUNMERZSZUVAUUQNERZSZUUGVOUV
      FUVHSZUUGSUVDUUCUVFUUEUVHUUGUUGUUCUUTUUBYDQZDERZSUVFYFUVKAUUBFAUBVTYEUVJD
      EYBUUBYDVIVJVKUVKUVEUUTUVJUUNDMEDMVTYDUUMUUBYCUULHCVHVEVPVQVRUUEUVAUUDYDQ
      ZDERZSUVHYFUVMAUUDFAUHVTYEUVLDEYBUUDYDVIVJVKUVMUVGUVAUVLUUQDNEDNVTYDUUPUU
      DYCUUOHCVHVEVPVQVRUUGVSWAUVFUVHUUGWBUVIUVCUUGUVIUVBUVEUVGSZSUVBUUSSUVCUUT
      UVEUVAUVGWKUUSUVNUVBUUNUUQMNEEWCVQUVBUUSWDWEWFWGYHUUSUVBUUGUUKYHUURUVBUUG
      UUKWHZWHMNEEYHUULEOZUUOEOZSZUURUVBUVOYHUVRUURUVBVOZUUGUUKYHUVSUUGVOZUUJFO
      ZUUJYDQZDERZUUKUVTXTUUTUUIFOZUWAXTYAUVSUUGWIZUUTUVAUVRUURYHUUGWJUVTXTUUGU
      VAUWDUWEYHUVSUUGWLZUUTUVAUVRUURYHUUGWMUUFCEFGUUDIJKWNWOYIFGUUBUUIJYJWPWOU
      VTUULUUFUUOGXGTZPZGWQTZPZEOZUUJUWJHCPZQZUWCUVTXTUVPUWHEOZUWKUWEUVPUVQUURU
      VBYHUUGWSZUVTXTUUGUVQUWNUWEUWFUVPUVQUURUVBYHUUGWTZUWGEGUUFUUOIUWGUKZWRWOZ
      UWIEGUULUWHIUWIUKZXAWOUVTUUJUUMUWHHCPZYIPZUWLUVTUUBUUMUUIUWTYIUUNUUQUVRUV
      BYHUUGXBUVTUUIUUFUUPCPZUWTUVTUUDUUPUUFCUUNUUQUVRUVBYHUUGXCXDUVTXTUUGUVQYA
      UWTUXBQUWEUWFUWPXTYAUVSUUGXEZUUFUUOCUWGEFGHIUWQJKXFXHXIXJUVTXTUVPUWNYAUWL
      UXAQUWEUWOUWRUXCYIUWIUULUWHCEFGHIUWSJYJKXKXHXIUWBUWMDUWJEYCUWJQYDUWLUUJYC
      UWJHCVHVEVFVGYFUWCAUUJFYBUUJQYEUWBDEYBUUJYDVIVJVKVLXLXMXNXPXOXQXRXS $.
      $( [14-Jan-2014] $)
  $}

  ${
    $d a b x y A $.  $d a b x y S $.  $d a b x y W $.
    lssintcl.s $e |- S = ( LSubSpLMx ` W ) $.
    $( The intersection of a nonempty set of subspaces is a subspace. $)
    lssintclLMOLD $p |- ( ( W e. LModLMx /\ A C_ S /\ A =/= (/) )
          -> |^| A e. S ) $=
      ( vx va vb vy clmodLMOLD wcel wss c0 wne w3a cfv eqidd cv wa simpr eqid
      cint simp1 cbs cvaddLMOLD cvscaLMOLD cvbaseLMOLD clssLMOLD a1i wex biimpi
      wceq 3ad2ant3 intss1 adantl simpl1 simpl2 sseldd lssssLMOLD syl2anc sstrd
      n0 ex exlimdv czvLMOLD wral lss0clLMOLD ralrimiva fvex elint2 sylibr ne0i
      mpd syl co simpll1 simpll2 simplr1 elinti sylc simplr2 simplr3 lssclLMOLD
      wel syl23anc ovex islssdLMOLD mpdan ) CIJZABKZALMZNZWHAUAZBJWHWIWJUBWKECU
      COZCUDOZBCUEOZWLCUFOZCIFGWKWMPWKWPPWKWNPWKWOPBCUGOUKWKDUHWKHQZAJZHUIZWLWP
      KZWJWHWSWIWJWSHAVAUJULWKWRWTHWKWRWTWKWRRZWLWQWPWRWLWQKWKWQAUMUNXAWHWQBJZW
      QWPKWHWIWJWRUOZXAABWQWHWIWJWRUPWKWRSUQZBWQWPCIWPTDURUSUTVBVCVLWKCVDOZWLJZ
      WLLMWKXEWQJZHAVEXFWKXGHAXAWHXBXGXCXDBWQCXEXETDVFUSVGHXEACVDVHVIVJWLXEVKVM
      WKFQZWLJZGQZWLJZEQZWMJZNZRZXHXLXJWOVNZWNVNZWQJZHAVEXQWLJXOXRHAXOWRRZWHXBF
      HWCZGHWCZXMXRWHWIWJXNWRVOXSABWQWHWIWJXNWRVPXOWRSZUQXSXIWRXTXIXKXMWKWRVQYB
      XHAWQVRVSXSXKWRYAXIXKXMWKWRVTYBXJAWQVRVSXIXKXMWKWRWAWMWNBWOWQICXHXJXLWMTW
      NTWOTDWBWDVGHXQAXHXPWNWEVIVJWFWG $.
      $( [8-Dec-2013] $)

    $( The intersection of two subspaces is a subspace. $)
    lssinclLMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
         -> ( T i^i U ) e. S ) $=
      ( clmodLMOLD wcel w3a cpr cint cin intprg 3adant1 wss c0 wne simp1 3simpc
      wceq wa wb prssg mpbid prnzg 3ad2ant2 lssintclLMOLD syl3anc eqeltrrd ) DF
      GZBAGZCAGZHZBCIZJZBCKZAUJUKUNUOSUIBCAALMULUIUMANZUMOPZUNAGUIUJUKQULUJUKTZ
      UPUIUJUKRUJUKURUPUAUIBCAAAUBMUCUJUIUQUKBCAUDUEUMADEUFUGUH $.
      $( [7-Mar-2014] $)
  $}

  ${
    lssdisj.p $e |- P = ( vaddLMx ` W ) $.
    lssdisj.o $e |- O = ( 0vLMx ` W ) $.
    lssdisj.s $e |- S = ( LSubSpLMx ` W ) $.
    $( Vectors belonging to disjoint subspaces are uniquely determined by their
       sum.  (By commuting the sums, we can also easily obtain the ` B = D `
       case.) $)
    lssdisjLMOLD $p |- ( ( ( W e. LModLMx /\ T e. S /\ U e. S )
       /\ ( A e. T /\ C e. T /\ B e. U )
  /\ ( D e. U /\ ( T i^i U ) = { O } /\ ( A P B ) = ( C P D ) ) ) -> A = C ) $=
      ( clmodLMOLD wcel w3a wceq co lsselLMOLD syl3anc cin simp11 simp12 simp21
      csn cvsLMOLD cfv simp22 lssvsubclLMOLD syl22anc simp33 cvbaseLMOLD simp13
      eqid wb simp23 simp31 lmodvaddsub4LMOLD syl122anc eqeltrd sylanbrc simp32
      mpbid elin eleqtrd ovex elsnc sylib lmodvsubeq0LMOLD ) JNOZGFOZHFOZPZAGOZ
      CGOZBHOZPZDHOZGHUAZIUEZQZABERCDERQZPZPZACJUFUGZRZIQZACQZWDWFVTOWGWDWFVSVT
      WDWFGOZWFHOWFVSOWDVJVKVNVOWIVJVKVLVQWCUBZVJVKVLVQWCUCZVMVNVOVPWCUDZVMVNVO
      VPWCUHZFGWEJACWEUNZMUIUJWDWFDBWERZHWDWBWFWOQZVMVQVRWAWBUKWDVJAJULUGZOZBWQ
      OZCWQOZDWQOZWBWPUOWJWDVJVKVNWRWJWKWLFGWQJANWQUNZMSTZWDVJVLVPWSWJVJVKVLVQW
      CUMZVMVNVOVPWCUPZFHWQJBNXBMSTWDVJVKVOWTWJWKWMFGWQJCNXBMSTZWDVJVLVRXAWJXDV
      MVQVRWAWBUQZFHWQJDNXBMSTABCDEWEWQJXBKWNURUSVCWDVJVLVRVPWOHOWJXDXGXEFHWEJD
      BWNMUIUJUTWFGHVDVAVMVQVRWAWBVBVEWFIACWEVFVGVHWDVJWRWTWGWHUOWJXCXFACWEIWQJ
      XBLWNVITVC $.
      $( [2-Apr-2014] $)
  $}

  $c LSpanLMx $.

  $( Extend class notation with span of a set of vectors. $)
  clspnLMOLD $a class LSpanLMx $.

  ${
    $d w s t $.
    $( Define span of a set of vectors of a left module or left vector
       space. $)
    df-lspLMOLD $a |- LSpanLMx = ( w e. _V |-> ( s e. ~P ( vbaseLMx ` w ) |->
         |^| { t e. ( LSubSpLMx ` w ) | s C_ t } ) ) $.
  $}

  ${
    $d t w S $.  $d s w V $.  $d s t w W $.
    lspval.v $e |- V = ( vbaseLMx ` W ) $.
    lspval.s $e |- S = ( LSubSpLMx ` W ) $.
    lspval.n $e |- N = ( LSpanLMx ` W ) $.
    $( The span function for a left vector space (or a left module). $)
    lspfvalLMOLD $p |- ( W e. X
      -> N = ( s e. ~P V |-> |^| { t e. S | s C_ t } ) ) $=
      ( vw wcel cvv cpw cv crab cint cfv cvbaseLMOLD clssLMOLD clspnLMOLD fveq2
      cmpt wceq elex syl6eqr pweqd biidd rabeqbidv inteqd mpteq12dv df-lspLMOLD
      wss fvex eqeltri pwex mptexg ax-mp fvmpt syl5eq syl ) EFLEMLZCGDNZGOAOUMZ
      ABPZQZUCZUDEFUEVBCEUARVGJKEGKOZSRZNZVDAVHTRZPZQZUCVGMUAVHEUDZGVJVMVCVFVNV
      IDVNVIESRZDVHESUBHUFUGVNVLVEVNVDVDAVKBVNVKETRBVHETUBIUFVNVDUHUIUJUKKAGULV
      CMLVGMLDDVOMHESUNUOUPGVCVFMUQURUSUTVA $.
      $( [8-Dec-2013] $)

    $d s S $.  $d s t U $.  $d t V $.
    $( The span of a set of vectors (in a left module). $)
    lspvalLMOLD $p |- ( ( W e. LModLMx /\ U C_ V )
       -> ( N ` U ) = |^| { t e. S | U C_ t } ) $=
      ( vs clmodLMOLD wcel wss cfv cv crab cint wceq cvv cvbaseLMOLD cpw fveq1d
      cmpt lspfvalLMOLD adantr fvex eqeltri elpw2 biimpri adantl wrex lss1LMOLD
      wa sseq2 rcla4ev sylan intexrab sylib sseq1 rabbidv inteqd fvmptg syl2anc
      eqid eqtrd ) FKLZCEMZUMZCDNZCJEUAZJOZAOZMZABPZQZUCZNZCVLMZABPZQZVFVIVQRVG
      VFCDVPABDEFKJGHIUDUBUEVHCVJLZVTSLZVQVTRVGWAVFWAVGCEEFTNSGFTUFUGUHUIUJVHVR
      ABUKZWBVFEBLVGWCBEFGHULVRVGAEBVLECUNUOUPVRABUQURJCVOVTVJSVPVKCRZVNVSWDVMV
      RABVKCVLUSUTVAVPVDVBVCVE $.
      $( [8-Dec-2013] $)

    $( The span of a set of vectors is a subspace. $)
    lspclLMOLD $p |- ( ( W e. LModLMx /\ U C_ V ) -> ( N ` U ) e. S ) $=
      ( vt clmodLMOLD wcel wss wa cfv cv crab cint lspvalLMOLD c0 wne lss1LMOLD
      anim1i sseq2 elrab sylibr ne0i ssrab2 lssintclLMOLD mp3an2 syldan eqeltrd
      syl ) EJKZBDLZMZBCNBIOZLZIAPZQZAIABCDEFGHRUMUNURSTZUSAKZUODURKZUTUODAKZUN
      MVBUMVCUNADEFGUAUBUQUNIDAUPDBUCUDUEURDUFULUMURALUTVAUQIAUGURAEGUHUIUJUK
      $.
      $( [9-Dec-2013] $)
  $}

  ${
    $d t S $.  $d t U $.  $d t W $.
    lspid.s $e |- S = ( LSubSpLMx ` W ) $.
    lspid.n $e |- N = ( LSpanLMx ` W ) $.
    $( The span of a subspace is itself. $)
    lspidLMOLD $p |- ( ( W e. LModLMx /\ U e. S ) -> ( N ` U ) = U ) $=
      ( vt clmodLMOLD wcel wa cfv cv crab cint cvbaseLMOLD wceq eqid lssssLMOLD
      wss lspvalLMOLD syldan intmin adantl eqtrd ) DHIZBAIZJBCKZBGLSGAMNZBUEUFB
      DOKZSUGUHPABUIDHUIQZERGABCUIDUJEFTUAUFUHBPUEGBAUBUCUD $.
      $( [15-Dec-2013] $)
  $}

  ${
    $d t T $.  $d t U $.  $d t V $.  $d t W $.
    lspss.v $e |- V = ( vbaseLMx ` W ) $.
    lspss.n $e |- N = ( LSpanLMx ` W ) $.
    $( A span is a set of vectors. $)
    lspssvLMOLD $p |- ( ( W e. LModLMx /\ U C_ V ) -> ( N ` U ) C_ V ) $=
      ( clmodLMOLD wcel wss cfv clssLMOLD eqid lspclLMOLD lssssLMOLD syldan ) D
      GHACIABJZDKJZHPCIQABCDEQLZFMQPCDGERNO $.
      $( [22-Feb-2014] $)

    $( Span preserves subset ordering. $)
    lspssLMOLD $p |- ( ( W e. LModLMx /\ U C_ V /\ T C_ U )
          -> ( N ` T ) C_ ( N ` U ) ) $=
      ( vt clmodLMOLD wcel wss w3a cv clssLMOLD cfv crab cint wceq lspvalLMOLD
      wi sstr2 3ad2ant3 adantr ss2rabdv intss simp1 sstr ancoms 3adant1 syl2anc
      syl eqid 3adant3 3sstr4d ) EIJZBDKZABKZLZAHMZKZHENOZPZQZBUSKZHVAPZQZACOZB
      COZURVEVBKVCVFKURVDUTHVAURVDUTTZUSVAJUQUOVIUPABUSUAUBUCUDVEVBUEUKURUOADKZ
      VGVCRUOUPUQUFUPUQVJUOUQUPVJABDUGUHUIHVAACDEFVAULZGSUJUOUPVHVFRUQHVABCDEFV
      KGSUMUN $.
      $( [11-Dec-2013] $)

    $( A set of vectors is a subset of its span. $)
    lspssidLMOLD $p |- ( ( W e. LModLMx /\ U C_ V ) -> U C_ ( N ` U ) ) $=
      ( vt clmodLMOLD wcel wss clssLMOLD cfv crab cint ssintub eqid lspvalLMOLD
      wa cv syl5sseqr ) DHIACJRAGSJGDKLZMNAABLGAUAOGUAABCDEUAPFQT $.
      $( [6-Feb-2014] $)

    $( The span of a set of vectors is idempotent. $)
    lspidmLMOLD $p |- ( ( W e. LModLMx /\ U C_ V )
                  -> ( N ` ( N ` U ) ) = ( N ` U ) ) $=
      ( clmodLMOLD wcel wss clssLMOLD wceq eqid lspclLMOLD lspidLMOLD syldan
      cfv ) DGHACIABPZDJPZHQBPQKRABCDERLZFMRQBDSFNO $.
      $( [22-Feb-2014] $)

    $( The span of union is the span of the union of spans. $)
    lspunLMOLD $p |- ( ( W e. LModLMx /\ T C_ V /\ U C_ V )
       -> ( N ` ( T u. U ) ) = ( N ` ( ( N ` T ) u. ( N ` U ) ) ) ) $=
      ( clmodLMOLD wss cun cfv lspssvLMOLD 3adant3 3adant2 lspssidLMOLD syl2anc
      unssd lspssLMOLD syl3anc a1i wcel simp1 unss12 wa 3simpc unss sylib ssun1
      w3a ssun2 wceq lspidmLMOLD sseqtrd eqssd ) EHUAZADIZBDIZUIZABJZCKZACKZBCK
      ZJZCKZURUOVCDIUSVCIZUTVDIUOUPUQUBZURVAVBDUOUPVADIUQACDEFGLMUOUQVBDIUPBCDE
      FGLNQURAVAIZBVBIZVEUOUPVGUQACDEFGOMUOUQVHUPBCDEFGONAVABVBUCPUSVCCDEFGRSUR
      VDUTCKZUTURUOUTDIZVCUTIVDVIIVFURUOUSDIZVJVFURUPUQUDVKUOUPUQUEABDUFUGZUSCD
      EFGLPURVAVBUTURUOVKAUSIZVAUTIVFVLVMURABUHTAUSCDEFGRSURUOVKBUSIZVBUTIVFVLV
      NURBAUJTBUSCDEFGRSQVCUTCDEFGRSURUOVKVIUTUKVFVLUSCDEFGULPUMUN $.
      $( [22-Feb-2014] $)
  $}

  ${
    lspsnss.s $e |- S = ( LSubSpLMx ` W ) $.
    lspsnss.n $e |- N = ( LSpanLMx ` W ) $.
    $( The span of the singleton of a subspace member is included in the
       subspace. $)
    lspsnssLMOLD $p |- ( ( W e. LModLMx /\ U e. S /\ X e. U )
            -> ( N ` { X } ) C_ U ) $=
      ( clmodLMOLD wcel w3a csn cfv cvbaseLMOLD wss simp1 eqid lssssLMOLD snssi
      3adant3 3ad2ant3 lspssLMOLD syl3anc wceq lspidLMOLD sseqtrd ) DHIZBAIZEBI
      ZJZEKZCLZBCLZBUIUFBDMLZNZUJBNZUKULNUFUGUHOUFUGUNUHABUMDHUMPZFQSUHUFUOUGEB
      RTUJBCUMDUPGUAUBUFUGULBUCUHABCDFGUDSUE $.
      $( [9-Apr-2014] $)
  $}

  ${
    $d k s v K $.  $d s v N $.  $d s v R $.  $d k s v T $.  $d s v V $.
    $d k s v W $.  $d k s v X $.
    lspsn.k $e |- K = ( Base ` W ) $.
    lspsn.v $e |- V = ( vbaseLMx ` W ) $.
    lspsn.t $e |- T = ( vscaLMx ` W ) $.
    lspsn.n $e |- N = ( LSpanLMx ` W ) $.
    $( Span of the singleton of a vector. $)
    lspsnLMOLD $p |- ( ( W e. LModLMx /\ X e. V )
        -> ( N ` { X } ) = { v e. V | E. k e. K v = ( k T X ) } ) $=
      ( vs wcel wa cfv cv wceq crab wi clmodLMOLD csn cin co wrex wss clssLMOLD
      snssi eqid lspclLMOLD sylan2 lssssLMOLD sseqin2 sylib cint wb lspvalLMOLD
      syldan snssg rabbidv inteqd adantl eqtr4d eleq2d adantr wel wral elintrab
      vex eleq2 rabid syl6bb imbi12d lss1dLMOLD simpr lmod1clLMOLD lmodvs1LMOLD
      rcla4cv cur eqcomd oveq1 rcla4ev syl2anc eqeq1 rexbidv elrab sylanbrc a1i
      eqeq2d embantd w3a simp13 simp11 simp2 simp12 simp3 lssvsclLMOLD syl22anc
      syl5 3exp ralrimiv rexlimdv ad2antrr impbid syl5bb bitrd rabbi2dva eqtr3d
      eqeltrd ) GUANZHFNZOZFHUBZEPZUCZXNAQZCQZHBUDZRZCDUEZAFSZXLXNFUFZXOXNRXJXK
      XNGUGPZNZYBXKXJXMFUFZYDHFUHZYCXMEFGJYCUIZLUJUKYCXNFGUAJYGULURXNFUMUNXLXTA
      FXNXLXPFNZOZXPXNNZXPHMQZNZMYCSZUOZNZXTXLYJYOUPYHXLXNYNXPXLXNXMYKUFZMYCSZU
      OZYNXKXJYEXNYRRYFMYCXMEFGJYGLUQUKXKYNYRRXJXKYMYQXKYLYPMYCHYKFUSUTVAVBVCVD
      VEYOYLAMVFZTZMYCVGZYIXTYLMXPYCAVIVHYIUUAXTXLUUAXTTYHUUAYAYCNZHYANZYHXTOZT
      ZTXLXTYTUUEMYAYCYKYARZYLUUCYSUUDYKYAHVJUUFYSXPYANUUDYKYAXPVJXTAFVKVLVMVRX
      LUUBUUEXTAYCBCDFGHIJKYGVNXLUUCUUDXTXLXKHXRRZCDUEZUUCXJXKVOXLGVSPZDNZHUUIH
      BUDZRZUUHXJUUJXKUUIDGIUUIUIZVPVEXLUUKHBUUIFGHJKUUMVQVTUUGUULCUUIDXQUUIRXR
      UUKHXQUUIHBWAWIWBWCXTUUHAHFXPHRXSUUGCDXPHXRWDWEWFWGUUDXTTXLYHXTVOWHWJWJWS
      VEXJXTUUATXKYHXJXSUUACDXJXQDNZXSUUAXJUUNXSWKZYTMYCUUOYKYCNZYLYSUUOUUPYLWK
      ZXPXRYKXJUUNXSUUPYLWLUUQXJUUPUUNYLXRYKNXJUUNXSUUPYLWMUUOUUPYLWNXJUUNXSUUP
      YLWOUUOUUPYLWPDYCBYKGXQHIKYGWQWRXIWTXAWTXBXCXDXEXFXGXH $.
      $( [14-Jan-2014] $)

    $d k v U $.
    $( Member of span of the singleton of a vector. $)
    lspsnelLMOLD $p |- ( ( W e. LModLMx /\ X e. V )
       -> ( U e. ( N ` { X } ) <-> ( U e. V /\ E. k e. K U = ( k T X ) ) ) ) $=
      ( vv clmodLMOLD wcel wa csn cv wceq wrex cfv crab lspsnLMOLD eleq2d eqeq1
      co rexbidv elrab syl6bb ) GNOHFOPZBHQEUAZOBMRZCRHAUFZSZCDTZMFUBZOBFOBUMSZ
      CDTZPUJUKUPBMACDEFGHIJKLUCUDUOURMBFULBSUNUQCDULBUMUEUGUHUI $.
      $( [22-Feb-2014] $)

    $d k R $.
    $( The scalar product of a vector belongs to the span of its singleton. $)
    lspsneliLMOLD $p |- ( ( W e. LModLMx /\ R e. K /\ X e. V )
       -> ( R T X ) e. ( N ` { X } ) ) $=
      ( vk clmodLMOLD wcel w3a co csn cfv cv wceq wa lspsnelLMOLD lmodvsclLMOLD
      wrex wb 3adant2 eqid oveq1 eqeq2d rcla4ev mpan2 3ad2ant2 mpbir2and ) FMNZ
      ACNZGENZOAGBPZGQDRNZUQENZUQLSZGBPZTZLCUDZUNUPURUSVCUAUEUOBUQLCDEFGHIJKUBU
      FABCEFGHIJUCUOUNVCUPUOUQUQTZVCUQUGVBVDLACUTATVAUQUQUTAGBUHUIUJUKULUM $.
      $( [22-Feb-2014] $)

    $( Span of a scalar product of a singleton. $)
    lspsnvsiLMOLD $p |- ( ( W e. LModLMx /\ R e. K /\ X e. V )
        -> ( N ` { ( R T X ) } ) C_ ( N ` { X } ) ) $=
      ( vv vs wcel co csn cfv cv wceq wa clmodLMOLD wrex wb simp1 lmodvsclLMOLD
      w3a lspsnelLMOLD syl2anc wi cmulr simpl1 simpr simpl2 eqid lmodvsassLMOLD
      simpl3 syl121anc crg lmodrngLMOLD rngcl syl3anc lspsneliLMOLD eqeltrrd ex
      syl eleq1a syl6 rexlimdv adantld sylbid ssrdv ) FUANZACNZGENZUFZLAGBOZPDQ
      ZGPDQZVOLRZVQNZVSENZVSMRZVPBOZSZMCUBZTZVSVRNZVOVLVPENVTWFUCVLVMVNUDABCEFG
      HIJUEBVSMCDEFVPHIJKUGUHVOWEWGWAVOWDWGMCVOWBCNZWCVRNZWDWGUIVOWHWIVOWHTZWBA
      FUJQZOZGBOZWCVRWJVLWHVMVNWMWCSVLVMVNWHUKZVOWHULZVLVMVNWHUMZVLVMVNWHUPZWBA
      BWKCEFGHWKUNZIJUOUQWJVLWLCNZVNWMVRNWNWJFURNZWHVMWSWJVLWTWNFUSVEWOWPCFWKWB
      AHWRUTVAWQWLBCDEFGHIJKVBVAVCVDWCVRVSVFVGVHVIVJVK $.
      $( [23-Apr-2014] $)
  $}

  ${
    lspsnneg.v $e |- V = ( vbaseLMx ` W ) $.
    lspsnneg.m $e |- M = ( vnegLMx ` W ) $.
    lspsnneg.n $e |- N = ( LSpanLMx ` W ) $.
    $( Negation does not change the span of a singleton. $)
    lspsnnegLMOLD $p |- ( ( W e. LModLMx /\ X e. V )
        -> ( N ` { ( M ` X ) } ) = ( N ` { X } ) ) $=
      ( wcel cfv co csn eqid sneqd fveq2d wss adantr syl2anc syl3anc wceq simpl
      clmodLMOLD wa cur cminusg cvscaLMOLD lmodvneg1LMOLD cbs cgrp lmodrngLMOLD
      crg syl lmod1clLMOLD grpinvcl simpr lspsnvsiLMOLD cmulr rngneg1 grpinvinv
      rnggrp eqtrd lmodvsassLMOLD syl121anc lmodvs1LMOLD 3eqtr3rd lmodvsclLMOLD
      oveq1d eqsstrd eqssd eqtr3d ) DUBIZECIZUCZDUDJZDUEJZJZEDUFJZKZLZBJZEAJZLZ
      BJELZBJZVMVSWBBVMVRWAVQVNVOACDEVNMZVOMZFVQMZGUGNOVMVTWDVMVKVPDUHJZIZVLVTW
      DPVKVLUAZVMDUIIZVNWHIZWIVMDUKIZWKVKWMVLDUJQZDUTULZVKWLVLVNWHDWHMZWEUMQZWH
      DVOVNWPWFUNRZVKVLUOZVPVQWHBCDEWPFWGHUPSVMWDVPVRVQKZLZBJZVTVMWCXABVMEWTVMV
      PVPDUQJZKZEVQKZVNEVQKWTEVMXDVNEVQVMXDVPVOJZVNVMWMWIXDXFTWNWRWHDXCVNVOVPWP
      XCMZWEWFURRVMWKWLXFVNTWOWQWHDVOVNWPWFUSRVAVGVMVKWIWIVLXEWTTWJWRWRWSVPVPVQ
      XCWHCDEWPXGFWGVBVCVQVNCDEFWGWEVDVENOVMVKWIVRCIZXBVTPWJWRVMVKWIVLXHWJWRWSV
      PVQWHCDEWPFWGVFSVPVQWHBCDVRWPFWGHUPSVHVIVJ $.
      $( [24-Apr-2014] $)
  $}

  ${
    lspsnid.v $e |- V = ( vbaseLMx ` W ) $.
    lspsnid.n $e |- N = ( LSpanLMx ` W ) $.
    $( A vector belongs to the span of its singleton. $)
    lspsnidLMOLD $p |- ( ( W e. LModLMx /\ X e. V ) -> X e. ( N ` { X } ) ) $=
      ( clmodLMOLD wcel wa cur cfv cvscaLMOLD co eqid lmodvs1LMOLD lmod1clLMOLD
      csn cbs simpl adantr simpr lspsneliLMOLD syl3anc eqeltrrd ) CGHZDBHZIZCJK
      ZDCLKZMZDDQAKZUIUHBCDEUINZUHNZOUGUEUHCRKZHZUFUJUKHUEUFSUEUOUFUHUNCUNNZUMP
      TUEUFUAUHUIUNABCDUPEULFUBUCUD $.
      $( [9-Apr-2014] $)
  $}

  ${
    $d v N $.  $d k v W $.  $d k v Z $.
    lspsn0.z $e |- Z = ( 0vLMx ` W ) $.
    lspsn0.n $e |- N = ( LSpanLMx ` W ) $.
    $( Span of the singleton of the zero vector. $)
    lspsn0LMOLD $p |- ( W e. LModLMx -> ( N ` { Z } ) = { Z } ) $=
      ( vv vk clmodLMOLD wcel csn cfv cv cvscaLMOLD co wceq wrex crab eqid syl
      wa cbs cvbaseLMOLD 0vclLMOLD lspsnLMOLD mpdan lmodvs0LMOLD adantlr eqeq2d
      rexbidva wb wne lmodbn0LMOLD r19.9rzv adantr bitr4d rabbidva rabsn 3eqtrd
      c0 ) BHIZCJZAKZFLZGLZCBMKZNZOZGBUAKZPZFBUBKZQZVCCOZFVJQZVAUTCVJIZVBVKOVJB
      CVJRZDUCZFVEGVHAVJBCVHRZVOVERZEUDUEUTVIVLFVJUTVCVJIZTZVIVLGVHPZVLVTVGVLGV
      HVTVDVHIZTVFCVCUTWBVFCOVSVEVHBVDCVQVRDUFUGUHUIUTVLWAUJZVSUTVHUSUKWCVHBVQU
      LVLGVHUMSUNUOUPUTVNVMVAOVPFVJCUQSUR $.
      $( [15-Jan-2014] $)
  $}

  ${
    lspsneq0.v $e |- V = ( vbaseLMx ` W ) $.
    lspsneq0.z $e |- Z = ( 0vLMx ` W ) $.
    lspsneq0.n $e |- N = ( LSpanLMx ` W ) $.
    $( Span of the singleton is the zero subspace iff the vector is zero. $)
    lspsneq0LMOLD $p |- ( ( W e. LModLMx /\ X e. V )
         -> ( ( N ` { X } ) = { Z } <-> X = Z ) ) $=
      ( clmodLMOLD wcel wa csn cfv wceq wne wn lspsnidLMOLD elsni necon3ai ex
      nelne1 syl2an necon4d sneq fveq2d lspsn0LMOLD adantr sylan9eqr impbid ) C
      IJZDBJZKZDLZAMZELZNZDENZULDEUNUOULDEOZUNUOOZULDUNJDUOJZPUSURABCDFHQUTDEDE
      RSDUNUOUAUBTUCULUQUPUQULUNUOAMZUOUQUMUOADEUDUEUJVAUONUKACEGHUFUGUHTUI $.
      $( [27-Apr-2014] $)
  $}

  $c LSSumLMx $.

  $( Extend class notation with subspace sum. $)
  clsmLMOLD $a class LSSumLMx $.

  ${
    $d w t u x y z $.
    $( Define subspace sum. $)
    df-lsmLMOLD $a |- LSSumLMx = ( w e. _V |->
       ( t e. ~P ( vbaseLMx ` w ) , u e. ~P ( vbaseLMx ` w ) |->
           { z e. ( vbaseLMx ` w ) |
                E. x e. t E. y e. u z = ( x ( vaddLMx ` w ) y ) } ) ) $.
  $}

  ${
    $d w A $.  $d t u w z V $.  $d t u w x y z W $.
    lsmfval.v $e |- V = ( vbaseLMx ` W ) $.
    lsmfval.a $e |- A = ( vaddLMx ` W ) $.
    lsmfval.s $e |- S = ( LSSumLMx ` W ) $.
    $( The subspace sum function (for a left module or left vector space). $)
    lsmfvalLMOLD $p |- ( W e. X
      -> S = ( t e. ~P V , u e. ~P V |->
    { z e. V | E. x e. t E. y e. u z = ( x A y ) } ) ) $=
      ( vw cvv cv wceq wrex cfv cvbaseLMOLD wcel cpw crab cmpt2 elex cvaddLMOLD
      clsmLMOLD fveq2 syl6eqr pweqd oveqd eqeq2d 2rexbidv rabeqbidv mpt2eq123dv
      co df-lsmLMOLD fvex eqeltri pwex mpt2ex fvmpt syl5eq syl ) IJUAIOUAZGEDHU
      BZVFCPZAPZBPZFUPZQZBDPZRAEPZRZCHUCZUDZQIJUEVEGIUGSVPMNIEDNPZTSZUBZVSVGVHV
      IVQUFSZUPZQZBVLRAVMRZCVRUCZUDVPOUGVQIQZEDVSVSWDVFVFVOWEVRHWEVRITSZHVQITUH
      KUIZUJZWHWEWCVNCVRHWGWEWBVKABVMVLWEWAVJVGWEVTFVHVIWEVTIUFSFVQIUFUHLUIUKUL
      UMUNUOABCNDEUQEDVFVFVOHHWFOKITURUSUTZWIVAVBVCVD $.
      $( [28-Jan-2014] $)

    $d t u A $.  $d t u x z T $.  $d u x y z U $.
    $( Subspace sum value (for a left module or left vector space).  Extended
       domain version of ~ lsmvalLMOLD . $)
    lsmvalxLMOLD $p |- ( ( W e. X /\ T C_ V /\ U C_ V )
       -> ( T S U ) = { z e. V | E. x e. T E. y e. U z = ( x A y ) } ) $=
      ( vt vu wcel co cv wceq wrex wss w3a cpw crab cmpt2 lsmfvalLMOLD 3ad2ant1
      oveqd cvv cvbaseLMOLD cfv fvex eqeltri elpw2 biimpri 3ad2ant2 rabex rexeq
      3ad2ant3 a1i rabbidv rexbidv eqid ovmpt2g syl3anc eqtrd ) IJPZFHUAZGHUAZU
      BZFGEQFGNOHUCZVKCRARBRDQSZBORZTZANRZTZCHUDZUEZQZVLBGTZAFTZCHUDZVJEVRFGVGV
      HEVRSVIABCONDEHIJKLMUFUGUHVJFVKPZGVKPZWBUIPZVSWBSVHVGWCVIWCVHFHHIUJUKUIKI
      UJULUMZUNUOUPVIVGWDVHWDVIGHWFUNUOUSWEVJWACHWFUQUTNOFGVKVKVQWBVRVNAFTZCHUD
      UIVOFSVPWGCHVNAVOFURVAVMGSZWGWACHWHVNVTAFVLBVMGURVBVAVRVCVDVEVF $.
      $( [28-Jan-2014] $)

    $d x A $.  $d y T $.  $d x y V $.  $d x y z X $.
    $( Subspace sum membership (for a left module or left vector space).
       Extended domain version of ~ lsmelvalLMOLD . $)
    lsmelvalxLMOLD $p |- ( ( W e. LModLMx /\ T C_ V /\ U C_ V )
       -> ( X e. ( T S U ) <-> E. y e. T E. z e. U X = ( y A z ) ) ) $=
      ( vx clmodLMOLD wcel wss cv wceq wrex wa w3a co lsmvalxLMOLD eleq2d eqeq1
      crab 2rexbidv elrab syl6bb simpl1 simpl2 simprl sseldd simpl3 simprr 3jca
      wi ex lmodvaclLMOLD eleq1a syl syl6 rexlimdvv pm4.71rd bitr4d ) HNOZEGPZF
      GPZUAZIEFDUBZOZIGOZIAQZBQZCUBZRZBFSAESZTZVQVIVKIMQZVORZBFSAESZMGUFZOVRVIV
      JWBIABMCDEFGHNJKLUCUDWAVQMIGVSIRVTVPABEFVSIVOUEUGUHUIVIVQVLVIVPVLABEFVIVM
      EOZVNFOZTZVFVMGOZVNGOZUAZVPVLUQZVIWEWHVIWETZVFWFWGVFVGVHWEUJWJEGVMVFVGVHW
      EUKVIWCWDULUMWJFGVNVFVGVHWEUNVIWCWDUOUMUPURWHVOGOWICGHVMVNJKUSVOGIUTVAVBV
      CVDVE $.
      $( [28-Jan-2014] $)

    $d y z A $.  $d y z Y $.
    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelvalixLMOLD $p |- ( ( ( W e. LModLMx /\ T C_ V /\ U C_ V ) /\
               ( X e. T /\ Y e. U ) ) -> ( X A Y ) e. ( T S U ) ) $=
      ( vy vz wcel wss wa co cv wceq wrex clmodLMOLD w3a simprl simprr rcla4eov
      eqidd syl3anc wb lsmelvalxLMOLD adantr mpbird ) FUANCEODEOUBZGCNZHDNZPZPZ
      GHAQZCDBQNZUQLRMRAQSMDTLCTZUPUMUNUQUQSUSULUMUNUCULUMUNUDUPUQUFLMCDGHUQAUE
      UGULURUSUHUOLMABCDEFUQIJKUIUJUK $.
      $( [4-Feb-2014] $)
  $}

  ${
    $d x y z R $.  $d x S $.  $d x y z T $.  $d x y z U $.  $d x y z V $.
    $d x y z W $.
    lsmless2.v $e |- V = ( vbaseLMx ` W ) $.
    lsmless2.s $e |- S = ( LSSumLMx ` W ) $.
    $( Subspace sum commutes (extended domain version). $)
    lsmcomxLMOLD $p |- ( ( W e. LModLMx /\ T C_ V /\ U C_ V )
       -> ( T S U ) = ( U S T ) ) $=
      ( vx vz vy clmodLMOLD wcel wss co cv wceq wrex wa sseldd lsmelvalxLMOLD
      w3a cvaddLMOLD cfv simpl1 simpl2 simprl simpl3 simprr lmodcomLMOLD eqeq2d
      eqid syl3anc 2rexbidva rexcom syl6bb wb 3com23 3bitr4d eqrdv ) EKLZBDMZCD
      MZUAZHBCANZCBANZVCHOZIOZJOZEUBUCZNZPZJCQIBQZVFVHVGVINZPZIBQJCQZVFVDLVFVEL
      ZVCVLVNJCQIBQVOVCVKVNIJBCVCVGBLZVHCLZRZRZVJVMVFVTUTVGDLVHDLVJVMPUTVAVBVSU
      DVTBDVGUTVAVBVSUEVCVQVRUFSVTCDVHUTVAVBVSUGVCVQVRUHSVIDEVGVHFVIUKZUIULUJUM
      VNIJBCUNUOIJVIABCDEVFFWAGTUTVBVAVPVOUPJIVIACBDEVFFWAGTUQURUS $.
      $( [25-Feb-2014] $)

    $( Subset implies subspace sum subset (extended domain version). $)
    lsmless1xLMOLD $p |- ( ( ( W e. LModLMx /\ T C_ V /\ U C_ V ) /\ R C_ T )
       -> ( R S U ) C_ ( T S U ) ) $=
      ( vx vy vz clmodLMOLD wcel wss co cv wrex wb lsmelvalxLMOLD syl3anc simpr
      w3a wa cvaddLMOLD wceq sseld anim1d reximdv2 simpl1 simpl2 syl2anc simpl3
      cfv sstr eqid 3imtr4d ssrdv ) FLMZCENZDENZUBZACNZUCZIADBOZCDBOZVCIPZJPZKP
      FUDUMZOUEKDQZJAQZVIJCQZVFVDMZVFVEMZVCVIVIJACVCVGAMVGCMVIVCACVGVAVBUAZUFUG
      UHVCURAENZUTVLVJRURUSUTVBUIZVCVBUSVOVNURUSUTVBUJZACEUNUKURUSUTVBULZJKVHBA
      DEFVFGVHUOZHSTVCURUSUTVMVKRVPVQVRJKVHBCDEFVFGVSHSTUPUQ $.
      $( [22-Feb-2014] $)

    $( Subset implies subspace sum subset (extended domain version). $)
    lsmless2xLMOLD $p |- ( ( ( W e. LModLMx /\ R C_ V /\ U C_ V ) /\ T C_ U )
       -> ( R S T ) C_ ( R S U ) ) $=
      ( clmodLMOLD wcel wss w3a wa simpl1 simpl3 simpl2 simpr wceq lsmcomxLMOLD
      co lsmless1xLMOLD syl31anc sstrd syl3anc adantr 3sstr4d ) FIJZAEKZDEKZLZC
      DKZMZCABTZDABTZACBTZADBTZULUGUIUHUKUMUNKUGUHUIUKNZUGUHUIUKOZUGUHUIUKPZUJU
      KQZCBDAEFGHUAUBULUGUHCEKUOUMRUQUSULCDEUTURUCBACEFGHSUDUJUPUNRUKBADEFGHSUE
      UF $.
      $( [25-Feb-2014] $)
  $}

  ${
    lsmval.v $e |- V = ( vbaseLMx ` W ) $.
    lsmval.a $e |- A = ( vaddLMx ` W ) $.
    lsmval.s $e |- S = ( LSubSpLMx ` W ) $.
    lsmval.p $e |- P = ( LSSumLMx ` W ) $.
    $d x z T $.  $d x y z U $.  $d z V $.  $d x y z W $.
    $( Subspace sum value (for a left module or left vector space). $)
    lsmvalLMOLD $p |- ( ( W e. X /\ T e. S /\ U e. S )
       -> ( T P U ) = { z e. V | E. x e. T E. y e. U z = ( x A y ) } ) $=
      ( wcel wss co cv wceq w3a wrex crab simp1 lssssLMOLD 3adant3 lsmvalxLMOLD
      3adant2 syl3anc ) JKPZGFPZHFPZUAUJGIQZHIQZGHERCSASBSDRTBHUBAGUBCIUCTUJUKU
      LUDUJUKUMULFGIJKLNUEUFUJULUNUKFHIJKLNUEUHABCDEGHIJKLMOUGUI $.
      $( [4-Feb-2014] $)
  $}

  ${
    $d y z T $.  $d y z U $.  $d y z W $.  $d y z X $.
    lsmelval.a $e |- A = ( vaddLMx ` W ) $.
    lsmelval.s $e |- S = ( LSubSpLMx ` W ) $.
    lsmelval.p $e |- P = ( LSSumLMx ` W ) $.
    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelvalLMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
       -> ( X e. ( T P U ) <-> E. y e. T E. z e. U X = ( y A z ) ) ) $=
      ( clmodLMOLD wcel w3a wss co cv wrex lssssLMOLD cvbaseLMOLD wceq wb simp1
      cfv eqid 3adant3 3adant2 lsmelvalxLMOLD syl3anc ) HMNZFENZGENZOUKFHUAUEZP
      ZGUNPZIFGDQNIARBRCQUBBGSAFSUCUKULUMUDUKULUOUMEFUNHMUNUFZKTUGUKUMUPULEGUNH
      MUQKTUHABCDFGUNHIUQJLUIUJ $.
      $( [4-Feb-2014] $)

    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelvaliLMOLD $p |- ( ( ( W e. LModLMx /\ T e. S /\ U e. S ) /\
               ( X e. T /\ Y e. U ) ) -> ( X A Y ) e. ( T P U ) ) $=
      ( clmodLMOLD wcel w3a wa cvbaseLMOLD wss co lssssLMOLD syl2anc cfv simpl1
      simpl2 eqid simpl3 simpr lsmelvalixLMOLD syl31anc ) FLMZDCMZECMZNZGDMHEMO
      ZOZUIDFPUAZQZEUOQZUMGHARDEBRMUIUJUKUMUBZUNUIUJUPURUIUJUKUMUCCDUOFLUOUDZJS
      TUNUIUKUQURUIUJUKUMUECEUOFLUSJSTULUMUFABDEUOFGHUSIKUGUH $.
      $( [4-Feb-2014] $)
  $}

  ${
    $d a d e f g u v P $.  $d a d e f g u v S $.  $d a d e f g u v x y z T $.
    $d a d e f g u v x y z U $.  $d a d e f g u v x y z W $.
    lsmcl.s $e |- S = ( LSubSpLMx ` W ) $.
    lsmcl.p $e |- P = ( LSSumLMx ` W ) $.
    $( The sum of two subspaces is a subspace. $)
    lsmclLMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
           -> ( T P U ) e. S ) $=
      ( vz vx vy clmodLMOLD wcel co cfv wceq cv wrex eqid syl3anc wa va w3a cbs
      vu vv vd ve vf vg simp1 cvaddLMOLD cvscaLMOLD cvbaseLMOLD eqidd clssLMOLD
      a1i crab lsmvalLMOLD wss eqsstrd czvLMOLD wne lss0clLMOLD 3adant3 3adant2
      ssrab2 0vclLMOLD 3ad2ant1 0vlidLMOLD eqcomd rcla4eov lsmelvalLMOLD mpbird
      c0 syl2anc wi anbi12d simpl3 simpr2 oveq2d simpl11 simpr3 simpl12 simpr1l
      lsselLMOLD simpl13 simpr1r lmodvsdi1LMOLD syl112anc eqtrd oveq12d simpl2l
      ne0i simpl2r lmodvsclLMOLD lmod4LMOLD syl122anc lssclLMOLD lsmelvaliLMOLD
      syl syl23anc syl32anc 3exp2 rexlimdvv 3exp imp3a sylbid exp3a islssdLMOLD
      eqeltrd 3imp2 mpdan ) EKLZCBLZDBLZUBZXMCDAMZBLXMXNXOUJZXPUAEUCNZEUKNZBEUL
      NZXQEUMNZEKUDUEXPXSUNXPYBUNXPXTUNXPYAUNBEUONOXPFUPXPXQHPIPJPXTMZOJDQICQZH
      YBUQZYBIJHXTABCDYBEKYBRZXTRZFGURYEYBUSXPYDHYBVFUPUTXPEVANZXQLZXQVNVBXPYIY
      HYCOJDQICQZXPYHCLZYHDLZYHYHYHXTMZOYJXMXNYKXOBCEYHYHRZFVCVDXMXOYLXNBDEYHYN
      FVCVEXPYMYHXPXMYHYBLZYMYHOXRXMXNYOXOYBEYHYFYNVGVHXTYBEYHYHYFYGYNVIVOVJIJC
      DYHYHYHXTVKSIJXTABCDEYHYGFGVLVMXQYHWMWTXPUDPZXQLZUEPZXQLZUAPZXSLZYPYTYRYA
      MZXTMZXQLZXPYQYSUUAUUDVPZXPYQYSTYPUFPZUGPZXTMZOZUGDQUFCQZYRUHPZUIPZXTMZOZ
      UIDQUHCQZTUUEXPYQUUJYSUUOUFUGXTABCDEYPYGFGVLUHUIXTABCDEYRYGFGVLVQXPUUJUUO
      UUEXPUUIUUOUUEVPZUFUGCDXPUUFCLZUUGDLZTZUUIUUPXPUUSUUIUBZUUNUUEUHUICDUUTUU
      KCLZUULDLZTZUUNUUAUUDUUTUVCUUNUUAUBZTZUUCUUHYTUUKYAMZYTUULYAMZXTMZXTMZXQU
      VEYPUUHUUBUVHXTXPUUSUUIUVDVRUVEUUBYTUUMYAMZUVHUVEYRUUMYTYAUUTUVCUUNUUAVSV
      TUVEXMUUAUUKYBLZUULYBLZUVJUVHOXMXNXOUUSUUIUVDWAZUUTUVCUUNUUAWBZUVEXMXNUVA
      UVKUVMXMXNXOUUSUUIUVDWCZUVAUVBUUNUUAUUTWDZBCYBEUUKKYFFWESZUVEXMXOUVBUVLUV
      MXMXNXOUUSUUIUVDWFZUVAUVBUUNUUAUUTWGZBDYBEUULKYFFWESZXTYTYAXSYBEUUKUULXSR
      ZYFYGYARZWHWIWJWKUVEUVIUUFUVFXTMZUUGUVGXTMZXTMZXQUVEXMUUFYBLZUUGYBLZUVFYB
      LZUVGYBLZUVIUWEOUVMUVEXMXNUUQUWFUVMUVOUUQUURXPUUIUVDWLZBCYBEUUFKYFFWESUVE
      XMXOUURUWGUVMUVRUUQUURXPUUIUVDWNZBDYBEUUGKYFFWESUVEXMUUAUVKUWHUVMUVNUVQYT
      YAXSYBEUUKUWAYFUWBWOSUVEXMUUAUVLUWIUVMUVNUVTYTYAXSYBEUULUWAYFUWBWOSXTUVGY
      BEUUFUUGUVFYFYGWPWQUVEXMXNXOUWCCLZUWDDLZUWEXQLUVMUVOUVRUVEXMXNUUQUVAUUAUW
      LUVMUVOUWJUVPUVNXSXTBYACKEUUFUUKYTUWAYGUWBFWRXAUVEXMXOUURUVBUUAUWMUVMUVRU
      WKUVSUVNXSXTBYADKEUUGUULYTUWAYGUWBFWRXAXTABCDEUWCUWDYGFGWSXBXJXJXCXDXEXDX
      FXGXHXKXIXL $.
      $( [4-Feb-2014] $)

    $d x P $.  $d x S $.
    $( Union of subspaces is a subset of subspace sum. $)
    lsmunssLMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
       -> ( T u. U ) C_ ( T P U ) ) $=
      ( vx vy vz clmodLMOLD wcel co cv cfv wceq wrex eqid syl2anc syl3anc wo wa
      w3a elun cvaddLMOLD czvLMOLD simpl1 simpl3 lss0clLMOLD cvbaseLMOLD simpl2
      cun lsselLMOLD 0vridLMOLD eqcomd rcla4eov 0vlidLMOLD jaodan lsmelvalLMOLD
      simpr ex sylibrd syl5bi ssrdv ) EKLZCBLZDBLZUCZHCDULZCDAMZHNZVILVKCLZVKDL
      ZUAZVHVKVJLZVKCDUDVHVNVKINJNEUEOZMPJDQICQZVOVHVNVQVHVLVQVMVHVLUBZVLEUFOZD
      LZVKVKVSVPMZPVQVHVLUTZVRVEVGVTVEVFVGVLUGZVEVFVGVLUHBDEVSVSRZFUISVRWAVKVRV
      EVKEUJOZLZWAVKPWCVRVEVFVLWFWCVEVFVGVLUKWBBCWEEVKKWERZFUMTVPWEEVKVSWGVPRZW
      DUNSUOIJCDVKVSVKVPUPTVHVMUBZVSCLZVMVKVSVKVPMZPVQWIVEVFWJVEVFVGVMUGZVEVFVG
      VMUKBCEVSWDFUISVHVMUTZWIWKVKWIVEWFWKVKPWLWIVEVGVMWFWLVEVFVGVMUHWMBDWEEVKK
      WGFUMTVPWEEVKVSWGWHWDUQSUOIJCDVSVKVKVPUPTURVAIJVPABCDEVKWHFGUSVBVCVD $.
      $( [6-Feb-2014] $)

    $d y z S $.
    $( Subspace sum commutes. $)
    lsmcomLMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
       -> ( T P U ) = ( U P T ) ) $=
      ( clmodLMOLD wcel w3a cvbaseLMOLD cfv wss co wceq eqid lssssLMOLD 3adant3
      simp1 3adant2 lsmcomxLMOLD syl3anc ) EHIZCBIZDBIZJUCCEKLZMZDUFMZCDANDCANO
      UCUDUESUCUDUGUEBCUFEHUFPZFQRUCUEUHUDBDUFEHUIFQTACDUFEUIGUAUB $.
      $( [6-Feb-2014] $)

    $( Subspace sum is an upper bound of its arguments. $)
    lsmub1LMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
          -> T C_ ( T P U ) ) $=
      ( vx clmodLMOLD wcel w3a co cv wa czvLMOLD cvaddLMOLD cvbaseLMOLD syl2anc
      cfv eqid simpl1 simpl2 simpr lsselLMOLD syl3anc 0vridLMOLD lsmelvaliLMOLD
      wceq simpl3 lss0clLMOLD syl32anc eqeltrrd ex ssrdv ) EIJZCBJZDBJZKZHCCDAL
      ZURHMZCJZUTUSJURVANZUTEOSZEPSZLZUTUSVBUOUTEQSZJZVEUTUHUOUPUQVAUAZVBUOUPVA
      VGVHUOUPUQVAUBZURVAUCZBCVFEUTIVFTZFUDUEVDVFEUTVCVKVDTZVCTZUFRVBUOUPUQVAVC
      DJZVEUSJVHVIUOUPUQVAUIZVJVBUOUQVNVHVOBDEVCVMFUJRVDABCDEUTVCVLFGUGUKULUMUN
      $.
      $( [6-Feb-2014] $)

    $( Subspace sum is an upper bound of its arguments. $)
    lsmub2LMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
           -> U C_ ( T P U ) ) $=
      ( clmodLMOLD wcel w3a co wss lsmub1LMOLD 3com23 lsmcomLMOLD sseqtr4d ) EH
      IZCBIZDBIZJDDCAKZCDAKQSRDTLABDCEFGMNABCDEFGOP $.
      $( [6-Feb-2014] $)

    $( Subset implies subspace sum subset. $)
    lsmless1LMOLD $p |- ( ( W e. LModLMx /\ ( T e. S /\ U e. S /\ V e. S )
        /\ T C_ U ) -> ( T P V ) C_ ( U P V ) ) $=
      ( clmodLMOLD wcel w3a wss cvbaseLMOLD cfv co simp1 simp22 eqid lssssLMOLD
      syl2anc simp23 simp3 lsmless1xLMOLD syl31anc ) FIJZCBJZDBJZEBJZKZCDLZKZUE
      DFMNZLZEULLZUJCEAODEAOLUEUIUJPZUKUEUGUMUOUEUFUGUHUJQBDULFIULRZGSTUKUEUHUN
      UOUEUFUGUHUJUABEULFIUPGSTUEUIUJUBCADEULFUPHUCUD $.
      $( [6-Feb-2014] $)

    $( Subset implies subspace sum subset. $)
    lsmless2LMOLD $p |- ( ( ( W e. LModLMx /\ T e. S /\ V e. S ) /\ U C_ V )
       -> ( T P U ) C_ ( T P V ) ) $=
      ( clmodLMOLD wcel w3a wss wa cvbaseLMOLD cfv co simpl1 lssssLMOLD syl2anc
      simpl2 eqid simpl3 simpr lsmless2xLMOLD syl31anc ) FIJZCBJZEBJZKZDELZMZUF
      CFNOZLZEULLZUJCDAPCEAPLUFUGUHUJQZUKUFUGUMUOUFUGUHUJTBCULFIULUAZGRSUKUFUHU
      NUOUFUGUHUJUBBEULFIUPGRSUIUJUCCADEULFUPHUDUE $.
      $( [25-Feb-2014] $)

    $( Subspace sum is idempotent. $)
    lsmidmLMOLD $p |- ( ( W e. LModLMx /\ U e. S )
       -> ( U P U ) = U ) $=
      ( vx vy vz clmodLMOLD wcel wa co cv cvaddLMOLD cfv wceq wrex wb 3anidm23
      eqid lsmelvalLMOLD wi lssvaclLMOLD eleq1a syl6 rexlimdvv sylbid ssrdv wss
      ex lsmub1LMOLD eqssd ) DJKZCBKZLZCCAMZCUPGUQCUPGNZUQKZURHNZINZDOPZMZQZICR
      HCRZURCKZUNUOUSVESHIVBABCCDURVBUAZEFUBTUPVDVFHICCUPUTCKVACKLZVCCKZVDVFUCU
      PVHVIVBBCDUTVAVGEUDUKVCCURUEUFUGUHUIUNUOCUQUJABCCDEFULTUM $.
      $( [6-Feb-2014] $)

    $( Least upper bound property of subspace sum. $)
    lsmlubLMOLD $p |- ( ( W e. LModLMx /\ ( T e. S /\ U e. S /\ V e. S ) )
       -> ( ( T C_ V /\ U C_ V ) <-> ( T P U ) C_ V ) ) $=
      ( clmodLMOLD wcel wss lsmless1LMOLD syl131anc wceq sseqtrd 3adant3r3 sstr
      wa co sylan w3a simpll simplr1 simplr3 simplr2 simprl lsmcomLMOLD syl3anc
      simprr lsmidmLMOLD syl2anc sstrd lsmub1LMOLD lsmub2LMOLD jca impbida ) FI
      JZCBJZDBJZEBJZUAZRZCEKZDEKZRZCDASZEKZVBVERZVFDEASZEVHVFEDASZVIVHUQURUTUSV
      CVFVJKUQVAVEUBZURUSUTUQVEUCURUSUTUQVEUDZURUSUTUQVEUEZVBVCVDUFABCEDFGHLMVH
      UQUTUSVJVINVKVLVMABEDFGHUGUHOVHVIEEASZEVHUQUSUTUTVDVIVNKVKVMVLVLVBVCVDUIA
      BDEEFGHLMVHUQUTVNENVKVLABEFGHUJUKOULVBVGRVCVDVBCVFKZVGVCUQURUSVOUTABCDFGH
      UMPCVFEQTVBDVFKZVGVDUQURUSVPUTABCDFGHUNPDVFEQTUOUP $.
      $( [6-Feb-2014] $)

    $( Subspace sum with a subset. $)
    lsmss2LMOLD $p |- ( ( W e. LModLMx /\ ( T e. S /\ U e. S ) /\ T C_ U )
       -> ( T P U ) = U ) $=
      ( clmodLMOLD wa wss w3a co simp1 simp2l simp2r lsmlubLMOLD syl13anc simp3
      wcel wb ssid a1i mpbi2and lsmub2LMOLD syl3anc eqssd ) EHSZCBSZDBSZIZCDJZK
      ZCDALZDULUKDDJZUMDJZULUGUHUIUIUKUNIUOTUGUJUKMZUGUHUIUKNZUGUHUIUKOZURABCDD
      EFGPQUGUJUKRUNULDUAUBUCULUGUHUIDUMJUPUQURABCDEFGUDUEUF $.
      $( [27-Mar-2014] $)

    $( Subspace sum with a subset. $)
    lsmss1LMOLD $p |- ( ( W e. LModLMx /\ ( T e. S /\ U e. S ) /\ U C_ T )
       -> ( T P U ) = T ) $=
      ( clmodLMOLD wcel wa wss w3a wceq simp1 simp2l simp2r lsmcomLMOLD syl3anc
      co simp3 lsmss2LMOLD syl121anc eqtrd ) EHIZCBIZDBIZJZDCKZLZCDASZDCASZCUIU
      DUEUFUJUKMUDUGUHNZUDUEUFUHOZUDUEUFUHPZABCDEFGQRUIUDUFUEUHUKCMULUNUMUDUGUH
      TABDCEFGUAUBUC $.
      $( [27-Mar-2014] $)

    $( Subspace sum is associative. $)
    lsmassLMOLD $p |- ( ( W e. LModLMx /\ ( R e. S /\ T e. S /\ U e. S ) )
       -> ( ( R P T ) P U ) = ( R P ( T P U ) ) ) $=
      ( wcel wa lsmclLMOLD syl3anc lsmlubLMOLD syl13anc lsmub1LMOLD lsmub2LMOLD
      co wss wb sstrd clmodLMOLD w3a simpl simpr1 simpr2 simpr3 mpbi2and eqssd
      ) FUAIZBCIZDCIZECIZUBZJZBDAQZEAQZBDEAQZAQZUNUOURRZEURRZUPURRZUNUIUOCIZULU
      RCIZUSUTJVASUIUMUCZUNUIUJUKVBVDUIUJUKULUDZUIUJUKULUEZACBDFGHKLZUIUJUKULUF
      ZUNUIUJUQCIZVCVDVEUNUIUKULVIVDVFVHACDEFGHKLZACBUQFGHKLZACUOEURFGHMNUNBURR
      ZDURRZUSUNUIUJUKVCVLVMJUSSVDVEVFVKACBDURFGHMNUNUIUJVIVLVDVEVJACBUQFGHOLUN
      DUQURUNUIUKULDUQRVDVFVHACDEFGHOLUNUIUJVIUQURRVDVEVJACBUQFGHPLZTUGUNEUQURU
      NUIUKULEUQRVDVFVHACDEFGHPLVNTUGUNBUPRZUQUPRZURUPRZUNUIUJVIUPCIZVOVPJVQSVD
      VEVJUNUIVBULVRVDVGVHACUOEFGHKLZACBUQUPFGHMNUNBUOUPUNUIUJUKBUORVDVEVFACBDF
      GHOLUNUIVBULUOUPRVDVGVHACUOEFGHOLZTUNDUPRZEUPRZVPUNUIUKULVRWAWBJVPSVDVFVH
      VSACDEUPFGHMNUNDUOUPUNUIUJUKDUORVDVEVFACBDFGHPLVTTUNUIVBULWBVDVGVHACUOEFG
      HPLUGUGUH $.
      $( [2-Mar-2014] $)

    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d y z P $.
    $( The modular law holds for subspace sum.  Similar to part of Theorem 16.9
       of [MaedaMaeda] p. 70.  TODO: fine-tune to shorten proof. $)
    lsmmodLMOLD $p |- ( ( W e. LModLMx /\ ( A e. S /\ B e. S /\ C e. S )
     /\ A C_ C ) -> ( ( A P B ) i^i C ) = ( A P ( B i^i C ) ) ) $=
      ( vx vy clmodLMOLD wcel w3a wss co cv wa wb syl3anc adantr vz cin elin wi
      cvaddLMOLD cfv wceq wrex simpl1 simpl21 simpl22 eqid lsmelvalLMOLD simp2r
      cvsLMOLD simp3 eqcomd cvbaseLMOLD simp1l1 simpl23 simp1r lmodvsubaddLMOLD
      3ad2ant1 lsselLMOLD simp2l syl13anc mpbird sseldd lssvsubclLMOLD syl22anc
      simp1l3 eqeltrrd simpl3 lssinclLMOLD simpl2l simpr lsmelvaliLMOLD eqeltrd
      sylanbrc syl32anc mpdan 3exp rexlimdvv sylbid ex com23 imp3a syl5bi ssrdv
      simp1 simp21 simp22 simp23 lsmclLMOLD lsmlubLMOLD lsmub1LMOLD lsmub2LMOLD
      inss1 syl5ss mpbi2and inss2 a1i jca ssin sylib eqssd ) FKLZAELZBELZCELZMZ
      ACNZMZABDOZCUBZABCUBZDOZXMUAXOXQUAPZXOLXRXNLZXRCLZQXMXRXQLZXRXNCUCXMXSXTY
      AXMXTXSYAXMXTXSYAUDXMXTQZXSXRIPZJPZFUEUFZOZUGZJBUHIAUHZYAYBXGXHXIXSYHRXGX
      KXLXTUIXHXIXJXGXLXTUJZXHXIXJXGXLXTUKZIJYEDEABFXRYEULZGHUMSYBYGYAIJABYBYCA
      LZYDBLZQZYGYAYBYNYGMZYDXPLZYAYOYMYDCLYPYBYLYMYGUNZYOXRYCFUOUFZOZYDCYOYSYD
      UGZYFXRUGZYOXRYFYBYNYGUPUQYOXGXRFURUFZLZYCUUBLZYDUUBLZYTUUARXGXKXLXTYNYGU
      SZYOXGXJXTUUCUUFYBYNXJYGXHXIXJXGXLXTUTVCZXMXTYNYGVAZECUUBFXRKUUBULZGVDSYO
      XGXHYLUUDUUFYBYNXHYGYIVCZYBYLYMYGVEZEAUUBFYCKUUIGVDSYOXGXIYMUUEUUFYBYNXIY
      GYJVCZYQEBUUBFYDKUUIGVDSXRYCYDYEYRUUBFUUIYKYRULZVBVFVGYOXGXJXTYCCLYSCLUUF
      UUGUUHYOACYCXGXKXLXTYNYGVKUUKVHECYRFXRYCUUMGVIVJVLYDBCUCVSYOYPQZXRYFXQYBY
      NYGYPVMUUNXGXHXPELZYLYPYFXQLYOXGYPUUFTZYOXHYPUUJTUUNXGXIXJUUOUUPYOXIYPUUL
      TYOXJYPUUGTEBCFGVNZSYLYMYBYGYPVOYOYPVPYEDEAXPFYCYDYKGHVQVTVRWAWBWCWDWEWFW
      GWHWIXMXQXNNZXQCNZQXQXONXMUURUUSXMAXNNZXPXNNZUURXMXGXHUUOXNELZUUTUVAQUURR
      XGXKXLWJZXGXHXIXJXLWKZXMXGXIXJUUOUVCXGXHXIXJXLWLZXGXHXIXJXLWMZUUQSZXMXGXH
      XIUVBUVCUVDUVEDEABFGHWNSDEAXPXNFGHWOVFXMXGXHXIUUTUVCUVDUVEDEABFGHWPSXMXPB
      XNBCWRXMXGXHXIBXNNUVCUVDUVEDEABFGHWQSWSWTXMXLXPCNZUUSXMXGXHUUOXJXLUVHQUUS
      RUVCUVDUVGUVFDEAXPCFGHWOVFXGXKXLUPUVHXMBCXAXBWTXCXQXNCXDXEXF $.
      $( [2-Apr-2014] $)
  $}

  ${
    lsm01.z $e |- Z = ( 0vLMx ` W ) $.
    lsm01.s $e |- S = ( LSubSpLMx ` W ) $.
    lsm01.p $e |- P = ( LSSumLMx ` W ) $.
    $( Subspace sum with the zero subspace. $)
    lsm01LMOLD $p |- ( ( W e. LModLMx /\ X e. S ) -> ( X P { Z } ) = X ) $=
      ( clmodLMOLD wcel wa csn wss co wceq simpl lsssn0LMOLD adantr lss0ssLMOLD
      simpr lsmss1LMOLD syl121anc ) CIJZDBJZKUCUDELZBJZUEDMDUEANDOUCUDPUCUDTUCU
      FUDBCEFGQRBCDEFGSABDUECGHUAUB $.
      $( [27-Mar-2014] $)

    $( Subspace sum with the zero subspace. $)
    lsm02LMOLD $p |- ( ( W e. LModLMx /\ X e. S ) -> ( { Z } P X ) = X ) $=
      ( clmodLMOLD wcel wa csn wss co wceq simpl lsssn0LMOLD adantr lss0ssLMOLD
      simpr lsmss2LMOLD syl121anc ) CIJZDBJZKUCELZBJZUDUEDMUEDANDOUCUDPUCUFUDBC
      EFGQRUCUDTBCDEFGSABUEDCGHUAUB $.
      $( [27-Mar-2014] $)
  $}

  ${
    $d s P $.  $d s S $.  $d s T $.  $d s U $.  $d s W $.
    lsmsp.s $e |- S = ( LSubSpLMx ` W ) $.
    lsmsp.n $e |- N = ( LSpanLMx ` W ) $.
    lsmsp.p $e |- P = ( LSSumLMx ` W ) $.
    $( Subspace sum in terms of span. $)
    lsmspLMOLD $p |- ( ( W e. LModLMx /\ T e. S /\ U e. S )
       -> ( T P U ) = ( N ` ( T u. U ) ) ) $=
      ( vs clmodLMOLD wcel w3a cfv wss wa lssssLMOLD ex syl2anc syl5ss co simp1
      cun wb simp2 simp3 cvbaseLMOLD eqid anim12d 3impib unss sylib lsmlubLMOLD
      lspclLMOLD syl13anc ssun1 lspssidLMOLD ssun2 mpbi2and cv crab lspvalLMOLD
      cint wceq lsmclLMOLD lsmunssLMOLD sseq2 elrab sylanbrc intss1 syl eqsstrd
      eqssd ) FKLZCBLZDBLZMZCDAUAZCDUCZENZVQCVTOZDVTOZVRVTOZVQVNVOVPVTBLZWAWBPW
      CUDVNVOVPUBZVNVOVPUEVNVOVPUFVQVNVSFUGNZOZWDWEVQCWFOZDWFOZPZWGVNVOVPWJVNVO
      WHVPWIVNVOWHBCWFFKWFUHZGQRVNVPWIBDWFFKWKGQRUIUJCDWFUKULZBVSEWFFWKGHUNSABC
      DVTFGIUMUOVQCVSVTCDUPVQVNWGVSVTOWEWLVSEWFFWKHUQSZTVQDVSVTDCURWMTUSVQVTVSJ
      UTZOZJBVAZVCZVRVQVNWGVTWQVDWEWLJBVSEWFFWKGHVBSVQVRWPLZWQVROVQVRBLVSVROZWR
      ABCDFGIVEABCDFGIVFWOWSJVRBWNVRVSVGVHVIVRWPVJVKVLVM $.
      $( [6-Feb-2014] $)
  $}

  ${
    lsmsp2.v $e |- V = ( vbaseLMx ` W ) $.
    lsmsp2.n $e |- N = ( LSpanLMx ` W ) $.
    lsmsp2.p $e |- P = ( LSSumLMx ` W ) $.
    $( Subspace sum of spans of subsets is the span of their union. $)
    lsmsp2LMOLD $p |- ( ( W e. LModLMx /\ T C_ V /\ U C_ V )
       -> ( ( N ` T ) P ( N ` U ) ) = ( N ` ( T u. U ) ) ) $=
      ( clmodLMOLD wcel wss w3a cfv co cun clssLMOLD wceq simp1 lspclLMOLD eqid
      3adant3 3adant2 lsmspLMOLD syl3anc lspunLMOLD eqtr4d ) FJKZBELZCELZMZBDNZ
      CDNZAOZULUMPDNZBCPDNUKUHULFQNZKZUMUPKZUNUORUHUIUJSUHUIUQUJUPBDEFGUPUAZHTU
      BUHUJURUIUPCDEFGUSHTUCAUPULUMDFUSHIUDUEBCDEFGHUFUG $.
      $( [22-Feb-2014] $)
  $}

  ${
    $d k x A $.  $d k x N $.  $d k x V $.  $d k x W $.  $d k x X $.
    $d k x Y $.
    lspvadd.v $e |- V = ( vbaseLMx ` W ) $.
    lspvadd.a $e |- A = ( vaddLMx ` W ) $.
    lspvadd.n $e |- N = ( LSpanLMx ` W ) $.
    $( The span of a vector sum is included in the span of its arguments. $)
    lspvaddLMOLD $p |- ( ( W e. LModLMx /\ X e. V /\ Y e. V )
       -> ( N ` { ( X A Y ) } ) C_ ( N ` { X , Y } ) ) $=
      ( vx vk wcel co csn cfv wceq wa eqid syl2anc syl3anc clmodLMOLD w3a cv wb
      cpr cvscaLMOLD simp1 lmodvaclLMOLD lspsnelLMOLD clsmLMOLD simpll1 simpll2
      cbs simpr simpll3 lmodvsdi1LMOLD syl112anc clssLMOLD wss snssd lspclLMOLD
      wrex lspsneliLMOLD lsmelvaliLMOLD syl32anc eqeltrd cun lsmsp2LMOLD fveq2i
      df-pr syl6eqr eleqtrd eleq1 syl5ibrcom rexlimdva expimpd sylbid ssrdv ) D
      UALZECLZFCLZUBZJEFAMZNBOZEFUEZBOZWBJUCZWDLZWGCLZWGKUCZWCDUFOZMZPZKDUMOZVB
      ZQZWGWFLZWBVSWCCLWHWPUDVSVTWAUGACDEFGHUHWKWGKWNBCDWCWNRZGWKRZIUISWBWIWOWQ
      WBWIQZWMWQKWNWTWJWNLZQZWQWMWLWFLXBWLENZBOZFNZBOZDUJOZMZWFXBWLWJEWKMZWJFWK
      MZAMZXHXBVSXAVTWAWLXKPVSVTWAWIXAUKZWTXAUNZVSVTWAWIXAULZVSVTWAWIXAUOZAWJWK
      WNCDEFWRGHWSUPUQXBVSXDDUROZLZXFXPLZXIXDLZXJXFLZXKXHLXLXBVSXCCUSZXQXLXBECX
      NUTZXPXCBCDGXPRZIVASXBVSXECUSZXRXLXBFCXOUTZXPXEBCDGYCIVASXBVSXAVTXSXLXMXN
      WJWKWNBCDEWRGWSIVCTXBVSXAWAXTXLXMXOWJWKWNBCDFWRGWSIVCTAXGXPXDXFDXIXJHYCXG
      RZVDVEVFXBXHXCXEVGZBOZWFXBVSYAYDXHYHPXLYBYEXGXCXEBCDGIYFVHTWEYGBEFVJVIVKV
      LWGWLWFVMVNVOVPVQVR $.
      $( [22-Feb-2014] $)
  $}

  ${
    lspsntri.v $e |- V = ( vbaseLMx ` W ) $.
    lspsntri.a $e |- A = ( vaddLMx ` W ) $.
    lspsntri.n $e |- N = ( LSpanLMx ` W ) $.
    lspsntri.p $e |- P = ( LSSumLMx ` W ) $.
    $( Triangle-type inequality for span of a singleton. $)
    lspsntriLMOLD $p |- ( ( W e. LModLMx /\ X e. V /\ Y e. V )
       -> ( N ` { ( X A Y ) } ) C_ ( ( N ` { X } ) P ( N ` { Y } ) ) ) $=
      ( clmodLMOLD wcel w3a co csn cfv cpr wss snssi lspvaddLMOLD wceq 3ad2ant2
      cun simp1 3ad2ant3 lsmsp2LMOLD syl3anc df-pr fveq2i syl6reqr sseqtrd ) EL
      MZFDMZGDMZNZFGAOPCQFGRZCQZFPZCQGPZCQBOZACDEFGHIJUAUPVAUSUTUDZCQZURUPUMUSD
      SZUTDSZVAVCUBUMUNUOUEUNUMVDUOFDTUCUOUMVEUNGDTUFBUSUTCDEHJKUGUHUQVBCFGUIUJ
      UKUL $.
      $( [24-Feb-2014] $)
  $}

  ${
    lspsntrim.v $e |- V = ( vbaseLMx ` W ) $.
    lspsntrim.s $e |- S = ( vsubLMx ` W ) $.
    lspsntrim.p $e |- P = ( LSSumLMx ` W ) $.
    lspsntrim.n $e |- N = ( LSpanLMx ` W ) $.
    $( Triangle-type inequality for span of a singleton of vector
       difference. $)
    lspsntrimLMOLD $p |- ( ( W e. LModLMx /\ X e. V /\ Y e. V )
        -> ( N ` { ( X S Y ) } ) C_ ( ( N ` { X } ) P ( N ` { Y } ) ) ) $=
      ( clmodLMOLD wcel w3a co csn cfv cvnLMOLD eqid 3adant2 sneqd wss syld3an3
      cvaddLMOLD fveq2d lmodvnegclLMOLD lspsntriLMOLD wceq lspsnnegLMOLD oveq2d
      lmodvsubnegLMOLD sseqtrd eqsstrd ) ELMZFDMZGDMZNZFGBOZPZCQFGERQZQZEUDQZOZ
      PZCQZFPCQZGPCQZAOZUQUSVDCUQURVCVBBUTDEFGHVBSZUTSZIUKUAUEUQVEVFVAPCQZAOZVH
      UNUOUPVADMZVEVLUBUNUPVMUOUTDEGHVJUFTVBACDEFVAHVIKJUGUCUQVKVGVFAUNUPVKVGUH
      UOUTCDEGHVJKUITUJULUM $.
      $( [25-Apr-2014] $)
  $}

  $( Define the class of all left vector spaces.  A left vector space is a
     division ring together with an Abelian group and a left scalar product
     connecting them.  Some authors call this a "left module over a division
     ring", reserving "vector space" for those where the division ring is
     commutative i.e. a field. $)
  df-lvecLMOLD $a |- LVecLMx = ( LModLMx i^i DivRing ) $.

  $( The predicate "is a left vector space". $)
  islvec2LMOLD $p |- ( W e. LVecLMx <-> ( W e. LModLMx /\ W e. DivRing ) ) $=
    ( clvecLMOLD wcel clmodLMOLD cdr cin wa df-lvecLMOLD eleq2i elin bitri ) AB
    CADEFZCADCAECGBLAHIADEJK $.
    $( [11-Nov-2013] $)

  $( A left vector space is a left module. $)
  lveclmodLMOLD $p |- ( W e. LVecLMx -> W e. LModLMx ) $=
    ( clvecLMOLD wcel clmodLMOLD cdr wa islvec2LMOLD simpl sylbi ) ABCADCZAECZF
    JAGJKHI $.
    $( [9-Dec-2013] $)

  $( A left vector space is a division ring. $)
  lvecdrngLMOLD $p |- ( W e. LVecLMx -> W e. DivRing ) $=
    ( clvecLMOLD wcel clmodLMOLD cdr wa islvec2LMOLD simpr sylbi ) ABCADCZAECZF
    KAGJKHI $.
    $( [17-Apr-2014] $)

  ${
    $d x w A r q $.  $d x w P r q $.  $d x w S r q $.  $d x w T r q $.
    $d x w V r q $.  $d x w W r q $.  $d K r q $.
    islvec.k $e |- K = ( Base ` W ) $.
    islvec.p $e |- P = ( +g ` W ) $.
    islvec.t $e |- T = ( .r ` W ) $.
    islvec.v $e |- V = ( vbaseLMx ` W ) $.
    islvec.a $e |- A = ( vaddLMx ` W ) $.
    islvec.s $e |- S = ( vscaLMx ` W ) $.
    islvec.u $e |- U = ( 1r ` W ) $.
    islvec.g $e |- G = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } $.
    $( The predicate "is a left vector space".  (Revised by FL,
       11-Nov-2013.) $)
    islvecLMOLD $p |- ( W e. LVecLMx <-> ( W e. DivRing /\ G e. Abel
        /\ A. q e. K A. r e. K A. x e. V A. w e. V
               ( ( ( r S w ) e. V
                 /\ ( r S ( w A x ) ) = ( ( r S w ) A ( r S x ) )
                 /\ ( ( q P r ) S w ) = ( ( q S w ) A ( r S w ) )
               ) /\ ( ( ( q T r ) S w ) = ( q S ( r S w ) )
                 /\ ( U S w ) = w ) ) ) ) $=
      ( clvecLMOLD wcel clmodLMOLD cdr cin cabel cv co wceq w3a wa df-lvecLMOLD
      wral eleq2i crg elin islmodLMOLD biid anbi12i simpr simpl2 simpl3 drngrng
      3jca 3ad2ant1 simp2 simp3 simp1 jca impbii 3bitri bitri ) KUBUCKUDUEUFZUC
      ZKUEUCZHUGUCZLUHZBUHZEUIZJUCVRVSAUHZCUIEUIVTVRWAEUICUIUJMUHZVRDUIVSEUIWBV
      SEUIVTCUIUJUKWBVRFUIVSEUIWBVTEUIUJGVSEUIVSUJULULBJUNAJUNLIUNMIUNZUKZUBVNK
      UMUOVOKUDUCZVPULKUPUCZVQWCUKZVPULZWDKUDUEUQWEWGVPVPABCDEFGHIJKLMNOPQRSTUA
      URVPUSUTWHWDWHVPVQWCWGVPVAWFVQWCVPVBWFVQWCVPVCVEWDWGVPWDWFVQWCVPVQWFWCKVD
      VFVPVQWCVGVPVQWCVHVEVPVQWCVIVJVKVLVM $.
      $( [11-Nov-2013] $) $( [21-Sep-2011] $)
  $}

  ${
    $d x y z A $.  $d q r u w x y z B $.  $d x y z P $.  $d x y z S $.
    $d x y z T $.  $d x U $.  $d u w x y z V $.  $d q r u w W $.
    $d q r u w x y z ph $.
    islvecd.b $e |- ( ph -> B = ( Base ` W ) ) $.
    islvecd.p $e |- ( ph -> P = ( +g ` W ) ) $.
    islvecd.t $e |- ( ph -> T = ( .r ` W ) ) $.
    islvecd.u $e |- ( ph -> U = ( 1r ` W ) ) $.
    islvecd.v $e |- ( ph -> V = ( vbaseLMx ` W ) ) $.
    islvecd.a $e |- ( ph -> A = ( vaddLMx ` W ) ) $.
    islvecd.s $e |- ( ph -> S = ( vscaLMx ` W ) ) $.
    islvecd.r $e |- ( ph -> W e. DivRing ) $.
    $( Abelian group operations $)
    islvecd.g $e |- ( ph -> G
          = { <. ( Base ` ndx ) , V >. , <. ( +g ` ndx ) , A >. } ) $.
    islvecd.l $e |- ( ph -> G e. Abel ) $.
    $( Scalar product operation $)
    islvecd.w $e |- ( ( ph /\ x e. B /\ y e. V ) -> ( x S y ) e. V ) $.
    islvecd.c $e |- ( ( ph /\ ( x e. B /\ y e. V /\ z e. V ) )
        -> ( x S ( y A z ) ) = ( ( x S y ) A ( x S z ) ) ) $.
    islvecd.d $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x P y ) S z ) = ( ( x S z ) A ( y S z ) ) ) $.
    islvecd.e $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x T y ) S z ) = ( x S ( y S z ) ) ) $.
    islvecd.f $e |- ( ( ph /\ x e. V ) -> ( U S x ) = x ) $.
    $( Properties that determine a left vector space. $)
    islvecdLMOLD $p |- ( ph -> W e. LVecLMx ) $=
      ( vr vw vu vq cdr cnx cbs cfv cvbaseLMOLD cop cplusg cvaddLMOLD cpr cabel
      wcel cv cvscaLMOLD co wceq w3a cmulr cur wa wral clvecLMOLD simp2r simp3r
      simp1 weq oveq1 eleq1d imbi2d oveq2 3expb expcom vtocl2ga impcom syl12anc
      wi simp3l oveq12d eqeq12d oveq2d oveq1d vtocl3ga syl13anc simp2l 3jca id1
      vtoclga sylc jca32 3expia ralrimivv ralrimivva opeq2d preq12d eqtrd oveqd
      eleq12d eqidd oveq123d 3anbi123d eqeq1d anbi12d 3anbi23d eqid islvecLMOLD
      raleqbidv mpbid sylibr ) AMUMVCZUNUOUPZMUQUPZURZUNUSUPZMUTUPZURZVAZVBVCZU
      IVDZUJVDZMVEUPZVFZYBVCZYIYJUKVDZYEVFZYKVFZYLYIYNYKVFZYEVFZVGZULVDZYIMUSUP
      ZVFZYJYKVFZYTYJYKVFZYLYEVFZVGZVHZYTYIMVIUPZVFZYJYKVFZYTYLYKVFZVGZMVJUPZYJ
      YKVFZYJVGZVKZVKZUJYBVLZUKYBVLZUIMUOUPZVLZULUUTVLZVHZMVMVCAXTKVBVCZYIYJHVF
      ZLVCZYIYJYNEVFZHVFZUVEYIYNHVFZEVFZVGZYTYIGVFZYJHVFZYTYJHVFZUVEEVFZVGZVHZY
      TYIIVFZYJHVFZYTUVEHVFZVGZJYJHVFZYJVGZVKZVKZUJLVLZUKLVLZUIFVLZULFVLZVHUVCA
      XTUVDUWIUAUCAUWGULUIFFAYTFVCZYIFVCZVKZVKUWEUKUJLLAUWLYNLVCZYJLVCZVKZUWEAU
      WLUWOVHZUVQUWAUWCUWPUVFUVKUVPUWPAUWKUWNUVFAUWLUWOVPZAUWJUWKUWOVNZAUWLUWMU
      WNVOZUWKUWNVKAUVFABVDZCVDZHVFZLVCZWGAYIUXAHVFZLVCZWGAUVFWGBCYIYJFLBUIVQZU
      XCUXEAUXFUXBUXDLUWTYIUXAHVRZVSVTCUJVQZUXEUVFAUXHUXDUVELUXAYJYIHWAZVSVTAUW
      TFVCZUXALVCZVKUXCAUXJUXKUXCUDWBWCWDWEWFUWPAUWKUWNUWMUVKUWQUWRUWSAUWLUWMUW
      NWHUWKUWNUWMVHAUVKAUWTUXADVDZEVFZHVFZUXBUWTUXLHVFZEVFZVGZWGAYIUXMHVFZUXDY
      IUXLHVFZEVFZVGZWGAYIYJUXLEVFZHVFZUVEUXSEVFZVGZWGAUVKWGBCDYIYJYNFLLUXFUXQU
      YAAUXFUXNUXRUXPUXTUWTYIUXMHVRUXFUXBUXDUXOUXSEUXGUWTYIUXLHVRWIWJVTUXHUYAUY
      EAUXHUXRUYCUXTUYDUXHUXMUYBYIHUXAYJUXLEVRWKUXHUXDUVEUXSEUXIWLWJVTDUKVQZUYE
      UVKAUYFUYCUVHUYDUVJUYFUYBUVGYIHUXLYNYJEWAWKUYFUXSUVIUVEEUXLYNYIHWAWKWJVTA
      UXJUXKUXLLVCZVHUXQUEWCWMWEWNUWPAUWJUWKUWNUVPUWQAUWJUWKUWOWOZUWRUWSUWJUWKU
      WNVHZAUVPAUWTUXAGVFZUXLHVFZUXOUXAUXLHVFZEVFZVGZWGAYTUXAGVFZUXLHVFZYTUXLHV
      FZUYLEVFZVGZWGAUVLUXLHVFZUYQUXSEVFZVGZWGAUVPWGBCDYTYIYJFFLBULVQZUYNUYSAVU
      CUYKUYPUYMUYRVUCUYJUYOUXLHUWTYTUXAGVRWLVUCUXOUYQUYLEUWTYTUXLHVRWLWJVTCUIV
      QZUYSVUBAVUDUYPUYTUYRVUAVUDUYOUVLUXLHUXAYIYTGWAWLVUDUYLUXSUYQEUXAYIUXLHVR
      ZWKWJVTDUJVQZVUBUVPAVUFUYTUVMVUAUVOUXLYJUVLHWAVUFUYQUVNUXSUVEEUXLYJYTHWAU
      XLYJYIHWAZWIWJVTAUXJUXAFVCUYGVHZUYNUFWCWMWEWNWPUWPAUWJUWKUWNUWAUWQUYHUWRU
      WSUYIAUWAAUWTUXAIVFZUXLHVFZUWTUYLHVFZVGZWGAYTUXAIVFZUXLHVFZYTUYLHVFZVGZWG
      AUVRUXLHVFZYTUXSHVFZVGZWGAUWAWGBCDYTYIYJFFLVUCVULVUPAVUCVUJVUNVUKVUOVUCVU
      IVUMUXLHUWTYTUXAIVRWLUWTYTUYLHVRWJVTVUDVUPVUSAVUDVUNVUQVUOVURVUDVUMUVRUXL
      HUXAYIYTIWAWLVUDUYLUXSYTHVUEWKWJVTVUFVUSUWAAVUFVUQUVSVURUVTUXLYJUVRHWAVUF
      UXSUVEYTHVUGWKWJVTAVUHVULUGWCWMWEWNUWPUWNAUWCUWSUWQAJUWTHVFZUWTVGZWGAUWCW
      GBYJLBUJVQZVVAUWCAVVBVUTUWBUWTYJUWTYJJHWAVVBWQWJVTAUWTLVCVVAUHWCWRWSWTXAX
      BXCWPAUVDYHUWIUVBXTAKYGVBAKYALURZYDEURZVAYGUBAVVCYCVVDYFALYBYARXDAEYEYDSX
      DXEXFVSAUWHUVAULFUUTNAUWGUUSUIFUUTNAUWFUURUKLYBRAUWEUUQUJLYBRAUVQUUGUWDUU
      PAUVFYMUVKYSUVPUUFAUVEYLLYBAHYKYIYJTXGZRXHAUVHYPUVJYRAYIYIUVGYOHYKTAYIXIA
      EYEYJYNSXGXJAUVEYLUVIYQEYESVVEAHYKYIYNTXGXJWJAUVMUUCUVOUUEAUVLUUBYJYJHYKT
      AGUUAYTYIOXGAYJXIZXJAUVNUUDUVEYLEYESAHYKYTYJTXGVVEXJWJXKAUWAUULUWCUUOAUVS
      UUJUVTUUKAUVRUUIYJYJHYKTAIUUHYTYIPXGVVFXJAYTYTUVEYLHYKTAYTXIVVEXJWJAUWBUU
      NYJAJUUMYJYJHYKTQVVFXJXLXMXMXQXQXQXQXNXRUKUJYEUUAYKUUHUUMYGUUTYBMUIULUUTX
      OUUAXOUUHXOYBXOYEXOYKXOUUMXOYGXOXPXS $.
      $( [6-Oct-2013] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x O $.  $d x y z P $.  $d x y z S $.
    $d x y z T $.  $d x U $.  $d x y z V $.  $d x y z ph $.
    islvec2d.b $e |- ( ph -> B = ( Base ` W ) ) $.
    islvec2d.p $e |- ( ph -> P = ( +g ` W ) ) $.
    islvec2d.t $e |- ( ph -> T = ( .r ` W ) ) $.
    islvec2d.u $e |- ( ph -> U = ( 1r ` W ) ) $.
    islvec2d.v $e |- ( ph -> V = ( vbaseLMx ` W ) ) $.
    islvec2d.a $e |- ( ph -> A = ( vaddLMx ` W ) ) $.
    islvec2d.s $e |- ( ph -> S = ( vscaLMx ` W ) ) $.
    islvec2d.r $e |- ( ph -> W e. DivRing ) $.
    $( Abelian group (vector) addition $)
    islvec2d.h $e |- ( ( ph /\ x e. V /\ y e. V ) -> ( x A y ) e. V ) $.
    islvec2d.i $e |- ( ( ph /\ ( x e. V /\ y e. V /\ z e. V ) )
        -> ( ( x A y ) A z ) = ( x A ( y A z ) ) ) $.
    islvec2d.j $e |- ( ph -> O e. V ) $.
    islvec2d.k $e |- ( ( ph /\ x e. V ) -> ( O A x ) = x ) $.
    islvec2d.l $e |- ( ( ph /\ x e. V ) -> N e. V ) $.
    islvec2d.m $e |- ( ( ph /\ x e. V ) -> ( N A x ) = O ) $.
    islvec2d.n $e |- ( ( ph /\ x e. V /\ y e. V ) -> ( x A y ) = ( y A x ) ) $.
    $( Scalar product operations $)
    islvec2d.w $e |- ( ( ph /\ x e. B /\ y e. V ) -> ( x S y ) e. V ) $.
    islvec2d.c $e |- ( ( ph /\ ( x e. B /\ y e. V /\ z e. V ) )
        -> ( x S ( y A z ) ) = ( ( x S y ) A ( x S z ) ) ) $.
    islvec2d.d $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x P y ) S z ) = ( ( x S z ) A ( y S z ) ) ) $.
    islvec2d.e $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x T y ) S z ) = ( x S ( y S z ) ) ) $.
    islvec2d.f $e |- ( ( ph /\ x e. V ) -> ( U S x ) = x ) $.
    $( Properties that determine a left vector space.  The hypotheses of this
       version of ~ islvecdLMOLD include all explicit properties of the vector
       space so that a separate proof of the Abelian group of vectors is not
       required.  Note that the negative element ` N ` is a function of ` x `
       (i.e. allows ` x ` as a free variable). $)
    islvec2dLMOLD $p |- ( ph -> W e. LVecLMx ) $=
      ( cnx cbs cfv cop cplusg cpr eqidd cvv wcel wceq cvbaseLMOLD fvex eqeltrd
      a1i eqid grpbase syl cvaddLMOLD grpplusg prex isgrpd isabld islvecdLMOLD
      ) ABCDEFGHIJUOUPUQMURZUOUSUQEURZUTZMNOPQRSTUAUBAVTVAABCMEVTABCDMEVTKLAMVB
      VCMVTUPUQVDAMNVEUQZVBSWAVBVCANVEVFVHVGMEVTVBVTVIZVJVKZAEVBVCEVTUSUQVDAENV
      LUQZVBTWDVBVCANVLVFVHVGMEVTVBWBVMVKZVTVBVCAVRVSVNVHUCUDUEUFUGUHVOWCWEUIVP
      UJUKULUMUNVQ $.
      $( [6-Oct-2013] $)
  $}

  ${
    lspsnvs.k $e |- K = ( Base ` W ) $.
    lspsnvs.v $e |- V = ( vbaseLMx ` W ) $.
    lspsnvs.t $e |- T = ( vscaLMx ` W ) $.
    lspsnvs.o $e |- O = ( 0g ` W ) $.
    lspsnvs.n $e |- N = ( LSpanLMx ` W ) $.
    $( A non-zero scalar product does not change the span of a singleton. $)
    lspsnvsLMOLD $p |- ( ( W e. LVecLMx /\ ( R e. K /\ R =/= O ) /\ X e. V )
        -> ( N ` { ( R T X ) } ) = ( N ` { X } ) ) $=
      ( wcel co csn cfv syl3anc wceq eqid clvecLMOLD wne wa clmodLMOLD 3ad2ant1
      lveclmodLMOLD simp2l simp3 lspsnvsiLMOLD cinvr cmulr lvecdrngLMOLD simp2r
      w3a wss drnginvrl oveq1d drnginvrcl lmodvsassLMOLD syl121anc lmodvs1LMOLD
      cur cdr syl2anc 3eqtr3rd sneqd fveq2d lmodvsclLMOLD eqsstrd eqssd ) GUANZ
      ACNZAEUBZUCZHFNZUNZAHBOZPDQZHPZDQZVPGUDNZVLVOVRVTUOVKVNWAVOGUFUEZVKVLVMVO
      UGZVKVNVOUHZABCDFGHIJKMUIRVPVTAGUJQZQZVQBOZPZDQZVRVPVSWHDVPHWGVPWFAGUKQZO
      ZHBOZGVBQZHBOZWGHVPWKWMHBVPGVCNZVLVMWKWMSVKVNWOVOGULUEZWCVKVLVMVOUMZCGWJW
      MWEAEILWJTZWMTZWETZUPRUQVPWAWFCNZVLVOWLWGSWBVPWOVLVMXAWPWCWQCGWEAEILWTURR
      ZWCWDWFABWJCFGHIWRJKUSUTVPWAVOWNHSWBWDBWMFGHJKWSVAVDVEVFVGVPWAXAVQFNZWIVR
      UOWBXBVPWAVLVOXCWBWCWDABCFGHIJKVHRWFBCDFGVQIJKMUIRVIVJ $.
      $( [23-Apr-2014] $)
  $}

  ${
    $d k v w N $.  $d k l v w S $.  $d k l v w U $.  $d k l v w V $.
    $d k l v w W $.  $d k l v w X $.  $d k l v w Z $.
    lspsnat.v $e |- V = ( vbaseLMx ` W ) $.
    lspsnat.z $e |- Z = ( 0vLMx ` W ) $.
    lspsnat.s $e |- S = ( LSubSpLMx ` W ) $.
    lspsnat.n $e |- N = ( LSpanLMx ` W ) $.
    $( There is no subspace strictly between the zero subspace and the span of
       a vector (i.e. a 1-dimensional subspace is an atom).  (Analog of
       ~ h1datomi .) $)
    lspsnatLMOLD $p |- ( ( ( W e. LVecLMx /\ U e. S /\ X e. V ) /\
       U C_ ( N ` { X } ) ) -> ( U = ( N ` { X } ) \/ U = { Z } ) ) $=
      ( wcel cfv wss wa wceq syl syl2anc co eqid vw vk clvecLMOLD w3a csn wi wo
      wne simp2 3expia clmodLMOLD simpll1 lveclmodLMOLD simpll2 lssssLMOLD wrex
      cv wb simpl1 simpl2 lssne0LMOLD simp3l sseldd cvscaLMOLD cbs lspsnelLMOLD
      simp11 simp13 simpr syl6bi cinvr cmulr simp3 oveq2d simp1l1 lvecdrngLMOLD
      cur cdr c0g simp1rr simpl3 oveq1d adantr simp1l3 lmod0vsLMOLD necon3d mpd
      3eqtrd drnginvrcl syl3anc lmodvsassLMOLD syl121anc drnginvrl lmodvs1LMOLD
      3eqtr2d eqtrd simp1l2 simp1rl lssvsclLMOLD syl22anc eqeltrrd 3exp 3adant2
      ex rexlimdv syld exp3a sylbid imp lspssLMOLD lspidLMOLD sseqtrd jcad eqss
      snssd syl6ibr necon1d neor sylibr ) EUCLZBALZFDLZUDZBFUEZCMZNZOZBYEUHBGUE
      ZPZUFBYEPZYIUGYGBYHBYEYGBYHUHZYFYEBNZOYJYGYKYFYLYCYFYKYFYCYFYKUIUJYGYKYLY
      GYKOZYEBCMZBYMEUKLZBDNZYDBNYEYNNYMXTYOXTYAYBYFYKULZEUMZQZYMXTYAYPYQXTYAYB
      YFYKUNZABDEUCHJUORYMFBYGYKFBLZYGYKUAUQZGUHZUABUPZUUAYGYOYAYKUUDURYGXTYOXT
      YAYBYFUSYRQXTYAYBYFUTUAAEBGIJVARYGUUCUUAUABYGUUBBLZUUCUUAYCYFUUEUUCOZUUAY
      CYFUUFUDZUUBYELZUUAUUGBYEUUBYCYFUUFUIYCYFUUEUUCVBVCUUGUUHUUBUBUQZFEVDMZSZ
      PZUBEVEMZUPZUUAUUGUUHUUBDLZUUNOZUUNUUGYOYBUUHUUPURUUGXTYOXTYAYBYFUUFVGYRQ
      XTYAYBYFUUFVHUUJUUBUBUUMCDEFUUMTZHUUJTZKVFRUUOUUNVIVJYCUUFUUNUUAUFYFYCUUF
      OZUULUUAUBUUMUUSUUIUUMLZUULUUAUUSUUTUULUDZUUIEVKMZMZUUBUUJSZFBUVAUVDEVQMZ
      FUUJSZFUVAUVDUVCUUKUUJSZUVCUUIEVLMZSZFUUJSZUVFUVAUUBUUKUVCUUJUUSUUTUULVMV
      NUVAYOUVCUUMLZUUTYBUVJUVGPUVAXTYOXTYAYBUUFUUTUULVOZYRQZUVAEVRLZUUTUUIEVSM
      ZUHZUVKUVAXTUVNUVLEVPQZUUSUUTUULUIZUVAUUCUVPUUEUUCYCUUTUULVTUVAUUIUVOUUBG
      UVAUUIUVOPZUUBGPUVAUVSOZUUBUUKUVOFUUJSZGUUSUUTUULUVSWAUVTUUIUVOFUUJUVAUVS
      VIWBUVTYOYBUWAGPUVAYOUVSUVMWCUVAYBUVSXTYAYBUUFUUTUULWDZWCUUJUVODEFGUVOTZH
      UURIWERWHXDWFWGZUUMEUVBUUIUVOUUQUWCUVBTZWIWJZUVRUWBUVCUUIUUJUVHUUMDEFUUQU
      VHTZHUURWKWLUVAUVIUVEFUUJUVAUVNUUTUVPUVIUVEPUVQUVRUWDUUMEUVHUVEUVBUUIUVOU
      UQUWCUWGUVETZUWEWMWJWBWOUVAYOYBUVFFPUVMUWBUUJUVEDEFHUURUWHWNRWPUVAYOYAUVK
      UUEUVDBLUVMXTYAYBUUFUUTUULWQUWFUUEUUCYCUUTUULWRUUMAUUJBEUVCUUBUUQUURJWSWT
      XAXBXEXCXFWGUJXGXEXHXIXOYDBCDEHKXJWJYMYOYAYNBPYSYTABCEJKXKRXLXDXMBYEXNXPX
      QYIBYEXRXS $.
      $( [20-Apr-2014] $)

    $( There is no subspace strictly between the zero subspace and the span of
       a vector (i.e. a 1-dimensional subspace is an atom).  (Analog of
       ~ h1datomi .) $)
    lspsnatOLDLMOLD $p |- ( ( ( W e. LVecLMx /\ U e. S /\ X e. V )
             /\ U C_ ( N ` { X } ) )
         -> ( U = ( N ` { X } ) \/ U = { Z } ) ) $=
      ( vw wcel cfv wa wceq syl syl2anc co eqid vk vv vl clvecLMOLD w3a csn wss
      wne cv wn wex clmodLMOLD simpl1 lveclmodLMOLD simpl2 lss0ssLMOLD biantrud
      eqss syl6rbbr necon3abid nss syl6bb elsn necon3bbii anbi2i cvscaLMOLD cbs
      wrex simplr simprl sseldd wb simpll1 lspsnelLMOLD simpr syl6bi mpd simp1r
      simpll3 simp11 simp13 cinvr simpl11 cdr c0g lvecdrngLMOLD simpl3l simpl2r
      wi cmulr simp13r simp3 oveq1d simp111 simp113 lmod0vsLMOLD 3eqtrd necon3d
      3expia drnginvrcl syl3anc simpl12 lsselLMOLD lmodvsassLMOLD syl121anc cur
      simpl2l simp3r oveq2d simp3l simp2r simpl3r simpl13 ex lmodvs1LMOLD eqtrd
      drnginvrl 3eqtr2d adantr eqtr2d crg drngrng lssvsclLMOLD syl22anc eqeltrd
      rngcl eleq1a syl6 rexlimdv syld 3adant1r ssrdv eqssd exp3a syl5bi exlimdv
      sylbid necon1bd orrd ) EUDMZBAMZFDMZUEZBFUFCNZUGZOZBUUDPZBGUFZPZUUFUUGBUU
      HUUFBUUHUHZLUIZBMZUUKUUHMZUJZOZLUKZUUGUUFUUJBUUHUGZUJUUPUUFUUQBUUHUUFUUQU
      UQUUHBUGZOUUIUUFUURUUQUUFEULMZUUAUURUUFYTUUSYTUUAUUBUUEUMEUNZQYTUUAUUBUUE
      UOAEBGIJUPRUQBUUHURUSUTLBUUHVAVBUUFUUOUUGLUUOUULUUKGUHZOZUUFUUGUUNUVAUULU
      UMUUKGLGVCVDVEUUFUVBUUGUUFUVBOZUUKUAUIZFEVFNZSZPZUAEVGNZVHZUUGUVCUUKUUDMZ
      UVIUVCBUUDUUKUUCUUEUVBVIUUFUULUVAVJVKUVCUVJUUKDMZUVIOZUVIUVCUUSUUBUVJUVLV
      LUVCYTUUSYTUUAUUBUUEUVBVMUUTQYTUUAUUBUUEUVBVSUVEUUKUAUVHCDEFUVHTZHUVETZKV
      NRUVKUVIVOVPVQUVCUVGUUGUAUVHUVCUVDUVHMZUVGUUGUUFUVBUVOUVGOZUUGUUFUVBUVPUE
      ZBUUDUUCUUEUVBUVPVRUVQUBUUDBUUCUVBUVPUBUIZUUDMZUVRBMZWIUUEUUCUVBUVPUEZUVS
      UVRUCUIZFUVESZPZUCUVHVHZUVTUWAUVSUVRDMZUWEOZUWEUWAUUSUUBUVSUWGVLUWAYTUUSY
      TUUAUUBUVBUVPVTZUUTQZYTUUAUUBUVBUVPWAZUVEUVRUCUVHCDEFUVMHUVNKVNRUWFUWEVOV
      PUWAUWDUVTUCUVHUWAUWBUVHMZUWCBMZUWDUVTWIUWAUWKUWLUWAUWKOZUWCUWBUVDEWBNZNZ
      EWJNZSZUUKUVESZBUWMUWRUWBUWOUUKUVESZUVESZUWCUWMUUSUWKUWOUVHMZUVKUWRUWTPUW
      MYTUUSYTUUAUUBUVBUVPUWKWCZUUTQZUWAUWKVOZUWMEWDMZUVOUVDEWENZUHZUXAUWMYTUXE
      UXBEWFZQZUVOUVGUUCUVBUWKWGUWMUVAUXGUULUVAUUCUVPUWKWHUWMUVDUXFUUKGUWAUWKUV
      DUXFPZUUKGPZUWAUWKUXJUEZUUKUVFUXFFUVESZGUVOUVGUUCUVBUWKUXJWKUXLUVDUXFFUVE
      UWAUWKUXJWLWMUXLUUSUUBUXMGPZUXLYTUUSYTUUAUUBUVBUVPUWKUXJWNUUTQYTUUAUUBUVB
      UVPUWKUXJWOUVEUXFDEFGUXFTZHUVNIWPZRWQWSWRVQUVHEUWNUVDUXFUVMUXOUWNTZWTZXAU
      WMYTUUAUULUVKUXBYTUUAUUBUVBUVPUWKXBZUULUVAUUCUVPUWKXGZABDEUUKUDHJXCXAUWBU
      WOUVEUWPUVHDEUUKUVMUWPTZHUVNXDXEUWAUWTUWCPUWKUWAUWSFUWBUVEUWAUWSEXFNZFUVE
      SZFUWAUWSUWOUVFUVESZUWOUVDUWPSZFUVESZUYCUWAUUKUVFUWOUVEUUCUVBUVOUVGXHXIUW
      AUUSUXAUVOUUBUYFUYDPUWIUWAUXEUVOUXGUXAUWAYTUXEUWHUXHQZUUCUVBUVOUVGXJZUWAU
      VAUXGUUCUULUVAUVPXKUWAUVDUXFUUKGUWAUXJUXKUWAUXJOZUUKUVFUXMGUVOUVGUUCUVBUX
      JXLUYIUVDUXFFUVEUWAUXJVOWMUYIUUSUUBUXNUYIYTUUSYTUUAUUBUVBUVPUXJWCUUTQYTUU
      AUUBUVBUVPUXJXMUXPRWQXNWRVQZUXRXAZUYHUWJUWOUVDUVEUWPUVHDEFUVMUYAHUVNXDXEU
      WAUYEUYBFUVEUWAUXEUVOUXGUYEUYBPUYGUYHUYJUVHEUWPUYBUWNUVDUXFUVMUXOUYAUYBTZ
      UXQXQXAWMXRUWAUUSUUBUYCFPUWIUWJUVEUYBDEFHUVNUYLXORXPXIXSXTUWMUUSUUAUWQUVH
      MZUULUWRBMUXCUXSUWMEYAMZUWKUXAUYMUWMUXEUYNUXIEYBQUXDUWAUXAUWKUYKXSUVHEUWP
      UWBUWOUVMUYAYFXAUXTUVHAUVEBEUWQUUKUVMUVNJYCYDYEXNUWCBUVRYGYHYIYJYKYLYMWSY
      NYIVQXNYOYPYQYRYS $.
      $( [20-Apr-1014] $)
  $}


