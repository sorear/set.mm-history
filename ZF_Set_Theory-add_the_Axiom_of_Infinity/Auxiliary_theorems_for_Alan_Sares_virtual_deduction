$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Auxiliary theorems for Alan Sare's virtual deduction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( ~ sbcorg with a 3-disjuncts.  This proof is ~ sbc3orgVD automatically
       translated and minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
    sbc3org $p |- ( A e. B -> ( [ A / x ] ( ph \/ ps \/ ch ) <->
                  ( [ A / x ] ph \/ [ A / x ] ps \/ [ A / x ] ch ) ) ) $=
      ( wcel w3o wsbc wo sbcorg df-3or bicomi sbcbii orbi1d 3bitr3d syl6bbr )
      EFGZABCHZDEIZADEIZBDEIZJZCDEIZJZUAUBUDHRABJZCJZDEIUFDEIZUDJTUEUFCDEFKUGSD
      EFSUGABCLMNRUHUCUDABDEFKOPUAUBUDLQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d x ps $.  $d x ch $.
    $( Closed form of ~ 19.21ai with 2 additional conjuncts having no
       occurences of the quantifying variable.  This proof is ~ 19.21a3con13vVD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    19.21a3con13v $p |- ( ( ph -> A. x ph ) ->
                        ( ( ps /\ ph /\ ch ) -> A. x ( ps /\ ph /\ ch ) ) ) $=
      ( wal wi w3a simp1 a1i ax-17 syl6 simp2 imim1i simp3 3jcad 19.26-3an
      syl6ibr ) AADEZFZBACGZBDEZRCDEZGTDESTUARUBSTBUATBFSBACHIBDJKTARBACLMSTCUB
      TCFSBACNICDJKOBACDPQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d B x $.  $d D x y $.
    $( ~ ra4sbc with two quantifying variables.  This proof is ~ ra4sbc2VD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    ra4sbc2 $p |- ( A e. B -> ( C e. D -> ( A. x e. B A. y e. D ph ->
                  [ C / y ] [ A / x ] ph ) ) ) $=
      ( wcel wral wsbc idd wi ra4sbc a1d sbcralg biimpd syl6d ee23 ) DEHZFGHZTA
      CGIZBEIZABDJZCGIZUCCFJSTKSTUBUABDJZUDSUBUELTUABDEMNSUEUDABCDGEOPQUCCFGMR
      $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d x y $.
    $( Substitution of a set variable for another set variable in a 3-conjunct
       formula.  Derived automatically from ~ sbcoreleleqVD .  (Contributed by
       Alan Sare, 31-Dec-2011.) $)
    sbcoreleleq $p |- ( A e. B -> ( [ A / y ] ( x e. y \/ y e. x \/ x = y ) <->
                      ( x e. A \/ A e. x \/ x = A ) ) ) $=
      ( wcel wel weq w3o wsbc cv wceq sbc3org wb sbcel2gv sbcel1gv eqsbc3r
      3orbi123 3impexpbicomi syl3c bitr4d ) CDEZABFZBAFZABGZHBCIUBBCIZUCBCIZUDB
      CIZHZAJZCEZCUIEZUICKZHZUBUCUDBCDLUAUEUJMZUFUKMZUGULMZUMUHMBUICDNBCUIDOBCD
      UIPUNUOUPUHUMUEUJUFUKUGULQRST $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( If a class is transitive and any two distinct elements of the class are
       E-comparable, then every element of that class is transitive.  Derived
       automatically from ~ tratrbVD .  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    tratrb $p |- ( ( Tr A /\ A. x e. A A. y e. A ( x e. y \/ y e. x \/ x = y )
                 /\ B e. A ) -> Tr B ) $=
      ( wtr wel weq w3o wral wcel w3a cv wa wi wal hbra1 19.21a3con13v ax-mp
      hbra2 wn wceq simpl a1i simpr pm3.2an3 ee22 en3lp con3 syl6mpi eleq2
      biimprcd syl6 pm3.2 ee23 en2lp wsbc simp3 wsb simp1 trel exp3a ee121
      ee122 ralcom2 3ad2ant2 ra4sbc2 sbid syl6ib sbcoreleleq biimpd sylsyld
      3ornot23 ex ee222 19.21ai dftr2 sylibr ) CEZABFZBAFZABGHZBCIZACIZDCJZKZVS
      BLZDJZMZALZDJZNZBOZAODEWEWLAWCWCAONWEWEAONWBACPWCVRWDAQRWEWKBWCWCBONWEWEB
      ONWAABCCSWCVRWDBQRWEWHDWIJZTZWIDUAZTZWJWMWOHZWJWEWHWMVSWGWMKZNZWRTWNWEWHV
      SWGWSWHVSNWEVSWGUBUCZWHWGNWEVSWGUDUCZVSWGWMUEUFWIWFDUGWMWRUHUIWEWHWOVSVTM
      ZNXBTWPWEWHVSWOVTXBWTWEWHWGWOVTNXAWOVTWGWIDWFUJUKULVSVTUMUNWIWFUOWOXBUHUI
      WEWDWHWABDUPZWQVRWCWDUQZWEWHXCAAURZXCWEWDWHWICJZWAACIBCIZXEXDWEVRWHVSWFCJ
      ZXFVRWCWDUSZWTWEVRWHWGWDXHXIXAXDVRWGWDXHCWFDUTVAVBVRVSXHXFCWIWFUTVAVCWCVR
      XGWDWAABCVDVEWABADCWICVFVBXCAVGVHWDXCWQABDCVIVJVKWNWPWQWJNWMWOWJVLVMVNVOV
      OABDVPVQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $( ~ ax-5 for a 3 element left-nested implication.  Derived automatically
       from ~ 3ax5VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3ax5 $p |- ( A. x ( ph -> ( ps -> ch ) ) -> ( A. x ph ->
               ( A. x ps -> A. x ch ) ) ) $=
      ( wi wal ax-5 syl6 ) ABCEZEDFADFIDFBDFCDFEAIDGBCDGH $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( An element of an ordinal class is ordinal.  Proposition 7.6 of
       [TakeutiZaring] p. 36.  This is an alternate proof of ~ ordelord using
       the Axiom of Regularity indirectly through ~ dford2 . dford2 is a weaker
       definition of ordinal number.  Given the Axiom of Regularity, it need
       not be assumed that ` _E Fr A ` because this is inferred by the Axiom of
       Regularity. ~ ordelordaxr is ~ ordelordaxrVD without virtual deductions
       and was automatically derived from ~ ordelordaxrVD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    ordelordaxr $p |- ( ( Ord A /\ B e. A ) -> Ord B ) $=
      ( vx vy word wtr wel weq w3o wral wcel wa dford2 ordtr adantr simprbi
      3orcomb 2ralbii sylib simpr tratrb syl111anc wss trss ee11 wi ssralv2 ex
      syl3c sylanbrc ) BEBFZCDGZCDHZDCGZIZDBJCBJZAEZBAKZLZCDBMUSAFZULUNUMIZDAJC
      AJZURUKUQUTURANOZUSUODAJCAJZVBUQVDURUQUTVDCDAMPOZUOVACDAAULUMUNQRSUQURTZC
      DABUAUBUSBAUCZVGVDUPUSUTURVGVCVFABUDUEZVHVEVGVGVDUPUFUOCDBABAUGUHUIUJ $.
      $( [18-Feb-2012] $)
  $}

  ${
    ee1111.1 $e |- ( ph -> ps ) $.
    ee1111.2 $e |- ( ph -> ch ) $.
    ee1111.3 $e |- ( ph -> th ) $.
    ee1111.4 $e |- ( ph -> ta ) $.
    ee1111.5 $e |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) $.
    $( Non-virtual deduction form of ~ e1111 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ps )  `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ch ) `
       <TR> <TD> h3::     <TD> ` |- ( ph -> th ) `
       <TR> <TD> h4::     <TD> ` |- ( ph -> ta ) `
       <TR> <TD> h5::    <TD> ` |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 6:1,5:  <TD> ` |- ( ph -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 7:6:    <TD> ` |- ( ch -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 8:2,7:  <TD> ` |- ( ph -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( ph -> ( th -> ( ta -> et ) ) ) `
       <TR> <TD> 10:9:    <TD> ` |- ( th -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 11:3,10: <TD> ` |- ( ph -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 12:11:   <TD> ` |- ( ph -> ( ta -> et ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ta -> ( ph -> et ) ) `
       <TR> <TD> 14:4,13: <TD> ` |- ( ph -> ( ph -> et ) ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> et )  `
       </TABLE> </HTML> $)
    ee1111 $p |- ( ph -> et ) $=
      ( wi syl com12 pm2.43i ) AFAEAFLJAEFAEFLZADAPLIADPADPLZACAQLHACQABCQLGKMN
      MONMONMO $.
      $( [18-Mar-2012] $)
  $}

  $( Logical equivalence of a 2-left-nested implication and a 1-left-nested
     implicated
     when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).
     The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual
     Deduction Proof (not shown) was minimized.  The minimized proof is
     shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ph -> ( ps -> ch ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ph -> ( ps -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ph -> ( ps -> ch ) ) -> ( ps `
     ` -> ( ph -> ch ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ps -> ( ph -> ch ) ) ) `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ph -> ch ) ) -> ( ph `
     ` -> ( ps -> ( ph -> ch ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` <-> ( ps -> ( ph -> ch ) ) ) `
     </TABLE> </HTML> $)
  pm2.43bgbi $p |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) <->
               ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.04 imim2i pm2.43 syl ax-1 impbii ) ABACDDZDZKLABCDZDZKLANDNKNABACE
    FAMGHABCEHKAIJ $.
    $( [18-Mar-2012] $)

  $( Logical equivalence of a 3-left-nested implication and a 2-left-nested
     implicated when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).  The following User's Proof is
     a Virtual Deduction proof completed automatically by the tools program
     completeusersproof.cmd, which invokes Mel O'Cat's mmj2 and Norm Megill's
     Metamath Proof Assistant.  The completed Virtual Deduction Proof (not
     shown) was minimized.  The minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ps -> ( ph -> ( ch -> th ) ) )  `
     ` -> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ch -> ( ph -> th ) ) ) )  `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) )  `
     ` -> ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  pm2.43cbi $p |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) <->
                   ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wi id com45 pm2.43bgbi biimpi syl pm2.04 imim2i ax-1 impbii ) ABCADEEZEZE
    ZPQBACDEZEZEZPQATEZTQABCADQFGUATABRHIJSOBACDKLJPAMN $.
    $( [18-Mar-2012] $)

  ${
    ee233.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee233.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee233.3 $e |- ( ph -> ( ps -> ( th -> et ) ) ) $.
    ee233.4 $e |- ( ch -> ( ta -> ( et -> ze ) ) ) $.
    $( Non-virtual deduction form of ~ e233 . (Contributed by Alan Sare,
       18-Mar-2012.)
       The following User's Proof is a Virtual Deduction proof completed
       automatically by the tools program completeusersproof.cmd, which invokes
       Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
       completed Virtual
       Deduction Proof (not shown) was minimized.  The minimized proof is
       shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ( ps -> ch ) )   `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ( ps -> ( th -> ta ) ) )  `
       <TR> <TD> h3::     <TD> ` |- ( ph -> ( ps -> ( th -> et ) ) )  `
       <TR> <TD> h4::     <TD> ` |- ( ch -> ( ta -> ( et -> ze ) ) ) `
       <TR> <TD> 5:1,4:   <TD> ` |- ( ph -> ( ps -> ( ta -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 6:5:     <TD> ` |- ( ta -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 7:2,6:   <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( et -> ze ) ) ) ) ) ) `
       <TR> <TD> 8:7:     <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( et  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( th -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 10:9:    <TD> ` |- ( ph -> ( ps -> ( th -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 11:10:   <TD> ` |- ( et -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> 12:3,11: <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( th -> ze ) ) ) ) ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( th  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 14:13:   <TD> ` |- ( th -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> ( ps -> ( th -> ze ) ) ) `
       </TABLE> </HTML> $)
    ee233 $p |- ( ph -> ( ps -> ( th -> ze ) ) ) $=
      ( wi syl6 com3r syl8 pm2.43cbi biimpi ax-mp com3l com4r ) DABDGLZLZLZLZUC
      BUDLZUDAUELZUEABDFUCJABDFGDABFGLZBDABUGLZLZLZLZUJAUKLZUKABDEUIIABEUGABCEU
      GLHKMNOULUKABDUHPQRUKUJBDAUGPQRSTOUFUEABDUBPQRUEUDBDAUAPQRUDUCDABGPQR $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ imbi12i . ~ imbi12 is ~ imbi12VD without virtual
     deductions and was automatically derived from ~ imbi12VD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi12 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ph -> ch )
               <-> ( ps -> th ) ) ) ) $=
    ( wb wi bi2 imim1d bi1 imim2d syl9 bi3 ee22 ) ABEZCDEZACFZBDFZFQPFPQENPBCFO
    QNBACABGHOCDBCDIJKNQADFOPNABDABIHODCACDGJKPQLM $.
    $( [18-Mar-2012] $)

  $( Join three logical equivalences to form equivalence of implications.
     ~ imbi13 is ~ imbi13VD without virtual deductions and was automatically
     derived from ~ imbi13VD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi13 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ta <-> et ) ->
               ( ( ph -> ( ch -> ta ) ) <-> ( ps -> ( th -> et ) ) ) ) ) ) $=
    ( wb wi imbi12 syl9r ) CDGEFGCEHZDFHZGABGAKHBLHGCDEFIABKLIJ $.
    $( [18-Mar-2012] $)

  ${
    $( Non-virtual deduction from of ~ e21 . ~ ee21 is ~ ee21VD without virtual
       deductions and was automatically derived from ~ ee21VD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Mar-2012.)  $)

    ee21.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee21.2 $e |- ( ph -> th ) $.
    ee21.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e21 without virtual deductions. $)
    ee21 $p |- ( ph -> ( ps -> ta ) ) $=
      ( a1d ee22 ) ABCDEFADBGIHJ $.
      $( [18-Mar-2012] $)
  $}

  $( Distribution of class substitution over a left-nested implication.
     Similar to ~ sbcimg . ~ sbcim2g is ~ sbcim2gVD without virtual deductions
     and was automatically derived from ~ sbcim2gVD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcim2g $p |- ( A e. B -> ( [ A / x ] ( ph -> ( ps -> ch ) ) <->
                ( [ A / x ] ph -> ( [ A / x ] ps -> [ A / x ] ch ) ) ) ) $=
    ( wcel wi wsbc wb sbcimg biimpd imbi2 biimpcd ee21 idd bi2 ee13 sylibrd
    impbid ) EFGZABCHZHDEIZADEIZBDEICDEIHZHZUAUCUDUBDEIZHZUGUEJZUFUAUCUHAUBDEFK
    ZLBCDEFKZUIUHUFUGUEUDMNOUAUFUHUCUAUIUFUDUEUGUKUAUFPUGUEQRUJST $.
    $( [18-Mar-2012] $)

  $( Implication form of ~ sbcbii . ~ sbcbi is ~ sbcbiVD without virtual
     deductions and was automatically derived from ~ sbcbiVD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcbi $p |- ( A e. B -> ( A. x ( ph <-> ps ) -> ( [ A / x ] ph <->
                  [ A / x ] ps ) ) ) $=
    ( wcel wb wal wsbc a4sbc sbcbidig sylibd ) DEFABGZCHMCDIACDIBCDIGMCDEJABCDE
    KL $.
    $( [18-Mar-2012] $)

  ${
    $d A x y z $.  $d B y z $.
    $( Formula-building inference rule for class substitution, substituting a
       class variable for the set variable of the transitivity predicate.
       ~ trsbc is ~ trsbcVD without virtual deductions and was automatically
       derived from ~ trsbcVD using the tools program
       translate..without..overwriting.cmd and Metamath's minimize command.
       (Contributed by Alan Sare, 18-Mar-2012.) $)
    trsbc $p |- ( A e. B -> ( [ A / x ] Tr x <-> Tr A ) ) $=
      ( vz vy wcel cv wtr wsbc wel wa wi wal dftr2 sbcbii sbcalg pm3.31 pm3.3
      impbii sbcim2g wb wceq biidd sbcieg sbcel2gv imbi13 syl3c bitrd syl6bb
      bitr3d albidv syl6bbr ) BCFZAGZHZABIDEJZEAJZKDAJZLZEMZDMZABIZBHZUOVAABCDE
      UNNOUMVBUPEGZBFZKDGZBFZLZEMZDMZVCUMVBUTABIZDMVJUTDABCPUMVKVIDUMVKUSABIZEM
      VIUSEABCPUMVLVHEUMUPUQURLLZABIZVLVHVMUSABCVMUSUPUQURQUPUQURRSOUMVNUPVEVGL
      LZVHUMVNUPABIZUQABIZURABIZLLZVOUPUQURABCTUMVPUPUAVQVEUAVRVGUAVSVOUAUPUPAB
      CUNBUBUPUCUDAVDBCUEAVFBCUEVPUPVQVEVRVGUFUGUHVOVHUPVEVGQUPVEVGRSUIUJUKUHUK
      UHDEBNULUH $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee33.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee33.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee33.3 $e |- ( th -> ( ta -> et ) ) $.
    $( Non-virtual deduction form of ~ e33 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::   <TD> ` |- ( ph -> ( ps -> ( ch -> th ) ) )  `
       <TR> <TD> h2::   <TD> ` |- ( ph -> ( ps -> ( ch -> ta ) ) )  `
       <TR> <TD> h3::   <TD> ` |- ( th -> ( ta -> et ) ) `
       <TR> <TD> 4:1,3: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ta -> et ) ) ) ) `
       <TR> <TD> 5:4:   <TD> ` |- ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> 6:2,5: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ph -> ( ps -> `
       ` ( ch -> et ) ) ) ) ) ) `
       <TR> <TD> 7:6:   <TD> ` |- ( ps -> ( ch -> ( ph -> ( ps -> ( ch -> `
       ` et ) ) ) ) ) `
       <TR> <TD> 8:7:   <TD> ` |- ( ch -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> qed:8: <TD> ` |- ( ph -> ( ps -> ( ch -> et ) ) ) `
       </TABLE> </HTML> $)
    ee33 $p |- ( ph -> ( ps -> ( ch -> et ) ) ) $=
      ( wi syl8 com4r pm2.43cbi mpbi ) CABCFJZJZJZJZQBRJZRASJSABCEQHABCEFABCDEF
      JGIKLKABCPMNBCAOMNCABFMN $.
      $( [18-Mar-2012] $)
  $}

  ${
    $d A q x y z $.
    $( The union of a class of transitive sets is transitive.  Alternate proof
       of ~ truni . ~ truniALT is ~ truniALTVD without virtual deductions and
       was automatically derived from ~ truniALTVD using the tools program
       translate..without..overwriting.cmd and Metamath's minimize command.
       (Contributed by Alan Sare, 18-Mar-2012.) $)
    truniALT $p |- ( A. x e. A Tr x -> Tr U. A ) $=
      ( vz vy vq cv wtr wral wel cuni wcel wa wi wal wex simpr a1i eluni
      syl6ib simpl a1i12 wsb ra4sbc com12 syl6d trsbc biimpd ee33 trel
      exp3acom3r ee233 elunii ex 19.21adv 19.23v mpdd 19.21aivv dftr2 sylibr )
      AFGZABHZCDIZDFZBJZKZLZCFZVDKZMZDNCNVDGVAVICDVAVFDEIZEFZBKZLZEOZVHVAVFVEVN
      VFVEMVAVBVEPQEVCBRSVAVFVMVHMZENVNVHMVAVFVOEVAVFVMCEIZVLVHVAVFVBVMVJVKGZVP
      VFVBMVAVBVETQVAVFVMVJMVJVLTUAVAVFVMVLUTAEUBZVQVAVFVMVLMVJVLPUAZVAVFVMVLVR
      VSVLVAVRUTAVKBUCUDUEVLVRVQAVKBUFUGUHVQVBVJVPVKVGVCUIUJUKVSVPVLVHVGVKBULUM
      UHUNVMVHEUOSUPUQCDVDURUS $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee10.1 $e |- ( ph -> ps ) $.
    ee10.2 $e |- ch $.
    ee10.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( ~ e10 without virtual deductions. $)
    ee10 $p |- ( ph -> th ) $=
      ( a1i ee11 ) ABCDECAFHGI $.
      $( [25-Jul-2011] $)
  $}

  ${
    iin1.1 $e |- ( ph -> ps ) $.
    $( ~ in1 without virtual deductions. $)
    iin1 $p |- ( ph -> ps ) $=
      (  ) C $.
      $( [23-Jul-2011] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d D y $.  $d x y $.
    $( Distribute proper substitution through a subclass relation.  This
       theorem was automatically derived from ~ sbcssVD .  (Contributed by Alan
       Sare, 22-Jul-2012.) $)
    sbcss $p |- ( A e. B -> ( [ A / x ] C C_ D <->
      [_ A / x ]_ C C_ [_ A / x ]_ D ) ) $=
      ( vy wcel wss wsbc csb wb cv wi wal id sbcel2g syl imbi12 sylc sbcimg
      bibi1 biimprcd 19.21aiv albi sbcalg dfss2 ax-gen sbcbi ee10 biantr ex
      iin1 ) BCGZDEHZABIZABDJZABEJZHZKZUMUOFLZUPGZUTUQGZMZFNZKZURVDKZUSUMUTDGZU
      TEGZMZFNZABIZVDKZUOVKKZVEUMVIABIZFNZVDKZVKVOKZVLUMVNVCKZFNVPUMVRFUMVGABIZ
      VHABIZMZVCKZVNWAKZVRUMVSVAKZVTVBKZWBUMUMWDUMOZABUTDCPQUMUMWEWFABUTECPQVSV
      AVTVBRSUMUMWCWFVGVHABCTQWCVRWBVNWAVCUAUBSUCVNVCFUDQUMUMVQWFVIFABCUEQVQVLV
      PVKVOVDUAUBSUMUMUNVJKZANVMWFWGAFDEUFUGUNVJABCUHUIVMVEVLUOVKVDUAUBSFUPUQUF
      VEVFUSUOVDURUJUKUIUL $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d D y $.  $d x y $.
    $( Distribute proper substitution through an intersection relation.  This
       theorem was automatically derived from ~ sbcinVD .  (Contributed by Alan
       Sare, 22-Jul-2012.) $)
    sbcin $p |- ( A e. B -> [_ A / x ]_ ( C i^i D ) =
                  ( [_ A / x ]_ C i^i [_ A / x ]_ D ) ) $=
      ( vy wcel cin csb wceq cv wa cab wsbc id wal df-in ax-gen a4sbc ee10
      sbceqdig biimpd sylc csbabg syl eqeq1 biimprd wb sbcang sbcel2g pm4.38
      ex bibi1 19.21aiv eq2ab biimpri eqeq2 biimprcd iin1 ) BCGZABDEHZIZABDIZAB
      EIZHZJZUTVBFKZVCGZVGVDGZLZFMZJZVEVKJZVFUTVBVGDGZVGEGZLZABNZFMZJZVRVKJZVLU
      TVBABVPFMZIZJZWBVRJZVSUTUTVAWAJZABNZWCUTOZUTUTWEAPWFWGWEAFDEQRWEABCSTUTWF
      WCABVAWACUAUBUCUTUTWDWGVPAFBCUDUEWCVSWDVBWBVRUFUGUCUTVQVJUHZFPZVTUTWHFUTV
      QVNABNZVOABNZLZUHZWLVJUHZWHUTUTWMWGVNVOABCUIUEUTWJVHUHZWKVIUHZWNUTUTWOWGA
      BVGDCUJUEUTUTWPWGABVGECUJUEWOWPWNWJWKVHVIUKULUCWMWHWNVQWLVJUMUGUCUNVTWIVQ
      VJFUOUPUEVSVLVTVBVRVKUFUGUCFVCVDQVMVFVLVEVKVBUQURTUS $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d A y $.  $d B x y $.  $d C y $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). ~ csbconstgf with distinct variable requirement.(Contributed by
       Alan Sare, 22-Jul-2012.) $)
    csbconstgfv $p |- ( A e. C -> [_ A / x ]_ B = B ) $=
      ( vy cv wcel ax-17 csbconstgf ) AEBCDEFCGAHI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a b y $.  $d b x y $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem5VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem5 $p |- ( [ ( a i^i x ) / b ] ( ( b C_ ( a i^i x ) /\ b =/= (/) )
        ->
                  E. y e. b ( b i^i y ) = (/) ) <->
                  ( ( ( a i^i x ) C_ ( a i^i x ) /\ ( a i^i x ) =/= (/) ) ->
                  E. y e. ( a i^i x ) ( ( a i^i x ) i^i y ) = (/) ) ) $=
      ( cv cin wss c0 wne wa wceq wrex wi wsbc cvv wcel wb visset inex1 sbcimg
      ax-mp sbcang sseq1 sbcieg wn wal df-ne ax-gen sbcbi mp2 sbcng bicomd
      eqsbc3 necon3bbii 3bitr2i anbi12i bitri wel wex df-rex sbcel2gv csb
      sbceqdig sbcin csbvarg csbconstgfv ineq12i eqtri eqeq12i exbii sbcexg
      3bitr2ri imbi12i ) DEZCEZAEZFZGZVNHIZJZVNBEZFZHKZBVNLZMDVQNZVTDVQNZWDDVQN
      ZMZVQVQGZVQHIZJZVQWAFZHKZBVQLZMVQOPZWEWHQVOVPCRSZVTWDDVQOTUAWFWKWGWNWFVRD
      VQNZVSDVQNZJZWKWOWFWSQWPVRVSDVQOUBUAWQWIWRWJWOWQWIQWPVRWIDVQOVNVQVQUCUDUA
      WRVNHKZUEZDVQNZWTDVQNZUEZWJWOVSXAQZDUFWRXBQWPXEDVNHUGUHVSXADVQOUIUJWOXDXB
      QWPWOXBXDWTDVQOUKULUAXCVQHWOXCVQHKQWPDVQHOUMUAUNUOUPUQWGBDURZWCJZBUSZDVQN
      ZWNWOWDXHQZDUFWGXIQWPXJDWCBVNUTUHWDXHDVQOUIUJWNWAVQPZWMJZBUSXGDVQNZBUSZXI
      WMBVQUTXMXLBXMXFDVQNZWCDVQNZJZXLWOXMXQQWPXFWCDVQOUBUAXOXKXPWMWOXOXKQWPDWA
      VQOVAUAXPDVQWBVBZDVQHVBZKZWMWOXPXTQWPDVQWBHOVCUAXRWLXSHXRDVQVNVBZDVQWAVBZ
      FZWLWOXRYCKWPDVQOVNWAVDUAYAVQYBWAWOYAVQKWPDVQOVEUAWOYBWAKWPDVQWAOVFUAVGVH
      WOXSHKWPDVQHOVFUAVIUQUPUQVJWOXNXIQWPWOXIXNXGBDVQOVKULUAVLUQVMUQ $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem4VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem4 $p |- ( [ y / x ] ( x e. a /\ ( a i^i x ) = (/) ) <->
                        ( y e. a /\ ( a i^i y ) = (/) ) ) $=
      ( wel cv cin c0 wceq wa wsb sban cvv wcel wb visset sbcel1gv ax-mp csb
      sbceqdig sbcin csbconstgfv csbvarg ineq12i eqtri eqeq12i bitri anbi12i )
      ACDZCEZAEZFZGHZIABJUHABJZULABJZIBCDZUIBEZFZGHZIUHULABKUMUOUNURUPLMZUMUONB
      OZAUPUILPQUNAUPUKRZAUPGRZHZURUSUNVCNUTAUPUKGLSQVAUQVBGVAAUPUIRZAUPUJRZFZU
      QUSVAVFHUTAUPLUIUJTQVDUIVEUPUSVDUIHUTAUPUILUAQUSVEUPHUTAUPLUBQUCUDUSVBGHU
      TAUPGLUAQUEUFUGUF $.
      $( [22-Jul-2012] $)
  $}

  ${
    ee02.1 $e |- ph $.
    ee02.2 $e |- ( ps -> ( ch -> th ) ) $.
    ee02.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( ~ e02 without virtual deductions. $)
    ee02 $p |- ( ps -> ( ch -> ta ) ) $=
      ( wi a1i ee22 ) BCADECAIBACFJJGHK $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a b y $.  $d b x y $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem3VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem3 $p |- ( ( a C_ On /\ a =/= (/) ) ->
                        ( ( x e. a /\ -. ( a i^i x ) = (/) ) ->
                        E. y e. ( a i^i x ) ( ( a i^i x ) i^i y ) = (/) ) ) $=
      ( vb cv con0 wss c0 wne wa wel cin wceq wn wrex ssid wi simpr a1i df-ne
      syl6ibr pm3.2 ee02 wsbc cvv wcel wal visset inex2 cep wfr wwe word simpl
      ssel sylsyld eloni syl6 ordwe inss2 wess com12 syl6mpi wefr dfepfr
      syl6ib a4sbc onfrALTlem5 mpdd ) CEZFGZVJHIZJZACKZVJAEZLZHMNZJZVPVPGZVPHIZ
      JZVPBEZLHMBVPOZVSVMVRVTWAVPPVMVRVQVTVRVQQVMVNVQRSVPHTUAVSVTUBUCVMVRDEZVPG
      WDHIJWDWBLHMBWDOQZDVPUDZWAWCQVPUEUFVMVRWEDUGZWFVOVJAUHUIVMVRVPUJUKZWGVMVR
      VPUJULZWHVMVRVOUJULZVPVOGZWIVMVRVOUMZWJVMVRVOFUFZWLVMVKVRVNWMVKVLUNVRVNQV
      MVNVQUNSVJFVOUOUPVOUQURVOUSURVJVOUTWKWJWIVPVOUJVAVBVCVPUJVDURDBVPVEVFWEDV
      PUEVGUCABCDVHVFVI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d ch x $.  $d ph x $.  $d ps x $.
    ggen31.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( ~ gen31 without virtual deductions.  (Contributed by Alan Sare,
       22-Jul-2012.) $)
    ggen31 $p |- ( ph -> ( ps -> ( ch -> A. x th ) ) ) $=
      ( wal wi wa imp 19.21adv ex ) ABCDEGHABICDEABCDHFJKL $.
      $( [22-Jun-2012] $)
  $}

  ${
    $d a y z $.  $d x y z $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem2VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem2 $p |- ( ( a C_ On /\ a =/= (/) ) -> ( ( x e. a /\
                      -. ( a i^i x ) = (/) ) -> E. y e. a ( a i^i y ) =
                      (/) ) ) $=
      ( vz cv con0 wss c0 wne wa wcel cin wceq wn wex wrex wi wal iidn3 simpr
      syl8 inss2 sseli inss1 wtr word idd simpl syl6 id syl ssel com12 ee21
      eloni ordtr simpll trel exp3acom23 ee233 elin simplbi2 ee33 simplbi2com
      exp4a ggen31 dfss2 biimpri sseq0 ex pm3.21 iin3 19.21adv exim
      onfrALTlem3 df-rex biimpi ee22 ) CEZFGZVSHIZJZAEZVSKZVSWCLZHMNZJZBEZVSKZV
      SWHLZHMZJZBOZWKBVSPZWBWGWHWEKZWEWHLZHMZJZBOZWMQZWSWMWBWGWRWLQZBRWTWBWGXAB
      WBWGWRWLWBWGWRWKWIWLWBWGWRWJWPGZWQWKWBWGWRDEZWJKZXCWPKZQZDRZXBWBWGWRXFDWB
      WGWRXDXEWBWGWRXDJZXCWHKZXCWEKZXEWBWGXHXDXIWBWGXHXHXDWBWGXHSZWRXDTUAZWJWHX
      CVSWHUBUCUAZWBWGXHXCVSKZXCWCKZXJWBWGXHXDXNXLWJVSXCVSWHUDUCUAWBWGWCUEZXHWH
      WCKZXIXOWBWGWCUFZXPWBWGWCFKZXRWBWGWDVTXSWBWGWGWDWBWGUGWDWFUHUIWBWBVTWBUJV
      TWAUHUKVTWDXSVSFWCULUMUNWCUOUIWCUPUIWBWGXHWOXQWBWGXHXHWOXKWOWQXDUQUAWEWCW
      HVSWCUBUCUAXMXPXIXQXOWCXCWHURUSUTXJXNXOXCVSWCVAVBVCXEXJXIXCWEWHVAVDVCVEVF
      XBXGDWJWPVGVHUAWBWGWRWRWQWBWGWRSZWOWQTUAXBWQWKWJWPVIVJVCWBWGWRWOWIWBWGWRW
      RWOXTWOWQUHUAWEVSWHVSWCUDUCUAWKWIVKVCVLVMWRWLBVNUIWBWGWQBWEPZWSABCVOYAWSW
      QBWEVPVQUIWTUJVRWNWMWKBVSVPVHUI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d ph y $.
    $( A theorem pertaining to the substitution for an existentially quantified
       variable when the substituted variable does not occur in the quantified
       wff.  (Contributed by Alan Sare, 22-Jul-2012.) $)
    cbvexsv $p |- ( E. x ph <-> E. y [ y / x ] ph ) $=
      ( cvv wrex wsb wex cbvrexsv rexv 3bitr3i ) ABDEABCFZCDEABGKCGABCDHABIKCIJ
      $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x y $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem1VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem1 $p |- ( ( a C_ On /\ a =/= (/) ) -> ( ( x e. a /\ ( a i^i x ) =
                      (/) ) -> E. y e. a ( a i^i y ) = (/) ) ) $=
      ( cv con0 wss c0 wne wa wel cin wceq wex wrex wsb wi 19.8a a1i cbvexsv
      syl6ib onfrALTlem4 exbii df-rex syl6ibr ) CDZEFUEGHIZACJUEADKGLIZBCJUEBDK
      GLZIZBMZUHBUENUFUGUGABOZBMZUJUFUGUGAMZULUGUMPUFUGAQRUGABSTUKUIBABCUAUBTUH
      BUEUCUD $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x y $.
    $( The epsilon relation is foundational on the class of ordinal numbers.
       ~ onfrALT is an alternate proof of ~ onfr . ~ onfrALTVD is the Virtual
       Deduction proof from which ~ onfrALT is derived.  The Virtual Deduction
       proof mirrors the working proof of ~ onfr which is the main part of the
       proof of Theorem 7.12 of the first edition of TakeutiZaring.  The proof
       of the corresponding Proposition 7.12 of [TakeutiZaring] p. 38 (second
       edition) does not contain the working proof equivalent of ~ onfrALTVD .
       This theorem does not rely on the Axiom of Regularity.  (Contributed by
       Alan Sare, 22-Jul-2012.) $)
    onfrALT $p |- _E Fr On $=
      ( va vy vx con0 cep wfr cv wss c0 wne wa cin wceq wrex wi dfepfr simpr
      wel wex wn onfrALTlem1 exp3a onfrALTlem2 pm2.61 ee22 19.23adv n0 syl5ib
      mpd mpgbir ) DEFAGZDHZUKIJZKZUKBGLIMBUKNZOAABDPUNUMUOULUMQUNCARZCSUOUMUNU
      PUOCUNUPUKCGLIMZUOOUQTZUOOUOUNUPUQUOCBAUAUBUNUPURUOCBAUCUBUQUOUDUEUFCUKUG
      UHUIUJ $.
      $( [30-Jun-2012] $)
  $}


