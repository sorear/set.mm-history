$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Auxiliary theorems for Alan Sare's virtual deduction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( ~ sbcorg with a 3-disjuncts.  This proof is ~ sbc3orgVD automatically
       translated and minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
    sbc3org $p |- ( A e. B -> ( [ A / x ] ( ph \/ ps \/ ch ) <->
                  ( [ A / x ] ph \/ [ A / x ] ps \/ [ A / x ] ch ) ) ) $=
      ( wcel w3o wsbc wo sbcorg df-3or bicomi sbcbii orbi1d 3bitr3d syl6bbr )
      EFGZABCHZDEIZADEIZBDEIZJZCDEIZJZUAUBUDHRABJZCJZDEIUFDEIZUDJTUEUFCDEFKUGSD
      EFSUGABCLMNRUHUCUDABDEFKOPUAUBUDLQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d x ps $.  $d x ch $.
    $( Closed form of ~ 19.21ai with 2 additional conjuncts having no
       occurences of the quantifying variable.  This proof is ~ 19.21a3con13vVD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    19.21a3con13v $p |- ( ( ph -> A. x ph ) ->
                        ( ( ps /\ ph /\ ch ) -> A. x ( ps /\ ph /\ ch ) ) ) $=
      ( wal wi w3a 3simp1 a1i ax-17 syl6 3simp2 imim1i 3simp3 3jcad 19.26-3an
      syl6ibr ) AADEZFZBACGZBDEZRCDEZGTDESTUARUBSTBUATBFSBACHIBDJKTARBACLMSTCUB
      TCFSBACNICDJKOBACDPQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d B x $.  $d D x y $.
    $( ~ ra4sbc with two quantifying variables.  This proof is ~ ra4sbc2VD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    ra4sbc2 $p |- ( A e. B -> ( C e. D -> ( A. x e. B A. y e. D ph ->
                  [ C / y ] [ A / x ] ph ) ) ) $=
      ( wcel wral wsbc idd wi ra4sbc a1d sbcralg biimpd syl6d ee23 ) DEHZFGHZTA
      CGIZBEIZABDJZCGIZUCCFJSTKSTUBUABDJZUDSUBUELTUABDEMNSUEUDABCDGEOPQUCCFGMR
      $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d x y $.
    $( Substitution of a set variable for another set variable in a 3-conjunct
       formula.  Derived automatically from ~ sbcoreleleqVD .  (Contributed by
       Alan Sare, 31-Dec-2011.) $)
    sbcoreleleq $p |- ( A e. B -> ( [ A / y ] ( x e. y \/ y e. x \/ x = y ) <->
                      ( x e. A \/ A e. x \/ x = A ) ) ) $=
      ( wcel wel weq w3o wsbc cv wceq sbc3org wb sbcel2gv sbcel1gv eqsbc3r
      3orbi123 3impexpbicomi syl3c bitr4d ) CDEZABFZBAFZABGZHBCIUBBCIZUCBCIZUDB
      CIZHZAJZCEZCUIEZUICKZHZUBUCUDBCDLUAUEUJMZUFUKMZUGULMZUMUHMBUICDNBCUIDOBCD
      UIPUNUOUPUHUMUEUJUFUKUGULQRST $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( If a class is transitive and any two distinct elements of the class are
       E-comparable, then every element of that class is transitive.  Derived
       automatically from ~ tratrbVD .  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    tratrb $p |- ( ( Tr A /\ A. x e. A A. y e. A ( x e. y \/ y e. x \/ x = y )
                 /\ B e. A ) -> Tr B ) $=
      ( wtr wel weq w3o wral wcel w3a cv wa wi wal hbra1 19.21a3con13v ax-mp
      hbra2 wn wceq pm3.26 a1i pm3.27 pm3.2an3 ee22 en3lp con3 syl6mpi eleq2
      biimprcd syl6 pm3.2 ee23 en2lp wsbc 3simp3 wsb 3simp1 trel exp3a ee121
      ee122 ralcom2 3ad2ant2 ra4sbc2 sbid syl6ib sbcoreleleq biimpd sylsyld
      3ornot23 ex ee222 19.21ai dftr2 sylibr ) CEZABFZBAFZABGHZBCIZACIZDCJZKZVS
      BLZDJZMZALZDJZNZBOZAODEWEWLAWCWCAONWEWEAONWBACPWCVRWDAQRWEWKBWCWCBONWEWEB
      ONWAABCCSWCVRWDBQRWEWHDWIJZTZWIDUAZTZWJWMWOHZWJWEWHWMVSWGWMKZNZWRTWNWEWHV
      SWGWSWHVSNWEVSWGUBUCZWHWGNWEVSWGUDUCZVSWGWMUEUFWIWFDUGWMWRUHUIWEWHWOVSVTM
      ZNXBTWPWEWHVSWOVTXBWTWEWHWGWOVTNXAWOVTWGWIDWFUJUKULVSVTUMUNWIWFUOWOXBUHUI
      WEWDWHWABDUPZWQVRWCWDUQZWEWHXCAAURZXCWEWDWHWICJZWAACIBCIZXEXDWEVRWHVSWFCJ
      ZXFVRWCWDUSZWTWEVRWHWGWDXHXIXAXDVRWGWDXHCWFDUTVAVBVRVSXHXFCWIWFUTVAVCWCVR
      XGWDWAABCVDVEWABADCWICVFVBXCAVGVHWDXCWQABDCVIVJVKWNWPWQWJNWMWOWJVLVMVNVOV
      OABDVPVQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $( ~ ax-5 for a 3 element left-nested implication.  Derived automatically
       from ~ 3ax5VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3ax5 $p |- ( A. x ( ph -> ( ps -> ch ) ) -> ( A. x ph ->
               ( A. x ps -> A. x ch ) ) ) $=
      ( wi wal ax-5 syl6 ) ABCEZEDFADFIDFBDFCDFEAIDGBCDGH $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( An element of an ordinal class is ordinal.  Proposition 7.6 of
       [TakeutiZaring] p. 36.  This is an alternate proof of ~ ordelord using
       the Axiom of Regularity indirectly through ~ dford2 . dford2 is a weaker
       definition of ordinal number.  Given the Axiom of Regularity, it need
       not be assumed that ` _E Fr A ` because this is inferred by the Axiom of
       Regularity. ~ ordelordaxr is ~ ordelordaxrVD without virtual deductions
       and was automatically derived from ~ ordelordaxrVD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    ordelordaxr $p |- ( ( Ord A /\ B e. A ) -> Ord B ) $=
      ( vx vy word wtr wel weq w3o wral wcel wa dford2 tratrb ordtr adantr
      pm3.27bi 3orcomb 2ralbii sylib pm3.27 syl3anc wss trss ee11 wi ssralv2
      ex syl3c sylanbrc ) BEBFZCDGZCDHZDCGZIZDBJCBJZAEZBAKZLZCDBMAFZULUNUMIZDAJ
      CAJZURUKUSCDABNUQUTURAOPZUSUODAJCAJZVBUQVDURUQUTVDCDAMQPZUOVACDAAULUMUNRS
      TUQURUAZUBUSBAUCZVGVDUPUSUTURVGVCVFABUDUEZVHVEVGVGVDUPUFUOCDBABAUGUHUIUJ
      $.
      $( [18-Feb-2012] $)
  $}

  ${
    ee1111.1 $e |- ( ph -> ps ) $.
    ee1111.2 $e |- ( ph -> ch ) $.
    ee1111.3 $e |- ( ph -> th ) $.
    ee1111.4 $e |- ( ph -> ta ) $.
    ee1111.5 $e |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) $.
    $( Non-virtual deduction form of ~ e1111 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ps )  `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ch ) `
       <TR> <TD> h3::     <TD> ` |- ( ph -> th ) `
       <TR> <TD> h4::     <TD> ` |- ( ph -> ta ) `
       <TR> <TD> h5::    <TD> ` |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 6:1,5:  <TD> ` |- ( ph -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 7:6:    <TD> ` |- ( ch -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 8:2,7:  <TD> ` |- ( ph -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( ph -> ( th -> ( ta -> et ) ) ) `
       <TR> <TD> 10:9:    <TD> ` |- ( th -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 11:3,10: <TD> ` |- ( ph -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 12:11:   <TD> ` |- ( ph -> ( ta -> et ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ta -> ( ph -> et ) ) `
       <TR> <TD> 14:4,13: <TD> ` |- ( ph -> ( ph -> et ) ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> et )  `
       </TABLE> </HTML> $)
    ee1111 $p |- ( ph -> et ) $=
      ( wi syl com12 pm2.43i ) AFAEAFLJAEFAEFLZADAPLIADPADPLZACAQLHACQABCQLGKMN
      MONMONMO $.
      $( [18-Mar-2012] $)
  $}

  $( Logical equivalence of a 2-left-nested implication and a 1-left-nested
     implicated
     when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).
     The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual
     Deduction Proof (not shown) was minimized.  The minimized proof is
     shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ph -> ( ps -> ch ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ph -> ( ps -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ph -> ( ps -> ch ) ) -> ( ps `
     ` -> ( ph -> ch ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ps -> ( ph -> ch ) ) ) `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ph -> ch ) ) -> ( ph `
     ` -> ( ps -> ( ph -> ch ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` <-> ( ps -> ( ph -> ch ) ) ) `
     </TABLE> </HTML> $)
  pm2.43bgbi $p |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) <->
               ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.04 imim2i pm2.43 syl ax-1 impbii ) ABACDDZDZKLABCDZDZKLANDNKNABACE
    FAMGHABCEHKAIJ $.
    $( [18-Mar-2012] $)

  $( Logical equivalence of a 3-left-nested implication and a 2-left-nested
     implicated when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).  The following User's Proof is
     a Virtual Deduction proof completed automatically by the tools program
     completeusersproof.cmd, which invokes Mel O'Cat's mmj2 and Norm Megill's
     Metamath Proof Assistant.  The completed Virtual Deduction Proof (not
     shown) was minimized.  The minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ps -> ( ph -> ( ch -> th ) ) )  `
     ` -> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ch -> ( ph -> th ) ) ) )  `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) )  `
     ` -> ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  pm2.43cbi $p |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) <->
                   ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wi id com45 pm2.43bgbi biimpi syl pm2.04 imim2i ax-1 impbii ) ABCADEEZEZE
    ZPQBACDEZEZEZPQATEZTQABCADQFGUATABRHIJSOBACDKLJPAMN $.
    $( [18-Mar-2012] $)

  ${
    ee233.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee233.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee233.3 $e |- ( ph -> ( ps -> ( th -> et ) ) ) $.
    ee233.4 $e |- ( ch -> ( ta -> ( et -> ze ) ) ) $.
    $( Non-virtual deduction form of ~ e233 . (Contributed by Alan Sare,
       18-Mar-2012.)
       The following User's Proof is a Virtual Deduction proof completed
       automatically by the tools program completeusersproof.cmd, which invokes
       Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
       completed Virtual
       Deduction Proof (not shown) was minimized.  The minimized proof is
       shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ( ps -> ch ) )   `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ( ps -> ( th -> ta ) ) )  `
       <TR> <TD> h3::     <TD> ` |- ( ph -> ( ps -> ( th -> et ) ) )  `
       <TR> <TD> h4::     <TD> ` |- ( ch -> ( ta -> ( et -> ze ) ) ) `
       <TR> <TD> 5:1,4:   <TD> ` |- ( ph -> ( ps -> ( ta -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 6:5:     <TD> ` |- ( ta -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 7:2,6:   <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( et -> ze ) ) ) ) ) ) `
       <TR> <TD> 8:7:     <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( et  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( th -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 10:9:    <TD> ` |- ( ph -> ( ps -> ( th -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 11:10:   <TD> ` |- ( et -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> 12:3,11: <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( th -> ze ) ) ) ) ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( th  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 14:13:   <TD> ` |- ( th -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> ( ps -> ( th -> ze ) ) ) `
       </TABLE> </HTML> $)
    ee233 $p |- ( ph -> ( ps -> ( th -> ze ) ) ) $=
      ( wi syl6 com3r syl8 pm2.43cbi biimpi ax-mp com3l com4r ) DABDGLZLZLZLZUC
      BUDLZUDAUELZUEABDFUCJABDFGDABFGLZBDABUGLZLZLZLZUJAUKLZUKABDEUIIABEUGABCEU
      GLHKMNOULUKABDUHPQRUKUJBDAUGPQRSTOUFUEABDUBPQRUEUDBDAUAPQRUDUCDABGPQR $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ imbi12i . ~ imbi12 is ~ imbi12VD without virtual
     deductions and was automatically derived from ~ imbi12VD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi12 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ph -> ch )
               <-> ( ps -> th ) ) ) ) $=
    ( wb wi bi2 imim1d bi1 imim2d syl9 bi3 ee22 ) ABEZCDEZACFZBDFZFQPFPQENPBCFO
    QNBACABGHOCDBCDIJKNQADFOPNABDABIHODCACDGJKPQLM $.
    $( [18-Mar-2012] $)

  $( Join three logical equivalences to form equivalence of implications.
     ~ imbi13 is ~ imbi13VD without virtual deductions and was automatically
     derived from ~ imbi13VD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi13 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ta <-> et ) ->
               ( ( ph -> ( ch -> ta ) ) <-> ( ps -> ( th -> et ) ) ) ) ) ) $=
    ( wb wi imbi12 syl9r ) CDGEFGCEHZDFHZGABGAKHBLHGCDEFIABKLIJ $.
    $( [18-Mar-2012] $)

  ${
    $( Non-virtual deduction from of ~ e21 . ~ ee21 is ~ ee21VD without virtual
       deductions and was automatically derived from ~ ee21VD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Mar-2012.)  $)

    ee21.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee21.2 $e |- ( ph -> th ) $.
    ee21.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e21 without virtual deductions. $)
    ee21 $p |- ( ph -> ( ps -> ta ) ) $=
      ( a1d ee22 ) ABCDEFADBGIHJ $.
      $( [18-Mar-2012] $)
  $}

  $( Distribution of class substitution over a left-nested implication.
     Similar to ~ sbcimg . ~ sbcim2g is ~ sbcim2gVD without virtual deductions
     and was automatically derived from ~ sbcim2gVD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcim2g $p |- ( A e. B -> ( [ A / x ] ( ph -> ( ps -> ch ) ) <->
                ( [ A / x ] ph -> ( [ A / x ] ps -> [ A / x ] ch ) ) ) ) $=
    ( wcel wi wsbc wb sbcimg biimpd imbi2 biimpcd ee21 idd bi2 ee13 sylibrd
    impbid ) EFGZABCHZHDEIZADEIZBDEICDEIHZHZUAUCUDUBDEIZHZUGUEJZUFUAUCUHAUBDEFK
    ZLBCDEFKZUIUHUFUGUEUDMNOUAUFUHUCUAUIUFUDUEUGUKUAUFPUGUEQRUJST $.
    $( [18-Mar-2012] $)

  $( Implication form of ~ sbcbii . ~ sbcbi is ~ sbcbiVD without virtual
     deductions and was automatically derived from ~ sbcbiVD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcbi $p |- ( A e. B -> ( A. x ( ph <-> ps ) -> ( [ A / x ] ph <->
                  [ A / x ] ps ) ) ) $=
    ( wcel wb wal wsbc a4sbc sbcbidig sylibd ) DEFABGZCHMCDIACDIBCDIGMCDEJABCDE
    KL $.
    $( [18-Mar-2012] $)

  ${
    $d A x y z $.  $d B y z $.
    $( Formula-building inference rule for class substitution, substituting a
       class variable for the set variable of the transitivity predicate.
       ~ trsbc is ~ trsbcVD without virtual deductions and was automatically
       derived from ~ trsbcVD using the tools program
       translate..without..overwriting.cmd and Metamath's minimize command.
       (Contributed by Alan Sare, 18-Mar-2012.) $)
    trsbc $p |- ( A e. B -> ( [ A / x ] Tr x <-> Tr A ) ) $=
      ( vz vy wcel cv wtr wsbc wel wa wi wal dftr2 sbcbii sbcalg pm3.31 pm3.3
      impbii sbcim2g wb wceq biidd sbcieg sbcel2gv imbi13 syl3c bitrd syl6bb
      bitr3d albidv syl6bbr ) BCFZAGZHZABIDEJZEAJZKDAJZLZEMZDMZABIZBHZUOVAABCDE
      UNNOUMVBUPEGZBFZKDGZBFZLZEMZDMZVCUMVBUTABIZDMVJUTDABCPUMVKVIDUMVKUSABIZEM
      VIUSEABCPUMVLVHEUMUPUQURLLZABIZVLVHVMUSABCVMUSUPUQURQUPUQURRSOUMVNUPVEVGL
      LZVHUMVNUPABIZUQABIZURABIZLLZVOUPUQURABCTUMVPUPUAVQVEUAVRVGUAVSVOUAUPUPAB
      CUNBUBUPUCUDAVDBCUEAVFBCUEVPUPVQVEVRVGUFUGUHVOVHUPVEVGQUPVEVGRSUIUJUKUHUK
      UHDEBNULUH $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee33.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee33.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee33.3 $e |- ( th -> ( ta -> et ) ) $.
    $( Non-virtual deduction form of ~ e33 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::   <TD> ` |- ( ph -> ( ps -> ( ch -> th ) ) )  `
       <TR> <TD> h2::   <TD> ` |- ( ph -> ( ps -> ( ch -> ta ) ) )  `
       <TR> <TD> h3::   <TD> ` |- ( th -> ( ta -> et ) ) `
       <TR> <TD> 4:1,3: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ta -> et ) ) ) ) `
       <TR> <TD> 5:4:   <TD> ` |- ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> 6:2,5: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ph -> ( ps -> `
       ` ( ch -> et ) ) ) ) ) ) `
       <TR> <TD> 7:6:   <TD> ` |- ( ps -> ( ch -> ( ph -> ( ps -> ( ch -> `
       ` et ) ) ) ) ) `
       <TR> <TD> 8:7:   <TD> ` |- ( ch -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> qed:8: <TD> ` |- ( ph -> ( ps -> ( ch -> et ) ) ) `
       </TABLE> </HTML> $)
    ee33 $p |- ( ph -> ( ps -> ( ch -> et ) ) ) $=
      ( wi syl8 com4r pm2.43cbi mpbi ) CABCFJZJZJZJZQBRJZRASJSABCEQHABCEFABCDEF
      JGIKLKABCPMNBCAOMNCABFMN $.
      $( [18-Mar-2012] $)
  $}

  ${
    $d A q x y z $.
    $( The union of a class of transitive sets is transitive. ~ untrOLD is
       ~ untrVD without virtual deductions and was automatically derived from
       ~ untrVD using the tools program translate..without..overwriting.cmd and
       Metamath's minimize command.  (Contributed by Alan Sare, 18-Mar-2012.)
       (Note: replaced by ~ truni 20-Mar-2012. --NM) $)
    untrOLD $p |- ( A. x e. A Tr x -> Tr U. A ) $=
      ( vz vy vq cv wtr wral wel cuni wcel wa wi wal wex pm3.27 a1i eluni
      syl6ib pm3.26 a1i12 wsb ra4sbc com12 syl6d trsbc biimpd ee33 trel
      exp3acom3r ee233 elunii ex 19.21adv 19.23v mpdd 19.21aivv dftr2 sylibr )
      AFGZABHZCDIZDFZBJZKZLZCFZVDKZMZDNCNVDGVAVICDVAVFDEIZEFZBKZLZEOZVHVAVFVEVN
      VFVEMVAVBVEPQEVCBRSVAVFVMVHMZENVNVHMVAVFVOEVAVFVMCEIZVLVHVAVFVBVMVJVKGZVP
      VFVBMVAVBVETQVAVFVMVJMVJVLTUAVAVFVMVLUTAEUBZVQVAVFVMVLMVJVLPUAZVAVFVMVLVR
      VSVLVAVRUTAVKBUCUDUEVLVRVQAVKBUFUGUHVQVBVJVPVKVGVCUIUJUKVSVPVLVHVGVKBULUM
      UHUNVMVHEUOSUPUQCDVDURUS $.
      $( [18-Mar-2012] $)
  $}


