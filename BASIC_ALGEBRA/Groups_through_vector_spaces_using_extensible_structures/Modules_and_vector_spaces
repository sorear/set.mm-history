$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Modules and vector spaces
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c LMod $.
  $c LVec $.

  $( Extend class notation with class of all left modules. $)
  clmod $a class LMod $.

  $( Extend class notation with class of all left vector spaces. $)
  clvec $a class LVec $.

  ${
    $d a f g k p q r s t v w x $.
    $( Def. 8.5.11, p. 218. $)
    $( Define the class of all left modules, which are generalizations of left
       vector spaces.  A left module over a ring is an (Abelian) group
       (vectors) together with a ring (scalars) and a left scalar product
       connecting them. $)
    df-lmod $a |- LMod = { g e. Grp | [ ( Base ` g ) / v ]
      [ ( +g ` g ) / a ] [ ( Scalar ` g ) / f ] [ ( vsca ` g ) / s ]
      [ ( Base ` f ) / k ] [ ( +g ` f ) / p ] [ ( .r ` f ) / t ]
      ( f e. Ring /\ A. q e. k A. r e. k A. x e. v A. w e. v
                ( ( ( r s w ) e. v
                 /\ ( r s ( w a x ) ) = ( ( r s w ) a ( r s x ) )
                 /\ ( ( q p r ) s w ) = ( ( q s w ) a ( r s w ) )
               ) /\ ( ( ( q t r ) s w ) = ( q s ( r s w ) )
                 /\ ( ( 1r ` f ) s w ) = w ) ) ) } $.
  $}

  ${
    $d a f g k p q r s v w x A $.  $d a f g k p q r s v w x F $.  $d r w x R $.
    $d a f g k p q r s v w x K $.  $d a f g k p q r s t v w x T $.  $d w x X $.
    $d a f g k p q r s v w x P $.  $d q r w x Q $.  $d a f g v W $.  $d w Y $.
    $d a f g k p q r s v w x S $.  $d a f g k p q r s v w x U $.
    $d a f g k p q r s v w x V $.
    islmod.v $e |- V = ( Base ` W ) $.
    islmod.a $e |- A = ( +g ` W ) $.
    islmod.s $e |- S = ( vsca ` W ) $.
    islmod.f $e |- F = ( Scalar ` W ) $.
    islmod.k $e |- K = ( Base ` F ) $.
    islmod.p $e |- P = ( +g ` F ) $.
    islmod.t $e |- T = ( .r ` F ) $.
    islmod.u $e |- U = ( 1r ` F ) $.
    $( The predicate "is a left module". $)
    islmod $p |- ( W e. LMod <->
      ( W e. Grp /\ F e. Ring /\ A. q e. K A. r e. K A. x e. V A. w e. V
                ( ( ( r S w ) e. V
                 /\ ( r S ( w A x ) ) = ( ( r S w ) A ( r S x ) )
                 /\ ( ( q P r ) S w ) = ( ( q S w ) A ( r S w ) )
               ) /\ ( ( ( q T r ) S w ) = ( q S ( r S w ) )
                 /\ ( U S w ) = w ) ) ) ) $=
      ( vf vs vv va vp vt vk vg clmod wcel cgrp crg cv co wceq w3a wral cur cfv
      wa cmulr wsbc cplusg cbs cvsca csca fveq2 syl6eqr dfsbcq syl fvex eqeltri
      cvv sbcbidv mpan2 bitrd simp3 fveq2d oveq1d eqeq1d anbi1d anbi2d 2ralbidv
      wb sbcie eleq1d simp1 eleq2d simp2 oveqd oveq2d eqeq12d 3anbi123d anbi12d
      eqeq2d raleqbidv syl5bb sbc3ie oveq12d eqtrd syl6bb df-lmod elrab2 3anass
      oveq bitri bitr4i ) KUJUKKULUKZHUMUKZLUNZBUNZEUOZJUKZXKXLAUNZCUOZEUOZXMXK
      XOEUOZCUOZUPZMUNZXKDUOZXLEUOZYAXLEUOZXMCUOZUPZUQZYAXKFUOZXLEUOZYAXMEUOZUP
      ZGXLEUOZXLUPZVAZVAZBJURAJURZLIURZMIURZVAZVAXIXJYRUQUBUNZUMUKZXKXLUCUNZUOZ
      UDUNZUKZXKXLXOUEUNZUOZUUBUOZUUCXKXOUUBUOZUUFUOZUPZYAXKUFUNZUOZXLUUBUOZYAX
      LUUBUOZUUCUUFUOZUPZUQZYAXKUGUNZUOZXLUUBUOZYAUUCUUBUOZUPZYTUSUTZXLUUBUOZXL
      UPZVAZVAZBUUDURAUUDURZLUHUNZURMUVJURZVAZUGYTVBUTZVCZUFYTVDUTZVCZUHYTVEUTZ
      VCZUCUIUNZVFUTZVCZUBUVSVGUTZVCZUEUVSVDUTZVCZUDUVSVEUTZVCZYSUIKULUJUVSKUPZ
      UWGUVRUCEVCZUBHVCZUECVCZUDJVCZYSUWHUWGUWEUDJVCZUWLUWHUWFJUPUWGUWMWEUWHUWF
      KVEUTZJUVSKVEVHNVIUWEUDUWFJVJVKUWHJVNUKUWMUWLWEJUWNVNNKVEVLVMZUWHUWEUWKUD
      JVNUWHUWEUWCUECVCZUWKUWHUWDCUPUWEUWPWEUWHUWDKVDUTZCUVSKVDVHOVIUWCUEUWDCVJ
      VKUWHCVNUKUWPUWKWECUWQVNOKVDVLVMZUWHUWCUWJUECVNUWHUWCUWAUBHVCZUWJUWHUWBHU
      PUWCUWSWEUWHUWBKVGUTZHUVSKVGVHQVIUWAUBUWBHVJVKUWHHVNUKUWSUWJWEHUWTVNQKVGV
      LVMZUWHUWAUWIUBHVNUWHUVTEUPUWAUWIWEUWHUVTKVFUTZEUVSKVFVHPVIUVRUCUVTEVJVKV
      OVPVQVOVPVQVOVPVQUWLXJUUCJUKZXKXPUUBUOZUUCUUICUOZUPZUUNUUOUUCCUOZUPZUQZYH
      XLUUBUOZUVBUPZGXLUUBUOZXLUPZVAZVAZBJURZAJURZLUVJURZMUVJURZVAZUFDVCZUHIVCZ
      UCEVCZYSUWIUYCUDUEUBJCHUWOUWRUXAUUDJUPZUUFCUPZYTHUPZUQZEVNUKUWIUYCWEEUXBV
      NPKVFVLVMZUYGUVRUYBUCEVNUYGUVRUVPUHIVCZUYBUYGUVQIUPUVRUYIWEUYGUVQHVEUTZIU
      YGYTHVEUYDUYEUYFVRZVSRVIUVPUHUVQIVJVKUYGIVNUKUYIUYBWEIUYJVNRHVEVLVMZUYGUV
      PUYAUHIVNUYGUVPUVNUFDVCZUYAUYGUVODUPUVPUYMWEUYGUVOHVDUTZDUYGYTHVDUYKVSSVI
      UVNUFUVODVJVKUYGDVNUKUYMUYAWEDUYNVNSHVDVLVMZUYGUVNUXTUFDVNUYGUVNUVLUGFVCZ
      UXTUYGUVMFUPUVNUYPWEUYGUVMHVBUTZFUYGYTHVBUYKVSTVIUVLUGUVMFVJVKUYPUUAUURUX
      KUVFVAZVAZBUUDURZAUUDURZLUVJURMUVJURZVAZUYGUXTUVLVUCUGFFUYQVNTHVBVLVMUUSF
      UPZUVKVUBUUAVUDUVIVUAMLUVJUVJVUDUVHUYSABUUDUUDVUDUVGUYRUURVUDUVCUXKUVFVUD
      UVAUXJUVBVUDUUTYHXLUUBYAXKUUSFXFVTWAWBWCWDWDWCWFUYGUUAXJVUBUXSUYGYTHUMUYK
      WGUYGVUAUXQMLUVJUVJUYGUYTUXPAUUDJUYDUYEUYFWHZUYGUYSUXOBUUDJVUEUYGUURUXIUY
      RUXNUYGUUEUXCUUKUXFUUQUXHUYGUUDJUUCVUEWIUYGUUHUXDUUJUXEUYGUUGXPXKUUBUYGUU
      FCXLXOUYDUYEUYFWJZWKWLUYGUUFCUUCUUIVUFWKWMUYGUUPUXGUUNUYGUUFCUUOUUCVUFWKW
      PWNUYGUVFUXMUXKUYGUVEUXLXLUYGUVDGXLUUBUYGUVDHUSUTGUYGYTHUSUYKVSUAVIVTWAWC
      WOWQWQWDWOWRVQVOVPVQVOVPVQVOVPWSUXTYSUCUHUFEIDUYHUYLUYOUUBEUPZUVJIUPZUULD
      UPZUQZUXSYRXJVUJUXRYQMUVJIVUGVUHVUIWJZVUJUXQYPLUVJIVUKVUJUXOYOABJJVUJUXIY
      GUXNYNVUJUXCXNUXFXTUXHYFVUJUUCXMJVUJUUBEXKXLVUGVUHVUIWHZWKZWGVUJUXDXQUXEX
      SVUJUUBEXKXPVULWKVUJUUCXMUUIXRCVUMVUJUUBEXKXOVULWKWTWMVUJUUNYCUXGYEVUJUUN
      YBXLUUBUOYCVUJUUMYBXLUUBVUJUULDYAXKVUGVUHVUIVRWKVTVUJUUBEYBXLVULWKXAVUJUU
      OYDUUCXMCVUJUUBEYAXLVULWKVUMWTWMWNVUJUXKYKUXMYMVUJUXJYIUVBYJVUJUUBEYHXLVU
      LWKVUJUVBYAXMUUBUOYJVUJUUCXMYAUUBVUMWLVUJUUBEYAXMVULWKXAWMVUJUXLYLXLVUJUU
      BEGXLVULWKWAWOWOWDWQWQWCWSXGXBABUDUGUBUIUHUCLMUFUEXCXDXIXJYRXEXH $.
      $( [19-Jun-2014] $) $( [4-Nov-2013] $)

    $( Lemma for properties of a left module. $)
    lmodlema $p |- ( ( W e. LMod /\ ( Q e. K /\ R e. K )
          /\ ( X e. V /\ Y e. V ) ) ->
                ( ( ( R S Y ) e. V
                 /\ ( R S ( Y A X ) ) = ( ( R S Y ) A ( R S X ) )
                 /\ ( ( Q P R ) S Y ) = ( ( Q S Y ) A ( R S Y ) )
               ) /\ ( ( ( Q T R ) S Y ) = ( Q S ( R S Y ) )
                 /\ ( U S Y ) = Y ) ) ) $=
      ( vw vx vr vq clmod wcel wa co wceq w3a cv wral cgrp islmod simp3bi oveq1
      crg oveq1d eqeq12d 3anbi3d anbi1d anbi12d 2ralbidv eleq1d oveq2 3anbi123d
      oveq12d oveq2d rcla42v mpan9 3anbi2d id syl5com 3impia ) KUFUGZCIUGDIUGUH
      ZLJUGMJUGUHZDMEUIZJUGZDMLAUIZEUIZVSDLEUIZAUIZUJZCDBUIZMEUIZCMEUIZVSAUIZUJ
      ZUKZCDFUIZMEUIZCVSEUIZUJZGMEUIZMUJZUHZUHZVPVQUHDUBULZEUIZJUGZDWTUCULZAUIZ
      EUIZXADXCEUIZAUIZUJZWFWTEUIZCWTEUIZXAAUIZUJZUKZWLWTEUIZCXAEUIZUJZGWTEUIZW
      TUJZUHZUHZUBJUMUCJUMZVRWSVPUDULZWTEUIZJUGZYBXDEUIZYCYBXCEUIZAUIZUJZUEULZY
      BBUIZWTEUIZYIWTEUIZYCAUIZUJZUKZYIYBFUIZWTEUIZYIYCEUIZUJZXRUHZUHZUBJUMUCJU
      MZUDIUMUEIUMZVQYAVPKUNUGHURUGUUCUCUBABEFGHIJKUDUENOPQRSTUAUOUPUUBYAYDYHCY
      BBUIZWTEUIZXJYCAUIZUJZUKZCYBFUIZWTEUIZCYCEUIZUJZXRUHZUHZUBJUMUCJUMUEUDCDI
      IYICUJZUUAUUNUCUBJJUUOYOUUHYTUUMUUOYNUUGYDYHUUOYKUUEYMUUFUUOYJUUDWTEYICYB
      BUQUSUUOYLXJYCAYICWTEUQUSUTVAUUOYSUULXRUUOYQUUJYRUUKUUOYPUUIWTEYICYBFUQUS
      YICYCEUQUTVBVCVDYBDUJZUUNXTUCUBJJUUPUUHXMUUMXSUUPYDXBYHXHUUGXLUUPYCXAJYBD
      WTEUQZVEUUPYEXEYGXGYBDXDEUQUUPYCXAYFXFAUUQYBDXCEUQVHUTUUPUUEXIUUFXKUUPUUD
      WFWTEYBDCBVFUSUUPYCXAXJAUUQVIUTVGUUPUULXPXRUUPUUJXNUUKXOUUPUUIWLWTEYBDCFV
      FUSUUPYCXACEUUQVIUTVBVCVDVJVKXTWSXBDWTLAUIZEUIZXAWCAUIZUJZXLUKZXSUHUCUBLM
      JJXCLUJZXMUVBXSUVCXHUVAXBXLUVCXEUUSXGUUTUVCXDUURDEXCLWTAVFVIUVCXFWCXAAXCL
      DEVFVIUTVLVBWTMUJZUVBWKXSWRUVDXBVTUVAWEXLWJUVDXAVSJWTMDEVFZVEUVDUUSWBUUTW
      DUVDUURWADEWTMLAUQVIUVDXAVSWCAUVEUSUTUVDXIWGXKWIWTMWFEVFUVDXJWHXAVSAWTMCE
      VFUVEVHUTVGUVDXPWOXRWQUVDXNWMXOWNWTMWLEVFUVDXAVSCEUVEVIUTUVDXQWPWTMWTMGEV
      FUVDVMUTVCVCVJVNVO $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    $d x y z A $.  $d r u w x y z B $.  $d y z P $.  $d x y z S $.  $d y z T $.
    $d r u w x y z ph $.  $d x U $.  $d u w x y z V $.  $d r u w x W $.
    islmodd.v $e |- ( ph -> V = ( Base ` W ) ) $.
    islmodd.a $e |- ( ph -> A = ( +g ` W ) ) $.
    islmodd.f $e |- ( ph -> F = ( Scalar ` W ) ) $.
    islmodd.s $e |- ( ph -> S = ( vsca ` W ) ) $.
    islmodd.b $e |- ( ph -> B = ( Base ` F ) ) $.
    islmodd.p $e |- ( ph -> P = ( +g ` F ) ) $.
    islmodd.t $e |- ( ph -> T = ( .r ` F ) ) $.
    islmodd.u $e |- ( ph -> U = ( 1r ` F ) ) $.
    islmodd.r $e |- ( ph -> F e. Ring ) $.
    $( Group operations $)
    islmodd.l $e |- ( ph -> W e. Grp ) $.
    $( Scalar product operation $)
    islmodd.w $e |- ( ( ph /\ x e. B /\ y e. V ) -> ( x S y ) e. V ) $.
    islmodd.c $e |- ( ( ph /\ ( x e. B /\ y e. V /\ z e. V ) )
        -> ( x S ( y A z ) ) = ( ( x S y ) A ( x S z ) ) ) $.
    islmodd.d $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x P y ) S z ) = ( ( x S z ) A ( y S z ) ) ) $.
    islmodd.e $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. V ) )
        -> ( ( x T y ) S z ) = ( x S ( y S z ) ) ) $.
    islmodd.g $e |- ( ( ph /\ x e. V ) -> ( U S x ) = x ) $.
    $( Properties that determine a left module.  (Contributed by Mario
       Carneiro, 22-Jun-2014.) $)
    islmodd $p |- ( ph -> W e. LMod ) $=
      ( vr vw vu cgrp wcel csca cfv crg cv cvsca co cbs cplusg w3a cmulr cur wa
      wceq wral clmod eqeltrrd 3expb ralrimivva wi oveq1 oveq2 rcla42v ad2ant2l
      eleq1d mpan9 ralrimivvva oveq12d eqeq12d oveq2d oveq1d 3com23 3exp2 imp43
      rcla43v adantll simpll sylan2 simprlr simprrr syl2anc ralrimiva id rcla4v
      mpd 3jca ad2antll jca32 anassrs fveq2d eqtrd oveqd eleq12d eqidd oveq123d
      3anbi123d eqeq1d anbi12d raleqbidv mpbid eqid islmod syl3anbrc ) AMULUMMU
      NUOZUPUMUIUQZUJUQZMURUOZUSZMUTUOZUMZXQXRUKUQZMVAUOZUSZXSUSZXTXQYCXSUSZYDU
      SZVFZBUQZXQXPVAUOZUSZXRXSUSZYJXRXSUSZXTYDUSZVFZVBZYJXQXPVCUOZUSZXRXSUSZYJ
      XTXSUSZVFZXPVDUOZXRXSUSZXRVFZVEZVEZUJYAVGZUKYAVGZUIXPUTUOZVGZBUUJVGZMVHUM
      UCAKXPUPPUBVIAXQXRHUSZLUMZXQXRYCEUSZHUSZUUMXQYCHUSZEUSZVFZYJXQGUSZXRHUSZY
      JXRHUSZUUMEUSZVFZVBZYJXQIUSZXRHUSZYJUUMHUSZVFZJXRHUSZXRVFZVEZVEZUJLVGZUKL
      VGZUIFVGZBFVGUULAUVOBUIFFAYJFUMZXQFUMZVEZVEUVMUKUJLLAUVSYCLUMZXRLUMZVEZUV
      MAUVSUWBVEZVEZUVEUVIUVKUWDUUNUUSUVDAYJCUQZHUSZLUMZCLVGBFVGZUWCUUNAUWGBCFL
      AUVQUWELUMUWGUDVJVKUVRUWAUWHUUNVLUVQUVTUWGUUNXQUWEHUSZLUMBCXQXRFLYJXQVFZU
      WFUWILYJXQUWEHVMZVQUWEXRVFZUWIUUMLUWEXRXQHVNZVQVOVPVRAYJUWEDUQZEUSZHUSZUW
      FYJUWNHUSZEUSZVFZDLVGCLVGBFVGZUWCUUSAUWSBCDFLLUEVSUVRUWBUWTUUSVLZUVQUVRUV
      TUWAUXAUVRUWAUVTUXAUWSUUSXQUWOHUSZUWIXQUWNHUSZEUSZVFXQXRUWNEUSZHUSZUUMUXC
      EUSZVFBCDXQXRYCFLLUWJUWPUXBUWRUXDYJXQUWOHVMUWJUWFUWIUWQUXCEUWKYJXQUWNHVMV
      TWAUWLUXBUXFUXDUXGUWLUWOUXEXQHUWEXRUWNEVMWBUWLUWIUUMUXCEUWMWCWAUWNYCVFZUX
      FUUPUXGUURUXHUXEUUOXQHUWNYCXREVNWBUXHUXCUUQUUMEUWNYCXQHVNWBWAWGWDVJWHVRUW
      DYJUWEGUSZUWNHUSZUWQUWEUWNHUSZEUSZVFZDLVGCFVGZUVDUWCAUVQUXNUVQUVRUWBWIZAU
      VQVEZUXMCDFLAUVQUWEFUMZUWNLUMZUXMAUVQUXQUXRUXMUFWEWFVKWJUWDUVRUWAUXNUVDVL
      AUVQUVRUWBWKZAUVSUVTUWAWLZUXMUVDUUTUWNHUSZUWQUXCEUSZVFCDXQXRFLUWEXQVFZUXJ
      UYAUXLUYBUYCUXIUUTUWNHUWEXQYJGVNWCUYCUXKUXCUWQEUWEXQUWNHVMZWBWAUWNXRVFZUY
      AUVAUYBUVCUWNXRUUTHVNUYEUWQUVBUXCUUMEUWNXRYJHVNUWNXRXQHVNZVTWAVOWMWQWRUWD
      YJUWEIUSZUWNHUSZYJUXKHUSZVFZDLVGCFVGZUVIUWCAUVQUYKUXOUXPUYJCDFLAUVQUXQUXR
      UYJAUVQUXQUXRUYJUGWEWFVKWJUWDUVRUWAUYKUVIVLUXSUXTUYJUVIUVFUWNHUSZYJUXCHUS
      ZVFCDXQXRFLUYCUYHUYLUYIUYMUYCUYGUVFUWNHUWEXQYJIVNWCUYCUXKUXCYJHUYDWBWAUYE
      UYLUVGUYMUVHUWNXRUVFHVNUYEUXCUUMYJHUYFWBWAVOWMWQAJYJHUSZYJVFZBLVGZUWCUVKA
      UYOBLUHWNUWAUYPUVKVLUVSUVTUYOUVKBXRLYJXRVFZUYNUVJYJXRYJXRJHVNUYQWOWAWPWSV
      RWTXAVKVKAUVPUUKBFUUJAFKUTUOUUJRAKXPUTPXBXCZAUVOUUIUIFUUJUYRAUVNUUHUKLYAN
      AUVMUUGUJLYANAUVEYQUVLUUFAUUNYBUUSYIUVDYPAUUMXTLYAAHXSXQXRQXDZNXEAUUPYFUU
      RYHAXQXQUUOYEHXSQAXQXFAEYDXRYCOXDXGAUUMXTUUQYGEYDOUYSAHXSXQYCQXDXGWAAUVAY
      MUVCYOAUUTYLXRXRHXSQAGYKYJXQAGKVAUOYKSAKXPVAPXBXCXDAXRXFZXGAUVBYNUUMXTEYD
      OAHXSYJXRQXDUYSXGWAXHAUVIUUBUVKUUEAUVGYTUVHUUAAUVFYSXRXRHXSQAIYRYJXQAIKVC
      UOYRTAKXPVCPXBXCXDUYTXGAYJYJUUMXTHXSQAYJXFUYSXGWAAUVJUUDXRAJUUCXRXRHXSQAJ
      KVDUOUUCUAAKXPVDPXBXCUYTXGXIXJXJXKXKXKXKXLUKUJYDYKXSYRUUCXPUUJYAMUIBYAXMY
      DXMXSXMXPXMUUJXMYKXMYRXMUUCXMXNXO $.
      $( [22-Jun-2014] $)
  $}

  ${
    $d q r w x F $.  $d q r w x W $.
    $( A left module is a group. $)
    lmodgrp $p |- ( W e. LMod -> W e. Grp ) $=
      ( vr vw vx vq clmod wcel cgrp csca cfv crg cv cvsca co cbs cplusg wceq wa
      wral eqid w3a cmulr cur islmod simp1bi ) AFGAHGAIJZKGBLZCLZAMJZNZAOJZGUGU
      HDLZAPJZNUINUJUGULUINUMNQELZUGUFPJZNUHUINUNUHUINUJUMNQUAUNUGUFUBJZNUHUINU
      NUJUINQUFUCJZUHUINUHQRRCUKSDUKSBUFOJZSEURSDCUMUOUIUPUQUFURUKABEUKTUMTUITU
      FTURTUOTUPTUQTUDUE $.
      $( [25-Jun-2014] $) $( [8-Dec-2013] $)

    lmodrng.1 $e |- F = ( Scalar ` W ) $.
    $( The scalar component of a left module is a ring. $)
    lmodrng $p |- ( W e. LMod -> F e. Ring ) $=
      ( vr vw vx vq clmod wcel cgrp crg cv cfv co cbs cplusg wceq wa wral eqid
      cvsca w3a cmulr cur islmod simp2bi ) BHIBJIAKIDLZELZBUAMZNZBOMZIUGUHFLZBP
      MZNUINUJUGULUINUMNQGLZUGAPMZNUHUINUNUHUINUJUMNQUBUNUGAUCMZNUHUINUNUJUINQA
      UDMZUHUINUHQRREUKSFUKSDAOMZSGURSFEUMUOUIUPUQAURUKBDGUKTUMTUITCURTUOTUPTUQ
      TUEUF $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( The scalar component of a left module is an additive group. $)
    lmodfgrp $p |- ( W e. LMod -> F e. Grp ) $=
      ( clmod wcel crg cgrp lmodrng rnggrp syl ) BDEAFEAGEABCHAIJ $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    lmodbn0.b $e |- B = ( Base ` W ) $.
    $( The base set of a left module is nonempty. $)
    lmodbn0 $p |- ( W e. LMod -> B =/= (/) ) $=
      ( clmod wcel cgrp c0 wne lmodgrp grpbn0 syl ) BDEBFEAGHBIABCJK $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    lmodacl.f $e |- F = ( Scalar ` W ) $.
    lmodacl.k $e |- K = ( Base ` F ) $.
    lmodacl.p $e |- P = ( +g ` F ) $.
    $( Closure of ring addition for a left module. $)
    lmodacl $p |- ( ( W e. LMod /\ X e. K /\ Y e. K ) -> ( X P Y ) e. K ) $=
      ( clmod wcel cgrp co lmodfgrp grpcl syl3an1 ) DJKBLKECKFCKEFAMCKBDGNCABEF
      HIOP $.
      $( [19-Jun-2014] $) $( [14-Jan-2014] $)
  $}

  ${
    lmodmcl.f $e |- F = ( Scalar ` W ) $.
    lmodmcl.k $e |- K = ( Base ` F ) $.
    lmodmcl.t $e |- T = ( .r ` F ) $.
    $( Closure of ring multiplication for a left module. $)
    lmodmcl $p |- ( ( W e. LMod /\ X e. K /\ Y e. K ) -> ( X T Y ) e. K ) $=
      ( clmod wcel crg co lmodrng rngcl syl3an1 ) DJKBLKECKFCKEFAMCKBDGNCBAEFHI
      OP $.
      $( [19-Jun-2014] $) $( [14-Jan-2014] $)
  $}

  ${
    lmodsn0.f $e |- F = ( Scalar ` W ) $.
    lmodsn0.b $e |- B = ( Base ` F ) $.
    $( The set of scalars in a left module is nonempty. $)
    lmodsn0 $p |- ( W e. LMod -> B =/= (/) ) $=
      ( clmod wcel cgrp c0 wne lmodfgrp grpbn0 syl ) CFGBHGAIJBCDKABELM $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    lmodvacl.v $e |- V = ( Base ` W ) $.
    lmodvacl.a $e |- A = ( +g ` W ) $.
    $( Closure of vector addition for a left module. $)
    lmodvacl $p |- ( ( W e. LMod /\ X e. V /\ Y e. V ) -> ( X A Y ) e. V ) $=
      ( clmod wcel cgrp co lmodgrp grpcl syl3an1 ) CHICJIDBIEBIDEAKBICLBACDEFGM
      N $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( Left module vector sum is associative. $)
    lmodass $p |- ( ( W e. LMod /\ ( X e. V /\ Y e. V /\ Z e. V ) ) ->
                    ( ( X A Y ) A Z ) = ( X A ( Y A Z ) ) ) $=
      ( clmod wcel cgrp w3a co wceq lmodgrp grpass sylan ) CIJCKJDBJEBJFBJLDEAM
      FAMDEFAMAMNCOBACDEFGHPQ $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)

    $( Left cancellation law for vector sum. $)
    lmodlcan $p |- ( ( W e. LMod /\ ( X e. V /\ Y e. V /\ Z e. V ) ) ->
                     ( ( Z A X ) = ( Z A Y ) <-> X = Y ) ) $=
      ( clmod wcel cgrp w3a co wceq wb lmodgrp grplcan sylan ) CIJCKJDBJEBJFBJL
      FDAMFEAMNDENOCPBACDEFGHQR $.
      $( [19-Jun-2014] $) $( [12-Jan-2014] $)
  $}

  ${
    lmodvscl.v $e |- V = ( Base ` W ) $.
    lmodvscl.f $e |- F = ( Scalar ` W ) $.
    lmodvscl.s $e |- S = ( vsca ` W ) $.
    lmodvscl.k $e |- K = ( Base ` F ) $.
    $( Closure of scalar product for a left module.  ( ~ hvmulcl analog.) $)
    lmodvscl $p |- ( ( W e. LMod /\ R e. K /\ X e. V ) -> ( R S X ) e. V ) $=
      ( wcel wa co pm4.24 w3a cplusg cfv wceq eqid clmod biid cur simpld simp1d
      cmulr lmodlema syl3anb ) FUALZUIADLZUJUJMZGELZULULMZAGBNZELZUIUBUJOULOUIU
      KUMPZUOAGGFQRZNBNUNUNUQNZSZAACQRZNGBNURSZUPUOUSVAPAACUFRZNGBNAUNBNSCUCRZG
      BNGSMUQUTAABVBVCCDEFGGHUQTJIKUTTVBTVCTUGUDUEUH $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    lmodvsdi1.v $e |- V = ( Base ` W ) $.
    lmodvsdi1.a $e |- A = ( +g ` W ) $.
    lmodvsdi1.f $e |- F = ( Scalar ` W ) $.
    lmodvsdi1.s $e |- S = ( vsca ` W ) $.
    lmodvsdi1.k $e |- K = ( Base ` F ) $.
    $( Distributive law for scalar product.  ( ~ ax-hvdistr1 analog.) $)
    lmodvsdi1 $p |- ( ( W e. LMod /\ R e. K /\ ( X e. V /\ Y e. V ) ) ->
                      ( R S ( X A Y ) ) = ( ( R S X ) A ( R S Y ) ) ) $=
      ( wcel wa co wceq cfv eqid clmod biid pm4.24 ancom w3a cmulr cur lmodlema
      cplusg simpld simp2d syl3anb ) GUAOZUMBEOZUNUNPZHFOZIFOZPUQUPPZBHIAQCQBHC
      QZBICQAQRZUMUBUNUCUPUQUDUMUOURUEZUSFOZUTBBDUISZQHCQUSUSAQRZVAVBUTVDUEBBDU
      FSZQHCQBUSCQRDUGSZHCQHRPAVCBBCVEVFDEFGIHJKMLNVCTVETVFTUHUJUKUL $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)
  $}

  ${
    lmodvsdi2.v $e |- V = ( Base ` W ) $.
    lmodvsdi2.a $e |- A = ( +g ` W ) $.
    lmodvsdi2.f $e |- F = ( Scalar ` W ) $.
    lmodvsdi2.s $e |- S = ( vsca ` W ) $.
    lmodvsdi2.k $e |- K = ( Base ` F ) $.
    lmodvsdi2.p $e |- P = ( +g ` F ) $.
    $( Distributive law for scalar product.  ( ~ ax-hvdistr2 analog.) $)
    lmodvsdi2 $p |- ( ( W e. LMod /\ ( Q e. K /\ R e. K ) /\ X e. V ) ->
                      ( ( Q P R ) S X ) = ( ( Q S X ) A ( R S X ) ) ) $=
      ( wcel wa co wceq clmod pm4.24 w3a cmulr cfv cur lmodlema simpld syl3an3b
      eqid simp3d ) JHQZIUAQZCGQDGQRZULULRZCDBSJESCJESDJESZASTZULUBUMUNUOUCZUPH
      QZDJJASESUPUPASTZUQURUSUTUQUCCDFUDUEZSJESCUPESTFUFUEZJESJTRABCDEVAVBFGHIJ
      JKLNMOPVAUJVBUJUGUHUKUI $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)
  $}

  ${
    lmodvsass.v $e |- V = ( Base ` W ) $.
    lmodvsass.f $e |- F = ( Scalar ` W ) $.
    lmodvsass.s $e |- S = ( vsca ` W ) $.
    lmodvsass.k $e |- K = ( Base ` F ) $.
    lmodvsass.t $e |- T = ( .r ` F ) $.
    $( Associative law for scalar product.  ( ~ ax-hvmulass analog.) $)
    lmodvsass $p |- ( ( W e. LMod /\ ( Q e. K /\ R e. K ) /\ X e. V ) ->
                      ( ( Q T R ) S X ) = ( Q S ( R S X ) ) ) $=
      ( wcel wa co wceq cfv eqid clmod pm4.24 w3a cplusg lmodlema simprd simpld
      cur syl3an3b ) IGOZHUAOZAFOBFOPZUJUJPZABDQICQABICQZCQRZUJUBUKULUMUCZUOEUH
      SZICQIRZUPUNGOBIIHUDSZQCQUNUNUSQRABEUDSZQICQAICQUNUSQRUCUOURPUSUTABCDUQEF
      GHIIJUSTLKMUTTNUQTUEUFUGUI $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)
  $}

  ${
    lmod0cl.f $e |- F = ( Scalar ` W ) $.
    lmod0cl.k $e |- K = ( Base ` F ) $.
    lmod0cl.z $e |- Z = ( 0g ` F ) $.
    $( The ring zero in a left module belongs to the ring base set. $)
    lmod0cl $p |- ( W e. LMod -> Z e. K ) $=
      ( clmod wcel crg lmodrng rng0cl syl ) CHIAJIDBIACEKBADFGLM $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)
  $}

  ${
    lmod1cl.f $e |- F = ( Scalar ` W ) $.
    lmod1cl.k $e |- K = ( Base ` F ) $.
    lmod1cl.u $e |- U = ( 1r ` F ) $.
    $( The ring unit in a left module belongs to the ring base set. $)
    lmod1cl $p |- ( W e. LMod -> U e. K ) $=
      ( clmod wcel crg lmodrng rngidcl syl ) DHIBJIACIBDEKCBAFGLM $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)
  $}

  ${
    lmodvs1.v $e |- V = ( Base ` W ) $.
    lmodvs1.f $e |- F = ( Scalar ` W ) $.
    lmodvs1.s $e |- S = ( vsca ` W ) $.
    lmodvs1.u $e |- U = ( 1r ` F ) $.
    $( Scalar product with ring unit.  ( ~ ax-hvmulid analog.) $)
    lmodvs1 $p |- ( ( W e. LMod /\ X e. V ) -> ( U S X ) = X ) $=
      ( clmod wcel wa cfv co wceq eqid w3a cplusg simprd cbs simpl adantr simpr
      lmod1cl cmulr lmodlema syl122anc ) EKLZFDLZMUIBCUANZLZULUJUJBFAOZFPZUIUJU
      BUIULUJBCUKEHUKQZJUEUCZUPUIUJUDZUQUIULULMUJUJMRZBBCUFNZOFAOBUMAOPZUNURUMD
      LBFFESNZOAOUMUMVAOZPBBCSNZOFAOVBPRUTUNMVAVCBBAUSBCUKDEFFGVAQIHUOVCQUSQJUG
      TTUH $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)
  $}

  ${
    0vcl.v $e |- V = ( Base ` W ) $.
    0vcl.z $e |- Z = ( 0g ` W ) $.
    $( The zero vector is a vector.  ( ~ ax-hv0cl analog.) $)
    0vcl $p |- ( W e. LMod -> Z e. V ) $=
      ( clmod wcel cgrp lmodgrp grpidcl syl ) BFGBHGCAGBIABCDEJK $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)
  $}

  ${
    0vlid.v $e |- V = ( Base ` W ) $.
    0vlid.a $e |- A = ( +g ` W ) $.
    0vlid.z $e |- Z = ( 0g ` W ) $.
    $( Left identity law for the zero vector.  ( ~ hvaddid2 analog.) $)
    0vlid $p |- ( ( W e. LMod /\ X e. V ) -> ( Z A X ) = X ) $=
      ( clmod wcel cgrp co wceq lmodgrp grplid sylan ) CIJCKJDBJEDALDMCNBACEDFG
      HOP $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)

    $( Right identity law for the zero vector.  ( ~ ax-hvaddid analog.) $)
    0vrid $p |- ( ( W e. LMod /\ X e. V ) -> ( X A Z ) = X ) $=
      ( clmod wcel cgrp co wceq lmodgrp grprid sylan ) CIJCKJDBJDEALDMCNBACEDFG
      HOP $.
      $( [19-Jun-2014] $) $( [10-Jan-2014] $)

    $( Identity equivalent to the value of the zero vector.  Provides a
       convenient way to compute the value. $)
    0vid $p |- ( ( W e. LMod /\ X e. V ) -> ( ( X A X ) = X <-> Z = X ) ) $=
      ( clmod wcel cgrp co wceq wb lmodgrp grpid sylan ) CIJCKJDBJDDALDMEDMNCOB
      ACEDFGHPQ $.
      $( [19-Jun-2014] $) $( [9-Mar-2014] $)
  $}

  ${
    lmod0vs.v $e |- V = ( Base ` W ) $.
    lmod0vs.f $e |- F = ( Scalar ` W ) $.
    lmod0vs.s $e |- S = ( vsca ` W ) $.
    lmod0vs.o $e |- O = ( 0g ` F ) $.
    lmod0vs.z $e |- Z = ( 0g ` W ) $.
    $( Zero times a vector is the zero vector.  Equation 1a of [Kreyszig]
       p. 51.  ( ~ ax-hvmul0 analog.) $)
    lmod0vs $p |- ( ( W e. LMod /\ X e. V ) -> ( O S X ) = Z ) $=
      ( clmod wcel co cplusg cfv wceq eqid syl wa cbs crg lmodrng adantr rng0cl
      simpl simpr lmodvsdi2 syl121anc cgrp rnggrp grplid oveq1d eqtr3d lmodvscl
      syl2anc wb syl3anc 0vid syldan mpbid eqcomd ) EMNZFDNZUAZGCFAOZVFVGVGEPQZ
      OZVGRZGVGRZVFCCBPQZOZFAOZVIVGVFVDCBUBQZNZVPVEVNVIRVDVEUGZVFBUCNZVPVDVRVEB
      EIUDUEZVOBCVOSZKUFTZWAVDVEUHZVHVLCCABVODEFHVHSZIJVTVLSZUIUJVFVMCFAVFBUKNZ
      VPVMCRVFVRWEVSBULTWAVOVLBCCVTWDKUMUQUNUOVDVEVGDNZVJVKURVFVDVPVEWFVQWAWBCA
      BVODEFHIJVTUPUSVHDEVGGHWCLUTVAVBVC $.
      $( [19-Jun-2014] $) $( [12-Jan-2014] $)
  $}

  ${
    lmodvs0.f $e |- F = ( Scalar ` W ) $.
    lmodvs0.s $e |- S = ( vsca ` W ) $.
    lmodvs0.k $e |- K = ( Base ` F ) $.
    lmodvs0.z $e |- Z = ( 0g ` W ) $.
    $( Anything times the zero vector is the zero vector.  Equation 1b of
       [Kreyszig] p. 51.  ( ~ hvmul0 analog.) $)
    lmodvs0 $p |- ( ( W e. LMod /\ X e. K ) -> ( X S Z ) = Z ) $=
      ( clmod wcel wa c0g cfv cmulr co wceq eqid adantr crg lmodrng rngrz sylan
      oveq1d cbs simpl simpr rng0cl syl 0vcl lmodvsass syl121anc lmod0vs syldan
      oveq2d eqtrd 3eqtr3d ) DKLZECLZMZEBNOZBPOZQZFAQZVBFAQZEFAQZFVAVDVBFAUSBUA
      LZUTVDVBRBDGUBZCBVCEVBIVCSZVBSZUCUDUEVAVEEVFAQZVGVAUSUTVBCLZFDUFOZLZVEVLR
      USUTUGUSUTUHVAVHVMUSVHUTVITCBVBIVKUIUJUSVOUTVNDFVNSZJUKTZEVBAVCBCVNDFVPGH
      IVJULUMVAVFFEAUSUTVOVFFRVQABVBVNDFFVPGHVKJUNUOZUPUQVRUR $.
      $( [19-Jun-2014] $) $( [12-Jan-2014] $)
  $}

  ${
    lmodvnegcl.v $e |- V = ( Base ` W ) $.
    lmodvnegcl.n $e |- N = ( invg ` W ) $.
    $( Closure of vector negative. $)
    lmodvnegcl $p |- ( ( W e. LMod /\ X e. V ) -> ( N ` X ) e. V ) $=
      ( clmod wcel cgrp cfv lmodgrp grpinvcl sylan ) CGHCIHDBHDAJBHCKBCADEFLM
      $.
      $( [19-Jun-2014] $) $( [18-Apr-2014] $)
  $}

  ${
    lmodvnegid.v $e |- V = ( Base ` W ) $.
    lmodvnegid.p $e |- P = ( +g ` W ) $.
    lmodvnegid.z $e |- Z = ( 0g ` W ) $.
    lmodvnegid.n $e |- N = ( invg ` W ) $.
    $( Addition of a vector with its negative. $)
    lmodvnegid $p |- ( ( W e. LMod /\ X e. V ) -> ( X P ( N ` X ) ) = Z ) $=
      ( clmod wcel cgrp cfv co wceq lmodgrp grprinv sylan ) DKLDMLECLEEBNAOFPDQ
      CADBFEGHIJRS $.
      $( [19-Jun-2014] $) $( [18-Apr-2014] $)
  $}

  ${
    lmodvneg1.v $e |- V = ( Base ` W ) $.
    lmodvneg1.n $e |- N = ( invg ` W ) $.
    lmodvneg1.f $e |- F = ( Scalar ` W ) $.
    lmodvneg1.s $e |- S = ( vsca ` W ) $.
    lmodvneg1.u $e |- U = ( 1r ` F ) $.
    lmodvneg1.m $e |- M = ( invg ` F ) $.
    $( Minus 1 times a vector is the negative of the vector.  Equation 2 of
       [Kreyszig] p. 51. $)
    lmodvneg1 $p |- ( ( W e. LMod /\ X e. V ) ->
                      ( ( M ` U ) S X ) = ( N ` X ) ) $=
      ( wcel c0g cfv co wceq eqid clmod wa cplusg simpl cbs cgrp adantr lmod1cl
      lmodfgrp grpinvcl syl2anc simpr lmodvscl syl3anc lmodass syl13anc lmodvs1
      lmodvnegcl oveq2d grplinv oveq1d lmodvsdi2 syl121anc lmod0vs eqtr3d 0vlid
      3eqtr3d lmodvnegid syldan 0vrid 3eqtr3rd ) GUAOZHFOZUBZGPQZHEQZGUCQZRZBDQ
      ZHARZVOVQRZVPVTVNVTHVQRZVPVQRZVTHVPVQRZVQRZVRWAVNVLVTFOZVMVPFOZWCWESVLVMU
      DZVNVLVSCUEQZOZVMWFWHVNCUFOZBWIOZWJVLWKVMCGKUIUGZVLWLVMBCWIGKWITZMUHUGZWI
      CDBWNNUJUKZVLVMULZVSACWIFGHIKLWNUMUNZWQEFGHIJURZVQFGVTHVPIVQTZUOUPVNWBVOV
      PVQVNVTBHARZVQRZWBVOVNXAHVTVQABCFGHIKLMUQUSVNVSBCUCQZRZHARZCPQZHARXBVOVNX
      DXFHAVNWKWLXDXFSWMWOWIXCCDXFBWNXCTZXFTZNUTUKVAVNVLWJWLVMXEXBSWHWPWOWQVQXC
      VSBACWIFGHIWTKLWNXGVBVCACXFFGHVOIKLXHVOTZVDVGVEVAVNWDVOVTVQVQEFGHVOIWTXIJ
      VHUSVGVLVMWGVRVPSWSVQFGVPVOIWTXIVFVIVLVMWFWAVTSWRVQFGVTVOIWTXIVJVIVK $.
      $( [19-Jun-2014] $) $( [18-Apr-2014] $)
  $}

  ${
    lmodvsubcl.v $e |- V = ( Base ` W ) $.
    lmodvsubcl.m $e |- M = ( -g ` W ) $.
    $( Closure of vector subtraction.  ( ~ hvsubcl analog.) $)
    lmodvsubcl $p |- ( ( W e. LMod /\ X e. V /\ Y e. V ) -> ( X M Y ) e. V ) $=
      ( clmod wcel cgrp co lmodgrp grpsubcl syl3an1 ) CHICJIDBIEBIDEAKBICLBCADE
      FGMN $.
      $( [19-Jun-2014] $) $( [31-Mar-2014] $)
  $}

  ${
    lmodcom.v $e |- V = ( Base ` W ) $.
    lmodcom.a $e |- A = ( +g ` W ) $.
    $( Left module vector sum is commutative.  (Contributed by G&eacute;rard
       Lang, 25-Jun-2014.) $)
    lmodcom $p |- ( ( W e. LMod /\ X e. V /\ Y e. V ) ->
                    ( X A Y ) = ( Y A X ) ) $=
      ( wcel wceq cfv eqid syl3anc lmodvacl lmodvsdi2 syl121anc lmodvs1 oveq12d
      co lmodass syl13anc clmod w3a csca cur cplusg cvsca cbs simp1 lmod1cl syl
      lmodacl simp2 simp3 lmodvsdi1 syl112anc eqtr3d syl2anc eqtrd 3eqtr3d cgrp
      3eqtr4d wb lmodgrp grprcan mpbid 3com23 lmodlcan ) CUAHZDBHZEBHZUBZDDEARZ
      ARZDEDARZARZIZVLVNIZVKDDARZEARZVLDARZVMVOVKVSEARZVTEARZIZVSVTIZVKVREEARZA
      RZVLVLARZWAWBVKCUCJZUDJZWIWHUEJZRZDCUFJZRZWKEWLRZARZWIVLWLRZWPARZWFWGVKWK
      VLWLRZWOWQVKVHWKWHUGJZHZVIVJWRWOIVHVIVJUHZVKVHWIWSHZXBWTXAVKVHXBXAWIWHWSC
      WHKZWSKZWIKZUIUJZXFWJWHWSCWIWIXCXDWJKZUKLVHVIVJULZVHVIVJUMZAWKWLWHWSBCDEF
      GXCWLKZXDUNUOVKVHXBXBVLBHZWRWQIXAXFXFABCDEFGMZAWJWIWIWLWHWSBCVLFGXCXJXDXG
      NOUPVKWMVRWNWEAVKWMWIDWLRZXMARZVRVKVHXBXBVIWMXNIXAXFXFXHAWJWIWIWLWHWSBCDF
      GXCXJXDXGNOVKXMDXMDAVKVHVIXMDIXAXHWLWIWHBCDFXCXJXEPUQZXOQURVKWNWIEWLRZXPA
      RZWEVKVHXBXBVJWNXQIXAXFXFXIAWJWIWIWLWHWSBCEFGXCXJXDXGNOVKXPEXPEAVKVHVJXPE
      IXAXIWLWIWHBCEFXCXJXEPUQZXRQURQVKWPVLWPVLAVKVHXKWPVLIXAXLWLWIWHBCVLFXCXJX
      EPUQZXSQUSVKVHVRBHZVJVJWAWFIXAVKVHVIVIXTXAXHXHABCDDFGMLZXIXIABCVREEFGSTVK
      VHXKVIVJWBWGIXAXLXHXIABCVLDEFGSTVAVKCUTHZVSBHZVTBHZVJWCWDVBVKVHYBXACVCUJV
      KVHXTVJYCXAYAXIABCVREFGMLVKVHXKVIYDXAXLXHABCVLDFGMLXIBACVSVTEFGVDTVEVKVHV
      IVIVJVSVMIXAXHXHXIABCDDEFGSTVKVHVIVJVIVTVOIXAXHXIXHABCDEDFGSTUSVKVHXKVNBH
      ZVIVPVQVBXAXLVHVJVIYEABCEDFGMVFXHABCVLVNDFGVGTVE $.
      $( [25-Jun-2014] $)
  $}

  ${
    $d x y W $.
    $( A left module is an abelian group (of vectors, under addition). $)
    lmodabl $p |- ( W e. LMod -> W e. Abel ) $=
      ( vx vy clmod wcel cbs cfv cplusg lmodgrp eqidd cv eqid lmodcom isabld )
      ADEZBCAFGZAHGZAAIOPJOQJQPABKCKPLQLMN $.
      $( [25-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    lmod4.v $e |- V = ( Base ` W ) $.
    lmod4.p $e |- P = ( +g ` W ) $.
    $( Commutative/associative law for left module vector sum. $)
    lmod4 $p |- ( ( W e. LMod /\ ( X e. V /\ Y e. V ) /\ ( Z e. V /\ U e. V ) )
        -> ( ( X P Y ) P ( Z P U ) ) = ( ( X P Z ) P ( Y P U ) ) ) $=
      ( clmod wcel cabel wa co wceq lmodabl abl4 syl3an1 ) DJKDLKECKFCKMGCKBCKM
      EFANGBANANEGANFBANANODPCADBEFGHIQR $.
      $( [19-Jun-2014] $) $( [4-Feb-2014] $)

    lmodvaddsub4.m $e |- M = ( -g ` W ) $.
    $( Relationship between vector subtraction and addition.  ( ~ hvsubadd
       analog.) $)
    lmodvsubadd $p |- ( ( W e. LMod /\ ( A e. V /\ B e. V /\ C e. V ) )
          -> ( ( A M B ) = C <-> ( B P C ) = A ) ) $=
      ( clmod wcel cabel w3a co wceq wb lmodabl ablsubadd sylan ) GKLGMLAFLBFLC
      FLNABEOCPBCDOAPQGRFDGEABCHIJST $.
      $( [19-Jun-2014] $) $( [31-Mar-2014] $)

    $( Vector addition/subtraction law. $)
    lmodvaddsub4 $p |- ( ( W e. LMod /\ ( A e. V /\ B e. V ) /\
                           ( C e. V /\ D e. V ) ) ->
      ( ( A P B ) = ( C P D ) <-> ( A M C ) = ( D M B ) ) ) $=
      ( clmod wcel cabel wa co wceq wb lmodabl abladdsub4 syl3an1 ) HLMHNMAGMBG
      MOCGMDGMOABEPCDEPQACFPDBFPQRHSGEHFDABCIJKTUA $.
      $( [19-Jun-2014] $) $( [31-Mar-2014] $)

    $( Addition/subtraction cancellation law for vectors.  ( ~ hvpncan
       analog.) $)
    lmodvpncan $p |- ( ( W e. LMod /\ A e. V /\ B e. V ) ->
                       ( ( A P B ) M B ) = A ) $=
      ( clmod wcel cgrp co wceq lmodgrp grppncan syl3an1 ) FJKFLKAEKBEKABCMBDMA
      NFOECFDABGHIPQ $.
      $( [19-Jun-2014] $) $( [16-Apr-2014] $)

    $( Cancellation law for vector subtraction ( ~ npcan analog). $)
    lmodvnpcan $p |- ( ( W e. LMod /\ A e. V /\ B e. V ) ->
                       ( ( A M B ) P B ) = A ) $=
      ( clmod wcel cgrp co wceq lmodgrp grpnpcan syl3an1 ) FJKFLKAEKBEKABDMBCMA
      NFOECFDABGHIPQ $.
      $( [19-Jun-2014] $) $( [19-Apr-2014] $)
  $}

  ${
    lmodvsubval2.v $e |- V = ( Base ` W ) $.
    lmodvsubval2.p $e |- P = ( +g ` W ) $.
    lmodvsubval2.m $e |- M = ( -g ` W ) $.
    lmodvsubval2.f $e |- F = ( Scalar ` W ) $.
    lmodvsubval2.s $e |- S = ( vsca ` W ) $.
    lmodvsubval2.n $e |- N = ( invg ` F ) $.
    lmodvsubval2.u $e |- U = ( 1r ` F ) $.
    $( Value of vector subtraction in terms of addition.  ( ~ hvsubval
       analog.)  (The proof was shortened by Mario Carneiro, 19-Jun-2014.) $)
    lmodvsubval2 $p |- ( ( W e. LMod /\ A e. V /\ B e. V )
          -> ( A M B ) = ( A P ( ( N ` U ) S B ) ) ) $=
      ( wcel co cfv clmod cminusg wceq eqid grpsubval 3adant1 lmodvneg1 3adant2
      w3a oveq2d eqtr4d ) JUARZAIRZBIRZUIZABGSZABJUBTZTZCSZAEHTBDSZCSUMUNUPUSUC
      ULICJUQGABKLUQUDZMUEUFUOUTURACULUNUTURUCUMDEFHUQIJBKVANOQPUGUHUJUK $.
      $( [19-Jun-2014] $) $( [31-Mar-2014] $)
  $}

  ${
    lmodvsubdi1.v $e |- V = ( Base ` W ) $.
    lmodvsubdi1.t $e |- T = ( vsca ` W ) $.
    lmodvsubdi1.f $e |- F = ( Scalar ` W ) $.
    lmodvsubdi1.k $e |- K = ( Base ` F ) $.
    lmodvsubdi1.m $e |- M = ( -g ` W ) $.
    lmodvsubdi1.w $e |- ( ph -> W e. LMod ) $.
    lmodvsubdi1.a $e |- ( ph -> A e. K ) $.
    lmodvsubdi1.x $e |- ( ph -> X e. V ) $.
    lmodvsubdi1.y $e |- ( ph -> Y e. V ) $.
    $( Scalar multiplication distributive law for subtraction.  ( ~ hvsubdistr1
       analog, with longer proof since our scalar multiplication is not
       commutative.) $)
    lmodvsubdi1 $p |- ( ph
       -> ( A T ( X M Y ) ) = ( ( A T X ) M ( A T Y ) ) ) $=
      ( co cur cfv cminusg cplusg wcel wceq cgrp crg lmodrng syl rnggrp rngidcl
      clmod grpinvcl syl2anc lmodvscl syl3anc lmodvsdi1 syl112anc cmulr rngnegr
      eqid rngnegl eqtr4d oveq1d lmodvsass syl121anc 3eqtr3d eqtrd lmodvsubval2
      oveq2d 3eqtr4d ) ABIDUAUBZDUCUBZUBZJCTZHUDUBZTZCTZBICTZVOBJCTZCTZVQTZBIJF
      TZCTVTWAFTZAVSVTBVPCTZVQTZWCAHUMUEZBEUEZIGUEZVPGUEZVSWGUFPQRAWHVOEUEZJGUE
      ZWKPADUGUEZVMEUEZWLADUHUEZWNAWHWPPDHMUIUJZDUKUJAWPWOWQEDVMNVMVBZULUJEDVNV
      MNVNVBZUNUOZSVOCDEGHJKMLNUPUQVQBCDEGHIVPKVQVBZMLNURUSAWFWBVTVQABVODUTUBZT
      ZJCTZVOBXBTZJCTZWFWBAXCXEJCAXCBVNUBXEAEDXBVMVNBNXBVBZWRWSWQQVAAEDXBVMVNBN
      XGWRWSWQQVCVDVEAWHWIWLWMXDWFUFPQWTSBVOCXBDEGHJKMLNXGVFVGAWHWLWIWMXFWBUFPW
      TQSVOBCXBDEGHJKMLNXGVFVGVHVKVIAWDVRBCAWHWJWMWDVRUFPRSIJVQCVMDFVNGHKXAOMLW
      SWRVJUQVKAWHVTGUEZWAGUEZWEWCUFPAWHWIWJXHPQRBCDEGHIKMLNUPUQAWHWIWMXIPQSBCD
      EGHJKMLNUPUQVTWAVQCVMDFVNGHKXAOMLWSWRVJUQVL $.
      $( [2-Jul-2014] $)
  $}

  ${
    lmodvsubdi2.v $e |- V = ( Base ` W ) $.
    lmodvsubdi2.t $e |- T = ( vsca ` W ) $.
    lmodvsubdi2.f $e |- F = ( Scalar ` W ) $.
    lmodvsubdi2.k $e |- K = ( Base ` F ) $.
    lmodvsubdi2.m $e |- M = ( -g ` W ) $.
    lmodvsubdi2.s $e |- S = ( -g ` F ) $.
    lmodvsubdi2.w $e |- ( ph -> W e. LMod ) $.
    lmodvsubdi2.a $e |- ( ph -> A e. K ) $.
    lmodvsubdi2.b $e |- ( ph -> B e. K ) $.
    lmodvsubdi2.x $e |- ( ph -> X e. V ) $.
    $( Scalar multiplication distributive law for subtraction.  ( ~ hvsubdistr2
       analog.) $)
    lmodvsubdi2 $p |- ( ph
       -> ( ( A S B ) T X ) = ( ( A T X ) M ( B T X ) ) ) $=
      ( co cur cfv cminusg cplusg wcel wceq eqid grpsubval syl2anc oveq1d clmod
      crg lmodrng syl rnggrp grpinvcl lmodvsdi2 syl121anc cmulr rngnegl rngidcl
      cgrp lmodvsass eqtr3d oveq2d 3eqtrd lmodvscl syl3anc lmodvsubval2 eqtr4d
      ) ABCDUBZKEUBZBKEUBZFUCUDZFUEUDZUDZCKEUBZEUBZJUFUDZUBZVOVSHUBZAVNBCVQUDZF
      UFUDZUBZKEUBZVOWDKEUBZWAUBZWBAVMWFKEABGUGZCGUGZVMWFUHSTGWEFVQDBCOWEUIZVQU
      IZQUJUKULAJUMUGZWJWDGUGZKIUGZWGWIUHRSAFVDUGZWKWOAFUNUGZWQAWNWRRFJNUOUPZFU
      QUPZTGFVQCOWMURUKUAWAWEBWDEFGIJKLWAUIZNMOWLUSUTAWHVTVOWAAVRCFVAUDZUBZKEUB
      ZWHVTAXCWDKEAGFXBVPVQCOXBUIZVPUIZWMWSTVBULAWNVRGUGZWKWPXDVTUHRAWQVPGUGZXG
      WTAWRXHWSGFVPOXFVCUPGFVQVPOWMURUKTUAVRCEXBFGIJKLNMOXEVEUTVFVGVHAWNVOIUGZV
      SIUGZWCWBUHRAWNWJWPXIRSUABEFGIJKLNMOVIVJAWNWKWPXJRTUACEFGIJKLNMOVIVJVOVSW
      AEVPFHVQIJLXAPNMWMXFVKVJVL $.
      $( [2-Jul-2014] $)
  $}

  ${
    lmodvsubeq0.v $e |- V = ( Base ` W ) $.
    lmodvsubeq0.o $e |- O = ( 0g ` W ) $.
    lmodvsubeq0.m $e |- M = ( -g ` W ) $.
    $( If the difference between two vectors is zero, they are equal.
       ( ~ hvsubeq0 analog.) $)
    lmodvsubeq0 $p |- ( ( W e. LMod /\ A e. V /\ B e. V )
                  -> ( ( A M B ) = O <-> A = B ) ) $=
      ( clmod wcel cgrp co wceq wb lmodgrp grpsubeq0 syl3an1 ) FJKFLKAEKBEKABCM
      DNABNOFPEFCDABGHIQR $.
      $( [19-Jun-2014] $) $( [31-Mar-2014] $)

    $( Subtraction of a vector from itself.  ( ~ hvsubid analog.) $)
    lmodvsubid $p |- ( ( W e. LMod /\ A e. V ) -> ( A M A ) = O ) $=
      ( clmod wcel cgrp co wceq lmodgrp grpsubid sylan ) EIJEKJADJAABLCMENDEBCA
      FGHOP $.
      $( [19-Jun-2014] $) $( [16-Apr-2014] $)
  $}

  $c LSubSp $.

  $( Extend class notation with all (not necessarily closed) linear subspaces
     of a left module or left vector space. $)
  clss $a class LSubSp $.

  ${
    $d a b s x w $.
    $( Define the set of all (not necessarily closed) linear subspaces of a
       left module or left vector space. $)
    df-lss $a |- LSubSp = ( w e. _V |->
     { s e. ( ~P ( Base ` w ) \ { (/) } ) |
        A. x e. ( Base ` ( Scalar ` w ) ) A. a e. s A. b e. s
          ( ( x ( vsca ` w ) a ) ( +g ` w ) b ) e. s } ) $.
  $}

  ${
    $d s w x B $.  $d s w P $.  $d s w T $.  $d a b s x U $.  $d a b s w x W $.
    $d s w V $.
    lssset.f $e |- F = ( Scalar ` W ) $.
    lssset.b $e |- B = ( Base ` F ) $.
    lssset.v $e |- V = ( Base ` W ) $.
    lssset.p $e |- P = ( +g ` W ) $.
    lssset.t $e |- T = ( vsca ` W ) $.
    lssset.s $e |- S = ( LSubSp ` W ) $.
    $( The set of all (not necessarily closed) linear subspaces of a left
       module or left vector space. $)
    lssset $p |- ( W e. X -> S = { s e. ( ~P V \ { (/) } ) |
         A. x e. B A. a e. s A. b e. s ( ( x T a ) P b ) e. s } ) $=
      ( cfv cbs vw wcel clss cv co wral cpw csn cdif crab cvv wceq cvsca cplusg
      c0 elex csca fveq2 syl6eqr pweqd difeq1d fveq2d oveqd oveq1d eqtrd eleq1d
      2ralbidv raleqbidv rabeqbidv df-lss fvex eqeltri difexg ax-mp rabex fvmpt
      pwex syl syl5eq ) HIUBZDHUCSZAUDZKUDZEUEZLUDZCUEZJUDZUBZLWGUFKWGUFZABUFZJ
      GUGZUOUHZUIZUJZRVTHUKUBWAWNULHIUPUAHWBWCUAUDZUMSZUEZWEWOUNSZUEZWGUBZLWGUF
      KWGUFZAWOUQSZTSZUFZJWOTSZUGZWLUIZUJWNUKUCWOHULZXDWJJXGWMXHXFWKWLXHXEGXHXE
      HTSZGWOHTUROUSUTVAXHXAWIAXCBXHXCFTSBXHXBFTXHXBHUQSFWOHUQURMUSVBNUSXHWTWHK
      LWGWGXHWSWFWGXHWSWDWEWRUEWFXHWQWDWEWRXHWPEWBWCXHWPHUMSEWOHUMURQUSVCVDXHWR
      CWDWEXHWRHUNSCWOHUNURPUSVCVEVFVGVHVIAUAJKLVJWJJWMWKUKUBWMUKUBGGXIUKOHTVKV
      LVQWKWLUKVMVNVOVPVRVS $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)

    $( The predicate "is a subspace" (of a left module or left vector
       space). $)
    islss $p |- ( W e. X -> ( U e. S <-> ( U C_ V /\ U =/= (/)
          /\ A. x e. B A. a e. U A. b e. U ( ( x T a ) P b ) e. U ) ) ) $=
      ( wcel wral vs cv co cpw c0 csn cdif wss wne w3a lssset eleq2d wa eldifsn
      crab cbs cfv cvv fvex eqeltri elpw2 anbi1i bitri eleq2 raleqbi1dv ralbidv
      wceq elrab df-3an 3bitr4i syl6bb ) IJSZFDSFAUBKUBEUCLUBCUCZUAUBZSZLVNTZKV
      NTZABTZUAHUDZUEUFUGZUOZSZFHUHZFUEUIZVMFSZLFTZKFTZABTZUJZVLDWAFABCDEGHIJUA
      KLMNOPQRUKULFVTSZWHUMWCWDUMZWHUMWBWIWJWKWHWJFVSSZWDUMWKFVSUEUNWLWCWDFHHIU
      PUQUROIUPUSUTVAVBVCVBVRWHUAFVTVNFVGVQWGABVPWFKVNFVOWELVNFVNFVMVDVEVEVFVHW
      CWDWHVIVJVK $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    $d a b x ph $.  $d a b x U $.  $d a b x W $.  $d a b B $.
    islssd.f $e |- ( ph -> F = ( Scalar ` W ) ) $.
    islssd.b $e |- ( ph -> B = ( Base ` F ) ) $.
    islssd.v $e |- ( ph -> V = ( Base ` W ) ) $.
    islssd.p $e |- ( ph -> P = ( +g ` W ) ) $.
    islssd.t $e |- ( ph -> T = ( vsca ` W ) ) $.
    islssd.s $e |- ( ph -> S = ( LSubSp ` W ) ) $.
    islssd.u $e |- ( ph -> U C_ V ) $.
    islssd.z $e |- ( ph -> U =/= (/) ) $.
    islssd.c $e |- ( ( ph /\ ( x e. B /\ a e. U /\ b e. U ) ) ->
            ( ( x T a ) P b ) e. U ) $.
    $( Properties that determine a subspace of a left module or left vector
       space. $)
    islssd $p |- ( ( ph /\ W e. X ) -> U e. S ) $=
      ( wcel wa clss cfv cbs wss c0 wne cv cvsca cplusg wral csca sseqtrd 3exp2
      co w3a imp43 ralrimivva fveq2d eqtrd eleq2d oveqd oveq1d 2ralbidv 3imtr3d
      ex eleq1d ralrimiv 3jca eqid islss syl5ibr impcom wceq adantr eleqtrrd )
      AJKUCZUDGJUEUFZEVTAGWAUCZAWBVTGJUGUFZUHZGUIUJZBUKZLUKZJULUFZURZMUKZJUMUFZ
      URZGUCZMGUNLGUNZBJUOUFZUGUFZUNZUSAWDWEWQAGIWCTPUPUAAWNBWPAWFCUCZWFWGFURZW
      JDURZGUCZMGUNLGUNZWFWPUCWNAWRXBAWRUDXALMGGAWRWGGUCZWJGUCZXAAWRXCXDXAUBUQU
      TVAVIACWPWFACHUGUFWPOAHWOUGNVBVCVDAXAWMLMGGAWTWLGAWTWSWJWKURWLADWKWSWJQVE
      AWSWIWJWKAFWHWFWGRVEVFVCVJVGVHVKVLBWPWKWAWHGWOWCJKLMWOVMWPVMWCVMWKVMWHVMW
      AVMVNVOVPAEWAVQVTSVRVS $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x V $.  $d a b x W $.
    lssss.v $e |- V = ( Base ` W ) $.
    lssss.s $e |- S = ( LSubSp ` W ) $.
    $( A subspace is a set of vectors. $)
    lssss $p |- ( ( W e. X /\ U e. S ) -> U C_ V ) $=
      ( vx va vb wcel wa wss c0 wne cv cfv co wral eqid cvsca cplusg csca islss
      cbs w3a biimpa simp1d ) DEKZBAKZLBCMZBNOZHPIPDUAQZRJPDUBQZRBKJBSIBSHDUCQZ
      UEQZSZUIUJUKULUQUFHUPUNAUMBUOCDEIJUOTUPTFUNTUMTGUDUGUH $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( A subspace member is a vector. $)
    lssel $p |- ( ( W e. Y /\ U e. S /\ X e. U ) -> X e. V ) $=
      ( wcel wa lssss sseld 3impia ) DFIZBAIZEBIECINOJBCEABCDFGHKLM $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)

    $( The set of vectors in a left module is a subspace. $)
    lss1 $p |- ( W e. LMod -> V e. S ) $=
      ( vx va vb clmod wcel csca cfv cbs cplusg eqidd wceq a1i cv co eqid cvsca
      clss wss ssid lmodbn0 wa simpl lmodvscl 3adant3r3 simpr3 lmodvacl syl3anc
      w3a islssd anidms ) CIJZBAJUPFCKLZMLZCNLZACUALZBUQBCIGHUPUQOUPUROBCMLPUPD
      QUPUSOUPUTOACUBLPUPEQBBUCUPBUDQBCDUEUPFRZURJZGRZBJZHRZBJZUMZUFUPVAVCUTSZB
      JZVFVHVEUSSBJUPVGUGUPVBVDVIVFVAUTUQURBCVCDUQTUTTURTUHUIUPVBVDVFUJUSBCVHVE
      DUSTUKULUNUO $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x W $.
    lssn0.s $e |- S = ( LSubSp ` W ) $.
    $( A subspace is not empty. $)
    lssn0 $p |- ( ( W e. X /\ U e. S ) -> U =/= (/) ) $=
      ( vx va vb wcel wa cbs cfv wss c0 wne cv cvsca co wral eqid cplusg biimpa
      csca w3a islss simp2d ) CDIZBAIZJBCKLZMZBNOZFPGPCQLZRHPCUALZRBIHBSGBSFCUC
      LZKLZSZUGUHUJUKUPUDFUOUMAULBUNUICDGHUNTUOTUITUMTULTEUEUBUF $.
      $( [19-Jun-2014] $) $( [12-Jan-2014] $)
  $}

  ${
    $d x B $.  $d a b x P $.  $d a b x T $.  $d a b x U $.  $d a b x W $.
    $d a b X $.  $d b Y $.  $d a b x Z $.
    lsscl.f $e |- F = ( Scalar ` W ) $.
    lsscl.b $e |- B = ( Base ` F ) $.
    lsscl.p $e |- P = ( +g ` W ) $.
    lsscl.t $e |- T = ( vsca ` W ) $.
    lsscl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure property of a subspace. $)
    lsscl $p |- ( ( ( W e. V /\ U e. S )
      /\ ( Z e. B /\ X e. U /\ Y e. U ) ) -> ( ( Z T X ) P Y ) e. U ) $=
      ( vx va wcel co vb wa cv wral w3a cbs cfv wss c0 eqid islss biimpa simp3d
      wne wceq oveq1 oveq1d eleq1d oveq2 rcla43v mpan9 ) HGSZECSZUBZQUCZRUCZDTZ
      UAUCZBTZESZUAEUDREUDQAUDZKASIESJESUEKIDTZJBTZESZVDEHUFUGZUHZEUIUNZVKVBVCV
      PVQVKUEQABCDEFVOHGRUALMVOUJNOPUKULUMVJVNKVFDTZVHBTZESVLVHBTZESQRUAKIJAEEV
      EKUOZVIVSEWAVGVRVHBVEKVFDUPUQURVFIUOZVSVTEWBVRVLVHBVFIKDUSUQURVHJUOVTVMEV
      HJVLBUSURUTVA $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    lssvsubcl.m $e |- M = ( -g ` W ) $.
    lssvsubcl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of vector subtraction in a subspace. $)
    lssvsubcl $p |- ( ( ( W e. LMod /\ U e. S )
          /\ ( X e. U /\ Y e. U ) ) -> ( X M Y ) e. U ) $=
      ( clmod wcel wa co cfv cbs wceq eqid lssel 3expa syl3anc syl csca cminusg
      cplusg simpll adantrr adantrl lmodvsubval2 cgrp lmodfgrp lmod1cl grpinvcl
      cur cvsca syl2anc lmodvscl lmodcom simplr simprr simprl syl23anc eqeltrd
      lsscl ) DIJZBAJZKZEBJZFBJZKZKZEFCLZEDUAMZULMZVKUBMZMZFDUMMZLZDUCMZLZBVIVC
      EDNMZJZFVSJZVJVROVCVDVHUDZVEVFVTVGVCVDVFVTABVSDEIVSPZHQRUEZVEVGWAVFVCVDVG
      WAABVSDFIWCHQRUFZEFVQVOVLVKCVMVSDWCVQPZGVKPZVOPZVMPZVLPZUGSVIVRVPEVQLZBVI
      VCVTVPVSJZVRWKOWBWDVIVCVNVKNMZJZWAWLWBVIVKUHJZVLWMJZWNVIVCWOWBVKDWGUITVIV
      CWPWBVLVKWMDWGWMPZWJUJTWMVKVMVLWQWIUKUNZWEVNVOVKWMVSDFWCWGWHWQUOSVQVSDEVP
      WCWFUPSVIVCVDWNVGVFWKBJWBVCVDVHUQWRVEVFVGURVEVFVGUSWMVQAVOBVKIDFEVNWGWQWF
      WHHVBUTVAVA $.
      $( [19-Jun-2014] $) $( [31-Mar-2014] $)
  $}

  ${
    $d x S $.  $d x U $.  $d a b x W $.  $d y X $.  $d a b x y Z $.
    lss0cl.z $e |- Z = ( 0g ` W ) $.
    lss0cl.s $e |- S = ( LSubSp ` W ) $.
    $( The zero vector belongs to every subspace.  (The proof was shortened by
       Mario Carneiro, 19-Jun-2014.) $)
    lss0cl $p |- ( ( W e. LMod /\ U e. S ) -> Z e. U ) $=
      ( vx clmod wcel wa cv wex c0 wne lssn0 n0 sylib w3a cfv eqid csg cbs wceq
      co simp1 lssel lmodvsubid syl2anc lssvsubcl anabsan2 3impa 3expia exlimdv
      eqeltrrd mpd ) CHIZBAIZJZGKZBIZGLZDBIZURBMNVAABCHFOGBPQURUTVBGUPUQUTVBUPU
      QUTRZUSUSCUASZUDZDBVCUPUSCUBSZIVEDUCUPUQUTUEABVFCUSHVFTZFUFUSVDDVFCVGEVDT
      ZUGUHUPUQUTVEBIZURUTVIABVDCUSUSVHFUIUJUKUNULUMUO $.
      $( [19-Jun-2014] $) $( [12-Jan-2014] $)

    $( The singleton of the zero vector is a subspace. $)
    lsssn0 $p |- ( W e. LMod -> { Z } e. S ) $=
      ( vx va vb clmod wcel cfv cbs eqidd wceq a1i eqid c0g cv co elsni csca c0
      csn cplusg cvsca clss 0vcl snssd wne cvv fvex eqeltri snnz w3a simpr2 syl
      wa oveq2d lmodvs0 3ad2antr1 eqtrd simpr3 oveq12d 0vlid mpdan adantr elsnc
      ovex sylibr islssd anidms ) BIJZCUCZAJVLFBUAKZLKZBUDKZABUEKZVMVNBLKZBIGHV
      LVNMVLVOMVLVRMVLVPMVLVQMABUFKNVLEOVLCVRVRBCVRPZDUGZUHVMUBUIVLCCBQKUJDBQUK
      ULUMOVLFRZVOJZGRZVMJZHRZVMJZUNZUQZWAWCVQSZWEVPSZCNWJVMJWHWJCCVPSZCWHWICWE
      CVPWHWIWACVQSZCWHWCCWAVQWHWDWCCNVLWBWDWFUOWCCTUPURVLWDWBWLCNWFVQVNVOBWACV
      NPVQPVOPDUSUTVAWHWFWECNVLWBWDWFVBWECTUPVCVLWKCNZWGVLCVRJWMVTVPVRBCCVSVPPD
      VDVEVFVAWJCWIWEVPVHVGVIVJVK $.
      $( [19-Jun-2014] $) $( [13-Jan-2014] $)

    $( The zero subspace is included in every subspace.  ( ~ sh0le analog.) $)
    lss0ss $p |- ( ( W e. LMod /\ X e. S ) -> { Z } C_ X ) $=
      ( clmod wcel wa lss0cl snssd ) BGHCAHIDCACBDEFJK $.
      $( [19-Jun-2014] $) $( [27-Mar-2014] $)

    $( No subspace is smaller than the zero subspace.  ( ~ shle0 analog.) $)
    lssle0 $p |- ( ( W e. LMod /\ X e. S )
         -> ( X C_ { Z } <-> X = { Z } ) ) $=
      ( clmod wcel wa csn wss wceq lss0ss biantrud eqss syl6bbr ) BGHCAHIZCDJZK
      ZSRCKZICRLQTSABCDEFMNCROP $.
      $( [19-Jun-2014] $) $( [20-Apr-2014] $)

    $( A nonzero subspace has a nonzero vector.  ( ~ shne0i analog.)  (The
       proof was shortened by Mario Carneiro, 19-Jun-2014.) $)
    lssne0 $p |- ( ( W e. LMod /\ X e. S )
      -> ( X =/= { Z } <-> E. y e. X y =/= Z ) ) $=
      ( clmod wcel wa cv wne wrex csn wceq wral wn c0 wb lssn0 eqsn syl syl6rbb
      nne ralbii ralnex bitr3i necon1abid ) CHIDBIJZAKZELZADMZDENZUIDUMOZUJEOZA
      DPZULQZUIDRLUNUPSBDCHGTADEUAUBUPUKQZADPUQURUOADUJEUDUEUKADUFUGUCUH $.
      $( [19-Jun-2014] $) $( [20-Apr-2014] $)
  $}

  ${
    $d x T $.  $d x U $.  $d x ph $.
    lssssr.v $e |- V = ( Base ` W ) $.
    lssssr.o $e |- O = ( 0g ` W ) $.
    lssssr.s $e |- S = ( LSubSp ` W ) $.
    lssssr.w $e |- ( ph -> W e. LMod ) $.
    lssssr.t $e |- ( ph -> T C_ V ) $.
    lssssr.u $e |- ( ph -> U e. S ) $.
    lssssr.1 $e |- ( ( ph /\ x e. ( V \ { O } ) ) -> ( x e. T -> x e. U ) ) $.
    $( Conclude subspace ordering from vector membership.  ( ~ ssrdv
       analog.) $)
    lssssr $p |- ( ph -> T C_ U ) $=
      ( cv wcel wi wa adantr simpr clmod lss0cl syl2anc eqeltrd a1d sseld ancrd
      wceq wne cdif eldifsn sylan2br exp32 com23 imp4b syld pm2.61dane ssrdv
      csn ) ABDEABPZDQZVAEQZRZVAFAVAFUIZSZVCVBVFVAFEAVEUAAFEQZVEAHUBQECQVGLNCEH
      FJKUCUDTUEUFAVAFUJZSVBVAGQZVBSZVCAVBVJRVHAVBVIADGVAMUGUHTAVHVIVBVCAVIVHVD
      AVIVHVDVIVHSAVAGFUTUKQVDVAGFULOUMUNUOUPUQURUS $.
      $( [17-Aug-2014] $)
  $}

  ${
    lssvacl.p $e |- P = ( +g ` W ) $.
    lssvacl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of vector addition in a subspace. $)
    lssvacl $p |- ( ( ( W e. LMod /\ U e. S ) /\ ( X e. U /\ Y e. U ) )
       -> ( X P Y ) e. U ) $=
      ( clmod wcel wa csca cfv cur cvsca co cbs wceq simpll eqid adantrr oveq1d
      lssel 3expa lmodvs1 syl2anc simplr lmod1cl ad2antrr simprl lsscl syl23anc
      simprr eqeltrrd ) DIJZCBJZKZECJZFCJZKZKZDLMZNMZEDOMZPZFAPZEFAPCVAVEEFAVAU
      OEDQMZJZVEERUOUPUTSZUQURVHUSUOUPURVHBCVGDEIVGTZHUCUDUAVDVCVBVGDEVJVBTZVDT
      ZVCTZUEUFUBVAUOUPVCVBQMZJZURUSVFCJVIUOUPUTUGUOVOUPUTVCVBVNDVKVNTZVMUHUIUQ
      URUSUJUQURUSUMVNABVDCVBIDEFVCVKVPGVLHUKULUN $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)
  $}

  ${
    lssvscl.f $e |- F = ( Scalar ` W ) $.
    lssvscl.t $e |- T = ( vsca ` W ) $.
    lssvscl.b $e |- B = ( Base ` F ) $.
    lssvscl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of scalar product in a subspace. $)
    lssvscl $p |- ( ( ( W e. LMod /\ U e. S ) /\ ( X e. B /\ Y e. U ) )
       -> ( X T Y ) e. U ) $=
      ( clmod wcel wa co c0g cfv eqid syl3anc cplusg simpll simprl simplr lssel
      wceq simprr lmodvscl 0vrid syl2anc lss0cl adantr lsscl syl23anc eqeltrrd
      cbs ) FMNZDBNZOZGANZHDNZOZOZGHCPZFQRZFUARZPZVDDVCUQVDFUPRZNZVGVDUFUQURVBU
      BZVCUQUTHVHNZVIVJUSUTVAUCZVCUQURVAVKVJUQURVBUDZUSUTVAUGZBDVHFHMVHSZLUETGC
      EAVHFHVOIJKUHTVFVHFVDVEVOVFSZVESZUIUJVCUQURUTVAVEDNZVGDNVJVMVLVNUSVRVBBDF
      VEVQLUKULAVFBCDEMFHVEGIKVPJLUMUNUO $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)
  $}

  ${
    $d a b k v x y z K $.  $d a b k v x y z T $.  $d a b k v x y z V $.
    $d k x F $.  $d a b k v x y z W $.  $d a b k v x y z X $.
    lss1d.v $e |- V = ( Base ` W ) $.
    lss1d.f $e |- F = ( Scalar ` W ) $.
    lss1d.t $e |- T = ( vsca ` W ) $.
    lss1d.k $e |- K = ( Base ` F ) $.
    lss1d.s $e |- S = ( LSubSp ` W ) $.
    $( One-dimensional subspace (or zero-dimensional if ` X ` is the zero
       vector).  (The proof was shortened by Mario Carneiro, 19-Jun-2014.) $)
    lss1d $p |- ( ( W e. LMod /\ X e. V )
        -> { v | E. k e. K v = ( k T X ) } e. S ) $=
      ( wcel co wceq wrex wa cfv vx va vb vy vz clmod cab cplusg csca a1i eqidd
      cv cbs cvsca clss wi lmodvscl 3expa an32s eleq1a syl rexlimdva abssdv c0g
      wne eqid lmod0cl adantr ax-17 hbre1 hbab hbne biidd ovex elabrex vtoclgaf
      c0 ne0i w3a vex weq eqeq1 rexbidv elab oveq1 eqeq2d cbvrexv bitri anbi12i
      reeanv bitr4i cmulr simpll simprr simprll lmodmcl syl3anc simprlr lmodacl
      simplr lmodvsdi2 syl121anc lmodvsass oveq1d eqtr2d rcla4ev syl2anc oveq12
      oveq2 sylan eqeq1d syl5ibrcom com23 rexlimdvva syl5bi com24 sylibr islssd
      expr exp3acom23 3imp2 anabss1 ) HUFOZIGOZAULZDULZICPZQZDFRZAUGZBOYCYDSZUA
      FHUHTZBCYJEGHUFUBUCEHUITQYKKUJFEUMTQYKMUJGHUMTQYKJUJYKYLUKCHUNTQYKLUJBHUO
      TQYKNUJYKYIAGYKYHYEGOZDFYKYFFOZSYGGOZYHYMUPYCYNYDYOYCYNYDYOYFCEFGHIJKLMUQ
      URUSYGGYEUTVAVBVCYKEVDTZFOZYJVQVEZYCYQYDEFHYPKMYPVFVGVHYRYRDUAYPFUAULZYPO
      DVIDUAYJVQYIDAUAYHDFVJVKYSVQODVIVLYFYPQYRVMYNYGYJOYRDAFYGYFICVNVOYJYGVRVA
      VPVAYKYSFOZUBULZYJOZUCULZYJOZVSSYSUUACPZUUCYLPZYGQZDFRZUUFYJOYKYTUUBUUDUU
      HYKUUDUUBYTUUHYKUUBUUDYTUUHUPZUUBUUDSZUUAUDULZICPZQZUUCUEULZICPZQZSZUEFRU
      DFRZYKUUIUUJUUMUDFRZUUPUEFRZSUURUUBUUSUUDUUTUUBUUAYGQZDFRZUUSYIUVBAUUAUBV
      TAUBWAYHUVADFYEUUAYGWBWCWDUVAUUMDUDFDUDWAYGUULUUAYFUUKICWEWFWGWHUUDUUCYGQ
      ZDFRZUUTYIUVDAUUCUCVTAUCWAYHUVCDFYEUUCYGWBWCWDUVCUUPDUEFDUEWAYGUUOUUCYFUU
      NICWEWFWGWHWIUUMUUPUDUEFFWJWKYKUUQUUIUDUEFFYKUUKFOZUUNFOZSZSYTUUQUUHYKUVG
      YTUUQUUHUPYKUVGYTSZSZUUHUUQYSUULCPZUUOYLPZYGQZDFRZUVIYSUUKEWLTZPZUUNEUHTZ
      PZFOZUVKUVQICPZQZUVMUVIYCUVOFOZUVFUVRYCYDUVHWMZUVIYCYTUVEUWAUWBYKUVGYTWNZ
      YKUVEUVFYTWOZUVNEFHYSUUKKMUVNVFZWPWQZYKUVEUVFYTWRZUVPEFHUVOUUNKMUVPVFZWSW
      QUVIUVSUVOICPZUUOYLPZUVKUVIYCUWAUVFYDUVSUWJQUWBUWFUWGYCYDUVHWTZYLUVPUVOUU
      NCEFGHIJYLVFKLMUWHXAXBUVIUWIUVJUUOYLUVIYCYTUVEYDUWIUVJQUWBUWCUWDUWKYSUUKC
      UVNEFGHIJKLMUWEXCXBXDXEUVLUVTDUVQFYFUVQQYGUVSUVKYFUVQICWEWFXFXGUUQUUGUVLD
      FUUQUUFUVKYGUUMUUEUVJQUUPUUFUVKQUUAUULYSCXIUUEUVJUUCUUOYLXHXJXKWCXLXSXMXN
      XOXTXPYAYIUUHAUUFUUEUUCYLVNYEUUFQYHUUGDFYEUUFYGWBWCWDXQXRYB $.
      $( [19-Jun-2014] $) $( [14-Jan-2014] $)
  $}

  ${
    $d a b k l m n o p v x A $.  $d k l F $.  $d a b k l m n o p v x K $.
    $d a b k l m n o p v x T $.  $d k l v V $.  $d a b k l v x W $.
    $d a b k l m n o p v x X $.  $d a b k l m n o p v x Y $.
    $d a b k l m n o p v x ph $.
    lss2d.v $e |- V = ( Base ` W ) $.
    lss2d.a $e |- A = ( +g ` W ) $.
    lss2d.f $e |- F = ( Scalar ` W ) $.
    lss2d.t $e |- T = ( vsca ` W ) $.
    lss2d.k $e |- K = ( Base ` F ) $.
    lss2d.s $e |- S = ( LSubSp ` W ) $.
    lss2d.w $e |- ( ph -> W e. LMod ) $.
    lss2d.x $e |- ( ph -> X e. V ) $.
    lss2d.y $e |- ( ph -> Y e. V ) $.
    $( A way to represent a two-dimensional subspace (when ` X ` and ` Y ` are
       nonzero vectors).  Obsolete since it can be proved trivially from
       ~ lsppr .  Keep temporarily for archiving them delete.  Obsolete as of
       22-Aug-2014. $)
    lss2dOLD $p |- ( ph
        -> { v | E. k e. K E. l e. K v = ( ( k T X ) A ( l T Y ) ) } e. S ) $=
      ( vx va vb vm vn vo vp clmod wcel cv co wceq wrex cab csca cfv a1i cplusg
      cbs cvsca wa wi adantr simprl lmodvscl syl3anc simprr lmodvacl eleq1a syl
      clss rexlimdvva abssdv c0g wne eqid lmod0cl lmod0vs syl2anc oveq12d 0vrid
      c0 0vcl eqtr2d oveq1 oveq1d eqeq2d oveq2d rcla42ev fvex eqeq1 elab sylibr
      2rexbidv ne0i w3a vex weq cbvrex2v bitri anbi12i ad2antrr simplrl lmodmcl
      cmulr simprll lmodacl simplrr simprlr lmod4 syl122anc lmodvsdi2 syl121anc
      lmodvsdi1 syl112anc lmodvsass eqtr4d 3eqtr4rd simpl3 simpr2 eqeq1d mpbird
      3adantl3 3adantr2 3exp2 rexlimdvv 3exp imp3a syl5bi exp3acom23 com24 ovex
      3imp2 islssd mpdan ) AJUJUKZBULZFULZKEUMZMULZLEUMZCUMZUNZMHUOFHUOZBUPZDUK
      TAUCHCDEUUGGIJUJUDUEGJUQURUNAPUSHGVAURUNARUSIJVAURUNANUSCJUTURUNAOUSEJVBU
      RUNAQUSDJVMURUNASUSAUUFBIAUUEYSIUKZFMHHAYTHUKZUUBHUKZVCZVCZUUDIUKZUUEUUHV
      DUULYRUUAIUKZUUCIUKZUUMAYRUUKTVEZUULYRUUIKIUKZUUNUUPAUUIUUJVFAUUQUUKUAVEY
      TEGHIJKNPQRVGVHUULYRUUJLIUKZUUOUUPAUUIUUJVIAUURUUKUBVEUUBEGHIJLNPQRVGVHCI
      JUUAUUCNOVJVHUUDIYSVKVLVNVOAJVPURZUUGUKZUUGWDVQAUUSUUDUNZMHUOFHUOZUUTAGVP
      URZHUKZUVDUUSUVCKEUMZUVCLEUMZCUMZUNZUVBAYRUVDTGHJUVCPRUVCVRZVSVLZUVJAUVGU
      USUUSCUMZUUSAUVEUUSUVFUUSCAYRUUQUVEUUSUNTUAEGUVCIJKUUSNPQUVIUUSVRZVTWAAYR
      UURUVFUUSUNTUBEGUVCIJLUUSNPQUVIUVLVTWAWBAYRUUSIUKZUVKUUSUNTAYRUVMTIJUUSNU
      VLWEVLCIJUUSUUSNOUVLWCWAWFUVAUVHUUSUVEUUCCUMZUNFMUVCUVCHHYTUVCUNZUUDUVNUU
      SUVOUUAUVEUUCCYTUVCKEWGWHWIUUBUVCUNZUVNUVGUUSUVPUUCUVFUVECUUBUVCLEWGWJWIW
      KVHUUFUVBBUUSJVPWLYSUUSUNUUEUVAFMHHYSUUSUUDWMWPWNWOUUGUUSWQVLAUCULZHUKZUD
      ULZUUGUKZUEULZUUGUKZWRVCUVQUVSEUMZUWACUMZUUDUNZMHUOFHUOZUWDUUGUKAUVRUVTUW
      BUWFAUWBUVTUVRUWFAUVTUWBUVRUWFVDZUVTUWBVCUVSUFULZKEUMZUGULZLEUMZCUMZUNZUG
      HUOUFHUOZUWAUHULZKEUMZUIULZLEUMZCUMZUNZUIHUOUHHUOZVCAUWGUVTUWNUWBUXAUVTUV
      SUUDUNZMHUOFHUOZUWNUUFUXCBUVSUDWSBUDWTUUEUXBFMHHYSUVSUUDWMWPWNUXBUWMUVSUW
      IUUCCUMZUNFMUFUGHHFUFWTZUUDUXDUVSUXEUUAUWIUUCCYTUWHKEWGWHWIMUGWTZUXDUWLUV
      SUXFUUCUWKUWICUUBUWJLEWGWJWIXAXBUWBUWAUUDUNZMHUOFHUOZUXAUUFUXHBUWAUEWSBUE
      WTUUEUXGFMHHYSUWAUUDWMWPWNUXGUWTUWAUWPUUCCUMZUNFMUHUIHHFUHWTZUUDUXIUWAUXJ
      UUAUWPUUCCYTUWOKEWGWHWIMUIWTZUXIUWSUWAUXKUUCUWRUWPCUUBUWQLEWGWJWIXAXBXCAU
      WNUXAUWGAUWMUXAUWGVDZUFUGHHAUWHHUKZUWJHUKZVCZUWMUXLAUXOUWMWRZUWTUWGUHUIHH
      UXPUWOHUKZUWQHUKZVCZUWTUVRUWFUXPUXSUWTUVRWRZVCZUWFUVQUWLEUMZUWSCUMZUUDUNZ
      MHUOFHUOZUXPUXSUVRUYEUWTAUXOUXSUVRVCZUYEUWMAUXOVCZUYFVCZUVQUWHGXGURZUMZUW
      OGUTURZUMZHUKZUVQUWJUYIUMZUWQUYKUMZHUKZUYCUYLKEUMZUYOLEUMZCUMZUNZUYEUYHYR
      UYJHUKZUXQUYMAYRUXOUYFTXDZUYHYRUVRUXMVUAVUBUYGUXSUVRVIZAUXMUXNUYFXEZUYIGH
      JUVQUWHPRUYIVRZXFVHZUYGUXQUXRUVRXHZUYKGHJUYJUWOPRUYKVRZXIVHUYHYRUYNHUKZUX
      RUYPVUBUYHYRUVRUXNVUIVUBVUCAUXMUXNUYFXJZUYIGHJUVQUWJPRVUEXFVHZUYGUXQUXRUV
      RXKZUYKGHJUYNUWQPRVUHXIVHUYHUYJKEUMZUWPCUMZUYNLEUMZUWRCUMZCUMZVUMVUOCUMZU
      WSCUMZUYSUYCUYHYRVUMIUKZUWPIUKZVUOIUKZUWRIUKZVUQVUSUNVUBUYHYRVUAUUQVUTVUB
      VUFAUUQUXOUYFUAXDZUYJEGHIJKNPQRVGVHUYHYRUXQUUQVVAVUBVUGVVDUWOEGHIJKNPQRVG
      VHUYHYRVUIUURVVBVUBVUKAUURUXOUYFUBXDZUYNEGHIJLNPQRVGVHUYHYRUXRUURVVCVUBVU
      LVVEUWQEGHIJLNPQRVGVHCUWRIJVUMUWPVUONOXLXMUYHUYQVUNUYRVUPCUYHYRVUAUXQUUQU
      YQVUNUNVUBVUFVUGVVDCUYKUYJUWOEGHIJKNOPQRVUHXNXOUYHYRVUIUXRUURUYRVUPUNVUBV
      UKVULVVECUYKUYNUWQEGHIJLNOPQRVUHXNXOWBUYHUYBVURUWSCUYHUYBUVQUWIEUMZUVQUWK
      EUMZCUMZVURUYHYRUVRUWIIUKZUWKIUKZUYBVVHUNVUBVUCUYHYRUXMUUQVVIVUBVUDVVDUWH
      EGHIJKNPQRVGVHUYHYRUXNUURVVJVUBVUJVVEUWJEGHIJLNPQRVGVHCUVQEGHIJUWIUWKNOPQ
      RXPXQUYHVUMVVFVUOVVGCUYHYRUVRUXMUUQVUMVVFUNVUBVUCVUDVVDUVQUWHEUYIGHIJKNPQ
      RVUEXRXOUYHYRUVRUXNUURVUOVVGUNVUBVUCVUJVVEUVQUWJEUYIGHIJLNPQRVUEXRXOWBXSW
      HXTUYDUYTUYCUYQUUCCUMZUNFMUYLUYOHHYTUYLUNZUUDVVKUYCVVLUUAUYQUUCCYTUYLKEWG
      WHWIUUBUYOUNZVVKUYSUYCVVMUUCUYRUYQCUUBUYOLEWGWJWIWKVHYEYFUYAUWEUYDFMHHUYA
      UWDUYCUUDUYAUWCUYBUWAUWSCUYAUVSUWLUVQEAUXOUWMUXTYAWJUXPUXSUWTUVRYBWBYCWPY
      DYGYHYIYHYJYKYLYMYOUUFUWFBUWDUWCUWACYNYSUWDUNUUEUWEFMHHYSUWDUUDWMWPWNWOYP
      YQ $.
      $( [21-Aug-2014] $)
  $}

  ${
    $d a b x y A $.  $d a b x y S $.  $d a b x y W $.
    lssintcl.s $e |- S = ( LSubSp ` W ) $.
    $( The intersection of a nonempty set of subspaces is a subspace. $)
    lssintcl $p |- ( ( W e. LMod /\ A C_ S /\ A =/= (/) )
          -> |^| A e. S ) $=
      ( vx va vb vy clmod wcel wss c0 wne w3a cfv eqidd cv wa eqid sylibr simp1
      cint csca cbs cplusg cvsca clss wceq a1i cuni intssuni2 3adant1 cpw lssss
      wi vex elpw ex 3ad2ant1 ssrdv sspwuni sylib sstrd c0g simpl1 simp2 sselda
      wral lss0cl syl2anc ralrimiva fvex elint2 ne0i syl co wel simpll1 adantlr
      simplr1 simplr2 simpr elinti sylc simplr3 lsscl syl23anc islssd mpdan
      ovex ) CIJZABKZALMZNZWKAUBZBJWKWLWMUAWNECUCOZUDOZCUEOZBCUFOZWOWPCUDOZCIFG
      WNWPPWNWQPWNWTPWNWRPWNWSPBCUGOUHWNDUIWNWOBUJZWTWLWMWOXAKWKABUKULWNBWTUMZK
      XAWTKWNHBXBWKWLHQZBJZXCXBJZUOWMWKXDXEWKXDRXCWTKXEBXCWTCIWTSDUNXCWTHUPUQTU
      RUSUTBWTVAVBVCWNCVDOZWOJZWOLMWNXFXCJZHAVHXGWNXHHAWNXCAJZRWKXDXHWKWLWMXIVE
      WNABXCWKWLWMVFVGZBXCCXFXFSDVIVJVKHXFACVDVLVMTWOXFVNVOWNEQZWQJZFQZWOJZGQZW
      OJZNZRZXKXMWSVPZXOWRVPZXCJZHAVHXTWOJXRYAHAXRXIRZWKXDXLFHVQZGHVQZYAWKWLWMX
      QXIVRWNXIXDXQXJVSXLXNXPWNXIVTYBXNXIYCXLXNXPWNXIWAXRXIWBZXMAXCWCWDYBXPXIYD
      XLXNXPWNXIWEYEXOAXCWCWDWQWRBWSXCWPICXMXOXKWPSWQSWRSWSSDWFWGVKHXTAXSXOWRWJ
      VMTWHWI $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( The intersection of two subspaces is a subspace. $)
    lssincl $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
         -> ( T i^i U ) e. S ) $=
      ( clmod wcel w3a cpr cint cin wceq intprg 3adant1 wss c0 wne simp1 prssg
      wa ibi prnzg 3ad2ant2 lssintcl syl3anc eqeltrrd ) DFGZBAGZCAGZHZBCIZJZBCK
      ZAUHUIULUMLUGBCAAMNUJUGUKAOZUKPQZULAGUGUHUIRUHUIUNUGUHUITUNBCAAASUANUHUGU
      OUIBCAUBUCUKADEUDUEUF $.
      $( [19-Jun-2014] $) $( [7-Mar-2014] $)
  $}

  ${
    lssdisj.p $e |- P = ( +g ` W ) $.
    lssdisj.o $e |- O = ( 0g ` W ) $.
    lssdisj.s $e |- S = ( LSubSp ` W ) $.
    lssdisj.w $e |- ( ph -> W e. LMod ) $.
    lssdisj.t $e |- ( ph -> T e. S ) $.
    lssdisj.u $e |- ( ph -> U e. S ) $.
    lssdisj.a $e |- ( ph -> A e. T ) $.
    lssdisj.c $e |- ( ph -> C e. T ) $.
    lssdisj.b $e |- ( ph -> B e. U ) $.
    lssdisj.d $e |- ( ph -> D e. U ) $.
    lssdisj.i $e |- ( ph -> ( T i^i U ) = { O } ) $.
    ${
      lssdisj.j $e |- ( ph -> ( A P B ) = ( C P D ) ) $.
      $( Vectors belonging to disjoint subspaces are uniquely determined by
         their sum.  (Revised by Mario Carneiro, 19-Jun-2014.) $)
      lssdisj1 $p |- ( ph -> A = C ) $=
        ( csg cfv co wceq csn wcel cin clmod eqid lssvsubcl syl22anc wb syl3anc
        cbs lssel lmodvaddsub4 syl122anc mpbid eqeltrd elin eleqtrd lmodvsubeq0
        sylanbrc elsni syl ) ABDKUDUEZUFZJUGZBDUGZAVJJUHZUIVKAVJHIUJZVMAVJHUIZV
        JIUIVJVNUIAKUKUIZHGUIZBHUIZDHUIZVOOPRSGHVIKBDVIULZNUMUNAVJECVIUFZIABCFU
        FDEFUFUGZVJWAUGZUCAVPBKUQUEZUIZCWDUIZDWDUIZEWDUIZWBWCUOOAVPVQVRWEOPRGHW
        DKBUKWDULZNURUPZAVPIGUIZCIUIZWFOQTGIWDKCUKWINURUPAVPVQVSWGOPSGHWDKDUKWI
        NURUPZAVPWKEIUIZWHOQUAGIWDKEUKWINURUPBCDEFVIWDKWILVTUSUTVAAVPWKWNWLWAIU
        IOQUATGIVIKECVTNUMUNVBVJHIVCVFUBVDVJJVGVHAVPWEWGVKVLUOOWJWMBDVIJWDKWIMV
        TVEUPVA $.
        $( [19-Jun-2014] $) $( [2-Apr-2014] $)

      $( Vectors belonging to disjoint subspaces are uniquely determined by
         their sum. $)
      lssdisj2 $p |- ( ph -> B = D ) $=
        ( cin csn incom syl5eq co clmod wcel cbs cfv wceq lssel syl3anc lmodcom
        eqid 3eqtr3d lssdisj1 ) ACBEDFGIHJKLMNOQPTUARSAIHUDHIUDJUEIHUFUBUGABCFU
        HZDEFUHZCBFUHZEDFUHZUCAKUIUJZBKUKULZUJZCVEUJZUTVBUMOAVDHGUJZBHUJVFOPRGH
        VEKBUIVEUQZNUNUOAVDIGUJZCIUJVGOQTGIVEKCUIVINUNUOFVEKBCVILUPUOAVDDVEUJZE
        VEUJZVAVCUMOAVDVHDHUJVKOPSGHVEKDUIVINUNUOAVDVJEIUJVLOQUAGIVEKEUIVINUNUO
        FVEKDEVILUPUOURUS $.
        $( [12-Jul-2014] $)
    $}

    $( Vectors belonging to disjoint subspaces are uniquely determined by their
       sum.  Analogous to ~ opth , this theorem shows a way of representing a
       pair of vectors. $)
    lssdisjb $p |- ( ph ->
        ( ( A P B ) = ( C P D ) <-> ( A = C /\ B = D ) ) ) $=
      ( co wceq wa clmod wcel adantr cin csn simpr lssdisj1 lssdisj2 jca oveq12
      ex impbid1 ) ABCFUCDEFUCUDZBDUDZCEUDZUEZAURVAAURUEZUSUTVBBCDEFGHIJKLMNAKU
      FUGUROUHZAHGUGURPUHZAIGUGURQUHZABHUGURRUHZADHUGURSUHZACIUGURTUHZAEIUGURUA
      UHZAHIUIJUJUDURUBUHZAURUKZULVBBCDEFGHIJKLMNVCVDVEVFVGVHVIVJVKUMUNUPBDCEFU
      OUQ $.
      $( [5-Jul-2014] $)
  $}

  $c LSpan $.

  $( Extend class notation with span of a set of vectors. $)
  clspn $a class LSpan $.

  ${
    $d w s t $.
    $( Define span of a set of vectors of a left module or left vector
       space. $)
    df-lsp $a |- LSpan = ( w e. _V |-> ( s e. ~P ( Base ` w ) |->
         |^| { t e. ( LSubSp ` w ) | s C_ t } ) ) $.
  $}

  ${
    $d s t w S $.  $d s t U $.  $d s t w V $.  $d s w W $.
    lspval.v $e |- V = ( Base ` W ) $.
    lspval.s $e |- S = ( LSubSp ` W ) $.
    lspval.n $e |- N = ( LSpan ` W ) $.
    $( The span function for a left vector space (or a left module).
       ( ~ df-span analog.) $)
    lspfval $p |- ( W e. X
      -> N = ( s e. ~P V |-> |^| { t e. S | s C_ t } ) ) $=
      ( vw wcel clspn cfv cpw cv cvv wceq cbs clss crab cint cmpt fveq2 syl6eqr
      wss elex pweqd rabeq syl inteqd mpteq12dv df-lsp fvex eqeltri mptex fvmpt
      pwex syl5eq ) EFLZCEMNZGDOZGPAPUFZABUAZUBZUCZJUTEQLVAVFREFUGKEGKPZSNZOZVC
      AVGTNZUAZUBZUCVFQMVGERZGVIVLVBVEVMVHDVMVHESNZDVGESUDHUEUHVMVKVDVMVJBRVKVD
      RVMVJETNBVGETUDIUEVCAVJBUIUJUKULKAGUMGVBVEDDVNQHESUNUOURUPUQUJUS $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( The span of a set of vectors (in a left module).  ( ~ spanval
       analog.) $)
    lspval $p |- ( ( W e. LMod /\ U C_ V )
       -> ( N ` U ) = |^| { t e. S | U C_ t } ) $=
      ( vs clmod wcel wss cfv cv crab cint wceq cvv cbs cpw cmpt lspfval fveq1d
      wa adantr simpr fvex eqeltri elpw2 wrex lss1 sseq2 rcla4ev sylan intexrab
      sylibr sylib sseq1 rabbidv inteqd eqid fvmptg syl2anc eqtrd ) FKLZCEMZUEZ
      CDNZCJEUAZJOZAOZMZABPZQZUBZNZCVLMZABPZQZVFVIVQRVGVFCDVPABDEFKJGHIUCUDUFVH
      CVJLZVTSLZVQVTRVHVGWAVFVGUGCEEFTNSGFTUHUIUJUQVHVRABUKZWBVFEBLVGWCBEFGHULV
      RVGAEBVLECUMUNUOVRABUPURJCVOVTVJSVPVKCRZVNVSWDVMVRABVKCVLUSUTVAVPVBVCVDVE
      $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( The span of a set of vectors is a subspace.  ( ~ spancl analog.) $)
    lspcl $p |- ( ( W e. LMod /\ U C_ V ) -> ( N ` U ) e. S ) $=
      ( vt clmod wcel wss wa cfv cv crab cint lspval c0 wne simpl a1i wrex lss1
      ssrab2 sseq2 rcla4ev sylan rabn0 sylibr lssintcl syl3anc eqeltrd ) EJKZBD
      LZMZBCNBIOZLZIAPZQZAIABCDEFGHRUPUNUSALZUSSTZUTAKUNUOUAVAUPURIAUEUBUPURIAU
      CZVBUNDAKUOVCADEFGUDURUOIDAUQDBUFUGUHURIAUIUJUSAEGUKULUM $.
      $( [19-Jun-2014] $) $( [9-Dec-2013] $)

    $( The span of a singleton is a subspace (frequently used special case of
       ~ lspcl ). $)
    lspsncl $p |- ( ( W e. LMod /\ X e. V ) -> ( N ` { X } ) e. S ) $=
      ( wcel clmod csn wss cfv snssi lspcl sylan2 ) ECIDJIEKZCLQBMAIECNAQBCDFGH
      OP $.
      $( [17-Jul-2014] $)
  $}

  ${
    $d t S $.  $d t U $.  $d t W $.
    lspid.s $e |- S = ( LSubSp ` W ) $.
    lspid.n $e |- N = ( LSpan ` W ) $.
    $( The span of a subspace is itself.  ( ~ spanid analog.) $)
    lspid $p |- ( ( W e. LMod /\ U e. S ) -> ( N ` U ) = U ) $=
      ( vt clmod wcel wa cfv cv wss crab cint cbs wceq eqid lssss lspval syldan
      intmin adantl eqtrd ) DHIZBAIZJBCKZBGLMGANOZBUEUFBDPKZMUGUHQABUIDHUIRZESG
      ABCUIDUJEFTUAUFUHBQUEGBAUBUCUD $.
      $( [19-Jun-2014] $) $( [15-Dec-2013] $)
  $}

  ${
    $d t T $.  $d t U $.  $d t V $.  $d t W $.
    lspss.v $e |- V = ( Base ` W ) $.
    lspss.n $e |- N = ( LSpan ` W ) $.
    $( A span is a set of vectors. $)
    lspssv $p |- ( ( W e. LMod /\ U C_ V ) -> ( N ` U ) C_ V ) $=
      ( clmod wcel wss cfv clss eqid lspcl lssss syldan ) DGHACIABJZDKJZHPCIQAB
      CDEQLZFMQPCDGERNO $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( Span preserves subset ordering.  ( ~ spanss analog.) $)
    lspss $p |- ( ( W e. LMod /\ U C_ V /\ T C_ U )
          -> ( N ` T ) C_ ( N ` U ) ) $=
      ( vt clmod wcel wss w3a cv clss cfv crab cint syl wceq lspval wa wi sstr2
      simpl3 ss2rabdv intss simp1 simp3 simp2 sstrd syl2anc 3adant3 3sstr4d
      eqid ) EIJZBDKZABKZLZAHMZKZHENOZPZQZBUSKZHVAPZQZACOZBCOZURVEVBKVCVFKURVDU
      THVAURUSVAJZUAUQVDUTUBUOUPUQVIUDABUSUCRUEVEVBUFRURUOADKVGVCSUOUPUQUGURABD
      UOUPUQUHUOUPUQUIUJHVAACDEFVAUNZGTUKUOUPVHVFSUQHVABCDEFVJGTULUM $.
      $( [19-Jun-2014] $) $( [11-Dec-2013] $)

    $( A set of vectors is a subset of its span.  ( ~ spanss2 analog.) $)
    lspssid $p |- ( ( W e. LMod /\ U C_ V ) -> U C_ ( N ` U ) ) $=
      ( vt clmod wcel wss wa clss cfv crab cint ssintub eqid lspval syl5sseqr
      cv ) DHIACJKAGTJGDLMZNOAABMGAUAPGUAABCDEUAQFRS $.
      $( [19-Jun-2014] $) $( [6-Feb-2014] $)

    $( The span of a set of vectors is idempotent. $)
    lspidm $p |- ( ( W e. LMod /\ U C_ V )
                  -> ( N ` ( N ` U ) ) = ( N ` U ) ) $=
      ( clmod wcel wss cfv clss wceq eqid lspcl lspid syldan ) DGHACIABJZDKJZHQ
      BJQLRABCDERMZFNRQBDSFOP $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( The span of union is the span of the union of spans. $)
    lspun $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( N ` ( T u. U ) ) = ( N ` ( ( N ` T ) u. ( N ` U ) ) ) ) $=
      ( clmod wcel wss w3a cun cfv simp1 unssd lspss syl3anc syl2anc lspssid
      a1i simp2 simp3 ssun1 ssun2 lspssv sstrd unss12 wceq lspidm sseqtrd eqssd
      ) EHIZADJZBDJZKZABLZCMZACMZBCMZLZCMZUOULUTDJUPUTJZUQVAJULUMUNNZUOUTUQDUOU
      RUSUQUOULUPDJZAUPJZURUQJVCUOABDULUMUNUAZULUMUNUBZOZVEUOABUCTAUPCDEFGPQUOU
      LVDBUPJZUSUQJVCVHVIUOBAUDTBUPCDEFGPQOZUOULVDUQDJZVCVHUPCDEFGUERZUFUOAURJZ
      BUSJZVBUOULUMVMVCVFACDEFGSRUOULUNVNVCVGBCDEFGSRAURBUSUGRUPUTCDEFGPQUOVAUQ
      CMZUQUOULVKUTUQJVAVOJVCVLVJUTUQCDEFGPQUOULVDVOUQUHVCVHUPCDEFGUIRUJUK $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)
  $}

  ${
    $d t S $.  $d t U $.  $d t W $.
    lspssp.s $e |- S = ( LSubSp ` W ) $.
    lspssp.n $e |- N = ( LSpan ` W ) $.
    $( If a set of vectors is a subset of a subspace, then the span of those
       vectors is also contained in the subspace.  (Contributed by Mario
       Carneiro, 4-Sep-2014.) $)
    lspssp $p |- ( ( W e. LMod /\ U e. S /\ T C_ U ) -> ( N ` T ) C_ U ) $=
      ( clmod wcel wss w3a cfv cbs eqid lssss 3adant3 lspss syld3an2 wceq lspid
      sseqtrd ) EHIZCAIZBCJZKBDLZCDLZCUBCEMLZJZUCUDUEUFJUBUCUHUDACUGEHUGNZFOPBC
      DUGEUIGQRUBUCUFCSUDACDEFGTPUA $.
      $( [4-Sep-2014] $)
  $}

  ${
    lspsnss.s $e |- S = ( LSubSp ` W ) $.
    lspsnss.n $e |- N = ( LSpan ` W ) $.
    $( The span of the singleton of a subspace member is included in the
       subspace.  ( ~ spansnss analog.) $)
    lspsnss $p |- ( ( W e. LMod /\ U e. S /\ X e. U )
            -> ( N ` { X } ) C_ U ) $=
      ( wcel clmod csn wss cfv snssi lspssp syl3an3 ) EBHDIHBAHEJZBKPCLBKEBMAPB
      CDFGNO $.
      $( [4-Sep-2014] $) $( [9-Apr-2014] $)

    lspsnel3.w $e |- ( ph -> W e. LMod ) $.
    lspsnel3.u $e |- ( ph -> U e. S ) $.
    lspsnel3.x $e |- ( ph -> X e. U ) $.
    lspsnel3.y $e |- ( ph -> Y e. ( N ` { X } ) ) $.
    $( A member of the span of the singleton of a vector is a member of a
       subspace containing the vector.  ( ~ elspansn3 analog.) $)
    lspsnel3 $p |- ( ph -> Y e. U ) $=
      ( csn cfv clmod wcel wss lspsnss syl3anc sseldd ) AFNDOZCGAEPQCBQFCQUBCRJ
      KLBCDEFHISTMUA $.
      $( [4-Jul-2014] $)
  $}

  ${
    lspsnid.v $e |- V = ( Base ` W ) $.
    lspsnid.n $e |- N = ( LSpan ` W ) $.
    $( A vector belongs to the span of its singleton.  ( ~ spansnid analog.) $)
    lspsnid $p |- ( ( W e. LMod /\ X e. V ) -> X e. ( N ` { X } ) ) $=
      ( clmod wcel wa csn cfv wss snssi lspssid sylan2 wb snssg adantl mpbird )
      CGHZDBHZIDDJZAKZHZUBUCLZUATUBBLUEDBMUBABCEFNOUAUDUEPTDUCBQRS $.
      $( [19-Jun-2014] $) $( [9-Apr-2014] $)
  $}

  ${
    lspsnel5.v $e |- V = ( Base ` W ) $.
    lspsnel5.s $e |- S = ( LSubSp ` W ) $.
    lspsnel5.n $e |- N = ( LSpan ` W ) $.
    lspsnel5.w $e |- ( ph -> W e. LMod ) $.
    lspsnel5.a $e |- ( ph -> U e. S ) $.
    $( Relationship between a vector and the 1-dim (or 0-dim) subspace it
       generates. $)
    lspsnel6 $p |- ( ph -> ( X e. U <-> ( X e. V /\ ( N ` { X } ) C_ U ) ) ) $=
      ( wcel csn cfv wa clmod adantr syl3anc ex wss simpr lssel lspsnss jcad wi
      lspsnid sylan ssel2 expcom syl expimpd impbid ) AGCMZGEMZGNDOZCUAZPAUNUOU
      QAUNUOAUNPZFQMZCBMZUNUOAUSUNKRZAUTUNLRZAUNUBZBCEFGQHIUCSTAUNUQURUSUTUNUQV
      AVBVCBCDFGIJUDSTUEAUOUQUNAUOPGUPMZUQUNUFAUSUOVDKDEFGHJUGUHUQVDUNUPCGUIUJU
      KULUM $.
      $( [8-Aug-2014] $)

    lspsnel5.x $e |- ( ph -> X e. V ) $.
    $( Relationship between a vector and the 1-dim (or 0-dim) subspace it
       generates. $)
    lspsnel5 $p |- ( ph -> ( X e. U <-> ( N ` { X } ) C_ U ) ) $=
      ( wcel csn cfv wss wa lspsnel6 biantrurd bitr4d ) AGCNGENZGODPCQZRUCABCDE
      FGHIJKLSAUBUCMTUA $.
      $( [8-Aug-2014] $)
  $}

  ${
    lspsnmul.v $e |- V = ( Base ` W ) $.
    lspsnmul.t $e |- T = ( vsca ` W ) $.
    lspsnmul.f $e |- F = ( Scalar ` W ) $.
    lspsnmul.k $e |- K = ( Base ` F ) $.
    lspsnmul.n $e |- N = ( LSpan ` W ) $.
    lspsnmul.w $e |- ( ph -> W e. LMod ) $.
    lspsnmul.a $e |- ( ph -> A e. K ) $.
    lspsnmul.x $e |- ( ph -> X e. V ) $.
    $( A scalar product with a vector belongs to the span of its singleton.
       ( ~ spansnmul analog.) $)
    lspsnmul $p |- ( ph -> ( A T X ) e. ( N ` { X } ) ) $=
      ( wcel cfv syl2anc clmod csn clss eqid lspsncl lspsnid lssvscl syl22anc
      co ) AHUARZIUBFSZHUCSZRZBERIUKRZBICUIUKROAUJIGRZUMOQULFGHIJULUDZNUETPAUJU
      OUNOQFGHIJNUFTEULCUKDHBILKMUPUGUH $.
      $( [2-Jul-2014] $)
  $}

  ${
    $d k F $.  $d k v K $.  $d k v N $.  $d k v T $.  $d k v U $.  $d k v V $.
    $d k R $.  $d k v W $.  $d k v X $.
    lspsn.f $e |- F = ( Scalar ` W ) $.
    lspsn.k $e |- K = ( Base ` F ) $.
    lspsn.v $e |- V = ( Base ` W ) $.
    lspsn.t $e |- T = ( vsca ` W ) $.
    lspsn.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton of a vector.  (The proof was shortened by Mario
       Carneiro, 19-Jun-2014.) $)
    lspsn $p |- ( ( W e. LMod /\ X e. V )
        -> ( N ` { X } ) = { v | E. k e. K v = ( k T X ) } ) $=
      ( clmod wcel cfv wceq wss adantr wa csn cv wrex cab simpl clss eqid lss1d
      co lssss syldan lmod1cl lmodvs1 eqcomd oveq1 eqeq2d rcla4ev syl2anc eqeq1
      cur rexbidv elabg adantl mpbird snssd lspss syl3anc lspid sseqtrd lspsncl
      wb wi simpr lspsnid lssvscl syl22anc eleq1a syl rexlimdva abssdv eqssd )
      HOPZIGPZUAZIUBZFQZAUCZCUCZIBUJZRZCEUDZAUEZWEWGWMFQZWMWEWCWMGSZWFWMSWGWNSW
      CWDUFZWCWDWMHUGQZPZWOAWQBCDEGHILJMKWQUHZUIZWQWMGHOLWSUKULWEIWMWEIWMPZIWJR
      ZCEUDZWEDVAQZEPZIXDIBUJZRZXCWCXEWDXDDEHJKXDUHZUMTWEXFIBXDDGHILJMXHUNUOXBX
      GCXDEWIXDRWJXFIWIXDIBUPUQURUSWDXAXCVLWCWLXCAIGWHIRWKXBCEWHIWJUTVBVCVDVEVF
      WFWMFGHLNVGVHWCWDWRWNWMRWTWQWMFHWSNVIULVJWEWLAWGWEWKWHWGPZCEWEWIEPZUAZWJW
      GPZWKXIVMXKWCWGWQPZXJIWGPZXLWEWCXJWPTWEXMXJWQFGHILWSNVKTWEXJVNWEXNXJFGHIL
      NVOTEWQBWGDHWIIJMKWSVPVQWJWGWHVRVSVTWAWB $.
      $( [19-Jun-2014] $) $( [14-Jan-2014] $)

    $( Member of span of the singleton of a vector.  ( ~ elspansn analog.) $)
    lspsnel $p |- ( ( W e. LMod /\ X e. V )
       -> ( U e. ( N ` { X } ) <-> E. k e. K U = ( k T X ) ) ) $=
      ( vv wcel cv wceq wrex cvv clmod wa csn cfv co lspsn eleq2d ovex syl6eqel
      cab id rexlimivw eqeq1 rexbidv elab3 syl6bb ) HUAPIGPUBZBIUCFUDZPBOQZCQZI
      AUEZRZCESZOUJZPBVARZCESZUQURVDBOACDEFGHIJKLMNUFUGVCVFOBVEBTPCEVEBVATVEUKU
      TIAUHUIULUSBRVBVECEUSBVAUMUNUOUP $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( The scalar product of a vector belongs to the span of its singleton.
       ( ~ spansnmul analog.)  TO DO:  REPLACE WITH ~ lspsnmul ? $)
    lspsneli $p |- ( ( W e. LMod /\ R e. K /\ X e. V )
       -> ( R T X ) e. ( N ` { X } ) ) $=
      ( clmod wcel w3a simp1 simp2 simp3 lspsnmul ) GNOZADOZHFOZPABCDEFGHKLIJMU
      AUBUCQUAUBUCRUAUBUCST $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( Span of a scalar product of a singleton.  (The proof was shortened by
       Mario Carneiro, 19-Jun-2014.) $)
    lspsnvsi $p |- ( ( W e. LMod /\ R e. K /\ X e. V )
        -> ( N ` { ( R T X ) } ) C_ ( N ` { X } ) ) $=
      ( clmod wcel w3a csn cfv clss wss co simp1 simp3 snssd eqid lspcl syl2anc
      lspsneli lspsnss syl3anc ) GNOZADOZHFOZPZUKHQZERZGSRZOZAHBUAZUPOUSQERUPTU
      KULUMUBZUNUKUOFTURUTUNHFUKULUMUCUDUQUOEFGKUQUEZMUFUGABCDEFGHIJKLMUHUQUPEG
      USVAMUIUJ $.
      $( [4-Sep-2014] $) $( [23-Apr-2014] $)
  $}

  ${
    lspsnneg.v $e |- V = ( Base ` W ) $.
    lspsnneg.m $e |- M = ( invg ` W ) $.
    lspsnneg.n $e |- N = ( LSpan ` W ) $.
    $( Negation does not change the span of a singleton.  (The proof was
       shortened by Mario Carneiro, 19-Jun-2014.) $)
    lspsnneg $p |- ( ( W e. LMod /\ X e. V )
        -> ( N ` { ( M ` X ) } ) = ( N ` { X } ) ) $=
      ( wcel cfv csn co eqid lmodvneg1 sneqd fveq2d wss cgrp lspsnvsi syl3anc
      clmod wa csca cur cminusg cvsca cbs simpl lmodfgrp lmod1cl syl2anc adantr
      grpinvcl simpr wceq lmodvnegcl syldan lmodgrp grpinvinv sylan eqtrd eqssd
      eqsstr3d ) DUAIZECIZUBZEAJZKZBJZEKZBJZVFVIDUCJZUDJZVLUEJZJZEDUFJZLZKZBJZV
      KVFVRVHBVFVQVGVPVMVLVNACDEFGVLMZVPMZVMMZVNMZNOPVFVDVOVLUGJZIZVEVSVKQVDVEU
      HZVDWEVEVDVLRIVMWDIWEVLDVTUIVMVLWDDVTWDMZWBUJWDVLVNVMWGWCUMUKULZVDVEUNVOV
      PVLWDBCDEVTWGFWAHSTVCVFVKVOVGVPLZKZBJZVIVFWJVJBVFWIEVFWIVGAJZEVDVEVGCIZWI
      WLUOACDEFGUPZVPVMVLVNACDVGFGVTWAWBWCNUQVDDRIVEWLEUODURCDAEFGUSUTVAOPVFVDW
      EWMWKVIQWFWHWNVOVPVLWDBCDVGVTWGFWAHSTVCVB $.
      $( [19-Jun-2014] $) $( [24-Apr-2014] $)
  $}

  ${
    lspsn0.z $e |- Z = ( 0g ` W ) $.
    lspsn0.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton of the zero vector.  ( ~ spansn0 analog.)  (The
       proof was shortened by Mario Carneiro, 19-Jun-2014.) $)
    lspsn0 $p |- ( W e. LMod -> ( N ` { Z } ) = { Z } ) $=
      ( clmod wcel csn clss cfv wceq eqid lsssn0 lspid mpdan ) BFGCHZBIJZGPAJPK
      QBCDQLZMQPABRENO $.
      $( [19-Jun-2014] $) $( [15-Jan-2014] $)

    $( Span of the empty set.  (Contributed by Mario Carneiro, 4-Sep-2014.) $)
    lsp0 $p |- ( W e. LMod -> ( N ` (/) ) = { Z } ) $=
      ( clmod wcel c0 cfv csn clss wss lsssn0 0ss lspssp mp3an3 mpdan cbs lspcl
      eqid mpan2 lss0ss eqssd ) BFGZHAIZCJZUDUFBKIZGZUEUFLZUGBCDUGTZMUDUHHUFLUI
      UFNUGHUFABUJEOPQUDUEUGGZUFUELUDHBRIZLUKULNUGHAULBULTUJESUAUGBUECDUJUBQUC
      $.
      $( [5-Sep-2014] $)
  $}

  ${
    lspsneq0.v $e |- V = ( Base ` W ) $.
    lspsneq0.z $e |- Z = ( 0g ` W ) $.
    lspsneq0.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton is the zero subspace iff the vector is zero. $)
    lspsneq0 $p |- ( ( W e. LMod /\ X e. V )
         -> ( ( N ` { X } ) = { Z } <-> X = Z ) ) $=
      ( clmod wcel wa csn cfv wceq lspsnid eleq2 syl5ibcom elsni syl6 lspsn0
      adantr sneq fveq2d eqeq1d syl5ibrcom impbid ) CIJZDBJZKZDLZAMZELZNZDENZUI
      UMDULJZUNUIDUKJUMUOABCDFHOUKULDPQDERSUIUMUNULAMZULNZUGUQUHACEGHTUAUNUKUPU
      LUNUJULADEUBUCUDUEUF $.
      $( [19-Jun-2014] $) $( [27-Apr-2014] $)
  $}

  $c LBasis $.

  $( Extend class notation with the set of bases for a vector space. $)
  clbs $a class LBasis $.

  ${
    $d w s t x $.
    $( Define the set of bases to a left module or left vector space. $)
    df-lbs $a |- LBasis = ( w e. _V |-> { s e. ~P ( Base ` w ) |
         ( ( ( LSpan ` w ) ` s ) = ( Base ` w ) /\
           A. x e. s -. x e. ( ( LSpan ` w ) ` ( s \ { x } ) ) ) } ) $.
  $}

  ${
    $d s x B $.  $d s w N $.  $d s w V $.  $d s w x W $.
    lbsval.v $e |- V = ( Base ` W ) $.
    lbsval.j $e |- J = ( LBasis ` W ) $.
    lbsval.n $e |- N = ( LSpan ` W ) $.
    $( The set of bases to a vector space.  (Contributed by Mario Carneiro,
       24-Jun-2014.) $)
    lbsval $p |- ( W e. X -> J = { s e. ~P V |
         ( ( N ` s ) = V /\ A. x e. s -. x e. ( N ` ( s \ { x } ) ) ) } ) $=
      ( vw wcel cvv cv cfv wceq wn wral clspn cbs csn cdif crab elex clbs fveq2
      cpw syl6eqr fveq1d eqeq12d eleq2d notbid ralbidv anbi12d rabeqbidv df-lbs
      wa pweqd fvex eqeltri pwex rabex fvmpt syl5eq syl ) EFLEMLZBGNZCOZDPZANZV
      GVJUAUBZCOZLZQZAVGRZUQZGDUGZUCZPEFUDVFBEUEOVRIKEVGKNZSOZOZVSTOZPZVJVKVTOZ
      LZQZAVGRZUQZGWBUGZUCVRMUEVSEPZWHVPGWIVQWJWBDWJWBETOZDVSETUFHUHZURWJWCVIWG
      VOWJWAVHWBDWJVGVTCWJVTESOCVSESUFJUHZUIWLUJWJWFVNAVGWJWEVMWJWDVLVJWJVKVTCW
      MUIUKULUMUNUOAKGUPVPGVQDDWKMHETUSUTVAVBVCVDVE $.
      $( [24-Jun-2014] $)

    $( The predicate " ` B ` is a basis for the left module or vector space
       ` W ` ".  A subset of the base set is a basis if it spans the set and no
       element of the set is in the span of the rest of the family.  TODO:
       This notion of linear independence does not coincide with the usual one
       (no nontrivial representations of zero) in a general module, but does in
       a vector space.  (Contributed by Mario Carneiro, 24-Jun-2014.) $)
    islbs $p |- ( W e. X -> ( B e. J <-> ( B C_ V /\
      ( N ` B ) = V /\ A. x e. B -. x e. ( N ` ( B \ { x } ) ) ) ) ) $=
      ( vs wcel cv cfv wceq cdif wn wral wa eleq2d csn cpw crab wss w3a cbs cvv
      lbsval eqeltri elpw2 anbi1i fveq2 eqeq1d difeq1 fveq2d raleqbi1dv anbi12d
      fvex notbid elrab 3anass 3bitr4i syl6bb ) FGLZBCLBKMZDNZEOZAMZVEVHUAZPZDN
      ZLZQZAVERZSZKEUBZUCZLZBEUDZBDNZEOZVHBVIPZDNZLZQZABRZUEZVDCVQBACDEFGKHIJUH
      TBVPLZWAWFSZSVSWISVRWGWHVSWIBEEFUFNUGHFUFURUIUJUKVOWIKBVPVEBOZVGWAVNWFWJV
      FVTEVEBDULUMVMWEAVEBWJVLWDWJVKWCVHWJVJWBDVEBVIUNUOTUSUPUQUTVSWAWFVAVBVC
      $.
      $( [24-Jun-2014] $)
  $}

  ${
    $d s x y B $.  $d x y C $.  $d s x y J $.  $d s x N $.  $d s x y W $.
    $d x E $.  $d s x V $.
    lbsss.v $e |- V = ( Base ` W ) $.
    lbsss.j $e |- J = ( LBasis ` W ) $.
    $( A basis is a set of vectors.  (Contributed by Mario Carneiro,
       24-Jun-2014.) $)
    lbsss $p |- ( ( W e. X /\ B e. J ) -> B C_ V ) $=
      ( vx wcel wa wss clspn cfv wceq cv csn cdif wn wral w3a eqid islbs biimpa
      simp1d ) DEIZABIZJACKZADLMZMCNZHOZAUJPQUHMIRHASZUEUFUGUIUKTHABUHCDEFGUHUA
      UBUCUD $.
      $( [24-Jun-2014] $)

    $( An element of a basis is a vector.  (Contributed by Mario Carneiro,
       24-Jun-2014.) $)
    lbsel $p |- ( ( W e. X /\ B e. J /\ E e. B ) -> E e. V ) $=
      ( wcel wa lbsss sseld 3impia ) EFIZACIZBAIBDINOJADBACDEFGHKLM $.
      $( [24-Jun-2014] $)

    lbssp.n $e |- N = ( LSpan ` W ) $.
    $( The span of a basis is the whole space. $)
    lbssp $p |- ( ( W e. X /\ B e. J ) -> ( N ` B ) = V ) $=
      ( vx wcel wa wss cfv wceq cv csn cdif wn wral w3a islbs biimpa simp2d ) E
      FKZABKZLADMZACNDOZJPZAUIQRCNKSJATZUEUFUGUHUJUAJABCDEFGHIUBUCUD $.
      $( [24-Jun-2014] $)

    $( A basis is linearly independent; that is, every element is not in the
       span of the remainder of the basis. $)
    lbsind $p |- ( ( W e. X /\ B e. J /\ E e. B ) ->
                   -. E e. ( N ` ( B \ { E } ) ) ) $=
      ( vx wcel csn cdif cfv wn wa cv wral wceq wi wss islbs biimpa simp3d sneq
      w3a id difeq2d fveq2d eleq12d notbid rcla4cv syl 3impia ) FGLZACLZBALZBAB
      MZNZDOZLZPZUPUQQZKRZAVEMZNZDOZLZPZKASZURVCUAVDAEUBZADOETZVKUPUQVLVMVKUGKA
      CDEFGHIJUCUDUEVJVCKBAVEBTZVIVBVNVEBVHVAVNUHVNVGUTDVNVFUSAVEBUFUIUJUKULUMU
      NUO $.
      $( [25-Jun-2014] $)

    $( No proper subset of a basis spans the space. $)
    lbspss $p |- ( ( W e. LMod /\ B e. J /\ C C. B ) -> ( N ` C ) =/= V ) $=
      ( vx vy clmod wcel cv wn wa cfv wne syl3anc wss wpss pssnel simpl1 simpl2
      w3a wex 3ad2ant3 simprl lbsel csn cdif lbsind difss syl2anc syl5ss simpl3
      lbsss pssssd sseld wceq simprr notbid syl5ibrcom necon2ad eldifsn syl6ibr
      eleq1 jcad ssrdv lspss mtod nelne1 necomd ex exlimdv mpd ) FLMZACMZBAUAZU
      EZJNZAMZWABMZOZPZJUFZBDQZERZVSVQWFVRJBAUBUGVTWEWHJVTWEWHVTWEPZEWGWIWAEMZW
      AWGMZOEWGRWIVQVRWBWJVQVRVSWEUCZVQVRVSWEUDZVTWBWDUHZAWACEFLGHUISWIWKWAAWAU
      JZUKZDQZMZWIVQVRWBWROWLWMWNAWACDEFLGHIULSWIWGWQWAWIVQWPETBWPTWGWQTWLWIWPA
      EAWOUMWIVQVRAETWLWMACEFLGHUQUNUOWIKBWPWIKNZBMZWSAMZWSWARZPWSWPMWIWTXAXBWI
      BAWSWIBAVQVRVSWEUPURUSWIWTWSWAWIWTOWSWAUTZWDVTWBWDVAXCWTWCWSWABVGVBVCVDVH
      WSAWAVEVFVIBWPDEFGIVJSUSVKWAEWGVLUNVMVNVOVP $.
      $( [25-Jun-2014] $)

    $( An equivalent formulation of the basis predicate: a subset is a basis
       iff it is a minimal spanning set.  (Contributed by Mario Carneiro,
       25-Jun-2014.) $)
    islbs2 $p |- ( W e. LMod -> ( B e. J <-> ( B C_ V /\
      ( N ` B ) = V /\ A. s ( s C. B -> ( N ` s ) C. V ) ) ) ) $=
      ( vx clmod wcel wss cfv wpss w3a wa wne syl2anc cvv cv wi wal lbsss lbssp
      wceq simp1 pssss sylan9ssr 3impa lspssv lbspss df-pss 3expia alrimiv 3jca
      sylanbrc csn cdif wn wral islbs adantr simpr1 simpr2 difss simplr1 syl5ss
      wb cbs fvex eqeltri ssexg sylancl simplr3 a1i simpr vex eldifn mt2 nelne1
      snid necomd psseq1 fveq2 psseq1d imbi12d cla4gv syl3c simprbi syl simplr2
      dfpss3 clss simpll adantrr lspcl cun ssun1 undif1 sseqtr4i lspssid simprr
      eqid snssd unssd lspssp syl3anc eqsstr3d expr ralrimiva mpbir3and impbida
      mtod ) EKLZABLZADMZACNZDUFZFUAZAOZXTCNZDOZUBZFUCZPZXOXPQZXQXSYEABDEKGHUDZ
      ABCDEKGHIUEYGYDFXOXPYAYCXOXPYAPZYBDMZYBDRYCYIXOXTDMZYJXOXPYAUGXOXPYAYKYAY
      GXTADXTAUHYHUIUJXTCDEGIUKSAXTBCDEGHIULYBDUMUQUNUOUPXOYFQZXPXQXSJUAZAYMURZ
      USZCNZLZUTZJAVAZXOXPXQXSYSPVIYFJABCDEKGHIVBVCXOXQXSYEVDXOXQXSYEVEYLYRJAYL
      YMALZQZYQDYPMZUUAYPDOZUUBUTZUUAYOTLZYEYOAOZUUCUUAYODMZDTLUUEUUAYOADAYNVFZ
      XQXSYEXOYTVGVHZDEVJNTGEVJVKVLYODTVMVNXQXSYEXOYTVOUUAYOAMZYOARUUFUUJUUAUUH
      VPUUAAYOUUAYTYMYOLZUTAYORYLYTVQUUKYMYNLYMJVRWBYMAYNVSVTYMAYOWAVNWCYOAUMUQ
      YDUUFUUCUBFYOTXTYOUFZYAUUFYCUUCXTYOAWDUULYBYPDXTYOCWEWFWGWHWIUUCYPDMUUDYP
      DWMWJWKYLYTYQUUBYLYTYQQZQZDXRYPXQXSYEXOUUMWLUUNXOYPEWNNZLZAYPMXRYPMXOYFUU
      MWOZUUNXOUUGUUPUUQYLYTUUGYQUUIWPZUUOYOCDEGUUOXDZIWQSUUNAYOYNWRZYPAAYNWRUU
      TAYNWSAYNWTXAUUNYOYNYPUUNXOUUGYOYPMUUQUURYOCDEGIXBSUUNYMYPYLYTYQXCXEXFVHU
      UOAYPCEUUSIXGXHXIXJXNXKXLXM $.
      $( [25-Jun-2014] $)
  $}

  $c LSSum $.

  $( Extend class notation with subspace sum. $)
  clsm $a class LSSum $.

  ${
    $d w t u x y z $.
    $( Define subspace sum. $)
    df-lsm $a |- LSSum = ( w e. _V |->
       ( t e. ~P ( Base ` w ) , u e. ~P ( Base ` w ) |->
           { z | E. x e. t E. y e. u z = ( x ( +g ` w ) y ) } ) ) $.
  $}

  ${
    $d t u w x y z A $.  $d t u x y z T $.  $d t u w x y z V $.  $d x y z X $.
    $d t u x y z U $.  $d t u w x y z W $.  $d y z Y $.
    lsmfval.v $e |- V = ( Base ` W ) $.
    lsmfval.a $e |- A = ( +g ` W ) $.
    lsmfval.s $e |- S = ( LSSum ` W ) $.
    $( The subspace sum function (for a left module or left vector space). $)
    lsmfval $p |- ( W e. X -> S = ( t e. ~P V , u e. ~P V |->
                    { z | E. x e. t E. y e. u z = ( x A y ) } ) ) $=
      ( vw cfv cv wceq wrex cvv cbs wcel clsm cpw cab cmpt2 elex cplusg syl6eqr
      co fveq2 pweqd oveqd eqeq2d 2rexbidv abbidv mpt2eq123dv fvex eqeltri pwex
      df-lsm mpt2ex fvmpt syl syl5eq ) IJUAZGIUBOZEDHUCZVGCPZAPZBPZFUIZQZBDPZRA
      EPZRZCUDZUEZMVEISUAVFVQQIJUFNIEDNPZTOZUCZVTVHVIVJVRUGOZUIZQZBVMRAVNRZCUDZ
      UEVQSUBVRIQZEDVTVTWEVGVGVPWFVSHWFVSITOZHVRITUJKUHUKZWHWFWDVOCWFWCVLABVNVM
      WFWBVKVHWFWAFVIVJWFWAIUGOFVRIUGUJLUHULUMUNUOUPABCNDEUTEDVGVGVPHHWGSKITUQU
      RUSZWIVAVBVCVD $.
      $( [21-Jun-2014] $) $( [28-Jan-2014] $)

    $( Subspace sum value (for a left module or left vector space).  Extended
       domain version of ~ lsmval . $)
    lsmvalx $p |- ( ( W e. X /\ T C_ V /\ U C_ V )
       -> ( T S U ) = { z | E. x e. T E. y e. U z = ( x A y ) } ) $=
      ( vt vu wcel cv wceq wrex cvv wss co cab cpw cmpt2 lsmfval oveqd cbs fvex
      wa cfv eqeltri elpw2 wral abrexexg ralrimivw abrexex2g sylan2 simpl simpr
      rexeqdv rexeqbidv abbidv eqid ovmpt2ga mpd3an3 syl2anbr sylan9eq 3impb )
      IJPZFHUAZGHUAZFGEUBZCQAQBQDUBZRZBGSZAFSZCUCZRVJVKVLUJVMFGNOHUDZVSVOBOQZSZ
      ANQZSZCUCZUEZUBZVRVJEWEFGABCONDEHIJKLMUFUGVKFVSPZGVSPZWFVRRZVLFHHIUHUKTKI
      UHUIULZUMGHWJUMWGWHVRTPZWIWHWGVPCUCTPZAFUNWKWHWLAFBCGVNVSUOUPVPACFVSTUQUR
      NOFGVSVSWDVRWETWBFRZVTGRZUJZWCVQCWOWAVPAWBFWMWNUSWOVOBVTGWMWNUTVAVBVCWEVD
      VEVFVGVHVI $.
      $( [21-Jun-2014] $) $( [28-Jan-2014] $)

    $( Subspace sum membership (for a left module or left vector space).
       Extended domain version of ~ lsmelval . $)
    lsmelvalx $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( X e. ( T S U ) <-> E. y e. T E. z e. U X = ( y A z ) ) ) $=
      ( vx clmod wcel wss co cv wceq wrex w3a cab lsmvalx eleq2d ovex rexlimivw
      cvv id syl6eqel eqeq1 2rexbidv elab3 syl6bb ) HNOEGPFGPUAZIEFDQZOIMRZARZB
      RZCQZSZBFTAETZMUBZOIUSSZBFTZAETZUNUOVBIABMCDEFGHNJKLUCUDVAVEMIVDIUGOZAEVC
      VFBFVCIUSUGVCUHUQURCUEUIUFUFUPISUTVCABEFUPIUSUJUKULUM $.
      $( [21-Jun-2014] $) $( [28-Jan-2014] $)

    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelvalix $p |- ( ( ( W e. LMod /\ T C_ V /\ U C_ V ) /\
               ( X e. T /\ Y e. U ) ) -> ( X A Y ) e. ( T S U ) ) $=
      ( vy vz clmod wcel wss co cv wceq wrex w3a eqid rcla4eov mp3an3 lsmelvalx
      wa syl5ibr imp ) FNOCEPDEPUAZGCOZHDOZUFZGHAQZCDBQOZULUNUIUMLRMRAQSMDTLCTZ
      UJUKUMUMSUOUMUBLMCDGHUMAUCUDLMABCDEFUMIJKUEUGUH $.
      $( [21-Jun-2014] $) $( [4-Feb-2014] $)
  $}

  ${
    $d x y z R $.  $d x y z T $.  $d x y z U $.  $d x y z V $.  $d x y z W $.
    $d x P $.  $d x S $.
    lsmless2.v $e |- V = ( Base ` W ) $.
    lsmless2.s $e |- P = ( LSSum ` W ) $.
    $( Subspace sum commutes (extended domain version). $)
    lsmcomx $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( T P U ) = ( U P T ) ) $=
      ( vx vy vz clmod wcel wss cv co wceq wrex cab wa sseldd w3a cplusg simpl1
      cfv simpl2 simprl simpl3 simprr eqid lmodcom syl3anc eqeq2d rexcom syl6bb
      2rexbidva abbidv lsmvalx 3com23 3eqtr4d ) EKLZBDMZCDMZUAZHNZINZJNZEUBUDZO
      ZPZJCQIBQZHRVDVFVEVGOZPZIBQJCQZHRZBCAOCBAOZVCVJVMHVCVJVLJCQIBQVMVCVIVLIJB
      CVCVEBLZVFCLZSZSZVHVKVDVSUTVEDLVFDLVHVKPUTVAVBVRUCVSBDVEUTVAVBVRUEVCVPVQU
      FTVSCDVFUTVAVBVRUGVCVPVQUHTVGDEVEVFFVGUIZUJUKULUOVLIJBCUMUNUPIJHVGABCDEKF
      VTGUQUTVBVAVOVNPJIHVGACBDEKFVTGUQURUS $.
      $( [21-Jun-2014] $) $( [25-Feb-2014] $)

    $( Subset implies subspace sum subset (extended domain version). $)
    lsmless1x $p |- ( ( ( W e. LMod /\ T C_ V /\ U C_ V ) /\ R C_ T )
       -> ( R P U ) C_ ( T P U ) ) $=
      ( vx vy vz clmod wcel wss cv co wceq wrex cab lsmvalx wa cplusg wi ssrexv
      w3a adantl ss2abdv simpl1 simpr simpl2 simpl3 eqid syl3anc adantr 3sstr4d
      cfv sstrd ) FLMZCENZDENZUEZBCNZUAZIOJOKOFUBUPZPQKDRZJBRZISZVEJCRZISZBDAPZ
      CDAPZVCVFVHIVBVFVHUCVAVEJBCUDUFUGVCURBENUTVJVGQURUSUTVBUHVCBCEVAVBUIURUSU
      TVBUJUQURUSUTVBUKJKIVDABDEFLGVDULZHTUMVAVKVIQVBJKIVDACDEFLGVLHTUNUO $.
      $( [21-Jun-2014] $) $( [22-Feb-2014] $)

    $( Subset implies subspace sum subset (extended domain version). $)
    lsmless2x $p |- ( ( ( W e. LMod /\ R C_ V /\ U C_ V ) /\ T C_ U )
       -> ( R P T ) C_ ( R P U ) ) $=
      ( clmod wcel wss w3a wa co simpl1 simpl3 simpl2 simpr wceq lsmcomx adantr
      lsmless1x syl31anc sstrd syl3anc 3sstr4d ) FIJZBEKZDEKZLZCDKZMZCBANZDBANZ
      BCANZBDANZULUGUIUHUKUMUNKUGUHUIUKOZUGUHUIUKPZUGUHUIUKQZUJUKRZACDBEFGHUBUC
      ULUGUHCEKUOUMSUQUSULCDEUTURUDABCEFGHTUEUJUPUNSUKABDEFGHTUAUF $.
      $( [21-Jun-2014] $) $( [25-Feb-2014] $)

    lsmub2x.s $e |- S = ( LSubSp ` W ) $.
    $( Subspace sum is an upper bound of its arguments. $)
    lsmub2x $p |- ( ( W e. LMod /\ T e. S /\ U C_ V ) -> U C_ ( T P U ) ) $=
      ( vx clmod wcel wss w3a co cv wa cfv eqid syl2anc c0g cplusg simpl1 simpr
      wceq simpl3 sseldd 0vlid simpl2 lssss lss0cl lsmelvalix syl32anc eqeltrrd
      ex ssrdv ) FKLZCBLZDEMZNZJDCDAOZUTJPZDLZVBVALUTVCQZFUARZVBFUBRZOZVBVAVDUQ
      VBELVGVBUEUQURUSVCUCZVDDEVBUQURUSVCUFZUTVCUDZUGVFEFVBVEGVFSZVESZUHTVDUQCE
      MZUSVECLZVCVGVALVHVDUQURVMVHUQURUSVCUIZBCEFKGIUJTVIVDUQURVNVHVOBCFVEVLIUK
      TVJVFACDEFVEVBGVKHULUMUNUOUP $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)
  $}

  ${
    $d x y z A $.  $d x y z T $.  $d x y z U $.  $d x y z V $.  $d x y z W $.
    $d x y z X $.
    lsmval.v $e |- V = ( Base ` W ) $.
    lsmval.a $e |- A = ( +g ` W ) $.
    lsmval.s $e |- S = ( LSubSp ` W ) $.
    lsmval.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum value (for a left module or left vector space). $)
    lsmval $p |- ( ( W e. X /\ T e. S /\ U e. S )
       -> ( T P U ) = { z | E. x e. T E. y e. U z = ( x A y ) } ) $=
      ( wcel wss co cv wceq w3a cab simp1 lssss 3adant3 3adant2 lsmvalx syl3anc
      wrex ) JKPZGFPZHFPZUAUJGIQZHIQZGHERCSASBSDRTBHUIAGUICUBTUJUKULUCUJUKUMULF
      GIJKLNUDUEUJULUNUKFHIJKLNUDUFABCDEGHIJKLMOUGUH $.
      $( [21-Jun-2014] $) $( [4-Feb-2014] $)
  $}

  ${
    $d y z A $.  $d y z T $.  $d y z U $.  $d y z W $.  $d y z X $.
    lsmelval.a $e |- A = ( +g ` W ) $.
    lsmelval.s $e |- S = ( LSubSp ` W ) $.
    lsmelval.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelval $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( X e. ( T P U ) <-> E. y e. T E. z e. U X = ( y A z ) ) ) $=
      ( clmod wcel w3a wss co cv wrex lssss cbs wceq simp1 eqid 3adant3 3adant2
      cfv wb lsmelvalx syl3anc ) HMNZFENZGENZOUKFHUAUGZPZGUNPZIFGDQNIARBRCQUBBG
      SAFSUHUKULUMUCUKULUOUMEFUNHMUNUDZKTUEUKUMUPULEGUNHMUQKTUFABCDFGUNHIUQJLUI
      UJ $.
      $( [21-Jun-2014] $) $( [4-Feb-2014] $)

    $( Subspace sum membership (for a left module or left vector space). $)
    lsmelvali $p |- ( ( ( W e. LMod /\ T e. S /\ U e. S ) /\
               ( X e. T /\ Y e. U ) ) -> ( X A Y ) e. ( T P U ) ) $=
      ( clmod wcel w3a cbs cfv wss wa co lssss simp1 3adant3 3adant2 lsmelvalix
      eqid 3jca sylan ) FLMZDCMZECMZNZUHDFOPZQZEULQZNGDMHEMRGHASDEBSMUKUHUMUNUH
      UIUJUAUHUIUMUJCDULFLULUEZJTUBUHUJUNUICEULFLUOJTUCUFABDEULFGHUOIKUDUG $.
      $( [21-Jun-2014] $) $( [4-Feb-2014] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d a d e f g u v x y z P $.
    $d a d e f g u v x y z S $.  $d a d e f g u v x y z T $.
    $d a d e f g u v x y z U $.  $d a d e f g u v x y z W $.
    lsmcl.s $e |- S = ( LSubSp ` W ) $.
    lsmcl.p $e |- P = ( LSSum ` W ) $.
    $( The sum of two subspaces is a subspace. $)
    lsmcl $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
           -> ( T P U ) e. S ) $=
      ( vd ve vf vg clmod wcel co cfv wceq cv wrex wa syl3anc va vu vv vz vx vy
      w3a simp1 csca cbs cplusg cvsca clss a1i cab eqid lsmval wi simpl1 simpl2
      eqidd simprl lssel simpl3 simprr eleq1a syl rexlimdvva abssdv eqsstrd c0g
      lmodvacl wne lss0cl 3adant3 3adant2 lsmelvali mpdan ne0i lsmelval anbi12d
      jca reeanv simp11 simp3 simp12 simp2ll simp13 simp2rl lmodvsdi1 syl112anc
      c0 lmodvscl simp2lr simp2rr lmod4 syl122anc eqtrd lsscl syl23anc syl32anc
      oveq1d eqeltrd oveq2 oveq12 sylan eleq1d syl5ibrcom 3expia expr rexlimdvv
      com23 syl5bir sylbid exp3acom23 com24 3imp2 islssd ) ELMZCBMZDBMZUGZXSCDA
      NZBMXSXTYAUHYBUAEUIOZUJOZEUKOZBEULOZYCYDEUJOZELUBUCYBYDVAYBYEVAYBYHVAYBYF
      VAYBYGVABEUMOPYBFUNYBYCUDQZUEQZUFQZYFNZPZUFDRUECRZUDUOYHUEUFUDYFABCDYHELY
      HUPZYFUPZFGUQYBYNUDYHYBYMYIYHMZUEUFCDYBYJCMZYKDMZSZSZYLYHMZYMYQURUUAXSYJY
      HMZYKYHMZUUBXSXTYAYTUSZUUAXSXTYRUUCUUEXSXTYAYTUTYBYRYSVBBCYHEYJLYOFVCTUUA
      XSYAYSUUDUUEXSXTYAYTVDYBYRYSVEBDYHEYKLYOFVCTYFYHEYJYKYOYPVLTYLYHYIVFVGVHV
      IVJYBEVKOZUUFYFNZYCMZYCWLVMYBUUFCMZUUFDMZSUUHYBUUIUUJXSXTUUIYABCEUUFUUFUP
      ZFVNVOXSYAUUJXTBDEUUFUUKFVNVPWBYFABCDEUUFUUFYPFGVQVRYCUUGVSVGYBUAQZYEMZUB
      QZYCMZUCQZYCMZUULUUNYGNZUUPYFNZYCMZYBUUQUUOUUMUUTYBUUOUUQUUMUUTURZYBUUOUU
      QSUUNHQZIQZYFNZPZIDRZHCRZUUPJQZKQZYFNZPZKDRZJCRZSZUVAYBUUOUVGUUQUVMHIYFAB
      CDEUUNYPFGVTJKYFABCDEUUPYPFGVTWAUVNUVFUVLSZJCRHCRYBUVAUVFUVLHJCCWCYBUVOUV
      AHJCCUVOUVEUVKSZKDRIDRYBUVBCMZUVHCMZSZSZUVAUVEUVKIKDDWCUVTUVPUVAIKDDYBUVS
      UVCDMZUVIDMZSZUVPUVAURYBUVSUWCSZSUUMUVPUUTYBUWDUUMUVPUUTURYBUWDUUMUGZUUTU
      VPUULUVDYGNZUVJYFNZYCMUWEUWGUULUVBYGNZUVHYFNZUULUVCYGNZUVIYFNZYFNZYCUWEUW
      GUWHUWJYFNZUVJYFNZUWLUWEUWFUWMUVJYFUWEXSUUMUVBYHMZUVCYHMZUWFUWMPXSXTYAUWD
      UUMWDZYBUWDUUMWEZUWEXSXTUVQUWOUWQXSXTYAUWDUUMWFZUVQUVRUWCYBUUMWGZBCYHEUVB
      LYOFVCTZUWEXSYAUWAUWPUWQXSXTYAUWDUUMWHZUWAUWBUVSYBUUMWIZBDYHEUVCLYOFVCTZY
      FUULYGYDYEYHEUVBUVCYOYPYDUPZYGUPZYEUPZWJWKXBUWEXSUWHYHMZUWJYHMZUVHYHMZUVI
      YHMZUWNUWLPUWQUWEXSUUMUWOUXHUWQUWRUXAUULYGYDYEYHEUVBYOUXEUXFUXGWMTUWEXSUU
      MUWPUXIUWQUWRUXDUULYGYDYEYHEUVCYOUXEUXFUXGWMTUWEXSXTUVRUXJUWQUWSUVQUVRUWC
      YBUUMWNZBCYHEUVHLYOFVCTUWEXSYAUWBUXKUWQUXBUWAUWBUVSYBUUMWOZBDYHEUVILYOFVC
      TYFUVIYHEUWHUWJUVHYOYPWPWQWRUWEXSXTYAUWICMZUWKDMZUWLYCMUWQUWSUXBUWEXSXTUU
      MUVQUVRUXNUWQUWSUWRUWTUXLYEYFBYGCYDLEUVBUVHUULUXEUXGYPUXFFWSWTUWEXSYAUUMU
      WAUWBUXOUWQUXBUWRUXCUXMYEYFBYGDYDLEUVCUVIUULUXEUXGYPUXFFWSWTYFABCDEUWIUWK
      YPFGVQXAXCUVPUUSUWGYCUVEUURUWFPUVKUUSUWGPUUNUVDUULYGXDUURUWFUUPUVJYFXEXFX
      GXHXIXLXJXKXMVHXMXNXOXPXQXRVR $.
      $( [21-Jun-2014] $) $( [4-Feb-2014] $)

    $( Subspace sum commutes. $)
    lsmcom $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( T P U ) = ( U P T ) ) $=
      ( clmod wcel w3a cbs cfv wss co wceq simp1 eqid lssss 3adant3 3adant2
      lsmcomx syl3anc ) EHIZCBIZDBIZJUCCEKLZMZDUFMZCDANDCANOUCUDUEPUCUDUGUEBCUF
      EHUFQZFRSUCUEUHUDBDUFEHUIFRTACDUFEUIGUAUB $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)

    $( Subspace sum is an upper bound of its arguments. $)
    lsmub2 $p |- ( ( W e. LMod /\ T e. S /\ U e. S ) -> U C_ ( T P U ) ) $=
      ( clmod wcel cbs cfv wss co eqid lssss 3adant2 lsmub2x syld3an3 ) EHIZCBI
      ZDBIZDEJKZLZDCDAMLSUAUCTBDUBEHUBNZFOPABCDUBEUDGFQR $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)

    $( Subspace sum is an upper bound of its arguments. $)
    lsmub1 $p |- ( ( W e. LMod /\ T e. S /\ U e. S ) -> T C_ ( T P U ) ) $=
      ( clmod wcel co wss w3a lsmub2 lsmcom sseqtrd 3com23 ) EHIZDBIZCBIZCCDAJZ
      KQRSLCDCAJTABDCEFGMABDCEFGNOP $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)

    $( Union of subspaces is a subset of subspace sum.  (The proof was
       shortened by Mario Carneiro, 21-Jun-2014.) $)
    lsmunss $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( T u. U ) C_ ( T P U ) ) $=
      ( clmod wcel w3a co lsmub1 lsmub2 unssd ) EHICBIDBIJCDCDAKABCDEFGLABCDEFG
      MN $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)

    $( Subset implies subspace sum subset. $)
    lsmless1 $p |- ( ( ( W e. LMod /\ U e. S /\ V e. S ) /\ T C_ U ) ->
                     ( T P V ) C_ ( U P V ) ) $=
      ( clmod wcel w3a wss wa cbs cfv co simpl1 simpl2 lssss syl2anc eqid simpr
      simpl3 lsmless1x syl31anc ) FIJZDBJZEBJZKZCDLZMZUFDFNOZLZEULLZUJCEAPDEAPL
      UFUGUHUJQZUKUFUGUMUOUFUGUHUJRBDULFIULUAZGSTUKUFUHUNUOUFUGUHUJUCBEULFIUPGS
      TUIUJUBACDEULFUPHUDUE $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)

    $( Subset implies subspace sum subset. $)
    lsmless2 $p |- ( ( ( W e. LMod /\ T e. S /\ V e. S ) /\ U C_ V ) ->
                     ( T P U ) C_ ( T P V ) ) $=
      ( clmod wcel w3a wss wa cbs cfv co simpl1 simpl2 lssss syl2anc eqid simpr
      simpl3 lsmless2x syl31anc ) FIJZCBJZEBJZKZDELZMZUFCFNOZLZEULLZUJCDAPCEAPL
      UFUGUHUJQZUKUFUGUMUOUFUGUHUJRBCULFIULUAZGSTUKUFUHUNUOUFUGUHUJUCBEULFIUPGS
      TUIUJUBACDEULFUPHUDUE $.
      $( [21-Jun-2014] $) $( [25-Feb-2014] $)

    $( Subspace sum is idempotent. $)
    lsmidm $p |- ( ( W e. LMod /\ U e. S ) -> ( U P U ) = U ) $=
      ( vx vy vz clmod wcel wa co cv cplusg cfv wceq wrex wb 3anidm23 wi eleq1a
      eqid lsmelval lssvacl syl rexlimdvva sylbid ssrdv wss lsmub1 eqssd ) DJKZ
      CBKZLZCCAMZCUOGUPCUOGNZUPKZUQHNZINZDOPZMZQZICRHCRZUQCKZUMUNURVDSHIVAABCCD
      UQVAUCZEFUDTUOVCVEHICCUOUSCKUTCKLLVBCKVCVEUAVABCDUSUTVFEUEVBCUQUBUFUGUHUI
      UMUNCUPUJABCCDEFUKTUL $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)

    $( Least upper bound property of subspace sum. $)
    lsmlub $p |- ( ( W e. LMod /\ ( T e. S /\ U e. S /\ V e. S ) )
       -> ( ( T C_ V /\ U C_ V ) <-> ( T P U ) C_ V ) ) $=
      ( clmod wcel w3a wa wss simpll simplr3 simplr2 simprl lsmless1 syl31anc
      co simprr lsmless2 wceq lsmidm syl2anc sseqtrd sstrd ex lsmunss 3adant3r3
      cun wi sstr2 syl unss syl6ibr impbid ) FIJZCBJZDBJZEBJZKZLZCEMZDEMZLZCDAT
      ZEMZVCVFVHVCVFLZVGEDATZEVIURVAUTVDVGVJMURVBVFNZUSUTVAURVFOZUSUTVAURVFPVCV
      DVEQABCEDFGHRSVIVJEEATZEVIURVAVAVEVJVMMVKVLVLVCVDVEUAABEDEFGHUBSVIURVAVME
      UCVKVLABEFGHUDUEUFUGUHVCVHCDUKZEMZVFVCVNVGMZVHVOULURUSUTVPVAABCDFGHUIUJVN
      VGEUMUNCDEUOUPUQ $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)

    $( Subspace sum with a subset. $)
    lsmss2 $p |- ( ( W e. LMod /\ ( T e. S /\ U e. S ) /\ T C_ U ) ->
                   ( T P U ) = U ) $=
      ( clmod wcel wa wss w3a simp1 simp2r simp3 lsmless1 syl31anc wceq lsmidm
      co syl2anc sseqtrd lsmub2 3expb 3adant3 eqssd ) EHIZCBIZDBIZJZCDKZLZCDATZ
      DULUMDDATZDULUGUIUIUKUMUNKUGUJUKMZUGUHUIUKNZUPUGUJUKOABCDDEFGPQULUGUIUNDR
      UOUPABDEFGSUAUBUGUJDUMKZUKUGUHUIUQABCDEFGUCUDUEUF $.
      $( [21-Jun-2014] $) $( [27-Mar-2014] $)

    $( Subspace sum with a subset. $)
    lsmss1 $p |- ( ( W e. LMod /\ ( T e. S /\ U e. S ) /\ U C_ T ) ->
                   ( T P U ) = T ) $=
      ( clmod wcel wa wss w3a wceq lsmcom 3expb 3adant3 ancom lsmss2 syl3an2b
      co eqtrd ) EHIZCBIZDBIZJZDCKZLCDATZDCATZCUBUEUGUHMZUFUBUCUDUIABCDEFGNOPUE
      UBUDUCJUFUHCMUCUDQABDCEFGRSUA $.
      $( [21-Jun-2014] $) $( [27-Mar-2014] $)

    $( Subspace sum is associative. $)
    lsmass $p |- ( ( W e. LMod /\ ( R e. S /\ T e. S /\ U e. S ) )
       -> ( ( R P T ) P U ) = ( R P ( T P U ) ) ) $=
      ( wcel wa co wss wb lsmcl syl3anc lsmlub syl13anc lsmub1 lsmub2 sstrd w3a
      clmod simpl 3adant3r3 simpr3 simpr1 3adant3r1 simpr2 mpbi2and eqssd ) FUB
      IZBCIZDCIZECIZUAZJZBDAKZEAKZBDEAKZAKZUPUQUTLZEUTLZURUTLZUPUKUQCIZUNUTCIZV
      AVBJVCMUKUOUCZUKULUMVDUNACBDFGHNUDZUKULUMUNUEZUPUKULUSCIZVEVFUKULUMUNUFZU
      KUMUNVIULACDEFGHNUGZACBUSFGHNOZACUQEUTFGHPQUPBUTLZDUTLZVAUPUKULUMVEVMVNJV
      AMVFVJUKULUMUNUHZVLACBDUTFGHPQUPUKULVIVMVFVJVKACBUSFGHROUPDUSUTUKUMUNDUSL
      ULACDEFGHRUGUPUKULVIUSUTLVFVJVKACBUSFGHSOZTUIUPEUSUTUKUMUNEUSLULACDEFGHSU
      GVPTUIUPBURLZUSURLZUTURLZUPUKULVIURCIZVQVRJVSMVFVJVKUPUKVDUNVTVFVGVHACUQE
      FGHNOZACBUSURFGHPQUPBUQURUKULUMBUQLUNACBDFGHRUDUPUKVDUNUQURLVFVGVHACUQEFG
      HROZTUPDURLZEURLZVRUPUKUMUNVTWCWDJVRMVFVOVHWAACDEURFGHPQUPDUQURUKULUMDUQL
      UNACBDFGHSUDWBTUPUKVDUNWDVFVGVHACUQEFGHSOUIUIUJ $.
      $( [21-Jun-2014] $) $( [2-Mar-2014] $)

    $( Commutative/associative law for left module subspace sum. $)
    lsm4 $p |- ( ( W e. LMod /\ ( Q e. S /\ R e. S ) /\ ( T e. S /\ U e. S ) )
        -> ( ( Q P R ) P ( T P U ) ) = ( ( Q P T ) P ( R P U ) ) ) $=
      ( clmod wcel wa w3a co wceq simp1 syl3anc lsmass syl13anc lsmcl 3eqtr4d
      simp2r simp3l lsmcom oveq2d simp2l oveq1d simp3r 3eqtr3d ) GJKZBDKZCDKZLZ
      EDKZFDKZLZMZBCANZEANZFANZBEANZCANZFANZUREFANANZVACFANANZUQUSVBFAUQBCEANZA
      NZBECANZANZUSVBUQVFVHBAUQUJULUNVFVHOUJUMUPPZUJUKULUPUBZUJUMUNUOUCZADCEGHI
      UDQUEUQUJUKULUNUSVGOVJUJUKULUPUFZVKVLABDCEGHIRSUQUJUKUNULVBVIOVJVMVLVKABD
      ECGHIRSUAUGUQUJURDKZUNUOUTVDOVJUQUJUKULVNVJVMVKADBCGHITQVLUJUMUNUOUHZAURD
      EFGHIRSUQUJVADKZULUOVCVEOVJUQUJUKUNVPVJVMVLADBEGHITQVKVOAVADCFGHIRSUI $.
      $( [26-Sep-2014] $)

    $( The modular law holds for subspace sum.  Similar to part of Theorem 16.9
       of [MaedaMaeda] p. 70.  (The proof was shortened by Mario Carneiro,
       21-Jun-2014.) $)
    lsmmod $p |- ( ( W e. LMod /\ ( A e. S /\ B e. S /\ C e. S ) /\ A C_ C ) ->
                   ( ( A P B ) i^i C ) = ( A P ( B i^i C ) ) ) $=
      ( vy vz clmod wcel wss co cv cfv wceq syl3anc wa adantr vx w3a cin cplusg
      wrex inss1 sseli wb simp1 simp21 simp22 lsmelval syl5ib wi simp23 lssincl
      eqid simprll simprlr csg lssel lmodvpncan lmodcom ad2antll eqeltrd simpl3
      inss2 sseldd lssvsubcl syl22anc eqeltrrd elin sylanbrc lsmelvali syl32anc
      expr eleq1 imbi12d syl5ibrcom rexlimdvva com23 mpdd ssrdv lsmlub syl13anc
      cbs lsmcl lsmub1 simp3 jca ssin sylib lsmub2 ssrin syl mpbi2and eqssd ) F
      KLZAELZBELZCELZUBZACMZUBZABDNZCUCZABCUCZDNZXDUAXFXHXDUAOZXFLZXIIOZJOZFUDP
      ZNZQZJBUEIAUEZXIXHLZXJXIXELZXDXPXFXEXIXECUFUGXDWRWSWTXRXPUHWRXBXCUIZWRWSW
      TXAXCUJZWRWSWTXAXCUKZIJXMDEABFXIXMUQZGHULRUMXDXPXJXQXDXOXJXQUNZIJABXDXKAL
      ZXLBLZSZSYCXOXNXFLZXNXHLZUNXDYFYGYHXDYFYGSZSZWRWSXGELZYDXLXGLZYHXDWRYIXST
      ZXDWSYIXTTZXDYKYIXDWRWTXAYKXSYAWRWSWTXAXCUOZEBCFGUPRZTXDYDYEYGURZYJYEXLCL
      YLXDYDYEYGUSZYJXLXKXMNZXKFUTPZNZXLCYJWRXLFWFPZLZXKUUBLZUUAXLQYMYJWRWTYEUU
      CYMXDWTYIYATYREBUUBFXLKUUBUQZGVARZYJWRWSYDUUDYMYNYQEAUUBFXKKUUEGVARZXLXKX
      MYTUUBFUUEYBYTUQZVBRYJWRXAYSCLXKCLUUACLYMXDXAYIYOTYJYSXNCYJWRUUCUUDYSXNQY
      MUUFUUGXMUUBFXLXKUUEYBVCRYGXNCLXDYFXFCXNXECVGUGVDVEYJACXKWRXBXCYIVFYQVHEC
      YTFYSXKUUHGVIVJVKXLBCVLVMXMDEAXGFXKXLYBGHVNVOVPXOXJYGXQYHXIXNXFVQXIXNXHVQ
      VRVSVTWAWBWCXDAXFMZXGXFMZXHXFMZXDWRWSYKXFELZUUIUUJSUUKUHXSXTYPXDWRXEELZXA
      UULXSXDWRWSWTUUMXSXTYADEABFGHWGRYOEXECFGUPRDEAXGXFFGHWDWEXDAXEMZXCSUUIXDU
      UNXCXDWRWSWTUUNXSXTYADEABFGHWHRWRXBXCWIWJAXECWKWLXDBXEMZUUJXDWRWSWTUUOXSX
      TYADEABFGHWMRBXECWNWOWPWQ $.
      $( [21-Jun-2014] $) $( [2-Apr-2014] $)
  $}

  ${
    $d y z P $.  $d y z T $.  $d y z U $.  $d y z V $.  $d y z W $.
    $d y z X $.  $d y z ph $.
    lsmelval2.v $e |- V = ( Base ` W ) $.
    lsmelval2.s $e |- S = ( LSubSp ` W ) $.
    lsmelval2.p $e |- P = ( LSSum ` W ) $.
    lsmelval2.n $e |- N = ( LSpan ` W ) $.
    lsmelval2.w $e |- ( ph -> W e. LMod ) $.
    lsmelval2.t $e |- ( ph -> T e. S ) $.
    lsmelval2.u $e |- ( ph -> U e. S ) $.
    $( Subspace sum membership in terms of a sum of 1-dim subspaces (atoms),
       which can be useful for treating subspaces as projective lattice
       elements. $)
    lsmelval2 $p |- ( ph -> ( X e. ( T P U ) <-> ( X e. V /\ E. y e. T
         E. z e. U ( N ` { X } ) C_ ( ( N ` { y } ) P ( N ` { z } ) ) ) ) ) $=
      ( wcel syl3anc co csn cfv cv wss wa wrex cplusg wceq clmod wb lsmelval wi
      eqid ad2antrr simplr lssel lspsncl syl2anc simpr lspsnid lsmelvali eleq1a
      syl32anc syl lspsnel6 sylibd reximdva sylbid adantr simprl simprr lspsnss
      lsmcl lsmless1 syl31anc lsmless2 sylbird rexlimdvva impbid r19.42v rexbii
      sstrd sseld bitri syl6bb ) AKFGDUAZSZKISZKUBHUCBUDZUBHUCZCUDZUBHUCZDUAZUE
      ZUFZCGUGZBFUGZWIWOCGUGZBFUGUFZAWHWRAWHKWJWLJUHUCZUAZUIZCGUGZBFUGZWRAJUJSZ
      FESZGESZWHXEUKPQRBCXADEFGJKXAUNZMNULTAXDWQBFAWJFSZUFZXCWPCGXKWLGSZUFZXCKW
      NSZWPXMXBWNSZXCXNUMXMXFWKESZWMESZWJWKSZWLWMSZXOAXFXJXLPUOZXMXFWJISZXPXTXM
      XFXGXJYAXTAXGXJXLQUOAXJXLUPEFIJWJUJLMUQZTZEHIJWJLMOURZUSZXMXFWLISZXQXTXMX
      FXHXLYFXTAXHXJXLRUOXKXLUTEGIJWLUJLMUQZTZEHIJWLLMOURZUSZXMXFYAXRXTYCHIJWJL
      OVAUSXMXFYFXSXTYHHIJWLLOVAUSXADEWKWMJWJWLXIMNVBVDXBWNKVCVEXMEWNHIJKLMOXTX
      MXFXPXQWNESZXTYEYJDEWKWMJMNVNZTVFVGVHVHVIAWPWHBCFGAXJXLUFZUFZWPXNWHYNEWNH
      IJKLMOAXFYMPVJZYNXFXPXQYKYOYNXFYAXPYOYNXFXGXJYAYOAXGYMQVJZAXJXLVKZYBTYDUS
      YNXFYFXQYOYNXFXHXLYFYOAXHYMRVJZAXJXLVLZYGTYIUSZYLTVFYNWNWGKYNWNFWMDUAZWGY
      NXFXGXQWKFUEZWNUUAUEYOYPYTYNXFXGXJUUBYOYPYQEFHJWJMOVMTDEWKFWMJMNVOVPYNXFX
      GXHWMGUEZUUAWGUEYOYPYRYNXFXHXLUUCYOYRYSEGHJWLMOVMTDEFWMGJMNVQVPWCWDVRVSVT
      WRWIWSUFZBFUGWTWQUUDBFWIWOCGWAWBWIWSBFWAWEWF $.
      $( [9-Aug-2014] $)
  $}

  ${
    lsm01.z $e |- Z = ( 0g ` W ) $.
    lsm01.s $e |- S = ( LSubSp ` W ) $.
    lsm01.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum with the zero subspace. $)
    lsm01 $p |- ( ( W e. LMod /\ X e. S ) -> ( X P { Z } ) = X ) $=
      ( clmod wcel wa csn wss co wceq simpl simpr lsssn0 adantr lss0ss lsmss1
      syl121anc ) CIJZDBJZKUCUDELZBJZUEDMDUEANDOUCUDPUCUDQUCUFUDBCEFGRSBCDEFGTA
      BDUECGHUAUB $.
      $( [21-Jun-2014] $) $( [27-Mar-2014] $)

    $( Subspace sum with the zero subspace. $)
    lsm02 $p |- ( ( W e. LMod /\ X e. S ) -> ( { Z } P X ) = X ) $=
      ( clmod wcel wa csn co wceq lsssn0 adantr lsmcom mpd3an3 lsm01 eqtr3d ) C
      IJZDBJZKDELZAMZUCDAMZDUAUBUCBJZUDUENUAUFUBBCEFGOPABDUCCGHQRABCDEFGHST $.
      $( [21-Jun-2014] $) $( [27-Mar-2014] $)
  $}

  ${
    lsmsp.s $e |- S = ( LSubSp ` W ) $.
    lsmsp.n $e |- N = ( LSpan ` W ) $.
    lsmsp.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum in terms of span.  (The proof was shortened by Mario
       Carneiro, 21-Jun-2014.) $)
    lsmsp $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
       -> ( T P U ) = ( N ` ( T u. U ) ) ) $=
      ( clmod wcel w3a co cun cfv wss wa lssss syl2anc syl5ss simp1 simp2 simp3
      wb cbs 3adant3 3adant2 unssd lspcl lsmlub syl13anc ssun1 lspssid mpbi2and
      eqid ssun2 lsmcl lsmunss lspssp syl3anc eqssd ) FJKZCBKZDBKZLZCDAMZCDNZEO
      ZVECVHPZDVHPZVFVHPZVEVBVCVDVHBKZVIVJQVKUDVBVCVDUAZVBVCVDUBVBVCVDUCVEVBVGF
      UEOZPZVLVMVECDVNVBVCCVNPVDBCVNFJVNUOZGRUFVBVDDVNPVCBDVNFJVPGRUGUHZBVGEVNF
      VPGHUISABCDVHFGIUJUKVECVGVHCDULVEVBVOVGVHPVMVQVGEVNFVPHUMSZTVEDVGVHDCUPVR
      TUNVEVBVFBKVGVFPVHVFPVMABCDFGIUQABCDFGIURBVGVFEFGHUSUTVA $.
      $( [21-Jun-2014] $) $( [6-Feb-2014] $)
  $}

  ${
    lsmsp2.v $e |- V = ( Base ` W ) $.
    lsmsp2.n $e |- N = ( LSpan ` W ) $.
    lsmsp2.p $e |- P = ( LSSum ` W ) $.
    $( Subspace sum of spans of subsets is the span of their union.
       ( ~ spanuni analog.) $)
    lsmsp2 $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( ( N ` T ) P ( N ` U ) ) = ( N ` ( T u. U ) ) ) $=
      ( clmod wcel wss w3a cfv co cun clss wceq simp1 lspcl 3adant3 lsmsp lspun
      eqid 3adant2 syl3anc eqtr4d ) FJKZBELZCELZMZBDNZCDNZAOZULUMPDNZBCPDNUKUHU
      LFQNZKZUMUPKZUNUORUHUIUJSUHUIUQUJUPBDEFGUPUDZHTUAUHUJURUIUPCDEFGUSHTUEAUP
      ULUMDFUSHIUBUFBCDEFGHUCUG $.
      $( [21-Jun-2014] $) $( [22-Feb-2014] $)

    lsmssspx.t $e |- ( ph -> T C_ V ) $.
    lsmssspx.u $e |- ( ph -> U C_ V ) $.
    lsmssspx.w $e |- ( ph -> W e. LMod ) $.
    $( Subspace sum (in its extended domain) is a subset of the span of the
       union of its arguments. $)
    lsmssspx $p |- ( ph -> ( T P U ) C_ ( N ` ( T u. U ) ) ) $=
      ( co cfv wss lspssv syl2anc lspssid syl31anc cun wcel lsmless1x lsmless2x
      clmod sstrd wceq lsmsp2 syl3anc sseqtrd ) ACDBNZCEOZDEOZBNZCDUAEOZAUKULDB
      NZUNAGUEUBZULFPZDFPZCULPZUKUPPMAUQCFPZURMKCEFGHIQRZLAUQVAUTMKCEFGHISRBCUL
      DFGHJUCTAUQURUMFPZDUMPZUPUNPMVBAUQUSVCMLDEFGHIQRAUQUSVDMLDEFGHISRBULDUMFG
      HJUDTUFAUQVAUSUNUOUGMKLBCDEFGHIJUHUIUJ $.
      $( [6-Aug-2014] $)
  $}

  ${
    lsppr0.v $e |- V = ( Base ` W ) $.
    lsppr0.z $e |- Z = ( 0g ` W ) $.
    lsppr0.n $e |- N = ( LSpan ` W ) $.
    lsppr0.w $e |- ( ph -> W e. LMod ) $.
    lsppr0.x $e |- ( ph -> X e. V ) $.
    $( The span of a vector paired with zero equals the span of the singleton
       of the vector. $)
    lsppr0 $p |- ( ph -> ( N ` { X , Z } ) = ( N ` { X } ) ) $=
      ( cfv csn co wcel wss wceq snssd syl eqid cpr clsm cun clmod 0vcl syl3anc
      lsmsp2 df-pr fveq2i syl6reqr lspsn0 oveq2d lspsncl syl2anc lsm01 3eqtrd
      clss ) AEFUAZBLZEMZBLZFMZBLZDUBLZNZVAVBVDNZVAAVEUTVBUCZBLZUSADUDOZUTCPVBC
      PVEVHQJAECKRAFCAVIFCOJCDFGHUESRVDUTVBBCDGIVDTZUGUFURVGBEFUHUIUJAVCVBVAVDA
      VIVCVBQJBDFHIUKSULAVIVADUQLZOZVFVAQJAVIECOVLJKVKBCDEGVKTZIUMUNVDVKDVAFHVM
      VJUOUNUP $.
      $( [29-Aug-2014] $)
  $}

  ${
    $d k l x y A $.  $d k l F $.  $d k l x y K $.  $d k l v x y N $.
    $d k l x y T $.  $d k l V $.  $d k l v x y W $.  $d k l v x y X $.
    $d k l v x y Y $.  $d k l v x y ph $.
    lsppr.v $e |- V = ( Base ` W ) $.
    lsppr.a $e |- A = ( +g ` W ) $.
    lsppr.f $e |- F = ( Scalar ` W ) $.
    lsppr.k $e |- K = ( Base ` F ) $.
    lsppr.t $e |- T = ( vsca ` W ) $.
    lsppr.n $e |- N = ( LSpan ` W ) $.
    lsppr.w $e |- ( ph -> W e. LMod ) $.
    lsppr.x $e |- ( ph -> X e. V ) $.
    lsppr.y $e |- ( ph -> Y e. V ) $.
    $( Span of a pair of vectors. $)
    lsppr $p |- ( ph -> ( N ` { X , Y } )
            = { v | E. k e. K E. l e. K v = ( ( k T X ) A ( l T Y ) ) } ) $=
      ( vx vy cpr cfv csn cun cv wceq wrex cab df-pr fveq2i clsm clmod wcel wss
      co snssd lspun syl3anc clss eqid lspsncl syl2anc lsmsp wb lsmelval adantr
      wa simpr lspsnmul lspsnel biimpa oveq1 eqeq2d rexbidv adantl oveq2 3bitrd
      rexxfrd abbi2dv 3eqtr2d syl5eq ) AKLUEZHUFKUGZLUGZUHZHUFZBUIZEUIZKDUSZMUI
      ZLDUSZCUSZUJZMGUKZEGUKZBULZWFWIHKLUMUNAWJWGHUFZWHHUFZUHHUFZXAXBJUOUFZUSZW
      TAJUPUQZWGIURWHIURWJXCUJTAKIUAUTALIUBUTWGWHHIJNSVAVBAXFXAJVCUFZUQZXBXGUQZ
      XEXCUJTAXFKIUQZXHTUAXGHIJKNXGVDZSVEVFZAXFLIUQZXITUBXGHIJLNXKSVEVFZXDXGXAX
      BHJXKSXDVDZVGVBAWSBXEAWKXEUQZWKUCUIZUDUIZCUSZUJZUDXBUKZUCXAUKZWKWMXRCUSZU
      JZUDXBUKZEGUKWSAXFXHXIXPYBVHTXLXNUCUDCXDXGXAXBJWKOXKXOVIVBAYAYEUCEWMXAGAW
      LGUQZVKWLDFGHIJKNRPQSAXFYFTVJAYFVLAXJYFUAVJVMAXQXAUQZXQWMUJZEGUKZAXFXJYGY
      IVHTUADXQEFGHIJKPQNRSVNVFVOYHYAYEVHAYHXTYDUDXBYHXSYCWKXQWMXRCVPVQVRVSWBAY
      EWREGAYDWQUDMWOXBGAWNGUQZVKWNDFGHIJLNRPQSAXFYJTVJAYJVLAXMYJUBVJVMAXRXBUQZ
      XRWOUJZMGUKZAXFXMYKYMVHTUBDXRMFGHIJLPQNRSVNVFVOYLYDWQVHAYLYCWPWKXRWOWMCVT
      VQVSWBVRWAWCWDWE $.
      $( [22-Aug-2014] $)

    $d k l v A $.  $d k l F $.  $d k l v K $.  $d k l v N $.  $d k l v T $.
    $d k l v V $.  $d k l v W $.  $d k l v X $.  $d k l v Y $.  $d k l v ph $.
    $( Keep temporarily for archiving them delete.  Obsolete proof of ~ lsppr
       as of 22-Aug-2014. $)
    lspprOLD $p |- ( ph -> ( N ` { X , Y } )
            = { v | E. k e. K E. l e. K v = ( ( k T X ) A ( l T Y ) ) } ) $=
      ( cpr cfv cv co wceq wrex cab clmod wcel clss eqid lss2dOLD lssss syl2anc
      wss wa wb prssg cur c0g lmod1cl syl lmod0cl lmodvs1 lmod0vs oveq12d 0vrid
      eqtr2d oveq1 oveq1d eqeq2d rcla42ev syl3anc eqeq1 2rexbidv elabg mpbi2and
      oveq2d mpbird 0vlid lspss lspid sseqtrd adantr lspcl simprl prid1g sseldd
      wi lspssid lssvscl syl22anc simprr prid2g lssvacl eleq1a rexlimdvva eqssd
      abssdv ) AKLUCZHUDZBUEZEUEZKDUFZMUEZLDUFZCUFZUGZMGUHEGUHZBUIZAXCXLHUDZXLA
      JUJUKZXLIUQZXBXLUQZXCXMUQTAXNXLJULUDZUKZXOTABCXQDEFGIJKLMNOPRQXQUMZTUAUBU
      NZXQXLIJUJNXSUOUPAKXLUKZLXLUKZXPAKIUKZLIUKZYAYBURXPUSUAUBKLXLIIUTUPAYAKXI
      UGZMGUHEGUHZAFVAUDZGUKZFVBUDZGUKZKYGKDUFZYILDUFZCUFZUGZYFAXNYHTYGFGJPQYGU
      MZVCVDZAXNYJTFGJYIPQYIUMZVEVDZAYMKJVBUDZCUFZKAYKKYLYSCAXNYCYKKUGTUADYGFIJ
      KNPRYOVFUPAXNYDYLYSUGTUBDFYIIJLYSNPRYQYSUMZVGUPVHAXNYCYTKUGTUACIJKYSNOUUA
      VIUPVJYEYNKYKXHCUFZUGEMYGYIGGXEYGUGZXIUUBKUUCXFYKXHCXEYGKDVKVLVMXGYIUGZUU
      BYMKUUDXHYLYKCXGYILDVKVTVMVNVOAYCYAYFUSUAXKYFBKIXDKUGXJYEEMGGXDKXIVPVQVRV
      DWAAYBLXIUGZMGUHEGUHZAYJYHLYIKDUFZYGLDUFZCUFZUGZUUFYRYPAUUIYSLCUFZLAUUGYS
      UUHLCAXNYCUUGYSUGTUADFYIIJKYSNPRYQUUAVGUPAXNYDUUHLUGTUBDYGFIJLNPRYOVFUPVH
      AXNYDUUKLUGTUBCIJLYSNOUUAWBUPVJUUEUUJLUUGXHCUFZUGEMYIYGGGXEYIUGZXIUULLUUM
      XFUUGXHCXEYIKDVKVLVMXGYGUGZUULUUILUUNXHUUHUUGCXGYGLDVKVTVMVNVOAYDYBUUFUSU
      BXKUUFBLIXDLUGXJUUEEMGGXDLXIVPVQVRVDWAVSXBXLHIJNSWCVOAXNXRXMXLUGTXTXQXLHJ
      XSSWDUPWEAXKBXCAXJXDXCUKZEMGGAXEGUKZXGGUKZURZURZXIXCUKZXJUUOWKUUSXNXCXQUK
      ZXFXCUKZXHXCUKZUUTAXNUURTWFZUUSXNXBIUQZUVAUVDAUVEUURAYCYDUVEAYCYDYCYDURUV
      EUSUAUBKLIIIUTUPUAUBVSZWFXQXBHIJNXSSWGZUPZUUSXNUVAUUPKXCUKZUVBUVDUVHAUUPU
      UQWHAUVIUURAXBXCKAXNUVEXBXCUQTUVFXBHIJNSWLUPZAYCKXBUKUAKLIWIVDWJWFGXQDXCF
      JXEKPRQXSWMWNUUSXNUVAUUQLXCUKZUVCUVDAUVAUURAXNUVEUVATUVFUVGUPWFAUUPUUQWOA
      UVKUURAXBXCLUVJAYDLXBUKUBKLIWPVDWJWFGXQDXCFJXGLPRQXSWMWNCXQXCJXFXHOXSWQWN
      XIXCXDWRVDWSXAWT $.
      $( [21-Aug-2014] $)
  $}

  ${
    $d k x y F $.  $d k x y K $.  $d v x y N $.  $d k x y T $.  $d k v x y V $.
    $d k v x y W $.  $d k v x y X $.
    lspsnOLD.f $e |- F = ( Scalar ` W ) $.
    lspsnOLD.k $e |- K = ( Base ` F ) $.
    lspsnOLD.v $e |- V = ( Base ` W ) $.
    lspsnOLD.t $e |- T = ( vsca ` W ) $.
    lspsnOLD.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton of a vector.  Keep temporarily for archiving them
       delete.  Obsolete proof of ~ lspsn as of 22-Aug-2014. $)
    lspsnOLD $p |- ( ( W e. LMod /\ X e. V )
        -> ( N ` { X } ) = { v | E. k e. K v = ( k T X ) } ) $=
      ( vx vy wcel cfv co wceq clmod wa csn cpr cv wrex cab dfsn2 fveq2i cplusg
      eqid simpl simpr lsppr w3a simp1l simp2l simp2r lmodacl syl3anc lmodvsdi2
      simp3 simp1r syl121anc eqtr4d oveq1 eqeq2d rcla4ev syl2anc 3exp rexlimdvv
      c0g simp2 lmod0cl syl lmodvscl 0vrid lmod0vs oveq2d 3eqtr4rd weq rcla42ev
      oveq1d rexlimdv impbid abbidv eqtrd syl5eq ) HUAQZIGQZUBZIUCZFRIIUDZFRZAU
      EZCUEZIBSZTZCEUFZAUGZWLWMFIUHUIWKWNWOOUEZIBSZPUEZIBSZHUJRZSZTZPEUFOEUFZAU
      GWTWKAXEBODEFGHIIPLXEUKZJKMNWIWJULWIWJUMZXJUNWKXHWSAWKXHWSWKXGWSOPEEWKXAE
      QZXCEQZUBZXGWSWKXMXGUOZXAXCDUJRZSZEQZWOXPIBSZTZWSXNWIXKXLXQWIWJXMXGUPZWKX
      KXLXGUQZWKXKXLXGURZXODEHXAXCJKXOUKZUSUTXNWOXFXRWKXMXGVBXNWIXKXLWJXRXFTXTY
      AYBWIWJXMXGVCXEXOXAXCBDEGHILXIJMKYCVAVDVEWRXSCXPEWPXPTWQXRWOWPXPIBVFVGVHV
      IVJVKWKWRXHCEWKWPEQZWRXHWKYDWRUOZYDDVLRZEQZWOWQYFIBSZXESZTZXHWKYDWRVMZYEW
      IYGWIWJYDWRUPZDEHYFJKYFUKZVNVOYEWQHVLRZXESZWQYIWOYEWIWQGQZYOWQTYLYEWIYDWJ
      YPYLYKWIWJYDWRVCZWPBDEGHILJMKVPUTXEGHWQYNLXIYNUKZVQVIYEYHYNWQXEYEWIWJYHYN
      TYLYQBDYFGHIYNLJMYMYRVRVIVSWKYDWRVBVTXGYJWOWQXDXESZTOPWPYFEEOCWAZXFYSWOYT
      XBWQXDXEXAWPIBVFWCVGXCYFTZYSYIWOUUAXDYHWQXEXCYFIBVFVSVGWBUTVJWDWEWFWGWH
      $.
      $( [22-Aug-2014] $)
  $}

  ${
    lspvadd.v $e |- V = ( Base ` W ) $.
    lspvadd.a $e |- A = ( +g ` W ) $.
    lspvadd.n $e |- N = ( LSpan ` W ) $.
    $( The span of a vector sum is included in the span of its arguments.  (The
       proof was shortened by Mario Carneiro, 21-Jun-2014.) $)
    lspvadd $p |- ( ( W e. LMod /\ X e. V /\ Y e. V )
       -> ( N ` { ( X A Y ) } ) C_ ( N ` { X , Y } ) ) $=
      ( clmod wcel w3a cpr cfv clss wss wa prssg 3adant1 syl2anc csn simp1 eqid
      co ibi lspcl lspssid wb mpbird lssvacl syl21anc snssd lspssp syl3anc ) DJ
      KZECKZFCKZLZUOEFMZBNZDONZKZEFAUDZUAZUTPVDBNUTPUOUPUQUBZURUOUSCPZVBVEUPUQV
      FUOUPUQQVFEFCCCRUESZVAUSBCDGVAUCZIUFTZURVCUTURUOVBEUTKFUTKQZVCUTKVEVIURVJ
      USUTPZURUOVFVKVEVGUSBCDGIUGTUPUQVJVKUHUOEFUTCCRSUIAVAUTDEFHVHUJUKULVAVDUT
      BDVHIUMUN $.
      $( [21-Jun-2014] $) $( [22-Feb-2014] $)
  $}

  ${
    lspsntri.v $e |- V = ( Base ` W ) $.
    lspsntri.a $e |- A = ( +g ` W ) $.
    lspsntri.n $e |- N = ( LSpan ` W ) $.
    lspsntri.p $e |- P = ( LSSum ` W ) $.
    $( Triangle-type inequality for span of a singleton. $)
    lspsntri $p |- ( ( W e. LMod /\ X e. V /\ Y e. V )
       -> ( N ` { ( X A Y ) } ) C_ ( ( N ` { X } ) P ( N ` { Y } ) ) ) $=
      ( clmod wcel w3a co csn cfv cun wss snssd cpr lspvadd df-pr syl6sseq wceq
      fveq2i simp1 simp2 simp3 lsmsp2 syl3anc sseqtr4d ) ELMZFDMZGDMZNZFGAOPCQZ
      FPZGPZRZCQZURCQUSCQBOZUPUQFGUAZCQVAACDEFGHIJUBVCUTCFGUCUFUDUPUMURDSUSDSVB
      VAUEUMUNUOUGUPFDUMUNUOUHTUPGDUMUNUOUITBURUSCDEHJKUJUKUL $.
      $( [21-Jun-2014] $) $( [24-Feb-2014] $)
  $}

  ${
    lspsntrim.v $e |- V = ( Base ` W ) $.
    lspsntrim.s $e |- S = ( -g ` W ) $.
    lspsntrim.p $e |- P = ( LSSum ` W ) $.
    lspsntrim.n $e |- N = ( LSpan ` W ) $.
    $( Triangle-type inequality for span of a singleton of vector
       difference. $)
    lspsntrim $p |- ( ( W e. LMod /\ X e. V /\ Y e. V )
        -> ( N ` { ( X S Y ) } ) C_ ( ( N ` { X } ) P ( N ` { Y } ) ) ) $=
      ( clmod wcel w3a cfv co csn eqid 3adant2 wceq cminusg cplusg wss lspsntri
      lmodvnegcl syld3an3 grpsubval sneqd fveq2d 3adant1 lspsnneg eqcomd oveq2d
      wa 3sstr4d ) ELMZFDMZGDMZNZFGEUAOZOZEUBOZPZQZCOZFQCOZVAQCOZAPZFGBPZQZCOZV
      FGQCOZAPUPUQURVADMZVEVHUCUPURVMUQUTDEGHUTRZUESVBACDEFVAHVBRZKJUDUFUQURVKV
      ETUPUQURUNZVJVDCVPVIVCDVBEUTBFGHVOVNIUGUHUIUJUSVLVGVFAUSVGVLUPURVGVLTUQUT
      CDEGHVNKUKSULUMUO $.
      $( [21-Jun-2014] $) $( [25-Apr-2014] $)
  $}

  $( Define the class of all left vector spaces.  A left vector space over a
     division ring is an Abelian group (vectors) together with a division ring
     (scalars) and a left scalar product connecting them.  Some authors call
     this a "left module over a division ring", reserving "vector space" for
     those where the division ring multiplication is commutative i.e. a
     field. $)
  df-lvec $a |- LVec = { f e. LMod | ( Scalar ` f ) e. DivRing } $.

  ${
    $d f F $.  $d f W $.
    islvec2.1 $e |- F = ( Scalar ` W ) $.
    $( The predicate "is a left vector space". $)
    islvec2 $p |- ( W e. LVec <-> ( W e. LMod /\ F e. DivRing ) ) $=
      ( vf cv csca cfv cdr wcel clmod clvec fveq2 syl6eqr eleq1d df-lvec elrab2
      wceq ) DEZFGZHIAHIDBJKRBQZSAHTSBFGARBFLCMNDOP $.
      $( [21-Jun-2014] $) $( [11-Nov-2013] $)

    $( The set of scalars of a left vector space is a division ring. $)
    lvecdrng $p |- ( W e. LVec -> F e. DivRing ) $=
      ( clvec wcel clmod cdr islvec2 simprbi ) BDEBFEAGEABCHI $.
      $( [17-Apr-2014] $)
  $}

  $( A left vector space is a left module. $)
  lveclmod $p |- ( W e. LVec -> W e. LMod ) $=
    ( clvec wcel clmod csca cfv cdr eqid islvec2 simplbi ) ABCADCAEFZGCKAKHIJ
    $.
    $( [9-Dec-2013] $)

  ${
    lvecmul0or.v $e |- V = ( Base ` W ) $.
    lvecmul0or.s $e |- S = ( vsca ` W ) $.
    lvecmul0or.f $e |- F = ( Scalar ` W ) $.
    lvecmul0or.k $e |- K = ( Base ` F ) $.
    lvecmul0or.o $e |- O = ( 0g ` F ) $.
    lvecmul0or.z $e |- Z = ( 0g ` W ) $.
    lvecmul0or.w $e |- ( ph -> W e. LVec ) $.
    lvecmul0or.a $e |- ( ph -> A e. K ) $.
    lvecmul0or.x $e |- ( ph -> X e. V ) $.
    $( If a scalar product is zero, one of its factors must be zero.
       ( ~ hvmul0or analog.) $)
    lvecmul0or $p |- ( ph -> ( ( A S X ) = Z <-> ( A = O \/ X = Z ) ) ) $=
      ( wceq co wo wa wn wne df-ne cinvr cfv oveq2 ad2antlr cmulr cur cdr clvec
      wcel adantr lvecdrng simpr eqid drnginvrl syl3anc oveq1d clmod drnginvrcl
      syl lveclmod lmodvsass lmodvs1 syl2anc 3eqtr3d adantlr lmodvs0 ex syl5bir
      syl121anc orrd lmod0vs oveq1 eqeq1d syl5ibrcom jaod impbid ) ABICUAZJTZBF
      TZIJTZUBZAWDWGAWDUCZWEWFWEUDBFUEZWHWFBFUFWHWIWFWHWIUCZBDUGUHZUHZWCCUAZWLJ
      CUAZIJWDWMWNTAWIWCJWLCUIUJAWIWMITWDAWIUCZWLBDUKUHZUAZICUAZDULUHZICUAZWMIW
      OWQWSICWODUMUOZBEUOZWIWQWSTWOHUNUOZXAAXCWIQUPDHMUQVEZAXBWIRUPZAWIURZEDWPW
      SWKBFNOWPUSZWSUSZWKUSZUTVAVBWOHVCUOZWLEUOZXBIGUOZWRWMTAXJWIAXCXJQHVFVEZUP
      WOXAXBWIXKXDXEXFEDWKBFNOXIVDVAZXEAXLWISUPWLBCWPDEGHIKMLNXGVGVOAWTITZWIAXJ
      XLXOXMSCWSDGHIKMLXHVHVIUPVJVKWJXJXKWNJTWHXJWIAXJWDXMUPUPAWIXKWDXNVKCDEHWL
      JMLNPVLVIVJVMVNVPVMAWEWDWFAWDWEFICUAZJTZAXJXLXQXMSCDFGHIJKMLOPVQVIWEWCXPJ
      BFICVRVSVTAWDWFBJCUAZJTZAXJXBXSXMRCDEHBJMLNPVLVIWFWCXRJIJBCUIVSVTWAWB $.
      $( [2-Jul-2014] $)

    $( A scalar product is nonzero iff both of its factors are zero. $)
    lvecmuln0 $p |- ( ph -> ( ( A S X ) =/= Z <-> ( A =/= O /\ X =/= Z ) ) ) $=
      ( wne co wceq wo wn wa lvecmul0or necon3abid neanior syl6bbr ) ABICUAZJTB
      FUBIJUBUCZUDBFTIJTUEAUKUJJABCDEFGHIJKLMNOPQRSUFUGBFIJUHUI $.
      $( [3-Jan-2015] $)
  $}

  ${
    lvecmulcan.v $e |- V = ( Base ` W ) $.
    lvecmulcan.s $e |- S = ( vsca ` W ) $.
    lvecmulcan.f $e |- F = ( Scalar ` W ) $.
    lvecmulcan.k $e |- K = ( Base ` F ) $.
    lvecmulcan.o $e |- O = ( 0g ` F ) $.
    lvecmulcan.w $e |- ( ph -> W e. LVec ) $.
    lvecmulcan.a $e |- ( ph -> A e. K ) $.
    lvecmulcan.x $e |- ( ph -> X e. V ) $.
    lvecmulcan.y $e |- ( ph -> Y e. V ) $.
    lvecmulcan.n $e |- ( ph -> A =/= O ) $.
    $( Cancellation law for scalar multiplication.  ( ~ hvmulcan analog.) $)
    lvecmulcan $p |- ( ph -> ( ( A S X ) = ( A S Y ) <-> X = Y ) ) $=
      ( csg cfv co c0g wceq wo wne wb wn df-ne biorf sylbi syl clmod wcel clvec
      eqid lmodvsubeq0 syl3anc lmodvsubdi1 eqeq1d lmodvsubcl lvecmul0or 3bitr3d
      lveclmod lmodvscl 3bitr3rd ) AIJHUAUBZUCZHUDUBZUEZBFUEZVKUFZIJUEZBICUCZBJ
      CUCZUEZABFUGZVKVMUHZTVRVLUIVSBFUJVLVKUKULUMAHUNUOZIGUOZJGUOZVKVNUHAHUPUOV
      TPHVEUMZRSIJVHVJGHKVJUQZVHUQZURUSABVICUCZVJUEVOVPVHUCZVJUEZVMVQAWFWGVJABC
      DEVHGHIJKLMNWEWCQRSUTVAABCDEFGHVIVJKLMNOWDPQAVTWAWBVIGUOWCRSVHGHIJKWEVBUS
      VCAVTVOGUOZVPGUOZWHVQUHWCAVTBEUOZWAWIWCQRBCDEGHIKMLNVFUSAVTWKWBWJWCQSBCDE
      GHJKMLNVFUSVOVPVHVJGHKWDWEURUSVDVG $.
      $( [2-Jul-2014] $)
  $}

  ${
    lvecmulcan2.v $e |- V = ( Base ` W ) $.
    lvecmulcan2.s $e |- S = ( vsca ` W ) $.
    lvecmulcan2.f $e |- F = ( Scalar ` W ) $.
    lvecmulcan2.k $e |- K = ( Base ` F ) $.
    lvecmulcan2.o $e |- O = ( 0g ` W ) $.
    lvecmulcan2.w $e |- ( ph -> W e. LVec ) $.
    lvecmulcan2.a $e |- ( ph -> A e. K ) $.
    lvecmulcan2.b $e |- ( ph -> B e. K ) $.
    lvecmulcan2.x $e |- ( ph -> X e. V ) $.
    lvecmulcan2.n $e |- ( ph -> X =/= O ) $.
    $( Cancellation law for scalar multiplication.  ( ~ hvmulcan2 analog.) $)
    lvecmulcan2 $p |- ( ph -> ( ( A S X ) = ( B S X ) <-> A = B ) ) $=
      ( co csg cfv wceq clmod wcel wb lveclmod syl lmodvscl syl3anc lmodvsubeq0
      clvec eqid wo lmodvsubdi2 eqeq1d cgrp lmodfgrp grpsubcl lvecmul0or bitr3d
      c0g wn wne df-ne sylib biorf orcom syl6bb grpsubeq0 3bitr2d ) ABJDUAZCJDU
      AZIUBUCZUAZGUDZVMVNUDZBCUDZAIUEUFZVMHUFZVNHUFZVQVRUGAIUMUFVTPIUHUIZAVTBFU
      FZJHUFZWAWCQSBDEFHIJKMLNUJUKAVTCFUFZWEWBWCRSCDEFHIJKMLNUJUKVMVNVOGHIKOVOU
      NZULUKAVQBCEUBUCZUAZEVCUCZUDZJGUDZUOZWKVSAWIJDUAZGUDVQWMAWNVPGABCWHDEFVOH
      IJKLMNWGWHUNZWCQRSUPUQAWIDEFWJHIJGKLMNWJUNZOPAEURUFZWDWFWIFUFAVTWQWCEIMUS
      UIZQRFEWHBCNWOUTUKSVAVBAWLVDZWKWMUGAJGVEWSTJGVFVGWSWKWLWKUOWMWLWKVHWLWKVI
      VJUIAWQWDWFWKVSUGWRQRFEWHWJBCNWPWOVKUKVLVB $.
      $( [2-Jul-2014] $)
  $}

  ${
    lspsnvs.v $e |- V = ( Base ` W ) $.
    lspsnvs.f $e |- F = ( Scalar ` W ) $.
    lspsnvs.t $e |- T = ( vsca ` W ) $.
    lspsnvs.k $e |- K = ( Base ` F ) $.
    lspsnvs.o $e |- O = ( 0g ` F ) $.
    lspsnvs.n $e |- N = ( LSpan ` W ) $.
    $( A non-zero scalar product does not change the span of a singleton.
       ( ~ spansncol analog.) $)
    lspsnvs $p |- ( ( W e. LVec /\ ( R e. K /\ R =/= O ) /\ X e. V )
        -> ( N ` { ( R T X ) } ) = ( N ` { X } ) ) $=
      ( wcel co csn cfv syl3anc clvec wne wa w3a clmod lveclmod 3ad2ant1 simp2l
      wss simp3 lspsnvsi cinvr cmulr wceq lvecdrng simp2r eqid drnginvrl oveq1d
      cur drnginvrcl lmodvsass syl121anc lmodvs1 syl2anc 3eqtr3d sneqd lmodvscl
      cdr fveq2d eqsstr3d eqssd ) HUAPZADPZAFUBZUCZIGPZUDZAIBQZRESZIRZESZVRHUEP
      ZVNVQVTWBUIVMVPWCVQHUFUGZVMVNVOVQUHZVMVPVQUJZABCDEGHIKMJLOUKTVRWBACULSZSZ
      VSBQZRZESZVTVRWJWAEVRWIIVRWHACUMSZQZIBQZCUTSZIBQZWIIVRWMWOIBVRCVIPZVNVOWM
      WOUNVMVPWQVQCHKUOUGZWEVMVNVOVQUPZDCWLWOWGAFMNWLUQZWOUQZWGUQZURTUSVRWCWHDP
      ZVNVQWNWIUNWDVRWQVNVOXCWRWEWSDCWGAFMNXBVATZWEWFWHABWLCDGHIJKLMWTVBVCVRWCV
      QWPIUNWDWFBWOCGHIJKLXAVDVEVFVGVJVRWCXCVSGPZWKVTUIWDXDVRWCVNVQXEWDWEWFABCD
      GHIJKLMVHTWHBCDEGHVSKMJLOUKTVKVL $.
      $( [22-Jun-2014] $) $( [23-Apr-2014] $)
  $}

  ${
    $d k N $.  $d k V $.  $d k W $.  $d k X $.  $d k Y $.  $d k ph $.
    lspsneleq.v $e |- V = ( Base ` W ) $.
    lspsneleq.o $e |- O = ( 0g ` W ) $.
    lspsneleq.n $e |- N = ( LSpan ` W ) $.
    lspsneleq.w $e |- ( ph -> W e. LVec ) $.
    lspsneleq.x $e |- ( ph -> X e. V ) $.
    lspsneleq.y $e |- ( ph -> Y e. ( N ` { X } ) ) $.
    lspsneleq.z $e |- ( ph -> Y =/= O ) $.
    $( Membership relation that implies equality of spans.  ( ~ spansneleq
       analog.) $)
    lspsneleq $p |- ( ph -> ( N ` { Y } ) = ( N ` { X } ) ) $=
      ( vk csn cfv wcel wceq eqid cv cvsca co csca wrex clmod wb clvec lveclmod
      cbs syl lspsnel syl2anc simpr sneqd fveq2d c0g wne ad2antrr simplr oveq1d
      wa lmod0vs ad3antrrr 3eqtrd necon3d mpd lspsnvs syl121anc eqtrd rexlimdva
      ex sylbid ) AGFPBQZRZGPZBQZVNSZMAVOGOUAZFEUBQZUCZSZOEUDQZUJQZUEZVRAEUFRZF
      DRZVOWEUGAEUHRZWFKEUIUKZLVTGOWCWDBDEFWCTZWDTZHVTTZJULUMAWBVROWDAVSWDRZVBZ
      WBVRWNWBVBZVQWAPZBQZVNWOVPWPBWOGWAWNWBUNUOUPWOWHWMVSWCUQQZURZWGWQVNSAWHWM
      WBKUSAWMWBUTWOGCURZWSAWTWMWBNUSWOVSWRGCWOVSWRSZGCSWOXAVBZGWAWRFVTUCZCWNWB
      XAUTXBVSWRFVTWOXAUNVAAXCCSZWMWBXAAWFWGXDWILVTWCWRDEFCHWJWLWRTZIVCUMVDVEVL
      VFVGAWGWMWBLUSVSVTWCWDBWRDEFHWJWLWKXEJVHVIVJVLVKVMVG $.
      $( [4-Jul-2014] $)
  $}

  ${
    lspsnel4.v $e |- V = ( Base ` W ) $.
    lspsnel4.o $e |- O = ( 0g ` W ) $.
    lspsnel4.s $e |- S = ( LSubSp ` W ) $.
    lspsnel4.n $e |- N = ( LSpan ` W ) $.
    lspsnel4.w $e |- ( ph -> W e. LVec ) $.
    lspsnel4.u $e |- ( ph -> U e. S ) $.
    lspsnel4.x $e |- ( ph -> X e. V ) $.
    lspsnel4.y $e |- ( ph -> Y e. ( N ` { X } ) ) $.
    lspsnel4.z $e |- ( ph -> Y =/= O ) $.
    $( A member of the span of the singleton of a vector is a member of a
       subspace containing the vector.  ( ~ elspansn4 analog.) $)
    lspsnel4 $p |- ( ph -> ( X e. U <-> Y e. U ) ) $=
      ( wcel adantr clmod clvec lveclmod syl simpr csn lspsnel3 lspsnid syl2anc
      wa cfv lspsneleq eleqtrrd impbida ) AHCSZICSZAUOUJBCDGHILMAGUASZUOAGUBSUQ
      NGUCUDZTACBSZUOOTAUOUEAIHUFDUKZSUOQTUGAUPUJBCDGIHLMAUQUPURTAUSUPOTAUPUEAH
      IUFDUKZSUPAHUTVAAUQHFSHUTSURPDFGHJMUHUIADEFGHIJKMNPQRULUMTUGUN $.
      $( [4-Jul-2014] $)
  $}

  ${
    $d x y z N $.  $d x y z P $.  $d x y z T $.  $d x y z U $.  $d y z W $.
    $d x y z X $.  $d x y z ph $.
    lsmcv.v $e |- V = ( Base ` W ) $.
    lsmcv.s $e |- S = ( LSubSp ` W ) $.
    lsmcv.n $e |- N = ( LSpan ` W ) $.
    lsmcv.p $e |- P = ( LSSum ` W ) $.
    lsmcv.w $e |- ( ph -> W e. LVec ) $.
    lsmcv.t $e |- ( ph -> T e. S ) $.
    lsmcv.u $e |- ( ph -> U e. S ) $.
    lsmcv.x $e |- ( ph -> X e. V ) $.
    $( Subspace sum has the covering property (using spans of singletons to
       represent atoms).  Similar to Exercise 5 of [Kalmbach] p. 153.
       ( ~ spansncvi analog.)  TODO: ugly proof, should be refactored. $)
    lsmcv $p |- ( ( ph /\ T C. U /\ U C_ ( T P ( N ` { X } ) ) )
      -> U = ( T P ( N ` { X } ) ) ) $=
      ( wcel syl 3ad2ant1 vx vy vz wpss csn cfv co wss w3a simp3 wa clmod clvec
      wb lveclmod lspsncl syl2anc lsmlub syl13anc simp2 pssss wex pssnel cplusg
      cv wn wceq wrex simpl3 simprl sseldd eqid lsmelval syl3anc adantr c0g wne
      mpbid simp1rr wi oveq2 eqeq2d biimpac ad2antrr lssel 0vrid biimpd ex syl7
      weq exp4a 3imp simp2l jctild eleq1 biimparc syl6 necon3bd mpd csg lmodabl
      cabel simp1l1 simp2r ablpncan2 simp1rl eqeltrrd sselda lssvsubcl syl22anc
      simp1l2 simp12r lspsneleq lspsnss eqsstr3d mpd3an23 3exp exlimdv mpbi2and
      rexlimdvv eqssd ) ADEUDZEDIUEFUFZBUGZUHZUIZEYDAYBYEUJYFDEUHZYCEUHZYDEUHZA
      YBYGYHUKYIUNZYEAHULRZDCRZYCCRZECRZYJAHUMRZYKNHUOZSZOAYKIGRZYMYQQCFGHIJKLU
      PZUQZPBCDYCEHKMURUSTYFYBYGAYBYEUTZDEVAZSYFUAVEZERZUUCDRZVFZUKZUAVBZYHYFYB
      UUHUUAUADEVCSYFUUGYHUAYFUUGYHYFUUGUKZUUCUBVEZUCVEZHVDUFZUGZVGZUCYCVHUBDVH
      ZYHUUIUUCYDRZUUOUUIEYDUUCAYBYEUUGVIYFUUDUUFVJVKYFUUPUUOUNZUUGAYBUUQYEAYKY
      LYMUUQYQOYTUBUCUULBCDYCHUUCUULVLZKMVMVNTVOVRUUIUUNYHUBUCDYCUUIUUJDRZUUKYC
      RZUKZUUNYHUUIUVAUUNUIZUUKHVPUFZVQZUUKERZYHUVBUUFUVDUUDUUFYFUVAUUNVSUVBUUE
      UUKUVCUVBUUKUVCVGZUUSUAUBWJZUKUUEUVBUVFUVGUUSUUIUVAUUNUVFUVGVTUUIUVAUUNUV
      FUVGUUNUVFUKUUCUUJUVCUULUGZVGZUUIUVAUVGUVFUUNUVIUVFUUMUVHUUCUUKUVCUUJUULW
      AWBWCUUIUVAUVIUVGVTUUIUVAUKZUVIUVGUVJUVHUUJUUCUVJYKUUJGRZUVHUUJVGYFYKUUGU
      VAAYBYKYEYQTWDZUVJYKYLUUSUVKUVLYFYLUUGUVAAYBYLYEOTWDUUIUUSUUTVJCDGHUUJULJ
      KWEVNUULGHUUJUVCJUURUVCVLZWFUQWBWGWHWIWKWLUUIUUSUUTUUNWMZWNUVGUUEUUSUUCUU
      JDWOWPWQWRWSUVBUUMUUJHWTUFZUGZUUKEUVBHXBRZUVKUUKGRZUVPUUKVGUVBYOUVQUUIUVA
      YOUUNYFYOUUGAYBYOYENTVOTZYOYKUVQYPHXASSUVBYOYLUUSUVKUVSUVBAYLAYBYEUUGUVAU
      UNXCZOSUVNCDGHUUJUMJKWEVNUVBYOYMUUTUVRUVSUVBYKYRYMUVBYOYKUVSYPSZUVBAYRUVT
      QSYSUQUUIUUSUUTUUNXDCYCGHUUKUMJKWEVNGUULHUVOUUJUUKJUURUVOVLZXEVNUVBYKYNUU
      MERUUJERZUVPERUWAUVBAYNUVTPSUVBUUCUUMEUUIUVAUUNUJUUDUUFYFUVAUUNXFXGUVBYBU
      USUWCAYBYEUUGUVAUUNXKUVNYBDEUUJUUBXHUQCEUVOHUUMUUJUWBKXIXJXGUVBUVDUVEUIZY
      CUUKUEFUFZEUWDFUVCGHIUUKJUVMLUVBUVDYOUVEUVSTZUWDAYRUVBUVDAUVEUVTTZQSUUSUU
      TUUIUUNUVDUVEXLUVBUVDUVEUTXMUWDYKYNUVEUWEEUHUWDYOYKUWFYPSUWDAYNUWGPSUVBUV
      DUVEUJCEFHUUKKLXNVNXOXPXQXTWSWHXRWSXSYA $.
      $( [2-Oct-2014] $)
  $}

  ${
    $d r s t z A $.  $d r s t x y z B $.  $d r s t z N $.  $d a s t x y z ph $.
    $d r F $.  $d r s t z P $.  $d a s t x y Q $.  $d r S $.  $d a r x y z W $.
    $d r s t z T $.  $d r s t z V $.  $d r z X $.  $d r s t z Y $.
    lspsolv.v $e |- V = ( Base ` W ) $.
    lspsolv.s $e |- S = ( LSubSp ` W ) $.
    lspsolv.n $e |- N = ( LSpan ` W ) $.
    ${
      lspsolv.f $e |- F = ( Scalar ` W ) $.
      lspsolv.b $e |- B = ( Base ` F ) $.
      lspsolv.p $e |- P = ( +g ` W ) $.
      lspsolv.t $e |- T = ( vsca ` W ) $.
      lspsolv.q $e |- Q = { z e. V |
                            E. r e. B ( z P ( r T Y ) ) e. ( N ` A ) } $.
      lspsolv.w $e |- ( ph -> W e. LMod ) $.
      lspsolv.ss $e |- ( ph -> A C_ V ) $.
      lspsolv.y $e |- ( ph -> Y e. V ) $.
      lspsolv.x $e |- ( ph -> X e. ( N ` ( A u. { Y } ) ) ) $.
      $( Lemma for ~ lspsolv . $)
      lspsolvlem $p |- ( ph -> E. r e. B ( X P ( r T Y ) ) e. ( N ` A ) ) $=
        ( va vx vy vs vt wcel cv cfv wrex csn cun clmod wss crab ssrab2 eqsstri
        co a1i wa c0g adantr eqid lmod0cl syl wceq lmod0vs syl2anc oveq2d 0vrid
        sselda eqtrd lspssid eqeltrd oveq1 eleq1d rcla4ev ssrabdv syl6sseqr cur
        cminusg cgrp lmodfgrp lmod1cl grpinvcl lmodvneg1 lmodgrp grprinv lss0cl
        lspcl rexbidv elrab2 sylanbrc snssd unssd lspss syl3anc csca cbs cplusg
        cvsca clss wne ne0i cbvrexv syl6bb anbi12i an4 bitri reeanv w3a simp1ll
        simp1lr simp1rl lmodvscl simp1rr lmodvacl simp2l lmodmcl simp2r lmodacl
        c0 cmulr lmod4 syl122anc lmodvsdi2 syl121anc lmodvsass oveq1d lmodvsdi1
        syl112anc 3eqtr4d simp3l simp3r syl23anc 3exp rexlimdvv syl5bir expimpd
        lsscl syl5bi exp4b 3imp2 islssd mpdan lspid sseqtrd sseldd simprbi ) AM
        FUMZMOUNZNHVDZEVDZCJUOZUMZODUPZACNUQZURZJUOZFMAUVEFJUOZFALUSUMZFKUTZUVD
        FUTUVEUVFUTUDUVHAFBUNZUUREVDZUUTUMZODUPZBKVAZKUCUVLBKVBVCVEZACUVCFACUVM
        FAUVLBKCUEAUVICUMZVFZIVGUOZDUMZUVIUVQNHVDZEVDZUUTUMZUVLUVPUVGUVRAUVGUVO
        UDVHZIDLUVQSTUVQVIZVJVKUVPUVTUVIUUTUVPUVTUVILVGUOZEVDZUVIUVPUVSUWDUVIEA
        UVSUWDVLZUVOAUVGNKUMZUWFUDUFHIUVQKLNUWDPSUBUWCUWDVIZVMVNVHVOUVPUVGUVIKU
        MUWEUVIVLUWBACKUVIUEVQEKLUVIUWDPUAUWHVPVNVRACUUTUVIAUVGCKUTZCUUTUTUDUEC
        JKLPRVSVNVQVTUVKUWAOUVQDUUQUVQVLZUVJUVTUUTUWJUURUVSUVIEUUQUVQNHWAVOWBWC
        VNWDUCWEANFAUWGNUUREVDZUUTUMZODUPZNFUMZUFAIWFUOZIWGUOZUOZDUMZNUWQNHVDZE
        VDZUUTUMZUWMAIWHUMZUWODUMZUWRAUVGUXBUDILSWIVKAUVGUXCUDUWOIDLSTUWOVIZWJV
        KDIUWPUWOTUWPVIZWKVNAUWTUWDUUTAUWTNNLWGUOZUOZEVDZUWDAUWSUXGNEAUVGUWGUWS
        UXGVLUDUFHUWOIUWPUXFKLNPUXFVIZSUBUXDUXEWLVNVOALWHUMZUWGUXHUWDVLAUVGUXJU
        DLWMVKUFKELUXFUWDNPUAUWHUXIWNVNVRAUVGUUTGUMZUWDUUTUMUDAUVGUWIUXKUDUEGCJ
        KLPQRWPVNZGUUTLUWDUWHQWOVNVTUWLUXAOUWQDUUQUWQVLZUWKUWTUUTUXMUURUWSNEUUQ
        UWQNHWAVOWBWCVNUVLUWMBNKFUVINVLZUVKUWLODUXNUVJUWKUUTUVINUUREWAWBWQUCWRW
        SZWTXAUVDFJKLPRXBXCAUVGFGUMZUVFFVLUDAUVGUXPUDAUHDEGHFIKLUSUIUJILXDUOVLA
        SVEDIXEUOVLATVEKLXEUOVLAPVEELXFUOVLAUAVEHLXGUOVLAUBVEGLXHUOVLAQVEUVNAUW
        NFYHXIUXOFNXJVKAUHUNZDUMZUIUNZFUMZUJUNZFUMZUXQUXSHVDZUYAEVDZFUMZAUXRUXT
        UYBUYEUXTUYBVFZUXSKUMZUYAKUMZVFZUXSUKUNZNHVDZEVDZUUTUMZUKDUPZUYAULUNZNH
        VDZEVDZUUTUMZULDUPZVFZVFZAUXRVFZUYEUYFUYGUYNVFZUYHUYSVFZVFVUAUXTVUCUYBV
        UDUVLUYNBUXSKFUVIUXSVLZUVLUXSUUREVDZUUTUMZODUPUYNVUEUVKVUGODVUEUVJVUFUU
        TUVIUXSUUREWAWBWQVUGUYMOUKDUUQUYJVLZVUFUYLUUTVUHUURUYKUXSEUUQUYJNHWAVOW
        BXKXLUCWRUVLUYSBUYAKFUVIUYAVLZUVLUYAUUREVDZUUTUMZODUPUYSVUIUVKVUKODVUIU
        VJVUJUUTUVIUYAUUREWAWBWQVUKUYROULDUUQUYOVLZVUJUYQUUTVULUURUYPUYAEUUQUYO
        NHWAVOWBXKXLUCWRXMUYGUYNUYHUYSXNXOVUBUYIUYTUYEUYTUYMUYRVFZULDUPUKDUPVUB
        UYIVFZUYEUYMUYRUKULDDXPVUNVUMUYEUKULDDVUNUYJDUMZUYODUMZVFZVUMUYEVUNVUQV
        UMXQZUYDKUMZUYDUUREVDZUUTUMZODUPZUYEVURUVGUYCKUMZUYHVUSVURAUVGAUXRUYIVU
        QVUMXRZUDVKZVURUVGUXRUYGVVCVVEAUXRUYIVUQVUMXSZUYGUYHVUBVUQVUMXTZUXQHIDK
        LUXSPSUBTYAXCZUYGUYHVUBVUQVUMYBZEKLUYCUYAPUAYCXCVURUXQUYJIYIUOZVDZUYOIX
        FUOZVDZDUMZUYDVVMNHVDZEVDZUUTUMZVVBVURUVGVVKDUMZVUPVVNVVEVURUVGUXRVUOVV
        RVVEVVFVUNVUOVUPVUMYDZVVJIDLUXQUYJSTVVJVIZYEXCZVUNVUOVUPVUMYFZVVLIDLVVK
        UYOSTVVLVIZYGXCVURVVPUXQUYLHVDZUYQEVDZUUTVURUYDUXQUYKHVDZUYPEVDZEVDZUYC
        VWFEVDZUYQEVDZVVPVWEVURUVGVVCUYHVWFKUMZUYPKUMZVWHVWJVLVVEVVHVVIVURUVGUX
        RUYKKUMZVWKVVEVVFVURUVGVUOUWGVWMVVEVVSVURAUWGVVDUFVKZUYJHIDKLNPSUBTYAXC
        ZUXQHIDKLUYKPSUBTYAXCVURUVGVUPUWGVWLVVEVWBVWNUYOHIDKLNPSUBTYAXCEUYPKLUY
        CUYAVWFPUAYJYKVURVVOVWGUYDEVURVVOVVKNHVDZUYPEVDZVWGVURUVGVVRVUPUWGVVOVW
        QVLVVEVWAVWBVWNEVVLVVKUYOHIDKLNPUASUBTVWCYLYMVURVWPVWFUYPEVURUVGUXRVUOU
        WGVWPVWFVLVVEVVFVVSVWNUXQUYJHVVJIDKLNPSUBTVVTYNYMYOVRVOVURVWDVWIUYQEVUR
        UVGUXRUYGVWMVWDVWIVLVVEVVFVVGVWOEUXQHIDKLUXSUYKPUASUBTYPYQYOYRVURUVGUXK
        UXRUYMUYRVWEUUTUMVVEVURAUXKVVDUXLVKVVFVUNVUQUYMUYRYSVUNVUQUYMUYRYTDEGHU
        UTIUSLUYLUYQUXQSTUAUBQUUFUUAVTVVAVVQOVVMDUUQVVMVLZVUTVVPUUTVWRUURVVOUYD
        EUUQVVMNHWAVOWBWCVNUVLVVBBUYDKFUVIUYDVLZUVKVVAODVWSUVJVUTUUTUVIUYDUUREW
        AWBWQUCWRWSUUBUUCUUDUUEUUGUUHUUIUUJUUKGFJLQRUULVNUUMUGUUNUUPMKUMUVBUVLU
        VBBMKFUVIMVLZUVKUVAODVWTUVJUUSUUTUVIMUUREWAWBWQUCWRUUOVK $.
        $( [25-Jun-2014] $)
    $}

    $( If ` X ` is in the span of ` A u. { Y } ` but not ` A ` , then ` Y ` is
       in the span of ` A u. { X } ` .  (Contributed by Mario Carneiro,
       25-Jun-2014.) $)
    lspsolv $p |- ( ( W e. LVec /\ ( A C_ V /\ Y e. V /\
                      X e. ( ( N ` ( A u. { Y } ) ) \ ( N ` A ) ) ) ) ->
                    Y e. ( N ` ( A u. { X } ) ) ) $=
      ( vr wcel wss cfv co eqid adantr wceq syl2anc syl3anc vz csn cun cdif w3a
      clvec wa cv cvsca cplusg csca cbs wrex crab lveclmod simpr1 simpr2 simpr3
      clmod eldifi syl lspsolvlem cinvr cmulr cur cdr c0g wne lvecdrng ad2antrr
      simprl lmod0vs oveq2d difss snssd unssd lspssv syl5ss 0vrid eqtrd eqeltrd
      sseldd eldifn simprr oveq1 eleq1d syl5ibcom necon3bd mpd drnginvrl oveq1d
      wn drnginvrcl lmodvsass syl121anc lmodvs1 3eqtr3d csg lmodvscl lmodvpncan
      lspcl lmodcom ssun1 a1i lspss lspssid snidg elun2 3syl lssvsubcl syl22anc
      eqeltrrd lssvscl expr rexlimdva ) EUFLZADMZGDLZFAGUBZUCZCNZACNZUDZLZUEZUG
      ZFKUHZGEUINZOZEUJNZOZYBLZKEUKNZULNZUMGAFUBZUCZCNZLZYFUAAYNYJUAUHYIYJOYBLK
      YNUMUADUNZBYHYMCDEFGKHIJYMPZYNPZYJPZYHPZYSPXPEUSLZYEEUOQZXPXQXRYDUPZXPXQX
      RYDUQZYFYDFYALXPXQXRYDURZFYAYBUTVAVBYFYLYRKYNYFYGYNLZYLYRYFUUIYLUGZUGZYGY
      MVCNZNZYIYHOZGYQUUKUUMYGYMVDNZOZGYHOZYMVENZGYHOZUUNGUUKUUPUURGYHUUKYMVFLZ
      UUIYGYMVGNZVHZUUPUURRXPUUTYEUUJYMEYTVIVJZYFUUIYLVKZUUKFUVAGYHOZYJOZYBLZWL
      ZUVBUUKUVFYCLUVHUUKUVFFYCUUKUVFFEVGNZYJOZFUUKUVEUVIFYJUUKUUDXRUVEUVIRYFUU
      DUUJUUEQZYFXRUUJUUGQZYHYMUVADEGUVIHYTUUCUVAPZUVIPZVLSVMUUKUUDFDLZUVJFRUVK
      UUKYCDFUUKYCYADYAYBVNUUKUUDXTDMYADMUVKUUKAXSDYFXQUUJUUFQZUUKGDUVLVOVPXTCD
      EHJVQSVRYFYDUUJUUHQZWBZYJDEFUVIHUUBUVNVSSVTUVQWAUVFYAYBWCVAUUKUVGYGUVAUUK
      YLYGUVARZUVGYFUUIYLWDZUVSYKUVFYBUVSYIUVEFYJYGUVAGYHWEVMWFWGWHWIZYNYMUUOUU
      RUULYGUVAUUAUVMUUOPZUURPZUULPZWJTWKUUKUUDUUMYNLZUUIXRUUQUUNRUVKUUKUUTUUIU
      VBUWEUVCUVDUWAYNYMUULYGUVAUUAUVMUWDWMTZUVDUVLUUMYGYHUUOYMYNDEGHYTUUCUUAUW
      BWNWOUUKUUDXRUUSGRUVKUVLYHUURYMDEGHYTUUCUWCWPSWQUUKUUDYQBLZUWEYIYQLUUNYQL
      UVKUUKUUDYPDMZUWGUVKUUKAYODUVPUUKFDUVRVOVPZBYPCDEHIJXASZUWFUUKYIFYJOZFEWR
      NZOZYIYQUUKUUDYIDLZUVOUWMYIRUVKUUKUUDUUIXRUWNUVKUVDUVLYGYHYMYNDEGHYTUUCUU
      AWSTZUVRYIFYJUWLDEHUUBUWLPZWTTUUKUUDUWGUWKYQLFYQLUWMYQLUVKUWJUUKUWKYKYQUU
      KUUDUWNUVOUWKYKRUVKUWOUVRYJDEYIFHUUBXBTUUKYBYQYKUUKUUDUWHAYPMZYBYQMUVKUWI
      UWQUUKAYOXCXDAYPCDEHJXETUVTWBWAUUKYPYQFUUKUUDUWHYPYQMUVKUWIYPCDEHJXFSUUKU
      VOFYOLFYPLUVRFDXGFYOAXHXIWBBYQUWLEUWKFUWPIXJXKXLYNBYHYQYMEUUMYIYTUUCUUAIX
      MXKXLXNXOWI $.
      $( [25-Jun-2014] $)
  $}

  ${
    $d r x N $.  $d r x S $.  $d r x U $.  $d r x V $.  $d r x W $.
    $d r x X $.  $d r x Z $.
    lspsnat.v $e |- V = ( Base ` W ) $.
    lspsnat.z $e |- Z = ( 0g ` W ) $.
    lspsnat.s $e |- S = ( LSubSp ` W ) $.
    lspsnat.n $e |- N = ( LSpan ` W ) $.
    $( There is no subspace strictly between the zero subspace and the span of
       a vector (i.e. a 1-dimensional subspace is an atom).  ( ~ h1datomi
       analog.)  (The proof was shortened by Mario Carneiro, 22-Jun-2014.) $)
    lspsnat $p |- ( ( ( W e. LVec /\ U e. S /\ X e. V ) /\
       U C_ ( N ` { X } ) ) -> ( U = ( N ` { X } ) \/ U = { Z } ) ) $=
      ( vx wcel csn cfv wss wceq c0 syl cun clvec w3a wa wn cdif wne wex simprl
      cv n0 simpl1 lveclmod simpl2 simprr eldifi lspsnss syl3anc 0ss a1i simpl3
      clmod ssdif ad2antrl sseldd uncom un0 eqtri fveq2i lsp0 difeq12d eleqtrrd
      lspsolv syl13anc syl6eleq eqssd exlimdv syl5bi necon1bd ssdif0 syl6ibr wb
      expr lssle0 syl2anc sylibd orrd ) EUAMZBAMZFDMZUBZBFNZCOZPZUCZBWLQZBGNZQZ
      WNWOUDZBWPPZWQWNWRBWPUEZRQWSWNWOWTRWTRUFLUIZWTMZLUGWNWOLWTUJWNXBWOLWJWMXB
      WOWJWMXBUCZUCZBWLWJWMXBUHXDEVAMZWHFBMWLBPXDWGXEWGWHWIXCUKZEULZSZWGWHWIXCU
      MZXDXANZCOZBFXDXEWHXABMZXKBPXHXIXDXBXLWJWMXBUNZXABWPUOSABCEXAJKUPUQXDFRXJ
      TZCOZXKXDWGRDPZWIXARWKTZCOZRCOZUEZMFXOMXFXPXDDURUSWGWHWIXCUTXDXAWLWPUEZXT
      XDWTYAXAWMWTYAPWJXBBWLWPVBVCXMVDXDXRWLXSWPXRWLQXDXQWKCXQWKRTWKRWKVEWKVFVG
      VHUSXDXEXSWPQXHCEGIKVISVJVKRACDEXAFHJKVLVMXNXJCXNXJRTXJRXJVEXJVFVGVHVNVDA
      BCEFJKUPUQVOWBVPVQVRBWPVSVTWNXEWHWSWQWAWNWGXEWGWHWIWMUKXGSWGWHWIWMUMAEBGI
      JWCWDWEWF $.
      $( [22-Jun-2014] $) $( [20-Apr-2014] $)
  $}

  ${
    $d y ph $.
    lspsncv0.v $e |- V = ( Base ` W ) $.
    lspsncv0.z $e |- Z = ( 0g ` W ) $.
    lspsncv0.s $e |- S = ( LSubSp ` W ) $.
    lspsncv0.n $e |- N = ( LSpan ` W ) $.
    lspsncv0.w $e |- ( ph -> W e. LVec ) $.
    lspsncv0.x $e |- ( ph -> X e. V ) $.
    lspsncv0.e $e |- ( ph -> X =/= Z ) $.
    $( The span of a singleton covers the zero subspace, using Definition
       3.2.18 of [PtakPulmannova] p. 68 for "covers".) $)
    lspsncv0 $p |- ( ph
       -> -. E. y e. S ( { Z } C. y /\ y C. ( N ` { X } ) ) ) $=
      ( wn wi wa wcel wne csn cv wpss cfv wral wrex wceq wss df-pss simpr necom
      df-ne bitri sylib sylbi clvec ad2antrr simplr lspsnat syl31anc orcomd ord
      wo com23 notbii imnan nne imbi2i 3bitr2i syl6ibr syl5 ralrimiva ralinexa
      ex ) AHUAZBUBZUCZVPGUADUDZUCZPZQZBCUEVQVSRBCUFPAWABCVQVPVOUGZPZAVPCSZRZVT
      VQVOVPUHZVOVPTZRZWCVOVPUIWHWGWCWFWGUJWGVPVOTWCVOVPUKVPVOULUMUNUOWEWCVPVRU
      HZVPVRUGZQZVTWEWIWCWJWEWIWCWJQWEWIRZWBWJWLWJWBWLFUPSZWDGESZWIWJWBVCAWMWDW
      IMUQAWDWIURAWNWDWINUQWEWIUJCVPDEFGHIJKLUSUTVAVBVNVDVTWIVPVRTZRZPWIWOPZQWK
      VSWPVPVRUIVEWIWOVFWQWJWIVPVRVGVHVIVJVKVLVQVSBCVMUN $.
      $( [12-Aug-2014] $)
  $}

  ${
    lspprat.v $e |- V = ( Base ` W ) $.
    lspprat.s $e |- S = ( LSubSp ` W ) $.
    lspprat.n $e |- N = ( LSpan ` W ) $.
    lspprat.w $e |- ( ph -> W e. LVec ) $.
    lspprat.u $e |- ( ph -> U e. S ) $.
    lspprat.x $e |- ( ph -> X e. V ) $.
    lspprat.y $e |- ( ph -> Y e. V ) $.
    lspprat.p $e |- ( ph -> U C. ( N ` { X , Y } ) ) $.
    ${
      lsppratlem1.o $e |- O = ( 0g ` W ) $.
      lsppratlem1.x2 $e |- ( ph -> x e. ( U \ { O } ) ) $.
      lsppratlem1.y2 $e |- ( ph -> y e. ( U \ ( N ` { x } ) ) ) $.
      $( Lemma for ~ lspprat .  Let ` x e. ( U \ { 0 } ) ` (if there is no such
         ` x ` then ` U ` is the zero subspace), and let
         ` y e. ( U \ ( N `` { x } ) ) ` (assuming the conclusion is false).
         The goal is to write ` X ` , ` Y ` in terms of ` x ` , ` y ` , which
         would normally be done by solving the system of linear equations.  The
         span equivalent of this process is ~ lspsolv (hence the name), which
         we use extensively below.  In this lemma, we show that since
         ` x e. ( N `` { X , Y } ) ` , either ` x e. ( N `` { Y } ) ` or
         ` X e. ( N `` { x , Y } ) ` . $)
      lsppratlem1 $p |- ( ph
          -> ( x e. ( N ` { Y } ) \/ X e. ( N ` { x , Y } ) ) ) $=
        ( cv csn cfv wcel cpr wn cun clvec wss adantr snssd pssssd difss sseldi
        wa sseldd prcom df-pr eqtri fveq2i syl6eleq anim1i eldif sylibr lspsolv
        cdif syl13anc eqtr3i ex orrd ) ABUCZKUDZFUEZUFZJVMKUGZFUEZUFZAVPUHZVSAV
        TUQZJVNVMUDUIZFUEZVRWAIUJUFZVNHUKZJHUFZVMVNJUDUIZFUEZVOVHUFZJWCUFAWDVTO
        ULAWEVTAKHRUMULAWFVTQULWAVMWHUFZVTUQWIAWJVTAVMJKUGZFUEZWHAEWLVMAEWLSUNA
        EGUDZVHEVMEWMUOUAUPURWKWGFWKKJUGWGJKUSKJUTVAVBVCVDVMWHVOVEVFVNDFHIVMJLM
        NVGVIWBVQFKVMUGWBVQKVMUTKVMUSVJVBVCVKVL $.
        $( [29-Aug-2014] $)

      ${
        lsppratlem2.x1 $e |- ( ph -> X e. ( N ` { x , y } ) ) $.
        lsppratlem2.y1 $e |- ( ph -> Y e. ( N ` { x , y } ) ) $.
        $( Lemma for ~ lspprat .  Show that if ` X ` and ` Y ` are both in
           ` ( N `` { x , y } ) ` (which will be our goal for each of the two
           cases above), then ` ( N `` { X , Y } ) C_ U ` , contradicting the
           hypothesis for ` U ` . $)
        lsppratlem2 $p |- ( ph -> ( N ` { X , Y } ) C_ U ) $=
          ( cpr cfv cv clmod wcel wss clvec lveclmod syl csn difss sseldi prssg
          cdif wa ibi syl2anc lssss sstrd lspcl lspssp syl3anc ) AJKUEZFUFZBUGZ
          CUGZUEZFUFZEAIUHUIZVLDUIZVGVLUJZVHVLUJAIUKUIZVMOIULUMZAVMVKHUJVNVQAVK
          EHAVIEUIZVJEUIZVKEUJZAEGUNZUREVIEWAUOUAUPAEVIUNFUFZUREVJEWBUOUBUPVRVS
          USVTVIVJEEEUQUTVAZAVPEDUIZEHUJOPDEHIUKLMVBVAVCDVKFHILMNVDVAAJVLUIZKVL
          UIZVOUCUDWEWFUSVOJKVLVLVLUQUTVADVGVLFIMNVEVFAVMWDVTVLEUJVQPWCDVKEFIMN
          VEVFVC $.
          $( [5-Sep-2014] $) $( [29-Aug-2014] $)
      $}

      ${
        lsppratlem3.x3 $e |- ( ph -> x e. ( N ` { Y } ) ) $.
        $( Lemma for ~ lspprat .  In the first case of ~ lsppratlem1 , since
           ` x e/ ( N `` (/) ) ` , also ` Y e. ( N `` { x } ) ` , and since
           ` y e. ( N `` { X , Y } ) C_ ( N `` { X , x } ) ` and
           ` y e/ ( N `` { x } ) ` , we have ` X e. ( N `` { x , y } ) ` as
           desired. $)
        lsppratlem3 $p |- ( ph
            -> ( X e. ( N ` { x , y } ) /\ Y e. ( N ` { x , y } ) ) ) $=
          ( cpr cfv wcel csn cun clvec wss cdif clmod lveclmod syl snssd lspssv
          cv syl2anc sseldd pssssd unssd lspcl df-pr ssun2 lspssid syl5ss ssun1
          a1i lspss syl3anc c0 0ss uncom un0 eqtri fveq2i syl6eleqr eldifn wceq
          wn lsp0 eleq2d mtbird eldif sylanbrc lspsolv syl13anc syl6eleq lspssp
          syl5eqss sstrd ssdif difss lssss snsspr1 jca ) AJBUQZCUQZUDZFUEZUFKWT
          UFAJWQUGZWRUGZUHZFUEZWTAIUIUFZXAHUJJHUFWRXAJUGZUHZFUEZXAFUEZUKZUFJXDU
          FOAWQHAKUGZFUEZHWQAIULUFZXKHUJXLHUJAXEXMOIUMUNZAKHRUOXKFHILNUPURUCUSU
          OZQAEXIUKZXJWRAEXHUJXPXJUJAEJKUDZFUEZXHAEXRSUTAXMXHDUFZXQXHUJXRXHUJXN
          AXMXGHUJZXSXNAXAXFHXOAJHQUOVAZDXGFHILMNVBURAXQXFXKUHXHJKVCAXFXKXHAXFX
          GXHXFXAVDAXMXTXGXHUJXNYAXGFHILNVEURVFAKXHAXIXHKAXMXTXAXGUJZXIXHUJXNYA
          YBAXAXFVGVHXAXGFHILNVIVJAKVKXAUHZFUEZXIAXEVKHUJZKHUFWQVKXKUHZFUEZVKFU
          EZUKUFZKYDUFOYEAHVLVHRAWQYGUFWQYHUFZVTYIAWQXLYGUCYFXKFYFXKVKUHXKVKXKV
          MXKVNVOVPVQAYJWQGUGZUFZAWQEYKUKUFYLVTUAWQEYKVRUNAYHYKWQAXMYHYKVSXNFIG
          TNWAUNWBWCWQYGYHWDWEVKDFHIWQKLMNWFWGYCXAFYCXAVKUHXAVKXAVMXAVNVOVPWHZU
          SUOVAWJDXQXHFIMNWIVJWKEXHXIWLUNUBUSXADFHIWRJLMNWFWGWSXCFWQWRVCZVPVQAX
          IWTKAXMWSHUJXAWSUJZXIWTUJXNAWSXCHYNAXAXBHXOAWRHAXPHWRAXPEHEXIWMAXEEDU
          FEHUJOPDEHIUILMWNURVFUBUSUOVAWJYOAWQWRWOVHXAWSFHILNVIVJYMUSWP $.
          $( [29-Aug-2014] $)
      $}

      ${
        lsppratlem4.x3 $e |- ( ph -> X e. ( N ` { x , Y } ) ) $.
        $( Lemma for ~ lspprat .  In the second case of ~ lsppratlem1 ,
           ` y e. ( N `` { X , Y } ) C_ ( N `` { x , Y } ) ` and
           ` y e/ ( N `` { x } ) ` implies ` Y e. ( N `` { x , y } ) ` and thus
           ` X e. ( N `` { x , Y } ) C_ ( N `` { x , y } ) ` as well. $)
        lsppratlem4 $p |- ( ph
            -> ( X e. ( N ` { x , y } ) /\ Y e. ( N ` { x , y } ) ) ) $=
          ( cv cpr cfv wcel clmod wss clvec lveclmod syl csn cdif difss syl2anc
          lssss syl5ss sseldd wa prssg ibi lspcl cun df-pr snsspr1 snssd pssssd
          lspssid snsspr2 unssd syl5eqss lspssp syl3anc fveq2i syl6sseq lspsolv
          sstrd ssdif syl13anc syl6eleqr jca ) AJBUDZCUDZUEZFUFZUGKWFUGAWCKUEZF
          UFZWFJAIUHUGZWFDUGZWGWFUIWHWFUIAIUJUGZWIOIUKULZAWIWEHUIZWJWLAWCHUGZWD
          HUGZWMAEGUMZUNZHWCAWQEHEWPUOAWKEDUGEHUIOPDEHIUJLMUQUPZURUAUSZAEWCUMZF
          UFZUNZHWDAXBEHEXAUOWRURUBUSWNWOUTWMWCWDHHHVAVBUPZDWEFHILMNVCUPAWGWTKU
          MZVDZWFWCKVEZAWTXDWFAWTWEWFWCWDVFAWIWMWEWFUIWLXCWEFHILNVIUPURAKWFAKWT
          WDUMVDZFUFZWFAWKWTHUIKHUGZWDXEFUFZXAUNZUGKXHUGOAWCHWSVGRAXBXKWDAEXJUI
          XBXKUIAEWHXJAEJKUEZFUFZWHAEXMSVHAWIWHDUGZXLWHUIXMWHUIWLAWIWGHUIZXNWLA
          WNXIXOWSRWNXIUTXOWCKHHHVAVBUPZDWGFHILMNVCUPAXLJUMZXDVDWHJKVEAXQXDWHAJ
          WHUCVGAXDWGWHWCKVJAWIXOWGWHUIWLXPWGFHILNVIUPURVKVLDXLWHFIMNVMVNVRWGXE
          FXFVOVPEXJXAVSULUBUSWTDFHIWDKLMNVQVTWEXGFWCWDVEVOWAZVGVKVLDWGWFFIMNVM
          VNUCUSXRWB $.
          $( [29-Aug-2014] $)
      $}

      $( Lemma for ~ lspprat .  Combine the two cases and show a contradiction
         to ` U C. ( N `` { X , Y } ) ` under the assumptions on ` x ` and
         ` y ` . $)
      lsppratlem5 $p |- ( ph -> ( N ` { X , Y } ) C_ U ) $=
        ( cv cpr cfv wcel wa wss csn wo lsppratlem1 clvec wpss cdif lsppratlem3
        adantr simpr lsppratlem4 jaodan mpdan simprl simprr lsppratlem2 ) AJBUC
        ZCUCZUDFUEZUFZKVFUFZUGZJKUDFUEZEUHAVDKUIFUEUFZJVDKUDFUEUFZUJVIABCDEFGHI
        JKLMNOPQRSTUAUBUKAVKVIVLAVKUGBCDEFGHIJKLMNAIULUFZVKOUPAEDUFZVKPUPAJHUFZ
        VKQUPAKHUFZVKRUPAEVJUMZVKSUPTAVDEGUIUNUFZVKUAUPAVEEVDUIFUEUNUFZVKUBUPAV
        KUQUOAVLUGBCDEFGHIJKLMNAVMVLOUPAVNVLPUPAVOVLQUPAVPVLRUPAVQVLSUPTAVRVLUA
        UPAVSVLUBUPAVLUQURUSUTAVIUGBCDEFGHIJKLMNAVMVIOUPAVNVIPUPAVOVIQUPAVPVIRU
        PAVQVISUPTAVRVIUAUPAVSVIUBUPAVGVHVAAVGVHVBVCUT $.
        $( [29-Aug-2014] $)
    $}

    ${
      $d y N $.  $d y O $.  $d y U $.  $d y ph $.  $d x y $.
      lsppratlem6.o $e |- O = ( 0g ` W ) $.
      $( Lemma for ~ lspprat .  Negating the assumption on ` y ` , we arrive
         close to the desired conclusion. $)
      lsppratlem6 $p |- ( ph -> ( x e. ( U \ { O } )
       -> U = ( N ` { x } ) ) ) $=
        ( wcel vy cv csn cdif cfv wceq wa c0 wss cpr adantr clvec simprl simprr
        wpss wn lsppratlem5 ssnpss syl expr eq0rdv ssdif0 sylibr clmod lveclmod
        mt2d eldifi adantl lspsnss syl3anc eqssd ex ) ABUBZDFUCZUDTZDVMUCEUEZUF
        AVOUGZDVPVQDVPUDZUHUFDVPUIVQUAVRVQUAUBVRTZDIJUJEUEZUOZAWAVORUKAVOVSWAUP
        ZAVOVSUGZUGZVTDUIWBWDBUACDEFGHIJKLMAHULTZWCNUKADCTZWCOUKAIGTWCPUKAJGTWC
        QUKAWAWCRUKSAVOVSUMAVOVSUNUQVTDURUSUTVFVADVPVBVCVQHVDTZWFVMDTZVPDUIAWGV
        OAWEWGNHVEUSUKAWFVOOUKVOWHAVMDVNVGVHCDEHVMLMVIVJVKVL $.
        $( [29-Aug-2014] $)
    $}

    $d z N $.  $d z U $.  $d z V $.  $d z W $.  $d z ph $.
    $( A proper subspace of the span of a pair of vectors is the span of a
       singleton (an atom) or the zero subspace (if ` z ` is zero).  Proof
       suggested by Mario Carneiro, 28-Aug-2014. $)
    lspprat $p |- ( ph -> E. z e. V U = ( N ` { z } ) ) $=
      ( cfv wceq wcel cv csn wrex c0g c0 wss ssdif0 wa clmod clvec lveclmod syl
      cdif eqid 0vcl adantr simpr lss0ss eqssd lspsn0 eqtr4d sneq fveq2d eqeq2d
      syl2anc rcla4ev ex syl5bir wne wex n0 difss lssss syl5ss lsppratlem6 jcad
      sseld eximdv df-rex syl6ibr syl5bi pm2.61dne ) ADBUAZUBZERZSZBFUCZDGUDRZU
      BZUMZUEWJUESDWIUFZAWGDWIUGAWKWGAWKUHZWHFTZDWIERZSZWGAWMWKAGUITZWMAGUJTZWP
      MGUKULZFGWHJWHUNZUOULUPWLDWIWNWLDWIAWKUQAWIDUFZWKAWPDCTZWTWRNCGDWHWSKURVE
      UPUSAWNWISZWKAWPXBWREGWHWSLUTULUPVAWFWOBWHFWCWHSZWEWNDXCWDWIEWCWHVBVCVDVF
      VEVGVHWJUEVIWCWJTZBVJZAWGBWJVKAXEWCFTZWFUHZBVJWGAXDXGBAXDXFWFAWJFWCAWJDFD
      WIVLAWQXADFUFMNCDFGUJJKVMVEVNVQABCDEWHFGHIJKLMNOPQWSVOVPVRWFBFVSVTWAWB $.
      $( [29-Aug-2014] $)
  $}

  ${
    $d x z C $.  $d m n r u v w x y ph $.  $d s t u w x y S $.  $d u w x z V $.
    $d m n s t u x y z A $.  $d m n u w x y z N $.  $d m n r u v w x W $.
    $d m n r v w T $.
    lbsext.v $e |- V = ( Base ` W ) $.
    lbsext.j $e |- J = ( LBasis ` W ) $.
    lbsext.n $e |- N = ( LSpan ` W ) $.
    lbsext.w $e |- ( ph -> W e. LVec ) $.
    lbsext.c $e |- ( ph -> C C_ V ) $.
    lbsext.x $e |- ( ph -> A. x e. C -. x e. ( N ` ( C \ { x } ) ) ) $.
    lbsext.s $e |- S = { z e. ~P V | ( C C_ z /\
                         A. x e. z -. x e. ( N ` ( z \ { x } ) ) ) } $.
    $( Lemma for ~ lbsext .  The set ` S ` is the set of all linearly
       independent sets containing ` C ` ; we show here that it is nonempty. $)
    lbsextlem1 $p |- ( ph -> S =/= (/) ) $=
      ( wcel wss cv cfv c0 wne cpw csn cdif wn wral cbs cvv fvex eqeltri sylibr
      elpw2 ssid jctil wceq sseq2 difeq1 fveq2d eleq2d notbid raleqbi1dv elrab2
      wa anbi12d sylanbrc ne0i syl ) ADEQZEUAUBADHUCZQZDDRZBSZDVMUDZUEZGTZQZUFZ
      BDUGZVDZVIADHRVKNDHHIUHTUIJIUHUJUKUMULAVSVLODUNUODCSZRZVMWAVNUEZGTZQZUFZB
      WAUGZVDVTCDVJEWADUPZWBVLWGVSWADDUQWFVRBWADWHWEVQWHWDVPVMWHWCVOGWADVNURUSU
      TVAVBVEPVCVFEDVGVH $.
      $( [25-Jun-2014] $)

    ${
      lbsext.p $e |- P = ( LSubSp ` W ) $.
      lbsext.a $e |- ( ph -> A C_ S ) $.
      lbsext.z $e |- ( ph -> A =/= (/) ) $.
      lbsext.r $e |- ( ph -> A. s e. A A. t e. A ( s u. t ) e. A ) $.
      lbsext.t $e |- T = U_ u e. A ( N ` ( u \ { x } ) ) $.
      $( Lemma for ~ lbsext .  Since ` A ` is a chain (actually, we only need
         it to be closed under binary union), the union ` T ` of the spans of
         each individual element of ` A ` is a subspace, and it contains all of
         ` U. A ` (except for our target vector ` x ` - we are trying to make
         ` x ` a linear combination of all the other vectors in some set from
         ` A ` ). $)
      lbsextlem2 $p |- ( ph -> ( T e. P /\ ( U. A \ { x } ) C_ T ) ) $=
        ( vr vv vw vm vn vy wcel cuni cv csn cdif wss clmod clvec lveclmod csca
        syl cfv cbs cplusg cvsca eqidd wceq a1i clss ciun wral adantr difss cpw
        wa wn crab ssrab2 eqsstri syl6ss sselda syl5ss lspssv syl2anc ralrimiva
        elpwi iunss sylibr syl5eqss c0 wne wrex lspcl lssn0 iunn0 sylib eqnetrd
        r19.2z eleq2i difeq1 fveq2d eleq2d cbvrexv 3bitri anbi12i reeanv bitr4i
        co eliun w3a cun simp2 simp1l uneq1 eleq1d uneq2 rcla42va elssuni sstrd
        sspwuni simp1r ssun1 ssdif ax-mp lspss syl3anc simp3l sseldd ssun2 eqid
        simp3r lsscl syl23anc rcla4ev syl6eleqr 3expia rexlimdvva syl5bi islssd
        exp4b 3imp2 mpdan eldifi adantl eldifn ad2antlr lspssid adantlr syl5bir
        eldif sseld mpan2d reximdva eluni2 3imtr4g mpd ex ssrdv syl6sseqr jca )
        AJHUNZFUOZBUPZUQZURZJUSANUTUNZUVDANVAUNUVISNVBVDZAUHNVCVEZVFVEZNVGVEZHN
        VHVEZJUVKMNUTUIUJAUVKVIAUVLVIMNVFVEVJAPVKAUVMVIAUVNVIHNVLVEVJAUCVKAJDFD
        UPZUVGURZLVEZVMZMUGAUVQMUSZDFVNUVRMUSAUVSDFAUVOFUNZVRZUVIUVPMUSZUVSAUVI
        UVTUVJVOZUWAUVPUVOMUVOUVGVPUWAUVOMVQZUNUVOMUSAFUWDUVOAFIUWDUDIGCUPZUSUV
        FUWEUVGURLVEUNVSBUWEVNVRZCUWDVTUWDUBUWFCUWDWAWBWCZWDUVOMWIVDWEZUVPLMNPR
        WFWGWHDFUVQMWJWKWLAJUVRWMJUVRVJAUGVKAUVQWMWNZDFWOZUVRWMWNAFWMWNUWIDFVNU
        WJUEAUWIDFUWAUVIUVQHUNZUWIUWCUWAUVIUWBUWKUWCUWHHUVPLMNPUCRWPWGHUVQNUTUC
        WQWGWHUWIDFXAWGDFUVQWRWSWTAUHUPZUVLUNZUIUPZJUNZUJUPZJUNZUWLUWNUVNXKUWPU
        VMXKZJUNZAUWMUWOUWQUWSUWOUWQVRZUWNUKUPZUVGURZLVEZUNZUWPULUPZUVGURZLVEZU
        NZVRZULFWOUKFWOZAUWMVRZUWSUWTUXDUKFWOZUXHULFWOZVRUXJUWOUXLUWQUXMUWOUWNU
        VRUNUWNUVQUNZDFWOUXLJUVRUWNUGXBDUWNFUVQXLUXNUXDDUKFUVOUXAVJZUVQUXCUWNUX
        OUVPUXBLUVOUXAUVGXCXDXEXFXGUWQUWPUVRUNUWPUVQUNZDFWOUXMJUVRUWPUGXBDUWPFU
        VQXLUXPUXHDULFUVOUXEVJZUVQUXGUWPUXQUVPUXFLUVOUXEUVGXCXDXEXFXGXHUXDUXHUK
        ULFFXIXJUXKUXIUWSUKULFFUXKUXAFUNUXEFUNVRZUXIUWSUXKUXRUXIXMZUWRUVRJUXSUW
        RUVQUNZDFWOZUWRUVRUNUXSUXAUXEXNZFUNZUWRUYBUVGURZLVEZUNZUYAUXSUXROUPZEUP
        ZXNZFUNZEFVNOFVNZUYCUXKUXRUXIXOUXSAUYKAUWMUXRUXIXPZUFVDUYJUYCUXAUYHXNZF
        UNOEUXAUXEFFUYGUXAVJUYIUYMFUYGUXAUYHXQXRUYHUXEVJUYMUYBFUYHUXEUXAXSXRXTW
        GZUXSUVIUYEHUNZUWMUWNUYEUNUWPUYEUNUYFUXSAUVIUYLUVJVDZUXSUVIUYDMUSZUYOUY
        PUXSUYDUYBMUYBUVGVPUXSUYBUVEMUXSUYCUYBUVEUSUYNUYBFYAVDUXSAUVEMUSZUYLAFU
        WDUSUYRUWGFMYCWSVDYBWEZHUYDLMNPUCRWPWGAUWMUXRUXIYDUXSUXCUYEUWNUXSUVIUYQ
        UXBUYDUSZUXCUYEUSUYPUYSUYTUXSUXAUYBUSUYTUXAUXEYEUXAUYBUVGYFYGVKUXBUYDLM
        NPRYHYIUXKUXRUXDUXHYJYKUXSUXGUYEUWPUXSUVIUYQUXFUYDUSZUXGUYEUSUYPUYSVUAU
        XSUXEUYBUSVUAUXEUXAYLUXEUYBUVGYFYGVKUXFUYDLMNPRYHYIUXKUXRUXDUXHYNYKUVLU
        VMHUVNUYEUVKUTNUWNUWPUWLUVKYMUVLYMUVMYMUVNYMUCYOYPUXTUYFDUYBFUVOUYBVJZU
        VQUYEUWRVUBUVPUYDLUVOUYBUVGXCXDXEYQWGDUWRFUVQXLWKUGYRYSYTUUAUUCUUDUUBUU
        EAUVHUVRJAUMUVHUVRAUMUPZUVHUNZVUCUVRUNZAVUDVRZVUCUVEUNZVUEVUDVUGAVUCUVE
        UVGUUFUUGVUFVUCUVOUNZDFWOVUCUVQUNZDFWOVUGVUEVUFVUHVUIDFVUFUVTVRZVUHVUCU
        VGUNVSZVUIVUDVUKAUVTVUCUVEUVGUUHUUIVUHVUKVRVUCUVPUNVUJVUIVUCUVOUVGUUMVU
        JUVPUVQVUCAUVTUVPUVQUSZVUDUWAUVIUWBVULUWCUWHUVPLMNPRUUJWGUUKUUNUULUUOUU
        PDVUCFUUQDVUCFUVQXLUURUUSUUTUVAUGUVBUVC $.
        $( [25-Jun-2014] $)

      $( Lemma for ~ lbsext .  A chain in ` S ` has an upper bound in
         ` S ` . $)
      lbsextlem3 $p |- ( ph -> U. A e. S ) $=
        ( vy cuni cpw wcel wss cv csn cdif cfv wn wral wa ssrab2 eqsstri syl6ss
        crab sspwuni sylib cbs cvv fvex eqeltri elpw2 sylibr cint ssintub simpl
        wi a1i ss2rabi intss syl syl5ss c0 wne intssuni sstrd wrex eluni2 clmod
        w3a simpll1 clvec lveclmod difss simpll2 simplr wceq uneq1 eleq1d uneq2
        cun rcla42va syl21anc sseldd sseldi elpwi ssun2 ssdif ax-mp lspss simpr
        syl3anc sseq2 difeq1 fveq2d eleq2d notbid anbi12d elrab2 simprbi simprd
        raleqbi1dv simpll3 elun1 ra4 sylc pm2.65da nrexdv ciun lbsextlem2 lssss
        simpld syl2anc lspid sseqtrd 3ad2ant1 syl6sseq sseld syl6ib mtod 3expia
        eliun rexlimdva syl5bi ralrimiv jca sylanbrc ) AFUIZMUJZUKZGUUFULZBUMZU
        UFUUJUNZUOZLUPZUKZUQZBUUFURZUSZUUFIUKAUUFMULZUUHAFUUGULUURAFIUUGUDIGCUM
        ZULZUUJUUSUUKUOZLUPZUKZUQZBUUSURZUSZCUUGVCZUUGUBUVFCUUGUTVAZVBFMVDVEUUF
        MMNVFUPVGPNVFVHVIVJVKAUUIUUPAGFVLZUUFAGUUTCUUGVCZVLZUVICGUUGVMAFUVJULUV
        KUVIULAFIUVJUDIUVGUVJUBUVFUUTCUUGUVFUUTVOUUSUUGUKUUTUVEVNVPVQVAVBFUVJVR
        VSVTAFWAWBUVIUUFULUEFWCVSWDAUUOBUUFUUJUUFUKUUJUHUMZUKZUHFWEAUUOUHUUJFWF
        AUVMUUOUHFAUVLFUKZUVMUUOAUVNUVMWHZUUNUUJDUMZUUKUOZLUPZUKZDFWEZUVOUVSDFU
        VOUVPFUKZUSZUVSUUJUVLUVPWSZUUKUOZLUPZUKZUWBUVSUSZUVRUWEUUJUWGNWGUKZUWDM
        ULUVQUWDULZUVRUWEULUWGAUWHAUVNUVMUWAUVSWIZANWJUKUWHSNWKVSZVSUWGUWDUWCMU
        WCUUKWLUWGUWCUUGUKZUWCMULUWGIUUGUWCUVHUWGFIUWCUWGAFIULUWJUDVSUWGUVNUWAO
        UMZEUMZWSZFUKZEFUROFURZUWCFUKZAUVNUVMUWAUVSWMUVOUWAUVSWNUWGAUWQUWJUFVSU
        WPUWRUVLUWNWSZFUKOEUVLUVPFFUWMUVLWOUWOUWSFUWMUVLUWNWPWQUWNUVPWOUWSUWCFU
        WNUVPUVLWRWQWTXAXBZXCUWCMXDVSVTUWIUWGUVPUWCULUWIUVPUVLXEUVPUWCUUKXFXGVP
        UVQUWDLMNPRXHXJUWBUVSXIXBUWGUWFUQZBUWCURZUUJUWCUKZUXAUWGUWCIUKZUXBUWTUX
        DGUWCULZUXBUXDUWLUXEUXBUSZUVFUXFCUWCUUGIUUSUWCWOZUUTUXEUVEUXBUUSUWCGXKU
        VDUXABUUSUWCUXGUVCUWFUXGUVBUWEUUJUXGUVAUWDLUUSUWCUUKXLXMXNXOXTXPUBXQXRX
        SVSUWGUVMUXCAUVNUVMUWAUVSYAUUJUVLUVPYBVSUXABUWCYCYDYEYFUVOUUNUUJDFUVRYG
        ZUKUVTUVOUUMUXHUUJUVOUUMJUXHAUVNUUMJULUVMAUUMJLUPZJAUWHJMULZUULJULZUUMU
        XIULUWKAUWHJHUKZUXJUWKAUXLUXKABCDEFGHIJKLMNOPQRSTUAUBUCUDUEUFUGYHZYJZHJ
        MNWGPUCYIYKAUXLUXKUXMXSUULJLMNPRXHXJAUWHUXLUXIJWOUWKUXNHJLNUCRYLYKYMYNU
        GYOYPDUUJFUVRYTYQYRYSUUAUUBUUCUUDUVFUUQCUUFUUGIUUSUUFWOZUUTUUIUVEUUPUUS
        UUFGXKUVDUUOBUUSUUFUXOUVCUUNUXOUVBUUMUUJUXOUVAUULLUUSUUFUUKXLXMXNXOXTXP
        UBXQUUE $.
        $( [25-Jun-2014] $)
    $}

    $d s ph $.
    $( Lemma for ~ lbsext . ~ lbsextlem3 satisfies the conditions for the
       application of Zorn's lemma ~ zorn (thus invoking AC), and so there is a
       maximal linearly independent set extending ` C ` .  Here we prove that
       such a set is a basis. $)
    lbsextlem4 $p |- ( ph -> E. s e. J C C_ s ) $=
      ( wss wcel wa vt vy vu vw cv wpss wn wral wrex c0 wne w3a cuni lbsextlem1
      wo wi wal clss cfv csn cdif ciun clvec adantr eqid simpr1 simpr2 cun wceq
      simpr3 ssequn1 biimpi eleq1d biimprcd ssequn2 ancoms ralimdva ralimia syl
      jaao lbsextlem3 alrimiv cpw crab cvv cbs fvex eqeltri pwex zornn0 syl2anc
      ex rabex clmod wb lveclmod islbs simprl sseq2 difeq1 fveq2d eleq2d notbid
      raleqbi1dv anbi12d elrab2 sylib simpld elpwi lspssv ssun1 a1i snid sselii
      ssun2 vex eldifn adantl lspssid sseld mtod nelne1 sylancr necomd sylanbrc
      df-pss eldifi snssd unssd elpw2 sylibr simprd syl6ss difss syl5ss adantrr
      ad2antrr eleqtrd sylc jca simprrr cin simprrl nelne2 elsni necon3ai disj3
      disjsn uneq2d difundir syl6reqr eldif lspsolv syl13anc undif1 syl5eq expr
      ra4 imnan ralrimiv lspss syl3anc wsbc ralsn id sneq difeq2d difun2 syl6eq
      eleq12d sbcie bitri ralun simplrr psseq2 rcla4v pm2.65da eq0rdv mpbir3and
      ssdif0 eqssd reximdv2 mpd ) AJUEZUAUEZUFZUGZUAEUHZJEUIZDUWDRZJFUIAEUJUKUB
      UEZERZUWKUJUKZUWDUWERZUWEUWDRZUOZUAUWKUHZJUWKUHZULZUWKUMESZUPZUBUQUWIABCD
      EFGHIKLMNOPQUNAUXAUBAUWSUWTAUWSTZBCUCUAUWKDIURUSZEUCUWKUCUEBUEZUTZVAGUSVB
      ZFGHIJKLMAIVCSZUWSNVDADHRUWSOVDAUXDDUXEVAGUSSUGBDUHUWSPVDQUXCVEZAUWLUWMUW
      RVFAUWLUWMUWRVGUXBUWRUWDUWEVHZUWKSZUAUWKUHZJUWKUHAUWLUWMUWRVJUWQUXKJUWKUW
      DUWKSZUWPUXJUAUWKUWEUWKSZUXLUWPUXJUPUXMUWNUXJUXLUWOUWNUXJUXMUWNUXIUWEUWKU
      WNUXIUWEVIUWDUWEVKVLVMVNUWOUXJUXLUWOUXIUWDUWKUWOUXIUWDVIUWEUWDVOVLVMVNVTV
      PVQVRVSUXFVEWAWLWBJUAUBEEDCUEZRZUXDUXNUXEVAZGUSZSZUGZBUXNUHZTZCHWCZWDWEQU
      YACUYBHHIWFUSWEKIWFWGWHZWIWMWHWJWKAUWHUWJJEFAUWDESZUWHTZUWDFSZUWJTAUYETZU
      YFUWJUYGUYFUWDHRZUWDGUSZHVIZUXDUWDUXEVAZGUSZSZUGZBUWDUHZUYGIWNSZUYFUYHUYJ
      UYOULWOAUYPUYEAUXGUYPNIWPVSVDZBUWDFGHIWNKLMWQVSUYGUWDUYBSZUYHUYGUYRUWJUYO
      TZUYGUYDUYRUYSTAUYDUWHWRUYAUYSCUWDUYBEUXNUWDVIZUXOUWJUXTUYOUXNUWDDWSUXSUY
      NBUXNUWDUYTUXRUYMUYTUXQUYLUXDUYTUXPUYKGUXNUWDUXEWTXAXBXCXDXEQXFXGZXHUWDHX
      IVSZUYGUYIHUYGUYPUYHUYIHRUYQVUBUWDGHIKMXJWKUYGHUYIVAZUJVIHUYIRUYGUDVUCUYG
      UDUEZVUCSZUWDUWDVUDUTZVHZUFZUYGVUETZUWDVUGRZUWDVUGUKVUHVUJVUIUWDVUFXKZXLV
      UIVUGUWDVUIVUDVUGSVUDUWDSZUGZVUGUWDUKVUFVUGVUDVUFUWDXOVUDUDXPZXMXNVUIVULV
      UDUYISZVUEVUOUGUYGVUDHUYIXQXRZVUIUWDUYIVUDUYGUWDUYIRZVUEUYGUYPUYHVUQUYQVU
      BUWDGHIKMXSWKVDXTYAZVUDVUGUWDYBYCYDUWDVUGYFYEVUIVUGESZUWHVUHUGZVUIVUGUYBS
      ZDVUGRZUXDVUGUXEVAZGUSZSZUGZBVUGUHZTZVUSVUIVUGHRVVAVUIUWDVUFHUYGUYHVUEVUB
      VDVUIVUDHVUEVUDHSZUYGVUDHUYIYGXRZYHYIVUGHUYCYJYKVUIVVBVVGVUIDUWDVUGUYGUWJ
      VUEUYGUWJUYOUYGUYRUYSVUAYLZXHZVDVUKYMVUIVVFBUWDUHVVFBVUFUHZVVGVUIVVFBUWDV
      UIUXDUWDSZVVETZUGVVNVVFUPVUIVVOVUOVUPUYGVUEVVOVUOUYGVUEVVOTZTZVUDUYKUXEVH
      ZGUSZUYIVVQUXGUYKHRVVIUXDUYKVUFVHZGUSZUYLVASZVUDVVSSAUXGUYEVVPNYQVVQUYKUW
      DHUWDUXEYNUYGUYHVVPVUBVDYOUYGVUEVVIVVOVVJYPVVQUXDVWASUYNVWBVVQUXDVVDVWAUY
      GVUEVVNVVEUUAVVQVVCVVTGVVQVVTUYKVUFUXEVAZVHVVCVVQVUFVWCUYKVVQVUFUXEUUBUJV
      IZVUFVWCVIVVQUXDVUFSZUGZVWDVVQUXDVUDUKZVWFVVQVVNVUMVWGUYGVUEVVNVVEUUCZUYG
      VUEVUMVVOVURYPUXDVUDUWDUUDWKVWEUXDVUDUXDVUDUUEUUFVSVUFUXDUUHYKVUFUXEUUGXG
      UUIUWDVUFUXEUUJUUKXAYRVVQUYOVVNUYNUYGUYOVVPUYGUWJUYOVVKYLZVDVWHUYNBUWDUUR
      YSUXDVWAUYLUULYEUYKUXCGHIUXDVUDKUXHMUUMUUNVVQVVRUWDGVVQVVRUWDUXEVHZUWDUWD
      UXEUUOVVQUXEUWDRVWJUWDVIVVQUXDUWDVWHYHUXEUWDVOXGUUPXAYRUUQYAVVNVVEUUSYKUU
      TVUIVUDUWDVUFVAZGUSZSZUGZVVMVUIVWMVUOVUPVUIVWLUYIVUDUYGVWLUYIRZVUEUYGUYPU
      YHVWKUWDRZVWOUYQVUBVWPUYGUWDVUFYNXLVWKUWDGHIKMUVAUVBVDXTYAVVMVVFBVUDUVCVW
      NVVFBVUDVUNUVDVVFVWNBVUDVUNUXDVUDVIZVVEVWMVWQUXDVUDVVDVWLVWQUVEVWQVVCVWKG
      VWQVVCVUGVUFVAVWKVWQUXEVUFVUGUXDVUDUVFUVGUWDVUFUVHUVIXAUVJXCUVKUVLYKVVFBU
      WDVUFUVMWKYTUYAVVHCVUGUYBEUXNVUGVIZUXOVVBUXTVVGUXNVUGDWSUXSVVFBUXNVUGVWRU
      XRVVEVWRUXQVVDUXDVWRUXPVVCGUXNVUGUXEWTXAXBXCXDXEQXFYEAUYDUWHVUEUVNUWGVUTU
      AVUGEUWEVUGVIUWFVUHUWEVUGUWDUVOXCUVPYSUVQUVRHUYIUVTYKUWAVWIUVSVVLYTWLUWBU
      WC $.
      $( [25-Jun-2014] $)
  $}

  ${
    $d s x y z C $.  $d s J $.  $d s x y z N $.  $d s y z V $.  $d s x y W $.
    lbsex.j $e |- J = ( LBasis ` W ) $.
    ${
      lbsex.v $e |- V = ( Base ` W ) $.
      lbsex.n $e |- N = ( LSpan ` W ) $.
      $( For any linearly independent subset ` C ` of ` V ` , there is a basis
         containing the vectors in ` C ` . $)
      lbsext $p |- ( ( W e. LVec /\ C C_ V /\
                       A. x e. C -. x e. ( N ` ( C \ { x } ) ) ) ->
                     E. s e. J C C_ s ) $=
        ( vy vz wcel wss cv csn cdif cfv wn wral clvec w3a cpw crab simp1 simp2
        wa simp3 wceq id difeq2d fveq2d eleq12d notbid cbvralv sylib anbi2i a1i
        sneq wb rabbiia lbsextlem4 ) FUAMZBENZAOZBVEPZQZDRZMZSZABTZUBZKLBBLOZNZ
        VEVMVFQZDRZMZSZAVMTZUGZLEUCZUDCDEFGIHJVCVDVKUEVCVDVKUFVLVKKOZBWBPZQZDRZ
        MZSZKBTVCVDVKUHVJWGAKBVEWBUIZVIWFWHVEWBVHWEWHUJZWHVGWDDWHVFWCBVEWBUSZUK
        ULUMUNUOUPVTVNWBVMWCQZDRZMZSZKVMTZUGZLWAVTWPUTVMWAMVSWOVNVRWNAKVMWHVQWM
        WHVEWBVPWLWIWHVOWKDWHVFWCVMWJUKULUMUNUOUQURVAVB $.
        $( [25-Jun-2014] $)
    $}

    $( Every vector space has a basis.  This theorem is an AC equivalent.
       (Contributed by Mario Carneiro, 25-Jun-2014.) $)
    lbsex $p |- ( W e. LVec -> J =/= (/) ) $=
      ( vs vx clvec wcel c0 cv wss wrex wne cbs cfv csn cdif clspn wn wral eqid
      0ss ral0 lbsext mp3an23 rexn0 syl ) BFGZHDIJZDAKZAHLUGHBMNZJEIZHUKOPBQNZN
      GRZEHSUIUJUAUMEUBEHAULUJBDCUJTULTUCUDUHDAUEUF $.
      $( [25-Jun-2014] $)
  $}


