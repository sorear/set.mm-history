$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    Subspaces and spans in a left module
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c LSubSp $.

  $( Extend class notation with linear subspaces of a left module or left
     vector space. $)
  clss $a class LSubSp $.

  ${
    $d a b s x w $.
    $( Define the set of linear subspaces of a left module or left vector
       space. $)
    df-lss $a |- LSubSp = ( w e. _V |->
     { s e. ( ~P ( Base ` w ) \ { (/) } ) |
        A. x e. ( Base ` ( Scalar ` w ) ) A. a e. s A. b e. s
          ( ( x ( vsca ` w ) a ) ( +g ` w ) b ) e. s } ) $.
  $}

  ${
    $d s w x B $.  $d s w P $.  $d s w T $.  $d a b s x U $.  $d a b s w x W $.
    $d s w V $.
    lssset.f $e |- F = ( Scalar ` W ) $.
    lssset.b $e |- B = ( Base ` F ) $.
    lssset.v $e |- V = ( Base ` W ) $.
    lssset.p $e |- P = ( +g ` W ) $.
    lssset.t $e |- T = ( vsca ` W ) $.
    lssset.s $e |- S = ( LSubSp ` W ) $.
    $( The set of all (not necessarily closed) linear subspaces of a left
       module or left vector space. $)
    lssset $p |- ( W e. X -> S = { s e. ( ~P V \ { (/) } ) |
         A. x e. B A. a e. s A. b e. s ( ( x T a ) P b ) e. s } ) $=
      ( cfv cbs vw wcel clss cv co wral cpw csn cdif crab cvv wceq cvsca cplusg
      c0 elex csca fveq2 syl6eqr pweqd difeq1d fveq2d oveqd oveq1d eqtrd eleq1d
      2ralbidv raleqbidv rabeqbidv df-lss fvex eqeltri difexg ax-mp rabex fvmpt
      pwex syl syl5eq ) HIUBZDHUCSZAUDZKUDZEUEZLUDZCUEZJUDZUBZLWGUFKWGUFZABUFZJ
      GUGZUOUHZUIZUJZRVTHUKUBWAWNULHIUPUAHWBWCUAUDZUMSZUEZWEWOUNSZUEZWGUBZLWGUF
      KWGUFZAWOUQSZTSZUFZJWOTSZUGZWLUIZUJWNUKUCWOHULZXDWJJXGWMXHXFWKWLXHXEGXHXE
      HTSZGWOHTUROUSUTVAXHXAWIAXCBXHXCFTSBXHXBFTXHXBHUQSFWOHUQURMUSVBNUSXHWTWHK
      LWGWGXHWSWFWGXHWSWDWEWRUEWFXHWQWDWEWRXHWPEWBWCXHWPHUMSEWOHUMURQUSVCVDXHWR
      CWDWEXHWRHUNSCWOHUNURPUSVCVEVFVGVHVIAUAJKLVJWJJWMWKUKUBWMUKUBGGXIUKOHTVKV
      LVQWKWLUKVMVNVOVPVRVS $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)

    $( The predicate "is a subspace" (of a left module or left vector
       space). $)
    islss $p |- ( U e. S <-> ( U C_ V /\ U =/= (/)
          /\ A. x e. B A. a e. U A. b e. U ( ( x T a ) P b ) e. U ) ) $=
      ( wcel c0 wral vs cvv wss wne cv co w3a clss cfv cdm elfvdm syl eleq2s wn
      elex wceq cbs syl5eq sseq2d biimpcd ss0 syl6 necon1ad imp 3adant3 cpw csn
      fvprc cdif crab lssset eleq2d wa eldifsn eqeltri elpw2 anbi1i bitri eleq2
      fvex raleqbi1dv ralbidv elrab df-3an 3bitr4i syl6bb pm5.21nii ) FDRZIUBRZ
      FHUCZFSUDZAUEJUEEUFKUECUFZFRZKFTZJFTZABTZUGZWIFIUHUIZDFWRRIUHUJZRWIFIUHUK
      IWSUOULQUMWJWKWIWPWJWKWIWJWIFSWJWIUNZFSUCZFSUPWTWJXAWTHSFWTHIUQUIZSNIUQVH
      URUSUTFVAVBVCVDVEWIWHFWLUAUEZRZKXCTZJXCTZABTZUAHVFZSVGVIZVJZRZWQWIDXJFABC
      DEGHIUBUAJKLMNOPQVKVLFXIRZWPVMWJWKVMZWPVMXKWQXLXMWPXLFXHRZWKVMXMFXHSVNXNW
      JWKFHHXBUBNIUQVTVOVPVQVRVQXGWPUAFXIXCFUPXFWOABXEWNJXCFXDWMKXCFXCFWLVSWAWA
      WBWCWJWKWPWDWEWFWG $.
      $( [8-Jan-2015] $) $( [8-Dec-2013] $)

    $( Obsolete version of ~ islss as of 19-Jan-2015. $)
    islssOLD $p |- ( W e. X -> ( U e. S <-> ( U C_ V /\ U =/= (/)
          /\ A. x e. B A. a e. U A. b e. U ( ( x T a ) P b ) e. U ) ) ) $=
      ( wcel cv wss c0 wne co wral w3a wb islss a1i ) FDSFHUAFUBUCATKTEUDLTCUDF
      SLFUEKFUEABUEUFUGIJSABCDEFGHIKLMNOPQRUHUI $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    $d a b x ph $.  $d a b x U $.  $d a b x W $.  $d a b B $.
    islssd.f $e |- ( ph -> F = ( Scalar ` W ) ) $.
    islssd.b $e |- ( ph -> B = ( Base ` F ) ) $.
    islssd.v $e |- ( ph -> V = ( Base ` W ) ) $.
    islssd.p $e |- ( ph -> P = ( +g ` W ) ) $.
    islssd.t $e |- ( ph -> T = ( vsca ` W ) ) $.
    islssd.s $e |- ( ph -> S = ( LSubSp ` W ) ) $.
    islssd.u $e |- ( ph -> U C_ V ) $.
    islssd.z $e |- ( ph -> U =/= (/) ) $.
    islssd.c $e |- ( ( ph /\ ( x e. B /\ a e. U /\ b e. U ) ) ->
            ( ( x T a ) P b ) e. U ) $.
    $( Properties that determine a subspace of a left module or left vector
       space. $)
    islssd $p |- ( ph -> U e. S ) $=
      ( clss cfv cbs wss c0 wne cv cvsca co cplusg wcel wral csca sseqtrd 3exp2
      wa imp43 ralrimivva ex fveq2d eqtrd eleq2d oveq1d eleq1d 2ralbidv 3imtr3d
      oveqd ralrimiv eqid islss syl3anbrc eleqtrrd ) AGJUBUCZEAGJUDUCZUEGUFUGBU
      HZKUHZJUIUCZUJZLUHZJUKUCZUJZGULZLGUMKGUMZBJUNUCZUDUCZUMGVNULAGIVOSOUOTAWD
      BWFAVPCULZVPVQFUJZVTDUJZGULZLGUMKGUMZVPWFULWDAWGWKAWGUQWJKLGGAWGVQGULZVTG
      ULZWJAWGWLWMWJUAUPURUSUTACWFVPACHUDUCWFNAHWEUDMVAVBVCAWJWCKLGGAWIWBGAWIWH
      VTWAUJWBADWAWHVTPVHAWHVSVTWAAFVRVPVQQVHVDVBVEVFVGVIBWFWAVNVRGWEVOJKLWEVJW
      FVJVOVJWAVJVRVJVNVJVKVLRVM $.
      $( [8-Jan-2015] $) $( [8-Dec-2013] $)

    $( Obsolete version of ~ islssd as of 19-Jan-2015. $)
    islssdOLD $p |- ( ( ph /\ W e. X ) -> U e. S ) $=
      ( wcel islssd adantr ) AGEUCJKUCABCDEFGHIJLMNOPQRSTUAUBUDUE $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x V $.  $d a b x W $.
    lssss.v $e |- V = ( Base ` W ) $.
    lssss.s $e |- S = ( LSubSp ` W ) $.
    $( A subspace is a set of vectors. $)
    lssss $p |- ( U e. S -> U C_ V ) $=
      ( vx va vb wcel wss c0 wne cv cvsca cfv co cplusg wral eqid islss simp1bi
      csca cbs ) BAJBCKBLMGNHNDOPZQINDRPZQBJIBSHBSGDUCPZUDPZSGUHUFAUEBUGCDHIUGT
      UHTEUFTUETFUAUB $.
      $( [8-Jan-2015] $) $( [8-Dec-2013] $)

    $( Obsolete version of ~ lssss as of 19-Jan-2015. $)
    lssssOLD $p |- ( ( W e. X /\ U e. S ) -> U C_ V ) $=
      ( wcel wss lssss adantl ) BAHBCIDEHABCDFGJK $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( A subspace member is a vector. $)
    lssel $p |- ( ( U e. S /\ X e. U ) -> X e. V ) $=
      ( wcel lssss sselda ) BAHBCEABCDFGIJ $.
      $( [8-Jan-2015] $) $( [11-Jan-2014] $)

    $( Obsolete version of ~ lssel as of 19-Jan-2015. $)
    lsselOLD $p |- ( ( W e. Y /\ U e. S /\ X e. U ) -> X e. V ) $=
      ( wcel lssel 3adant1 ) BAIEBIECIDFIABCDEGHJK $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)

    $( The set of vectors in a left module is a subspace. $)
    lss1 $p |- ( W e. LMod -> V e. S ) $=
      ( vx va vb clmod wcel csca cfv cbs cplusg eqidd wceq a1i cv co eqid cvsca
      clss wss ssid lmodbn0 wa simpl lmodvscl 3adant3r3 simpr3 lmodvacl syl3anc
      w3a islssd ) CIJZFCKLZMLZCNLZACUALZBUPBCGHUOUPOUOUQOBCMLPUODQUOUROUOUSOAC
      UBLPUOEQBBUCUOBUDQBCDUEUOFRZUQJZGRZBJZHRZBJZUMZUFUOUTVBUSSZBJZVEVGVDURSBJ
      UOVFUGUOVAVCVHVEUTUSUPUQBCVBDUPTUSTUQTUHUIUOVAVCVEUJURBCVGVDDURTUKULUN $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    $d a b x U $.  $d a b x W $.
    lssn0.s $e |- S = ( LSubSp ` W ) $.
    $( A subspace is not empty. $)
    lssn0 $p |- ( U e. S -> U =/= (/) ) $=
      ( vx va vb wcel cbs cfv wss c0 wne cv cvsca co cplusg wral csca eqid
      islss simp2bi ) BAHBCIJZKBLMENFNCOJZPGNCQJZPBHGBRFBRECSJZIJZREUGUEAUDBUFU
      CCFGUFTUGTUCTUETUDTDUAUB $.
      $( [8-Jan-2015] $) $( [12-Jan-2014] $)

    $( Obsolete version of ~ lssn0 as of 19-Jan-2015. $)
    lssn0OLD $p |- ( ( W e. X /\ U e. S ) -> U =/= (/) ) $=
      ( wcel c0 wne lssn0 adantl ) BAFBGHCDFABCEIJ $.
      $( [19-Jun-2014] $) $( [12-Jan-2014] $)
  $}

  ${
    $d x B $.  $d a b x P $.  $d a b x T $.  $d a b x U $.  $d a b x W $.
    $d a b X $.  $d b Y $.  $d a b x Z $.
    lsscl.f $e |- F = ( Scalar ` W ) $.
    lsscl.b $e |- B = ( Base ` F ) $.
    lsscl.p $e |- P = ( +g ` W ) $.
    lsscl.t $e |- T = ( vsca ` W ) $.
    lsscl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure property of a subspace. $)
    lsscl $p |- ( ( U e. S /\ ( Z e. B /\ X e. U /\ Y e. U ) ) ->
      ( ( Z T X ) P Y ) e. U ) $=
      ( vx va vb wcel co cv wral w3a cbs cfv wss c0 wne eqid islss simp3bi wceq
      oveq1 oveq1d eleq1d oveq2 rcla43v mpan9 ) ECSZPUAZQUAZDTZRUAZBTZESZREUBQE
      UBPAUBZJASHESIESUCJHDTZIBTZESZUSEGUDUEZUFEUGUHVFPABCDEFVJGQRKLVJUIMNOUJUK
      VEVIJVADTZVCBTZESVGVCBTZESPQRJHIAEEUTJULZVDVLEVNVBVKVCBUTJVADUMUNUOVAHULZ
      VLVMEVOVKVGVCBVAHJDUPUNUOVCIULVMVHEVCIVGBUPUOUQUR $.
      $( [8-Jan-2015] $) $( [8-Dec-2013] $)

    $( Obsolete version of ~ lsscl as of 19-Jan-2015. $)
    lssclOLD $p |- ( ( ( W e. V /\ U e. S )
      /\ ( Z e. B /\ X e. U /\ Y e. U ) ) -> ( ( Z T X ) P Y ) e. U ) $=
      ( wcel w3a co lsscl adantll ) ECQKAQIEQJEQRKIDSJBSEQHGQABCDEFHIJKLMNOPTUA
      $.
      $( [15-Jul-2014] $) $( [8-Dec-2013] $)
  $}

  ${
    lssvsubcl.m $e |- M = ( -g ` W ) $.
    lssvsubcl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of vector subtraction in a subspace. $)
    lssvsubcl $p |- ( ( ( W e. LMod /\ U e. S )
          /\ ( X e. U /\ Y e. U ) ) -> ( X M Y ) e. U ) $=
      ( clmod wcel wa co cfv cbs wceq eqid lssel syl3anc syl eqeltrd csca cvsca
      cur cminusg cplusg ad2ant2lr ad2ant2l lmodvsubval2 cgrp lmodfgrp grpinvcl
      simpll lmod1cl syl2anc lmodvscl lmodcom simplr simprr simprl syl13anc
      lsscl ) DIJZBAJZKZEBJZFBJZKZKZEFCLZEDUAMZUCMZVJUDMZMZFDUBMZLZDUEMZLZBVHVB
      EDNMZJZFVRJZVIVQOVBVCVGULZVCVEVSVBVFABVRDEVRPZHQUFZVCVFVTVBVEABVRDFWBHQUG
      ZEFVPVNVKVJCVLVRDWBVPPZGVJPZVNPZVLPZVKPZUHRVHVQVOEVPLZBVHVBVSVOVRJZVQWJOW
      AWCVHVBVMVJNMZJZVTWKWAVHVJUIJZVKWLJZWMVHVBWNWAVJDWFUJSVHVBWOWAVKVJWLDWFWL
      PZWIUMSWLVJVLVKWPWHUKUNZWDVMVNVJWLVRDFWBWFWGWPUORVPVRDEVOWBWEUPRVHVCWMVFV
      EWJBJVBVCVGUQWQVDVEVFURVDVEVFUSWLVPAVNBVJDFEVMWFWPWEWGHVAUTTT $.
      $( [19-Jun-2014] $) $( [31-Mar-2014] $)
  $}

  ${
    $d x S $.  $d x U $.  $d a b x W $.  $d y X $.  $d a b x y Z $.
    lss0cl.z $e |- Z = ( 0g ` W ) $.
    lss0cl.s $e |- S = ( LSubSp ` W ) $.
    $( The zero vector belongs to every subspace.  (The proof was shortened by
       Mario Carneiro, 19-Jun-2014.) $)
    lss0cl $p |- ( ( W e. LMod /\ U e. S ) -> Z e. U ) $=
      ( vx clmod wcel wa cv wex c0 wne lssn0 n0 sylib adantl cfv eqid w3a simp1
      csg co cbs wceq lssel 3adant1 lmodvsubid syl2anc lssvsubcl anabsan2 3impa
      eqeltrrd 3expia exlimdv mpd ) CHIZBAIZJZGKZBIZGLZDBIZUSVCURUSBMNVCABCFOGB
      PQRUTVBVDGURUSVBVDURUSVBUAZVAVACUCSZUDZDBVEURVACUESZIZVGDUFURUSVBUBUSVBVI
      URABVHCVAVHTZFUGUHVAVFDVHCVJEVFTZUIUJURUSVBVGBIZUTVBVLABVFCVAVAVKFUKULUMU
      NUOUPUQ $.
      $( [19-Jun-2014] $) $( [12-Jan-2014] $)

    $( The singleton of the zero vector is a subspace. $)
    lsssn0 $p |- ( W e. LMod -> { Z } e. S ) $=
      ( vx va vb wcel cfv cbs eqidd wceq a1i eqid c0g cv co elsni syl clmod csn
      csca cplusg cvsca clss 0vcl snssd c0 wne cvv fvex eqeltri snnz w3a simpr2
      wa oveq2d lmodvs0 3ad2antr1 eqtrd simpr3 oveq12d 0vlid mpdan adantr elsnc
      ovex sylibr islssd ) BUAIZFBUCJZKJZBUDJZABUEJZCUBZVLBKJZBGHVKVLLVKVMLVKVQ
      LVKVNLVKVOLABUFJMVKENVKCVQVQBCVQOZDUGZUHVPUIUJVKCCBPJUKDBPULUMUNNVKFQZVMI
      ZGQZVPIZHQZVPIZUOZUQZVTWBVORZWDVNRZCMWIVPIWGWICCVNRZCWGWHCWDCVNWGWHVTCVOR
      ZCWGWBCVTVOWGWCWBCMVKWAWCWEUPWBCSTURVKWCWAWKCMWEVOVLVMBVTCVLOVOOVMODUSUTV
      AWGWEWDCMVKWAWCWEVBWDCSTVCVKWJCMZWFVKCVQIWLVSVNVQBCCVRVNODVDVEVFVAWICWHWD
      VNVHVGVIVJ $.
      $( [19-Jun-2014] $) $( [13-Jan-2014] $)

    $( The zero subspace is included in every subspace.  ( ~ sh0le analog.) $)
    lss0ss $p |- ( ( W e. LMod /\ X e. S ) -> { Z } C_ X ) $=
      ( clmod wcel wa lss0cl snssd ) BGHCAHIDCACBDEFJK $.
      $( [19-Jun-2014] $) $( [27-Mar-2014] $)

    $( No subspace is smaller than the zero subspace.  ( ~ shle0 analog.) $)
    lssle0 $p |- ( ( W e. LMod /\ X e. S )
         -> ( X C_ { Z } <-> X = { Z } ) ) $=
      ( clmod wcel wa csn wss wceq lss0ss biantrud eqss syl6bbr ) BGHCAHIZCDJZK
      ZSRCKZICRLQTSABCDEFMNCROP $.
      $( [19-Jun-2014] $) $( [20-Apr-2014] $)

    $( A nonzero subspace has a nonzero vector.  ( ~ shne0i analog.)  (The
       proof was shortened by Mario Carneiro, 19-Jun-2014.) $)
    lssne0 $p |- ( X e. S -> ( X =/= { Z } <-> E. y e. X y =/= Z ) ) $=
      ( wcel cv wne wrex csn wceq wral wn c0 wb lssn0 eqsn syl ralbii syl6rbb
      nne ralnex bitr3i necon1abid ) DBHZAIZEJZADKZDELZUGDUKMZUHEMZADNZUJOZUGDP
      JULUNQBDCGRADESTUNUIOZADNUOUPUMADUHEUCUAUIADUDUEUBUF $.
      $( [8-Jan-2015] $) $( [20-Apr-2014] $)

    $( Obsolete version of ~ lssne0 as of 19-Jan-2015. $)
    lssne0OLD $p |- ( ( W e. LMod /\ X e. S )
      -> ( X =/= { Z } <-> E. y e. X y =/= Z ) ) $=
      ( wcel csn wne cv wrex wb clmod lssne0 adantl ) DBHDEIJAKEJADLMCNHABCDEFG
      OP $.
      $( [19-Jun-2014] $) $( [20-Apr-2014] $)
  $}

  ${
    $d x T $.  $d x U $.  $d x ph $.
    lssssr.v $e |- V = ( Base ` W ) $.
    lssssr.o $e |- O = ( 0g ` W ) $.
    lssssr.s $e |- S = ( LSubSp ` W ) $.
    lssssr.w $e |- ( ph -> W e. LMod ) $.
    lssssr.t $e |- ( ph -> T C_ V ) $.
    lssssr.u $e |- ( ph -> U e. S ) $.
    lssssr.1 $e |- ( ( ph /\ x e. ( V \ { O } ) ) -> ( x e. T -> x e. U ) ) $.
    $( Conclude subspace ordering from vector membership.  ( ~ ssrdv
       analog.) $)
    lssssr $p |- ( ph -> T C_ U ) $=
      ( cv wcel wi wa adantr simpr clmod lss0cl syl2anc eqeltrd a1d sseld ancrd
      wceq wne cdif eldifsn sylan2br exp32 com23 imp4b syld pm2.61dane ssrdv
      csn ) ABDEABPZDQZVAEQZRZVAFAVAFUIZSZVCVBVFVAFEAVEUAAFEQZVEAHUBQECQVGLNCEH
      FJKUCUDTUEUFAVAFUJZSVBVAGQZVBSZVCAVBVJRVHAVBVIADGVAMUGUHTAVHVIVBVCAVIVHVD
      AVIVHVDVIVHSAVAGFUTUKQVDVAGFULOUMUNUOUPUQURUS $.
      $( [17-Aug-2014] $)
  $}

  ${
    lssvacl.p $e |- P = ( +g ` W ) $.
    lssvacl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of vector addition in a subspace. $)
    lssvacl $p |- ( ( ( W e. LMod /\ U e. S ) /\ ( X e. U /\ Y e. U ) )
       -> ( X P Y ) e. U ) $=
      ( clmod wcel wa csca cfv cur cvsca co cbs wceq simpll eqid lmodvs1 oveq1d
      ad2ant2lr syl2anc simplr lmod1cl ad2antrr simprl simprr syl13anc eqeltrrd
      lssel lsscl ) DIJZCBJZKZECJZFCJZKZKZDLMZNMZEDOMZPZFAPZEFAPCUTVDEFAUTUNEDQ
      MZJZVDERUNUOUSSUOUQVGUNURBCVFDEVFTZHULUCVCVBVAVFDEVHVATZVCTZVBTZUAUDUBUTU
      OVBVAQMZJZUQURVECJUNUOUSUEUNVMUOUSVBVAVLDVIVLTZVKUFUGUPUQURUHUPUQURUIVLAB
      VCCVADEFVBVIVNGVJHUMUJUK $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)
  $}

  ${
    lssvscl.f $e |- F = ( Scalar ` W ) $.
    lssvscl.t $e |- T = ( vsca ` W ) $.
    lssvscl.b $e |- B = ( Base ` F ) $.
    lssvscl.s $e |- S = ( LSubSp ` W ) $.
    $( Closure of scalar product in a subspace. $)
    lssvscl $p |- ( ( ( W e. LMod /\ U e. S ) /\ ( X e. B /\ Y e. U ) )
       -> ( X T Y ) e. U ) $=
      ( clmod wcel wa co c0g cfv cplusg eqid cbs simpll lssel ad2ant2l lmodvscl
      wceq simprl syl3anc syl2anc simplr simprr lss0cl adantr syl13anc eqeltrrd
      0vrid lsscl ) FMNZDBNZOZGANZHDNZOZOZGHCPZFQRZFSRZPZVEDVDURVEFUARZNZVHVEUF
      URUSVCUBZVDURVAHVINZVJVKUTVAVBUGZUSVBVLURVABDVIFHVITZLUCUDGCEAVIFHVNIJKUE
      UHVGVIFVEVFVNVGTZVFTZUPUIVDUSVAVBVFDNZVHDNURUSVCUJVMUTVAVBUKUTVQVCBDFVFVP
      LULUMAVGBCDEFHVFGIKVOJLUQUNUO $.
      $( [19-Jun-2014] $) $( [11-Jan-2014] $)
  $}

  ${
    lssvnegcl.s $e |- S = ( LSubSp ` W ) $.
    lssvnegcl.n $e |- N = ( invg ` W ) $.
    $( Closure of negative vectors in a subspace.  (Contributed by Stefan
       O'Rear, 11-Dec-2014.) $)
    lssvnegcl $p |- ( ( W e. LMod /\ U e. S /\ X e. U ) -> ( N ` X ) e. U ) $=
      ( clmod wcel w3a csca cfv cur cminusg cvsca co wceq cbs eqid syl wa lssel
      lmodvneg1 sylan2 3impb simp1 simp2 cgrp lmodrng 3ad2ant1 rngidcl grpinvcl
      crg rnggrp syl2anc simp3 lssvscl syl22anc eqeltrrd ) DHIZBAIZEBIZJZDKLZML
      ZVDNLZLZEDOLZPZECLZBUTVAVBVIVJQZVAVBUAUTEDRLZIVKABVLDEVLSZFUBVHVEVDVFCVLD
      EVMGVDSZVHSZVESZVFSZUCUDUEVCUTVAVGVDRLZIZVBVIBIUTVAVBUFUTVAVBUGVCVDUHIZVE
      VRIZVSVCVDUMIZVTUTVAWBVBVDDVNUIUJZVDUNTVCWBWAWCVRVDVEVRSZVPUKTVRVDVFVEWDV
      QULUOUTVAVBUPVRAVHBVDDVGEVNVOWDFUQURUS $.
      $( [11-Dec-2014] $)
  $}

  ${
    $d x y S $.  $d x y U $.  $d x y W $.
    lsssubg.s $e |- S = ( LSubSp ` W ) $.
    $( All subspaces are subgroups.  (Contributed by Stefan O'Rear,
       11-Dec-2014.) $)
    lsssubg $p |- ( ( W e. LMod /\ U e. S ) -> U e. ( SubGrp ` W ) ) $=
      ( vx vy clmod wcel wa csubg cfv cbs wss c0 wne wral eqid adantl ralrimiva
      cv cplusg co cminusg lssss lssn0 lssvacl anassrs lssvnegcl 3expa jca cgrp
      w3a wb lmodgrp adantr issubg2 syl mpbir3and ) CGHZBAHZIZBCJKHZBCLKZMZBNOZ
      ETZFTZCUAKZUBBHZFBPZVFCUCKZKBHZIZEBPZUTVDUSABVCCVCQZDUDRUTVEUSABCDUERVAVM
      EBVAVFBHZIZVJVLVQVIFBVAVPVGBHVIVHABCVFVGVHQZDUFUGSUSUTVPVLABVKCVFDVKQZUHU
      IUJSVACUKHZVBVDVEVNULUMUSVTUTCUNUOEFVCVHBCVKVOVRVSUPUQUR $.
      $( [11-Dec-2014] $)
  $}

  ${
    $d a b x S $.  $d a b x U $.  $d a b x V $.  $d a b x W $.  $d a b x X $.
    islss3.x $e |- X = ( W |`s U ) $.
    islss3.v $e |- V = ( Base ` W ) $.
    islss3.s $e |- S = ( LSubSp ` W ) $.
    $( A linear subspace of a module is a subset which is a module in its own
       right.  (Contributed by Stefan O'Rear, 6-Dec-2014.)  (Revised by Mario
       Carneiro, 7-Jan-2015.) $)
    islss3 $p |- ( W e. LMod -> ( U e. S <-> ( U C_ V /\ X e. LMod ) ) ) $=
      ( vx va wcel wa cfv wceq syl eqid a1i eqidd adantr co vb clmod wss adantl
      lssss cplusg csca cbs cvsca cmulr simpr ressbas2 sylan2 ressplusg resssca
      cur ressvsca crg lmodrng csubg lsssubg subggrp cv lssvscl 3impb w3a simpl
      simpr1 ad2antlr simpr2 sseldd simpr3 lmodvsdi1 syl112anc lmodvsdi2 simpll
      cgrp syl121anc lmodvsass sselda lmodvs1 adantlr syldan islmodd jca simprl
      clss c0 wne simprr lmodgrp 3syl eqnetrd simplrl eleqtrd lmodvscl lmodvacl
      grpbn0 syl3anc eleqtrrd islssd impbida ) DUBKZBAKZBCUCZEUBKZLZXCXDLZXEXFX
      DXEXCABCDGHUEZUDZXHIJUADUFMZDUGMZUHMZXLUFMZDUIMZXLUJMZXLUPMZXLBEXDXCXEBEU
      HMZNZXIXCXELXEXSXCXEUKBCEDFGULZOUMXKEUFMNXHBXKDEFXKPZUNZQXLEUGMNXHBXLDEFX
      LPZUOZQXOEUIMNXHBXODEFXOPZUQZQXHXMRXHXNRXHXPRXHXQRXCXLURKXDXLDYCUSSXHBDUT
      MKEVQKZABDHVABDEFVBOXHIVCZXMKZJVCZBKZYHYJXOTZBKXMAXOBXLDYHYJYCYEXMPZHVDVE
      XHYIYKUAVCZBKZVFZLZXCYIYJCKYNCKZYHYJYNXKTXOTYLYHYNXOTZXKTNXHXCYPXCXDVGZSX
      HYIYKYOVHYQBCYJXDXEXCYPXIVIZXHYIYKYOVJVKYQBCYNUUAXHYIYKYOVLVKXKYHXOXLXMCD
      YJYNGYAYCYEYMVMVNXHYIYJXMKZYOVFZLZXCYIUUBYRYHYJXNTYNXOTYSYJYNXOTZXKTNXHXC
      UUCYTSXHYIUUBYOVHZXHYIUUBYOVJZUUDBCYNXDXEXCUUCXIVIXHYIUUBYOVLVKZXKXNYHYJX
      OXLXMCDYNGYAYCYEYMXNPVOVRUUDXCYIUUBYRYHYJXPTYNXOTYHUUEXOTNXCXDUUCVPUUFUUG
      UUHYHYJXOXPXLXMCDYNGYCYEYMXPPVSVRXHYHBKYHCKZXQYHXOTYHNZXHBCYHXJVTXCUUIUUJ
      XDXOXQXLCDYHGYCYEXQPWAWBWCWDWEXCXGLZIXMXKAXOBXLCDJUAUUKXLRUUKXMRCDUHMNUUK
      GQUUKXKRUUKXORADWGMNUUKHQXCXEXFWFZUUKBXRWHUUKXEXSUULXTOUUKXFYGXRWHWIXCXEX
      FWJZEWKXREXRPZWRWLWMUUKYPLZYLYNXKTZXRBUUOXFYLXRKZYNXRKUUPXRKUUKXFYPUUMSZU
      UOXFYIYJXRKUUQUURUUKYIYKYOVHUUOYJBXRUUKYIYKYOVJUUOXEXSXCXEXFYPWNXTOZWOYHX
      OXLXMXREYJUUNYDYFYMWPWSUUOYNBXRUUKYIYKYOVLUUSWOXKXREYLYNUUNYBWQWSUUSWTXAX
      B $.
      $( [7-Jan-2015] $) $( [6-Dec-2014] $)
  $}

  ${
    lsslss.x $e |- X = ( W |`s U ) $.
    lsslss.s $e |- S = ( LSubSp ` W ) $.
    $( A submodule is a module.  (Contributed by Stefan O'Rear,
       12-Dec-2014.) $)
    lsslmod $p |- ( ( W e. LMod /\ U e. S ) -> X e. LMod ) $=
      ( clmod wcel cbs cfv wss eqid islss3 simplbda ) CGHBAHBCIJZKDGHABOCDEOLFM
      N $.
      $( [12-Dec-2014] $)

    lsslss.t $e |- T = ( LSubSp ` X ) $.
    $( The subspaces of a subspace are the smaller subspaces.  (Contributed by
       Stefan O'Rear, 12-Dec-2014.) $)
    lsslss $p |- ( ( W e. LMod /\ U e. S ) ->
      ( V e. T <-> ( V e. S /\ V C_ U ) ) ) $=
      ( clmod wcel wa cbs cfv wss cress co wb eqid wceq islss3 syl lssss adantl
      lsslmod ressbas2 sseq2d anbi1d sstr2 mpan9 biantrurd cin oveq1i cvv simpr
      adantr ssexg sylan2 ancoms ressress syl2anc syl5eq sseqin2 sylib ad2antrr
      oveq2d eqtrd eleq1d 3bitr4d pm5.32da ancom syl6bb 3bitr2d ) EJKZCAKZLZDBK
      ZDFMNZOZFDPQZJKZLZDCOZWALZDAKZWCLZVPFJKVQWBRACEFGHUEBDVRFVTVTSVRSIUAUBVPW
      CVSWAVPCVRDVPCEMNZOZCVRTVOWHVNACWGEWGSZHUCUDZCWGFEGWIUFUBUGUHVPWDWCWELWFV
      PWCWAWEVPWCLZEDPQZJKZDWGOZWMLZWAWEWKWNWMVPWHWCWNWJDCWGUIUJUKWKVTWLJWKVTEC
      DULZPQZWLWKVTECPQZDPQZWQFWRDPGUMWKVODUNKZWSWQTVPVOWCVNVOUOZUPWCVPWTVPWCVO
      WTXADCAUQURUSCDEAUNUTVAVBWKWPDEPWKWCWPDTVPWCUODCVCVDVFVGVHVNWEWORVOWCADWG
      EWLWLSWIHUAVEVIVJWCWEVKVLVM $.
      $( [12-Dec-2014] $)
  $}

  ${
    $d F a b c $.  $d W a b c $.  $d B a b c $.  $d V a b c $.  $d T a b c $.
    $d S a b c $.  $d G a b c $.  $d U a b c $.
    islss4.f $e |- F = ( Scalar ` W ) $.
    islss4.b $e |- B = ( Base ` F ) $.
    islss4.v $e |- V = ( Base ` W ) $.
    islss4.t $e |- T = ( vsca ` W ) $.
    islss4.s $e |- S = ( LSubSp ` W ) $.
    islss4.g $e |- G = ( SubGrp ` W ) $.
    $( A linear subspace is a subgroup which respects scalar multiplication.
       (Contributed by Stefan O'Rear, 11-Dec-2014.) $)
    islss4 $p |- ( W e. LMod -> ( U e. S <-> ( U e. G /\
          A. a e. B A. b e. U ( a T b ) e. U ) ) ) $=
      ( wcel wral wa cfv vc clmod cv clss csubg cbs wss wne cplusg cminusg eqid
      co lssss adantl lssn0 lssvacl expr ralrimiv simpll simplr simpr lssvnegcl
      c0 syl3anc jca ralrimiva cgrp w3a wb lmodgrp adantr issubg2 syl mpbir3and
      eleq2i anbi2i 3imtr4i lssvscl ralrimivva subgss sylbi ad2antrl c0g biimpi
      subg0cl ne0i 3syl wi subgcl 3exp ralrimdv ralimdv islss syl3anbrc impbida
      impr ) HUBQZDBQZDFQZIUCZJUCZCULZDQZJDRZIARZSZWQWRSZWSXEWQDHUDTZQZSZDHUETZ
      QZXGWSXJXLDHUFTZUGZDVCUHZWTXAHUITZULDQZJDRZWTHUJTZTDQZSZIDRZXIXNWQXHDXMHX
      MUKZXHUKZUMUNXIXOWQXHDHYDUOUNXJYAIDXJWTDQZSZXRXTYFXQJDXJYEXADQXQXPXHDHWTX
      AXPUKZYDUPUQURYFWQXIYEXTWQXIYEUSWQXIYEUTXJYEVAXHDXSHWTYDXSUKZVBVDVEVFXJHV
      GQZXLXNXOYBVHVIWQYIXIHVJVKIJXMXPDHXSYCYGYHVLVMVNWRXIWQBXHDOVOVPFXKDPVOZVQ
      XGXCIJADABCDEHWTXAKNLOVRVSVEWQXFSDGUGZXOXBUAUCZXPULDQZUADRZJDRZIARZWRWSYK
      WQXEWSXLYKYJGDHMVTWAWBWSXOWQXEWSXLHWCTZDQXOWSXLYJWDDHYQYQUKWEDYQWFWGWBWQW
      SXEYPWQWSSZXDYOIAYRXCYNJDYRXCYMUADWSXCYLDQZYMWHWHZWQWSXLYTYJXLXCYSYMXPDHX
      BYLYGWIWJWAUNWKWLWLWPIAXPBCDEGHJUAKLMYGNOWMWNWO $.
      $( [11-Dec-2014] $)
  $}

  ${
    $d a b k v x y z K $.  $d a b k v x y z T $.  $d a b k v x y z V $.
    $d k x F $.  $d a b k v x y z W $.  $d a b k v x y z X $.
    lss1d.v $e |- V = ( Base ` W ) $.
    lss1d.f $e |- F = ( Scalar ` W ) $.
    lss1d.t $e |- T = ( vsca ` W ) $.
    lss1d.k $e |- K = ( Base ` F ) $.
    lss1d.s $e |- S = ( LSubSp ` W ) $.
    $( One-dimensional subspace (or zero-dimensional if ` X ` is the zero
       vector).  (The proof was shortened by Mario Carneiro, 19-Jun-2014.) $)
    lss1d $p |- ( ( W e. LMod /\ X e. V )
        -> { v | E. k e. K v = ( k T X ) } e. S ) $=
      ( wcel wa cfv co wceq wrex vx va vb vy vz clmod cplusg cab csca a1i eqidd
      cv cbs cvsca clss wi lmodvscl 3expa an32s eleq1a syl rexlimdva abssdv c0g
      wne eqid lmod0cl adantr ax-17 hbre1 hbab hbne biidd ovex elabrex vtoclgaf
      ne0i w3a vex eqeq1 rexbidv elab oveq1 eqeq2d cbvrexv bitri anbi12i reeanv
      bitr4i cmulr simpll simprr simprll lmodmcl syl3anc simprlr lmodacl simplr
      c0 lmodvsdi2 syl121anc lmodvsass oveq1d eqtr2d rcla4ev oveq2 oveq12 sylan
      syl2anc eqeq1d syl5ibrcom com23 rexlimdvva syl5bi exp3acom23 com24 sylibr
      expr 3imp2 islssd ) HUFOZIGOZPZUAFHUGQZBCAULZDULZICRZSZDFTZAUHZEGHUBUCEHU
      IQSYCKUJFEUMQSYCMUJGHUMQSYCJUJYCYDUKCHUNQSYCLUJBHUOQSYCNUJYCYIAGYCYHYEGOZ
      DFYCYFFOZPYGGOZYHYKUPYAYLYBYMYAYLYBYMYFCEFGHIJKLMUQURUSYGGYEUTVAVBVCYCEVD
      QZFOZYJWSVEZYAYOYBEFHYNKMYNVFVGVHYPYPDUAYNFUAULZYNODVIDUAYJWSYIDAUAYHDFVJ
      VKYQWSODVIVLYFYNSYPVMYLYGYJOYPDAFYGYFICVNVOYJYGVQVAVPVAYCYQFOZUBULZYJOZUC
      ULZYJOZVRPYQYSCRZUUAYDRZYGSZDFTZUUDYJOYCYRYTUUBUUFYCUUBYTYRUUFYCYTUUBYRUU
      FUPZYTUUBPZYSUDULZICRZSZUUAUEULZICRZSZPZUEFTUDFTZYCUUGUUHUUKUDFTZUUNUEFTZ
      PUUPYTUUQUUBUURYTYSYGSZDFTZUUQYIUUTAYSUBVSYEYSSYHUUSDFYEYSYGVTWAWBUUSUUKD
      UDFYFUUISYGUUJYSYFUUIICWCWDWEWFUUBUUAYGSZDFTZUURYIUVBAUUAUCVSYEUUASYHUVAD
      FYEUUAYGVTWAWBUVAUUNDUEFYFUULSYGUUMUUAYFUULICWCWDWEWFWGUUKUUNUDUEFFWHWIYC
      UUOUUGUDUEFFYCUUIFOZUULFOZPZPYRUUOUUFYCUVEYRUUOUUFUPYCUVEYRPZPZUUFUUOYQUU
      JCRZUUMYDRZYGSZDFTZUVGYQUUIEWJQZRZUULEUGQZRZFOZUVIUVOICRZSZUVKUVGYAUVMFOZ
      UVDUVPYAYBUVFWKZUVGYAYRUVCUVSUVTYCUVEYRWLZYCUVCUVDYRWMZUVLEFHYQUUIKMUVLVF
      ZWNWOZYCUVCUVDYRWPZUVNEFHUVMUULKMUVNVFZWQWOUVGUVQUVMICRZUUMYDRZUVIUVGYAUV
      SUVDYBUVQUWHSUVTUWDUWEYAYBUVFWRZYDUVNUVMUULCEFGHIJYDVFKLMUWFWTXAUVGUWGUVH
      UUMYDUVGYAYRUVCYBUWGUVHSUVTUWAUWBUWIYQUUICUVLEFGHIJKLMUWCXBXAXCXDUVJUVRDU
      VOFYFUVOSYGUVQUVIYFUVOICWCWDXEXIUUOUUEUVJDFUUOUUDUVIYGUUKUUCUVHSUUNUUDUVI
      SYSUUJYQCXFUUCUVHUUAUUMYDXGXHXJWAXKXRXLXMXNXOXPXSYIUUFAUUDUUCUUAYDVNYEUUD
      SYHUUEDFYEUUDYGVTWAWBXQXT $.
      $( [19-Jun-2014] $) $( [14-Jan-2014] $)
  $}

  ${
    $d a b k l m n o p v x A $.  $d k l F $.  $d a b k l m n o p v x K $.
    $d a b k l m n o p v x T $.  $d k l v V $.  $d a b k l v x W $.
    $d a b k l m n o p v x X $.  $d a b k l m n o p v x Y $.
    $d a b k l m n o p v x ph $.
    lss2d.v $e |- V = ( Base ` W ) $.
    lss2d.a $e |- A = ( +g ` W ) $.
    lss2d.f $e |- F = ( Scalar ` W ) $.
    lss2d.t $e |- T = ( vsca ` W ) $.
    lss2d.k $e |- K = ( Base ` F ) $.
    lss2d.s $e |- S = ( LSubSp ` W ) $.
    lss2d.w $e |- ( ph -> W e. LMod ) $.
    lss2d.x $e |- ( ph -> X e. V ) $.
    lss2d.y $e |- ( ph -> Y e. V ) $.
    $( A way to represent a two-dimensional subspace (when ` X ` and ` Y ` are
       nonzero vectors).  Obsolete since it can be proved trivially from
       ~ lsppr .  Keep temporarily for archiving then delete.  Obsolete as of
       22-Aug-2014. $)
    lss2dOLD $p |- ( ph
        -> { v | E. k e. K E. l e. K v = ( ( k T X ) A ( l T Y ) ) } e. S ) $=
      ( vx va vb vm vn vo vp cv co wceq wrex cab csca cfv a1i cplusg cvsca clss
      cbs wa wi clmod adantr simprl lmodvscl syl3anc simprr lmodvacl eleq1a syl
      wcel rexlimdvva abssdv c0g wne eqid lmod0cl lmod0vs syl2anc oveq12d 0vrid
      c0 0vcl eqtr2d oveq1 oveq1d eqeq2d oveq2d rcla42ev fvex eqeq1 elab sylibr
      2rexbidv ne0i w3a cbvrex2v bitri anbi12i ad2antrr simplrl lmodmcl simprll
      vex cmulr lmodacl simplrr simprlr syl122anc lmodvsdi2 syl121anc lmodvsdi1
      lmod4 syl112anc lmodvsass eqtr4d 3eqtr4rd 3adantl3 3adantr2 simpl3 simpr2
      eqeq1d mpbird 3exp2 rexlimdvv imp3a syl5bi exp3acom23 com24 3imp2 islssd
      3exp ovex ) AUCHCDEBUJZFUJZKEUKZMUJZLEUKZCUKZULZMHUMFHUMZBUNZGIJUDUEGJUOU
      PULAPUQHGVAUPULARUQIJVAUPULANUQCJURUPULAOUQEJUSUPULAQUQDJUTUPULASUQAUUCBI
      AUUBYPIVMZFMHHAYQHVMZYSHVMZVBZVBZUUAIVMZUUBUUEVCUUIJVDVMZYRIVMZYTIVMZUUJA
      UUKUUHTVEZUUIUUKUUFKIVMZUULUUNAUUFUUGVFAUUOUUHUAVEYQEGHIJKNPQRVGVHUUIUUKU
      UGLIVMZUUMUUNAUUFUUGVIAUUPUUHUBVEYSEGHIJLNPQRVGVHCIJYRYTNOVJVHUUAIYPVKVLV
      NVOAJVPUPZUUDVMZUUDWDVQAUUQUUAULZMHUMFHUMZUURAGVPUPZHVMZUVBUUQUVAKEUKZUVA
      LEUKZCUKZULZUUTAUUKUVBTGHJUVAPRUVAVRZVSVLZUVHAUVEUUQUUQCUKZUUQAUVCUUQUVDU
      UQCAUUKUUOUVCUUQULTUAEGUVAIJKUUQNPQUVGUUQVRZVTWAAUUKUUPUVDUUQULTUBEGUVAIJ
      LUUQNPQUVGUVJVTWAWBAUUKUUQIVMZUVIUUQULTAUUKUVKTIJUUQNUVJWEVLCIJUUQUUQNOUV
      JWCWAWFUUSUVFUUQUVCYTCUKZULFMUVAUVAHHYQUVAULZUUAUVLUUQUVMYRUVCYTCYQUVAKEW
      GWHWIYSUVAULZUVLUVEUUQUVNYTUVDUVCCYSUVALEWGWJWIWKVHUUCUUTBUUQJVPWLYPUUQUL
      UUBUUSFMHHYPUUQUUAWMWPWNWOUUDUUQWQVLAUCUJZHVMZUDUJZUUDVMZUEUJZUUDVMZWRVBU
      VOUVQEUKZUVSCUKZUUAULZMHUMFHUMZUWBUUDVMAUVPUVRUVTUWDAUVTUVRUVPUWDAUVRUVTU
      VPUWDVCZUVRUVTVBUVQUFUJZKEUKZUGUJZLEUKZCUKZULZUGHUMUFHUMZUVSUHUJZKEUKZUIU
      JZLEUKZCUKZULZUIHUMUHHUMZVBAUWEUVRUWLUVTUWSUVRUVQUUAULZMHUMFHUMZUWLUUCUXA
      BUVQUDXFYPUVQULUUBUWTFMHHYPUVQUUAWMWPWNUWTUWKUVQUWGYTCUKZULFMUFUGHHYQUWFU
      LZUUAUXBUVQUXCYRUWGYTCYQUWFKEWGWHWIYSUWHULZUXBUWJUVQUXDYTUWIUWGCYSUWHLEWG
      WJWIWSWTUVTUVSUUAULZMHUMFHUMZUWSUUCUXFBUVSUEXFYPUVSULUUBUXEFMHHYPUVSUUAWM
      WPWNUXEUWRUVSUWNYTCUKZULFMUHUIHHYQUWMULZUUAUXGUVSUXHYRUWNYTCYQUWMKEWGWHWI
      YSUWOULZUXGUWQUVSUXIYTUWPUWNCYSUWOLEWGWJWIWSWTXAAUWLUWSUWEAUWKUWSUWEVCZUF
      UGHHAUWFHVMZUWHHVMZVBZUWKUXJAUXMUWKWRZUWRUWEUHUIHHUXNUWMHVMZUWOHVMZVBZUWR
      UVPUWDUXNUXQUWRUVPWRZVBZUWDUVOUWJEUKZUWQCUKZUUAULZMHUMFHUMZUXNUXQUVPUYCUW
      RAUXMUXQUVPVBZUYCUWKAUXMVBZUYDVBZUVOUWFGXGUPZUKZUWMGURUPZUKZHVMZUVOUWHUYG
      UKZUWOUYIUKZHVMZUYAUYJKEUKZUYMLEUKZCUKZULZUYCUYFUUKUYHHVMZUXOUYKAUUKUXMUY
      DTXBZUYFUUKUVPUXKUYSUYTUYEUXQUVPVIZAUXKUXLUYDXCZUYGGHJUVOUWFPRUYGVRZXDVHZ
      UYEUXOUXPUVPXEZUYIGHJUYHUWMPRUYIVRZXHVHUYFUUKUYLHVMZUXPUYNUYTUYFUUKUVPUXL
      VUGUYTVUAAUXKUXLUYDXIZUYGGHJUVOUWHPRVUCXDVHZUYEUXOUXPUVPXJZUYIGHJUYLUWOPR
      VUFXHVHUYFUYHKEUKZUWNCUKZUYLLEUKZUWPCUKZCUKZVUKVUMCUKZUWQCUKZUYQUYAUYFUUK
      VUKIVMZUWNIVMZVUMIVMZUWPIVMZVUOVUQULUYTUYFUUKUYSUUOVURUYTVUDAUUOUXMUYDUAX
      BZUYHEGHIJKNPQRVGVHUYFUUKUXOUUOVUSUYTVUEVVBUWMEGHIJKNPQRVGVHUYFUUKVUGUUPV
      UTUYTVUIAUUPUXMUYDUBXBZUYLEGHIJLNPQRVGVHUYFUUKUXPUUPVVAUYTVUJVVCUWOEGHIJL
      NPQRVGVHCUWPIJVUKUWNVUMNOXOXKUYFUYOVULUYPVUNCUYFUUKUYSUXOUUOUYOVULULUYTVU
      DVUEVVBCUYIUYHUWMEGHIJKNOPQRVUFXLXMUYFUUKVUGUXPUUPUYPVUNULUYTVUIVUJVVCCUY
      IUYLUWOEGHIJLNOPQRVUFXLXMWBUYFUXTVUPUWQCUYFUXTUVOUWGEUKZUVOUWIEUKZCUKZVUP
      UYFUUKUVPUWGIVMZUWIIVMZUXTVVFULUYTVUAUYFUUKUXKUUOVVGUYTVUBVVBUWFEGHIJKNPQ
      RVGVHUYFUUKUXLUUPVVHUYTVUHVVCUWHEGHIJLNPQRVGVHCUVOEGHIJUWGUWINOPQRXNXPUYF
      VUKVVDVUMVVECUYFUUKUVPUXKUUOVUKVVDULUYTVUAVUBVVBUVOUWFEUYGGHIJKNPQRVUCXQX
      MUYFUUKUVPUXLUUPVUMVVEULUYTVUAVUHVVCUVOUWHEUYGGHIJLNPQRVUCXQXMWBXRWHXSUYB
      UYRUYAUYOYTCUKZULFMUYJUYMHHYQUYJULZUUAVVIUYAVVJYRUYOYTCYQUYJKEWGWHWIYSUYM
      ULZVVIUYQUYAVVKYTUYPUYOCYSUYMLEWGWJWIWKVHXTYAUXSUWCUYBFMHHUXSUWBUYAUUAUXS
      UWAUXTUVSUWQCUXSUVQUWJUVOEAUXMUWKUXRYBWJUXNUXQUWRUVPYCWBYDWPYEYFYGYNYGYHY
      IYJYKYLUUCUWDBUWBUWAUVSCYOYPUWBULUUBUWCFMHHYPUWBUUAWMWPWNWOYM $.
      $( [21-Aug-2014] $)
  $}

  ${
    $d a b x y A $.  $d a b x y S $.  $d a b x y W $.
    lssintcl.s $e |- S = ( LSubSp ` W ) $.
    $( The intersection of a nonempty set of subspaces is a subspace. $)
    lssintcl $p |- ( ( W e. LMod /\ A C_ S /\ A =/= (/) )
          -> |^| A e. S ) $=
      ( vx va vb vy wcel wss c0 wne w3a cfv cbs eqidd cv eqid sylibr wa 3adant1
      clmod csca cplusg cvsca cint clss wceq a1i cuni intssuni2 cpw lssss ssriv
      vex elpw sspwuni mpbi syl6ss simpl1 simp2 sselda lss0cl syl2anc ralrimiva
      c0g wral fvex elint2 ne0i co adantlr simplr1 simplr2 simpr elinti simplr3
      syl sylc lsscl syl13anc ovex islssd ) CUBIZABJZAKLZMZECUCNZONZCUDNZBCUENZ
      AUFZWHCONZCFGWGWHPWGWIPWGWMPWGWJPWGWKPBCUGNUHWGDUIWGWLBUJZWMWEWFWLWNJWDAB
      UKUABWMULZJWNWMJHBWOHQZBIZWPWMJWPWOIBWPWMCWMRDUMWPWMHUOUPSUNBWMUQURUSWGCV
      FNZWLIZWLKLWGWRWPIZHAVGWSWGWTHAWGWPAIZTWDWQWTWDWEWFXAUTWGABWPWDWEWFVAVBZB
      WPCWRWRRDVCVDVEHWRACVFVHVISWLWRVJVRWGEQZWIIZFQZWLIZGQZWLIZMZTZXCXEWKVKZXG
      WJVKZWPIZHAVGXLWLIXJXMHAXJXATZWQXDXEWPIZXGWPIZXMWGXAWQXIXBVLXDXFXHWGXAVMX
      NXFXAXOXDXFXHWGXAVNXJXAVOZXEAWPVPVSXNXHXAXPXDXFXHWGXAVQXQXGAWPVPVSWIWJBWK
      WPWHCXEXGXCWHRWIRWJRWKRDVTWAVEHXLAXKXGWJWBVISWC $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( The intersection of two subspaces is a subspace. $)
    lssincl $p |- ( ( W e. LMod /\ T e. S /\ U e. S )
         -> ( T i^i U ) e. S ) $=
      ( clmod wcel w3a cpr cint cin intprg 3adant1 wss c0 wne simp1 prssi prnzg
      wceq 3ad2ant2 lssintcl syl3anc eqeltrrd ) DFGZBAGZCAGZHZBCIZJZBCKZAUFUGUJ
      UKTUEBCAALMUHUEUIANZUIOPZUJAGUEUFUGQUFUGULUEBCARMUFUEUMUGBCASUAUIADEUBUCU
      D $.
      $( [19-Jun-2014] $) $( [7-Mar-2014] $)
  $}

  ${
    lssdisj.p $e |- P = ( +g ` W ) $.
    lssdisj.o $e |- O = ( 0g ` W ) $.
    lssdisj.s $e |- S = ( LSubSp ` W ) $.
    lssdisj.w $e |- ( ph -> W e. LMod ) $.
    lssdisj.t $e |- ( ph -> T e. S ) $.
    lssdisj.u $e |- ( ph -> U e. S ) $.
    lssdisj.a $e |- ( ph -> A e. T ) $.
    lssdisj.c $e |- ( ph -> C e. T ) $.
    lssdisj.b $e |- ( ph -> B e. U ) $.
    lssdisj.d $e |- ( ph -> D e. U ) $.
    lssdisj.i $e |- ( ph -> ( T i^i U ) = { O } ) $.
    ${
      lssdisj.j $e |- ( ph -> ( A P B ) = ( C P D ) ) $.
      $( Vectors belonging to disjoint subspaces are uniquely determined by
         their sum.  (Revised by Mario Carneiro, 19-Jun-2014.) $)
      lssdisj1 $p |- ( ph -> A = C ) $=
        ( csg cfv co wceq csn wcel cin clmod eqid lssvsubcl syl22anc wb syl2anc
        cbs lssel lmodvaddsub4 syl122anc mpbid eqeltrd elin eleqtrd lmodvsubeq0
        sylanbrc elsni syl syl3anc ) ABDKUDUEZUFZJUGZBDUGZAVKJUHZUIVLAVKHIUJZVN
        AVKHUIZVKIUIVKVOUIAKUKUIZHGUIZBHUIZDHUIZVPOPRSGHVJKBDVJULZNUMUNAVKECVJU
        FZIABCFUFDEFUFUGZVKWBUGZUCAVQBKUQUEZUIZCWEUIZDWEUIZEWEUIZWCWDUOOAVRVSWF
        PRGHWEKBWEULZNURUPZAIGUIZCIUIZWGQTGIWEKCWJNURUPAVRVTWHPSGHWEKDWJNURUPZA
        WLEIUIZWIQUAGIWEKEWJNURUPBCDEFVJWEKWJLWAUSUTVAAVQWLWOWMWBIUIOQUATGIVJKE
        CWANUMUNVBVKHIVCVFUBVDVKJVGVHAVQWFWHVLVMUOOWKWNBDVJJWEKWJMWAVEVIVA $.
        $( [19-Jun-2014] $) $( [2-Apr-2014] $)

      $( Vectors belonging to disjoint subspaces are uniquely determined by
         their sum. $)
      lssdisj2 $p |- ( ph -> B = D ) $=
        ( cin csn incom syl5eq co clmod wcel cbs cfv wceq lssel syl2anc lmodcom
        eqid syl3anc 3eqtr3d lssdisj1 ) ACBEDFGIHJKLMNOQPTUARSAIHUDHIUDJUEIHUFU
        BUGABCFUHZDEFUHZCBFUHZEDFUHZUCAKUIUJZBKUKULZUJZCVFUJZVAVCUMOAHGUJZBHUJV
        GPRGHVFKBVFUQZNUNUOAIGUJZCIUJVHQTGIVFKCVJNUNUOFVFKBCVJLUPURAVEDVFUJZEVF
        UJZVBVDUMOAVIDHUJVLPSGHVFKDVJNUNUOAVKEIUJVMQUAGIVFKEVJNUNUOFVFKDEVJLUPU
        RUSUT $.
        $( [12-Jul-2014] $)
    $}

    $( Vectors belonging to disjoint subspaces are uniquely determined by their
       sum.  Analogous to ~ opth , this theorem shows a way of representing a
       pair of vectors. $)
    lssdisjb $p |- ( ph ->
        ( ( A P B ) = ( C P D ) <-> ( A = C /\ B = D ) ) ) $=
      ( co wceq wa clmod wcel adantr cin csn simpr lssdisj1 lssdisj2 jca oveq12
      ex impbid1 ) ABCFUCDEFUCUDZBDUDZCEUDZUEZAURVAAURUEZUSUTVBBCDEFGHIJKLMNAKU
      FUGUROUHZAHGUGURPUHZAIGUGURQUHZABHUGURRUHZADHUGURSUHZACIUGURTUHZAEIUGURUA
      UHZAHIUIJUJUDURUBUHZAURUKZULVBBCDEFGHIJKLMNVCVDVEVFVGVHVIVJVKUMUNUPBDCEFU
      OUQ $.
      $( [5-Jul-2014] $)
  $}

  ${
    $d x B $.  $d x F $.  $d x G $.  $d x I $.  $d x K $.  $d x R $.  $d x S $.
    $d x ph $.  $d x T $.  $d x W $.  $d x Y $.
    prdmvscacl.y $e |- Y = ( S Xm_ R ) $.
    prdmvscacl.b $e |- B = ( Base ` Y ) $.
    prdmvscacl.t $e |- T = ( vsca ` Y ) $.
    prdmvscacl.k $e |- K = ( Base ` S ) $.
    prdmvscacl.s $e |- ( ph -> S e. Ring ) $.
    prdmvscacl.i $e |- ( ph -> I e. W ) $.
    prdmvscacl.r $e |- ( ph -> R : I --> LMod ) $.
    prdmvscacl.f $e |- ( ph -> F e. K ) $.
    prdmvscacl.g $e |- ( ph -> G e. B ) $.
    prdmvscacl.sr $e |- ( ( ph /\ x e. I ) -> ( Scalar ` ( R ` x ) ) = S ) $.
    $( Pointwise scalar multiplication is closed in products of modules.
       (Contributed by Stefan O'Rear, 10-Jan-2015.) $)
    prdmvscacl $p |- ( ph -> ( F T G ) e. B ) $=
      ( co cv cfv cvsca cmpt crg clmod wf wfn ffn syl prdmvscaval wcel cbs wral
      wa ffvelrn sylan adantr fveq2d syl6eqr eleqtrrd simpr prdmbasprj lmodvscl
      csca eqid syl3anc ralrimiva prdmbasmpt mpbird eqeltrd ) AGHFUCBIGBUDZHUEZ
      VODUEZUFUEZUCZUGZCABCDEFGHIJUHKLMNOPQRAIUIDUJZDIUKZSIUIDULUMZTUAUNAVTCUOV
      SVQUPUEZUOZBIUQAWEBIAVOIUOZURZVQUIUOZGVQVHUEZUPUEZUOVPWDUOWEAWAWFWHSIUIVO
      DUSUTWGGJWJAGJUOWFTVAWGWJEUPUEJWGWIEUPUBVBPVCVDWGCDEHIVOUHKLMNAEUHUOWFQVA
      AIKUOWFRVAAWBWFWCVAAHCUOWFUAVAAWFVEVFGVRWIWJWDVQVPWDVIWIVIVRVIWJVIVGVJVKA
      BCDEVSIUHKLMNQRWCVLVMVN $.
      $( [10-Jan-2015] $)
  $}

  ${
    $d y I $.  $d a b c y ph $.  $d y R $.  $d a b c y S $.  $d a b c y Y $.
    prdmlmodd.y $e |- Y = ( S Xm_ R ) $.
    prdmlmodd.s $e |- ( ph -> S e. Ring ) $.
    prdmlmodd.i $e |- ( ph -> I e. V ) $.
    prdmlmodd.rm $e |- ( ph -> R : I --> LMod ) $.
    prdmlmodd.rs $e |- ( ( ph /\ y e. I ) -> ( Scalar ` ( R ` y ) ) = S ) $.
    $( The product of a family of left modules is a left module.  (Contributed
       by Stefan O'Rear, 10-Jan-2015.) $)
    prdmlmodd $p |- ( ph -> Y e. LMod ) $=
      ( cfv crg wcel cvv co wa eqid adantr va vb vc cplusg cbs cvsca cmulr csca
      cur eqidd wceq clmod wf fex syl2anc prdmsca cgrp wss cv lmodgrp ssriv fss
      sylancl prdmgrpd elex syl simprl simprr adantlr prdmvscacl 3impb w3a cmpt
      ad2antrr wfn ffn simplr2 simplr3 simpr prdmplusgfval oveq2d ffvelrn sylan
      simplr1 fveq2d prdmbasprj lmodvsdi1 syl112anc prdmvscafval oveq12d eqcomd
      eleqtrrd 3eqtrd mpteq2dva simpr1 simpr2 simpr3 grpcl prdmvscaval 3adantr3
      syl3anc 3adantr2 prdmplusgval 3eqtr4d lmodvsdi2 syl121anc oveq1d 3eqtr2rd
      oveqd rngacl lmodvsass rngcl simplr lmodvs1 eqtr3d prdmbasfn dffn5v sylib
      rngidcl islmodd ) AUAUBUCGUDMZDUEMZDUDMZGUFMZDUGMZDUIMZDGUEMZGAYGUJAYAUJA
      DNOZCPOZDGUHMUKIAEULCUMZEFOZYIKJEULFCUNUOGCDNPHUPUOAYDUJAYBUJAYCUJAYEUJAY
      FUJIACDENFGHJIAYJULUQUREUQCUMKUAULUQUAUSZUTVAEULUQCVBVCVDZAYLYBOZUBUSZYGO
      ZYLYOYDQZYGOZAYNYPRZRBYGCDYDYLYOEYBPGHYGSZYDSZYBSZAYHYSITAEPOZYSAYKUUCJEF
      VEVFZTAYJYSKTAYNYPVGAYNYPVHABUSZEOZUUECMZUHMZDUKZYSLVIVJZVKAYNYPUCUSZYGOZ
      VLZRZBEYLUUEYOUUKYAQZMZUUGUFMZQZVMBEUUEYQMZUUEYLUUKYDQZMZUUGUDMZQZVMYLUUO
      YDQYQUUTYAQUUNBEUURUVCUUNUUFRZUURYLUUEYOMZUUEUUKMZUVBQZUUQQZYLUVEUUQQZYLU
      VFUUQQZUVBQZUVCUVDUUPUVGYLUUQUVDYGYACDYOUUKEUUENPGHYTAYHUUMUUFIVNZAUUCUUM
      UUFUUDVNZACEVOZUUMUUFAYJUVNKEULCVPVFZVNZYNYPUULAUUFVQZYNYPUULAUUFVRZYASZU
      UNUUFVSZVTWAUVDUUGULOZYLUUHUEMZOZUVEUUGUEMZOUVFUWDOZUVHUVKUKAUUFUWAUUMAYJ
      UUFUWAKEULUUECWBWCZVIUVDYLYBUWBYNYPUULAUUFWDZAUUFUWBYBUKZUUMAUUFRZUUHDUEL
      WEZVIWLUVDYGCDYOEUUENPGHYTUVLUVMUVPUVQUVTWFUVDYGCDUUKEUUENPGHYTUVLUVMUVPU
      VRUVTWFUVBYLUUQUUHUWBUWDUUGUVEUVFUWDSZUVBSZUUHSZUUQSZUWBSZWGWHUVDUVCUVKUV
      DUUSUVIUVAUVJUVBUVDYGCDYDYLYOEUUEYBNPGHYTUUAUUBUVLUVMUVPUWGUVQUVTWIUVDYGC
      DYDYLUUKEUUEYBNPGHYTUUAUUBUVLUVMUVPUWGUVRUVTWIWJWKWMWNUUNBYGCDYDYLUUOEYBN
      PGHYTUUAUUBAYHUUMITZAUUCUUMUUDTZAUVNUUMUVOTZAYNYPUULWOUUNGUQOZYPUULUUOYGO
      AUWSUUMYMTAYNYPUULWPAYNYPUULWQYGYAGYOUUKYTUVSWRXAWSUUNBYGYACDYQUUTENPGHYT
      UWPUWQUWRAYNYPYRUULUUJWTAYNUULUUTYGOZYPAYNUULRZRBYGCDYDYLUUKEYBPGHYTUUAUU
      BAYHUXAITAUUCUXAUUDTAYJUXAKTAYNUULVGAYNUULVHAUUFUUIUXALVIVJZXBUVSXCXDAYNY
      OYBOZUULVLZRZBEYLYOYCQZUVFUUQQZVMBEUVAUUEYOUUKYDQZMZUVBQZVMUXFUUKYDQUUTUX
      HYAQUXEBEUXGUXJUXEUUFRZUXJUVJYOUVFUUQQZUVBQZYLYOUUHUDMZQZUVFUUQQZUXGUXKUV
      AUVJUXIUXLUVBUXKYGCDYDYLUUKEUUEYBNPGHYTUUAUUBAYHUXDUUFIVNZAUUCUXDUUFUUDVN
      ZAUVNUXDUUFUVOVNZYNUXCUULAUUFWDZYNUXCUULAUUFVRZUXEUUFVSZWIUXKYGCDYDYOUUKE
      UUEYBNPGHYTUUAUUBUXQUXRUXSYNUXCUULAUUFVQZUYAUYBWIZWJUXKUWAUWCYOUWBOZUWEUX
      PUXMUKAUUFUWAUXDUWFVIZUXKYLYBUWBUXTAUUFUWHUXDUWJVIZWLZUXKYOYBUWBUYCUYGWLZ
      UXKYGCDUUKEUUENPGHYTUXQUXRUXSUYAUYBWFZUVBUXNYLYOUUQUUHUWBUWDUUGUVFUWKUWLU
      WMUWNUWOUXNSXEXFUXKUXOUXFUVFUUQUXKUXNYCYLYOUXKUUHDUDAUUFUUIUXDLVIZWEXIXGX
      HWNUXEBYGCDYDUXFUUKEYBNPGHYTUUAUUBAYHUXDITZAUUCUXDUUDTZAUVNUXDUVOTZUXEYHY
      NUXCUXFYBOUYLAYNUXCUULWOZAYNUXCUULWPZYBYCDYLYOUUBYCSXJXAAYNUXCUULWQZWSUXE
      BYGYACDUUTUXHENPGHYTUYLUYMUYNAYNUULUWTUXCUXBXBUXEBYGCDYDYOUUKEYBPGHYTUUAU
      UBUYLUYMAYJUXDKTUYPUYQUYKVJZUVSXCXDUXEBEYLYOYEQZUVFUUQQZVMBEYLUXIUUQQZVMU
      YSUUKYDQYLUXHYDQUXEBEUYTVUAUXKVUAYLUXLUUQQZYLYOUUHUGMZQZUVFUUQQZUYTUXKUXI
      UXLYLUUQUYDWAUXKUWAUWCUYEUWEVUEVUBUKUYFUYHUYIUYJYLYOUUQVUCUUHUWBUWDUUGUVF
      UWKUWMUWNUWOVUCSXKXFUXKVUDUYSUVFUUQUXKVUCYEYLYOUXKUUHDUGUYKWEXIXGXHWNUXEB
      YGCDYDUYSUUKEYBNPGHYTUUAUUBUYLUYMUYNUXEYHYNUXCUYSYBOUYLUYOUYPYBDYEYLYOUUB
      YESXLXAUYQWSUXEBYGCDYDYLUXHEYBNPGHYTUUAUUBUYLUYMUYNUYOUYRWSXDAYLYGOZRZBEY
      FUUEYLMZUUQQZVMBEVUHVMZYFYLYDQYLVUGBEVUIVUHVUGUUFRZUUHUIMZVUHUUQQZVUIVUHV
      UKVULYFVUHUUQAUUFVULYFUKVUFUWIUUHDUILWEVIXGVUKUWAVUHUWDOVUMVUHUKAUUFUWAVU
      FUWFVIVUKYGCDYLEUUENPGHYTAYHVUFUUFIVNAUUCVUFUUFUUDVNAUVNVUFUUFUVOVNAVUFUU
      FXMVUGUUFVSWFUUQVULUUHUWDUUGVUHUWKUWMUWNVULSXNUOXOWNVUGBYGCDYDYFYLEYBNPGH
      YTUUAUUBAYHVUFITZAUUCVUFUUDTZAUVNVUFUVOTZAYFYBOZVUFAYHVUQIYBDYFUUBYFSXSVF
      TAVUFVSZWSVUGYLEVOYLVUJUKVUGYGCDYLENPGHYTVUNVUOVUPVURXPBEYLXQXRXDXT $.
      $( [10-Jan-2015] $)
  $}

  ${
    $d x I $.  $d x R $.  $d x V $.
    pwslmod.y $e |- Y = ( R ^s I ) $.
    $( The product of a family of left modules is a left module.  (Contributed
       by Mario Carneiro, 11-Jan-2015.) $)
    pwslmod $p |- ( ( R e. LMod /\ I e. V ) -> Y e. LMod ) $=
      ( vx clmod wcel wa csca cfv csn cxp cprdm co eqid pwsval crg adantr wf cv
      lmodrng simpr wss fconstg snssi fss syl2anc wceq fvconst2g adantlr fveq2d
      prdmlmodd eqeltrd ) AGHZBCHZIZDAJKZBALZMZNOZGAURBGCDEURPZQUQFUTURBCVAVAPU
      OURRHUPURAVBUBSUOUPUCUOBGUTTZUPUOBUSUTTUSGUDVCBAGUEAGUFBUSGUTUGUHSUQFUAZB
      HZIVDUTKZAJUOVEVFAUIUPBAVDGUJUKULUMUN $.
      $( [11-Jan-2015] $)
  $}

  $c LSpan $.

  $( Extend class notation with span of a set of vectors. $)
  clspn $a class LSpan $.

  ${
    $d w s t $.
    $( Define span of a set of vectors of a left module or left vector
       space. $)
    df-lsp $a |- LSpan = ( w e. _V |-> ( s e. ~P ( Base ` w ) |->
         |^| { t e. ( LSubSp ` w ) | s C_ t } ) ) $.
  $}

  ${
    $d p s t w S $.  $d s t U $.  $d p s t w V $.  $d s w W $.
    lspval.v $e |- V = ( Base ` W ) $.
    lspval.s $e |- S = ( LSubSp ` W ) $.
    lspval.n $e |- N = ( LSpan ` W ) $.
    $( The span function for a left vector space (or a left module).
       ( ~ df-span analog.) $)
    lspfval $p |- ( W e. X
      -> N = ( s e. ~P V |-> |^| { t e. S | s C_ t } ) ) $=
      ( vw wcel clspn cfv cpw cv cvv wceq cbs clss crab cint cmpt fveq2 syl6eqr
      wss elex pweqd rabeq syl inteqd mpteq12dv df-lsp fvex eqeltri mptex fvmpt
      pwex syl5eq ) EFLZCEMNZGDOZGPAPUFZABUAZUBZUCZJUTEQLVAVFREFUGKEGKPZSNZOZVC
      AVGTNZUAZUBZUCVFQMVGERZGVIVLVBVEVMVHDVMVHESNZDVGESUDHUEUHVMVKVDVMVJBRVKVD
      RVMVJETNBVGETUDIUEVCAVJBUIUJUKULKAGUMGVBVEDDVNQHESUNUOURUPUQUJUS $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( The span operator on a left module maps subsets to subsets.
       (Contributed by Stefan O'Rear, 12-Dec-2014.) $)
    lspf $p |- ( W e. LMod -> N : ~P V --> S ) $=
      ( vs vp clmod wcel cpw wf cv wss crab cint cmpt wa c0 wne ssrab2 a1i wrex
      simpl lss1 elpwi sseq2 rcla4ev syl2an rabn0 sylibr lssintcl syl3anc fmptd
      eqid lspfval feq1d mpbird ) DJKZCLZABMVAAHVAHNZINZOZIAPZQZRZMUTHVAVFAVGUT
      VBVAKZSZUTVEAOZVETUAZVFAKUTVHUEVJVIVDIAUBUCVIVDIAUDZVKUTCAKVBCOZVLVHACDEF
      UFVBCUGVDVMICAVCCVBUHUIUJVDIAUKULVEADFUMUNVGUPUOUTVAABVGIABCDJHEFGUQURUS
      $.
      $( [12-Dec-2014] $)

    $( The span of a set of vectors (in a left module).  ( ~ spanval
       analog.) $)
    lspval $p |- ( ( W e. LMod /\ U C_ V )
       -> ( N ` U ) = |^| { t e. S | U C_ t } ) $=
      ( vs clmod wcel wss cfv cv crab cint wceq cvv cbs cpw cmpt lspfval fveq1d
      wa adantr simpr fvex eqeltri elpw2 wrex lss1 sseq2 rcla4ev sylan intexrab
      sylibr sylib sseq1 rabbidv inteqd eqid fvmptg syl2anc eqtrd ) FKLZCEMZUEZ
      CDNZCJEUAZJOZAOZMZABPZQZUBZNZCVLMZABPZQZVFVIVQRVGVFCDVPABDEFKJGHIUCUDUFVH
      CVJLZVTSLZVQVTRVHVGWAVFVGUGCEEFTNSGFTUHUIUJUQVHVRABUKZWBVFEBLVGWCBEFGHULV
      RVGAEBVLECUMUNUOVRABUPURJCVOVTVJSVPVKCRZVNVSWDVMVRABVKCVLUSUTVAVPVBVCVDVE
      $.
      $( [19-Jun-2014] $) $( [8-Dec-2013] $)

    $( The span of a set of vectors is a subspace.  ( ~ spancl analog.) $)
    lspcl $p |- ( ( W e. LMod /\ U C_ V ) -> ( N ` U ) e. S ) $=
      ( clmod wcel cpw wf cfv wss lspf cbs cvv fvex eqeltri elpw2 biimpri
      ffvelrn syl2an ) EIJDKZACLBUDJZBCMAJBDNZACDEFGHOUEUFBDDEPMQFEPRSTUAUDABCU
      BUC $.
      $( [19-Jun-2014] $) $( [9-Dec-2013] $)

    $( The span of a singleton is a subspace (frequently used special case of
       ~ lspcl ). $)
    lspsncl $p |- ( ( W e. LMod /\ X e. V ) -> ( N ` { X } ) e. S ) $=
      ( wcel clmod csn wss cfv snssi lspcl sylan2 ) ECIDJIEKZCLQBMAIECNAQBCDFGH
      OP $.
      $( [17-Jul-2014] $)
  $}

  ${
    $d t S $.  $d t U $.  $d t W $.
    lspid.s $e |- S = ( LSubSp ` W ) $.
    lspid.n $e |- N = ( LSpan ` W ) $.
    $( The span of a subspace is itself.  ( ~ spanid analog.) $)
    lspid $p |- ( ( W e. LMod /\ U e. S ) -> ( N ` U ) = U ) $=
      ( vt clmod wcel wa cfv cv wss crab cint cbs wceq eqid lssss lspval sylan2
      simpr intmin syl eqtrd ) DHIZBAIZJZBCKZBGLMGANOZBUGUFBDPKZMUIUJQABUKDUKRZ
      ESGABCUKDULEFTUAUHUGUJBQUFUGUBGBAUCUDUE $.
      $( [19-Jun-2014] $) $( [15-Dec-2013] $)
  $}

  ${
    $d t T $.  $d t U $.  $d t V $.  $d t W $.
    lspss.v $e |- V = ( Base ` W ) $.
    lspss.n $e |- N = ( LSpan ` W ) $.
    $( A span is a set of vectors. $)
    lspssv $p |- ( ( W e. LMod /\ U C_ V ) -> ( N ` U ) C_ V ) $=
      ( clmod wcel wss wa cfv clss eqid lspcl lssss syl ) DGHACIJABKZDLKZHQCIRA
      BCDERMZFNRQCDESOP $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( Span preserves subset ordering.  ( ~ spanss analog.) $)
    lspss $p |- ( ( W e. LMod /\ U C_ V /\ T C_ U )
          -> ( N ` T ) C_ ( N ` U ) ) $=
      ( vt clmod wcel wss w3a cv clss cfv crab cint syl wceq lspval wa wi sstr2
      simpl3 ss2rabdv intss simp1 simp3 simp2 sstrd syl2anc 3adant3 3sstr4d
      eqid ) EIJZBDKZABKZLZAHMZKZHENOZPZQZBUSKZHVAPZQZACOZBCOZURVEVBKVCVFKURVDU
      THVAURUSVAJZUAUQVDUTUBUOUPUQVIUDABUSUCRUEVEVBUFRURUOADKVGVCSUOUPUQUGURABD
      UOUPUQUHUOUPUQUIUJHVAACDEFVAUNZGTUKUOUPVHVFSUQHVABCDEFVJGTULUM $.
      $( [19-Jun-2014] $) $( [11-Dec-2013] $)

    $( A set of vectors is a subset of its span.  ( ~ spanss2 analog.) $)
    lspssid $p |- ( ( W e. LMod /\ U C_ V ) -> U C_ ( N ` U ) ) $=
      ( vt clmod wcel wss wa clss cfv crab cint ssintub eqid lspval syl5sseqr
      cv ) DHIACJKAGTJGDLMZNOAABMGAUAPGUAABCDEUAQFRS $.
      $( [19-Jun-2014] $) $( [6-Feb-2014] $)

    $( The span of a set of vectors is idempotent. $)
    lspidm $p |- ( ( W e. LMod /\ U C_ V )
                  -> ( N ` ( N ` U ) ) = ( N ` U ) ) $=
      ( clmod wcel wss cfv clss wceq eqid lspcl lspid syldan ) DGHACIABJZDKJZHQ
      BJQLRABCDERMZFNRQBDSFOP $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( The span of union is the span of the union of spans. $)
    lspun $p |- ( ( W e. LMod /\ T C_ V /\ U C_ V )
       -> ( N ` ( T u. U ) ) = ( N ` ( ( N ` T ) u. ( N ` U ) ) ) ) $=
      ( clmod wcel wss w3a cun cfv simp1 unssd lspss syl3anc syl2anc lspssid
      a1i simp2 simp3 ssun1 ssun2 lspssv sstrd unss12 wceq lspidm sseqtrd eqssd
      ) EHIZADJZBDJZKZABLZCMZACMZBCMZLZCMZUOULUTDJUPUTJZUQVAJULUMUNNZUOUTUQDUOU
      RUSUQUOULUPDJZAUPJZURUQJVCUOABDULUMUNUAZULUMUNUBZOZVEUOABUCTAUPCDEFGPQUOU
      LVDBUPJZUSUQJVCVHVIUOBAUDTBUPCDEFGPQOZUOULVDUQDJZVCVHUPCDEFGUERZUFUOAURJZ
      BUSJZVBUOULUMVMVCVFACDEFGSRUOULUNVNVCVGBCDEFGSRAURBUSUGRUPUTCDEFGPQUOVAUQ
      CMZUQUOULVKUTUQJVAVOJVCVLVJUTUQCDEFGPQUOULVDVOUQUHVCVHUPCDEFGUIRUJUK $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)
  $}

  ${
    $d t S $.  $d t U $.  $d t W $.
    lspssp.s $e |- S = ( LSubSp ` W ) $.
    lspssp.n $e |- N = ( LSpan ` W ) $.
    $( If a set of vectors is a subset of a subspace, then the span of those
       vectors is also contained in the subspace.  (Contributed by Mario
       Carneiro, 4-Sep-2014.) $)
    lspssp $p |- ( ( W e. LMod /\ U e. S /\ T C_ U ) -> ( N ` T ) C_ U ) $=
      ( clmod wcel wss w3a cfv simp1 eqid lssss 3ad2ant2 simp3 lspss syl3anc
      cbs wceq lspid 3adant3 sseqtrd ) EHIZCAIZBCJZKZBDLZCDLZCUHUECETLZJZUGUIUJ
      JUEUFUGMUFUEULUGACUKEUKNZFOPUEUFUGQBCDUKEUMGRSUEUFUJCUAUGACDEFGUBUCUD $.
      $( [4-Sep-2014] $)
  $}

  ${
    lspsnss.s $e |- S = ( LSubSp ` W ) $.
    lspsnss.n $e |- N = ( LSpan ` W ) $.
    $( The span of the singleton of a subspace member is included in the
       subspace.  ( ~ spansnss analog.) $)
    lspsnss $p |- ( ( W e. LMod /\ U e. S /\ X e. U )
            -> ( N ` { X } ) C_ U ) $=
      ( wcel clmod csn wss cfv snssi lspssp syl3an3 ) EBHDIHBAHEJZBKPCLBKEBMAPB
      CDFGNO $.
      $( [4-Sep-2014] $) $( [9-Apr-2014] $)

    lspsnel3.w $e |- ( ph -> W e. LMod ) $.
    lspsnel3.u $e |- ( ph -> U e. S ) $.
    lspsnel3.x $e |- ( ph -> X e. U ) $.
    lspsnel3.y $e |- ( ph -> Y e. ( N ` { X } ) ) $.
    $( A member of the span of the singleton of a vector is a member of a
       subspace containing the vector.  ( ~ elspansn3 analog.) $)
    lspsnel3 $p |- ( ph -> Y e. U ) $=
      ( csn cfv clmod wcel wss lspsnss syl3anc sseldd ) AFNDOZCGAEPQCBQFCQUBCRJ
      KLBCDEFHISTMUA $.
      $( [4-Jul-2014] $)
  $}

  ${
    lspprss.s $e |- S = ( LSubSp ` W ) $.
    lspprss.n $e |- N = ( LSpan ` W ) $.
    lspprss.w $e |- ( ph -> W e. LMod ) $.
    lspprss.u $e |- ( ph -> U e. S ) $.
    lspprss.x $e |- ( ph -> X e. U ) $.
    lspprss.y $e |- ( ph -> Y e. U ) $.
    $( The span of a pair of vectors in a subspace belongs to the subspace. $)
    lspprss $p |- ( ph -> ( N ` { X , Y } ) C_ U ) $=
      ( clmod wcel cpr wss cfv wa jca wb prssg syl mpbid lspssp syl3anc ) AENOC
      BOFGPZCQZUGDRCQJKAFCOZGCOZSZUHAUIUJLMTZAUKUKUHUAULFGCCCUBUCUDBUGCDEHIUEUF
      $.
      $( [12-Jan-2015] $)
  $}

  ${
    lspsnid.v $e |- V = ( Base ` W ) $.
    lspsnid.n $e |- N = ( LSpan ` W ) $.
    $( A vector belongs to the span of its singleton.  ( ~ spansnid analog.) $)
    lspsnid $p |- ( ( W e. LMod /\ X e. V ) -> X e. ( N ` { X } ) ) $=
      ( clmod wcel wa csn cfv wss snssi lspssid sylan2 wb snssg adantl mpbird )
      CGHZDBHZIDDJZAKZHZUBUCLZUATUBBLUEDBMUBABCEFNOUAUDUEPTDUCBQRS $.
      $( [19-Jun-2014] $) $( [9-Apr-2014] $)
  $}

  ${
    lspsnel5.v $e |- V = ( Base ` W ) $.
    lspsnel5.s $e |- S = ( LSubSp ` W ) $.
    lspsnel5.n $e |- N = ( LSpan ` W ) $.
    lspsnel5.w $e |- ( ph -> W e. LMod ) $.
    lspsnel5.a $e |- ( ph -> U e. S ) $.
    $( Relationship between a vector and the 1-dim (or 0-dim) subspace it
       generates. $)
    lspsnel6 $p |- ( ph -> ( X e. U <-> ( X e. V /\ ( N ` { X } ) C_ U ) ) ) $=
      ( wcel csn cfv wss wa lssel sylan adantr clmod simpr lspsnss syl3anc ssel
      jca lspsnid syl5com impr impbida ) AGCMZGEMZGNDOZCPZQAUKQZULUNACBMZUKULLB
      CEFGHIRSUOFUAMZUPUKUNAUQUKKTAUPUKLTAUKUBBCDFGIJUCUDUFAULUNUKAULQGUMMZUNUK
      AUQULURKDEFGHJUGSUMCGUEUHUIUJ $.
      $( [8-Jan-2015] $) $( [8-Aug-2014] $)

    lspsnel5.x $e |- ( ph -> X e. V ) $.
    $( Relationship between a vector and the 1-dim (or 0-dim) subspace it
       generates. $)
    lspsnel5 $p |- ( ph -> ( X e. U <-> ( N ` { X } ) C_ U ) ) $=
      ( wcel csn cfv wss wa lspsnel6 biantrurd bitr4d ) AGCNGENZGODPCQZRUCABCDE
      FGHIJKLSAUBUCMTUA $.
      $( [8-Aug-2014] $)
  $}

  ${
    $d x y N $.  $d x y U $.  $d x y ph $.
    lssats2.s $e |- S = ( LSubSp ` W ) $.
    lssats2.n $e |- N = ( LSpan ` W ) $.
    lssats2.w $e |- ( ph -> W e. LMod ) $.
    lssats2.u $e |- ( ph -> U e. S ) $.
    $( A way to express atomisticity (a subspace is the union of its atoms). $)
    lssats2 $p |- ( ph -> U = U_ x e. U ( N ` { x } ) ) $=
      ( vy cv csn cfv ciun wcel wa simpr adantr syl2anc wrex clmod eqid lspsnid
      cbs lssel weq sneq fveq2d eleq2d rcla4ev ex wss lspsnss syl3anc rexlimdva
      sylan sseld impbid eliun syl6bbr eqrdv ) AKDBDBLZMZENZOZAKLZDPZVGVEPZBDUA
      ZVGVFPAVHVJAVHVJAVHQZVHVGVGMZENZPZVJAVHRVKFUBPZVGFUENZPZVNAVOVHISADCPZVHV
      QJCDVPFVGVPUCZGUFUQEVPFVGVSHUDTVIVNBVGDBKUGZVEVMVGVTVDVLEVCVGUHUIUJUKTULA
      VIVHBDAVCDPZQZVEDVGWBVOVRWAVEDUMAVOWAISAVRWAJSAWARCDEFVCGHUNUOURUPUSBVGDV
      EUTVAVB $.
      $( [3-Feb-2015] $)
  $}

  ${
    lspsnmul.v $e |- V = ( Base ` W ) $.
    lspsnmul.t $e |- T = ( vsca ` W ) $.
    lspsnmul.f $e |- F = ( Scalar ` W ) $.
    lspsnmul.k $e |- K = ( Base ` F ) $.
    lspsnmul.n $e |- N = ( LSpan ` W ) $.
    lspsnmul.w $e |- ( ph -> W e. LMod ) $.
    lspsnmul.a $e |- ( ph -> A e. K ) $.
    lspsnmul.x $e |- ( ph -> X e. V ) $.
    $( A scalar product with a vector belongs to the span of its singleton.
       ( ~ spansnmul analog.) $)
    lspsnmul $p |- ( ph -> ( A T X ) e. ( N ` { X } ) ) $=
      ( wcel cfv syl2anc clmod csn clss eqid lspsncl lspsnid lssvscl syl22anc
      co ) AHUARZIUBFSZHUCSZRZBERIUKRZBICUIUKROAUJIGRZUMOQULFGHIJULUDZNUETPAUJU
      OUNOQFGHIJNUFTEULCUKDHBILKMUPUGUH $.
      $( [2-Jul-2014] $)
  $}

  ${
    $d k F $.  $d k v K $.  $d k v N $.  $d k v T $.  $d k v U $.  $d k v V $.
    $d k R $.  $d k v W $.  $d k v X $.
    lspsn.f $e |- F = ( Scalar ` W ) $.
    lspsn.k $e |- K = ( Base ` F ) $.
    lspsn.v $e |- V = ( Base ` W ) $.
    lspsn.t $e |- T = ( vsca ` W ) $.
    lspsn.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton of a vector.  (The proof was shortened by Mario
       Carneiro, 19-Jun-2014.) $)
    lspsn $p |- ( ( W e. LMod /\ X e. V )
        -> ( N ` { X } ) = { v | E. k e. K v = ( k T X ) } ) $=
      ( wcel wa cfv wceq wss adantr clmod csn cv wrex cab simpl clss eqid lss1d
      co lssss syl lmod1cl lmodvs1 eqcomd oveq1 eqeq2d rcla4ev syl2anc wb eqeq1
      cur rexbidv elabg adantl mpbird snssd lspss syl3anc lspid sseqtrd lspsncl
      syldan wi simpr lspsnid lssvscl syl22anc eleq1a rexlimdva abssdv eqssd )
      HUAOZIGOZPZIUBZFQZAUCZCUCZIBUJZRZCEUDZAUEZWEWGWMFQZWMWEWCWMGSZWFWMSWGWNSW
      CWDUFZWEWMHUGQZOZWOAWQBCDEGHILJMKWQUHZUIZWQWMGHLWSUKULWEIWMWEIWMOZIWJRZCE
      UDZWEDVBQZEOZIXDIBUJZRZXCWCXEWDXDDEHJKXDUHZUMTWEXFIBXDDGHILJMXHUNUOXBXGCX
      DEWIXDRWJXFIWIXDIBUPUQURUSWDXAXCUTWCWLXCAIGWHIRWKXBCEWHIWJVAVCVDVEVFVGWFW
      MFGHLNVHVIWCWDWRWNWMRWTWQWMFHWSNVJVMVKWEWLAWGWEWKWHWGOZCEWEWIEOZPZWJWGOZW
      KXIVNXKWCWGWQOZXJIWGOZXLWEWCXJWPTWEXMXJWQFGHILWSNVLTWEXJVOWEXNXJFGHILNVPT
      EWQBWGDHWIIJMKWSVQVRWJWGWHVSULVTWAWB $.
      $( [19-Jun-2014] $) $( [14-Jan-2014] $)

    $( Member of span of the singleton of a vector.  ( ~ elspansn analog.) $)
    lspsnel $p |- ( ( W e. LMod /\ X e. V )
       -> ( U e. ( N ` { X } ) <-> E. k e. K U = ( k T X ) ) ) $=
      ( vv wcel cv wceq wrex cvv clmod wa csn cfv co lspsn eleq2d ovex syl6eqel
      cab id rexlimivw eqeq1 rexbidv elab3 syl6bb ) HUAPIGPUBZBIUCFUDZPBOQZCQZI
      AUEZRZCESZOUJZPBVARZCESZUQURVDBOACDEFGHIJKLMNUFUGVCVFOBVEBTPCEVEBVATVEUKU
      TIAUHUIULUSBRVBVECEUSBVAUMUNUOUP $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( The scalar product of a vector belongs to the span of its singleton.
       ( ~ spansnmul analog.)  TO DO:  REPLACE WITH ~ lspsnmul ? $)
    lspsneli $p |- ( ( W e. LMod /\ R e. K /\ X e. V )
       -> ( R T X ) e. ( N ` { X } ) ) $=
      ( clmod wcel w3a simp1 simp2 simp3 lspsnmul ) GNOZADOZHFOZPABCDEFGHKLIJMU
      AUBUCQUAUBUCRUAUBUCST $.
      $( [19-Jun-2014] $) $( [22-Feb-2014] $)

    $( Span of a scalar product of a singleton.  (The proof was shortened by
       Mario Carneiro, 19-Jun-2014.) $)
    lspsnvsi $p |- ( ( W e. LMod /\ R e. K /\ X e. V )
        -> ( N ` { ( R T X ) } ) C_ ( N ` { X } ) ) $=
      ( clmod wcel w3a csn cfv clss wss co simp1 simp3 snssd eqid lspcl syl2anc
      lspsneli lspsnss syl3anc ) GNOZADOZHFOZPZUKHQZERZGSRZOZAHBUAZUPOUSQERUPTU
      KULUMUBZUNUKUOFTURUTUNHFUKULUMUCUDUQUOEFGKUQUEZMUFUGABCDEFGHIJKLMUHUQUPEG
      USVAMUIUJ $.
      $( [4-Sep-2014] $) $( [23-Apr-2014] $)
  $}

  ${
    lspsnneg.v $e |- V = ( Base ` W ) $.
    lspsnneg.m $e |- M = ( invg ` W ) $.
    lspsnneg.n $e |- N = ( LSpan ` W ) $.
    $( Negation does not change the span of a singleton.  (The proof was
       shortened by Mario Carneiro, 19-Jun-2014.) $)
    lspsnneg $p |- ( ( W e. LMod /\ X e. V )
        -> ( N ` { ( M ` X ) } ) = ( N ` { X } ) ) $=
      ( wcel cfv csn co eqid lmodvneg1 sneqd fveq2d wss cgrp lspsnvsi syl3anc
      clmod wa csca cur cminusg cvsca cbs simpl lmodfgrp lmod1cl syl2anc adantr
      grpinvcl simpr wceq lmodvnegcl syldan lmodgrp grpinvinv sylan eqtrd eqssd
      eqsstr3d ) DUAIZECIZUBZEAJZKZBJZEKZBJZVFVIDUCJZUDJZVLUEJZJZEDUFJZLZKZBJZV
      KVFVRVHBVFVQVGVPVMVLVNACDEFGVLMZVPMZVMMZVNMZNOPVFVDVOVLUGJZIZVEVSVKQVDVEU
      HZVDWEVEVDVLRIVMWDIWEVLDVTUIVMVLWDDVTWDMZWBUJWDVLVNVMWGWCUMUKULZVDVEUNVOV
      PVLWDBCDEVTWGFWAHSTVCVFVKVOVGVPLZKZBJZVIVFWJVJBVFWIEVFWIVGAJZEVDVEVGCIZWI
      WLUOACDEFGUPZVPVMVLVNACDVGFGVTWAWBWCNUQVDDRIVEWLEUODURCDAEFGUSUTVAOPVFVDW
      EWMWKVIQWFWHWNVOVPVLWDBCDVGVTWGFWAHSTVCVB $.
      $( [19-Jun-2014] $) $( [24-Apr-2014] $)
  $}

  ${
    lspsn0.z $e |- Z = ( 0g ` W ) $.
    lspsn0.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton of the zero vector.  ( ~ spansn0 analog.)  (The
       proof was shortened by Mario Carneiro, 19-Jun-2014.) $)
    lspsn0 $p |- ( W e. LMod -> ( N ` { Z } ) = { Z } ) $=
      ( clmod wcel csn clss cfv wceq eqid lsssn0 lspid mpdan ) BFGCHZBIJZGPAJPK
      QBCDQLZMQPABRENO $.
      $( [19-Jun-2014] $) $( [15-Jan-2014] $)

    $( Span of the empty set.  (Contributed by Mario Carneiro, 4-Sep-2014.) $)
    lsp0 $p |- ( W e. LMod -> ( N ` (/) ) = { Z } ) $=
      ( clmod wcel c0 cfv csn clss wss lsssn0 0ss lspssp mp3an3 mpdan cbs lspcl
      eqid mpan2 lss0ss eqssd ) BFGZHAIZCJZUDUFBKIZGZUEUFLZUGBCDUGTZMUDUHHUFLUI
      UFNUGHUFABUJEOPQUDUEUGGZUFUELUDHBRIZLUKULNUGHAULBULTUJESUAUGBUECDUJUBQUC
      $.
      $( [5-Sep-2014] $)
  $}

  ${
    lspsneq0.v $e |- V = ( Base ` W ) $.
    lspsneq0.z $e |- Z = ( 0g ` W ) $.
    lspsneq0.n $e |- N = ( LSpan ` W ) $.
    $( Span of the singleton is the zero subspace iff the vector is zero. $)
    lspsneq0 $p |- ( ( W e. LMod /\ X e. V )
         -> ( ( N ` { X } ) = { Z } <-> X = Z ) ) $=
      ( clmod wcel wa csn cfv wceq lspsnid eleq2 syl5ibcom elsni syl6 lspsn0
      adantr sneq fveq2d eqeq1d syl5ibrcom impbid ) CIJZDBJZKZDLZAMZELZNZDENZUI
      UMDULJZUNUIDUKJUMUOABCDFHOUKULDPQDERSUIUMUNULAMZULNZUGUQUHACEGHTUAUNUKUPU
      LUNUJULADEUBUCUDUEUF $.
      $( [19-Jun-2014] $) $( [27-Apr-2014] $)
  $}

  ${
    lsslsp.x $e |- X = ( W |`s U ) $.
    lsslsp.m $e |- M = ( LSpan ` W ) $.
    lsslsp.n $e |- N = ( LSpan ` X ) $.
    lsslsp.l $e |- L = ( LSubSp ` W ) $.
    $( Spans in submodules correspond to spans in the containing module.
       (Contributed by Stefan O'Rear, 12-Dec-2014.) $)
    lsslsp $p |- ( ( W e. LMod /\ U e. L /\ G C_ U ) ->
      ( M ` G ) = ( N ` G ) ) $=
      ( clmod wcel wss cfv wa 3adant3 eqid syl2anc lspssp w3a simp1 cbs lsslmod
      clss simp3 wceq simp2 lssss ressbas2 sseqtrd lspcl wb lsslss mpbid simpld
      syl lspssid syl3anc sstrd mpbir2and eqssd ) FLMZACMZBANZUAZBDOZBEOZVFVCVH
      CMZBVHNZVGVHNVCVDVEUBZVFVIVHANZVFVHGUEOZMZVIVLPZVFGLMZBGUCOZNZVNVCVDVPVEC
      AFGHKUDQZVFBAVQVCVDVEUFZVFAFUCOZNZAVQUGVFVDWBVCVDVEUHCAWAFWARZKUIUQZAWAGF
      HWCUJUQUKZVMBEVQGVQRZVMRZJULSVCVDVNVOUMVECVMAVHFGHKWGUNQUOUPVFVPVRVJVSWEB
      EVQGWFJURSCBVHDFKITUSVFVPVGVMMZBVGNZVHVGNVSVFWHVGCMZVGANZVFVCBWANZWJVKVFB
      AWAVTWDUTZCBDWAFWCKIULSCBADFKITVCVDWHWJWKPUMVECVMAVGFGHKWGUNQVAVFVCWLWIVK
      WMBDWAFWCIURSVMBVGEGWGJTUSVB $.
      $( [12-Dec-2014] $)
  $}

  ${
    $d a b s t x y z K $.  $d a b s t x y z L $.  $d a b s x y z ph $.
    $d a b x y z B $.  $d a b x y z P $.
    lsspropd.1 $e |- ( ph -> B = ( Base ` K ) ) $.
    lsspropd.2 $e |- ( ph -> B = ( Base ` L ) ) $.
    lsspropd.3 $e |- ( ( ph /\ ( x e. B /\ y e. B ) ) ->
      ( x ( +g ` K ) y ) = ( x ( +g ` L ) y ) ) $.
    lsspropd.4 $e |- ( ph -> F = ( Scalar ` K ) ) $.
    lsspropd.5 $e |- ( ph -> F = ( Scalar ` L ) ) $.
    lsspropd.6 $e |- P = ( Base ` F ) $.
    lsspropd.7 $e |- ( ( ph /\ ( x e. P /\ y e. B ) ) ->
      ( x ( vsca ` K ) y ) = ( x ( vsca ` L ) y ) ) $.
    lsspropd.8 $e |- ( ph -> K e. LMod ) $.
    $( If two structures have the same components (properties), they have the
       same subspace structure.  (Contributed by Mario Carneiro,
       9-Feb-2015.) $)
    lsspropd $p |- ( ph -> ( LSubSp ` K ) = ( LSubSp ` L ) ) $=
      ( vz cfv wcel eqid vs va vb clss cv cbs wss c0 wne cvsca cplusg wral csca
      co w3a wa wb simpll clmod syl simprl fveq2d syl5eq eleqtrd simplr simprrl
      sseldd lmodvscl syl3anc ad2antrr eleqtrrd simprrr proplem syl12anc oveq1d
      wceq eqtrd eleq1d anassrs 2ralbidva ralbidva anbi2d 3anass 3bitr4g sseq2d
      pm5.32da raleqdv 3anbi13d 3bitr3d islss eqrdv ) AUAGUDRZHUDRZAUAUEZGUFRZU
      GZWNUHUIZQUEZUBUEZGUJRZUNZUCUEZGUKRZUNZWNSZUCWNULUBWNULZQGUMRZUFRZULZUOZW
      NHUFRZUGZWQWRWSHUJRZUNZXBHUKRZUNZWNSZUCWNULUBWNULZQHUMRZUFRZULZUOZWNWLSWN
      WMSAWNDUGZWQXFQEULZUOZYCWQXRQEULZUOZXJYBAYCWQYDUPZUPYCWQYFUPZUPYEYGAYCYHY
      IAYCUPZYDYFWQYJXFXRQEYJWRESZUPXEXQUBUCWNWNYJYKWSWNSZXBWNSZUPZXEXQUQYJYKYN
      UPZUPZXDXPWNYPXDXAXBXOUNZXPYPAXADSXBDSXDYQVPAYCYOURZYPXAWODYPGUSSZWRXHSWS
      WOSXAWOSYPAYSYRPUTYPWREXHYJYKYNVAZYPAEXHVPYRAEFUFRZXHNAFXGUFLVBVCZUTVDYPW
      SDWOYPWNDWSAYCYOVEZYJYKYLYMVFVGZYPADWOVPZYRIUTVDWRWTXGXHWOGWSWOTZXGTZWTTZ
      XHTZVHVIAUUEYCYOIVJVKYPWNDXBUUCYJYKYLYMVLVGABCDDXCXOXAXBKVMVNYPXAXNXBXOYP
      AYKWSDSXAXNVPYRYTUUDABCEDWTXMWRWSOVMVNVOVQVRVSVTWAWBWFYCWQYDWCYCWQYFWCWDA
      YCWPYDXIWQADWOWNIWEAXFQEXHUUBWGWHAYCXLYFYAWQADXKWNJWEAXRQEXTAEUUAXTNAFXSU
      FMVBVCWGWHWIQXHXCWLWTWNXGWOGUBUCUUGUUIUUFXCTUUHWLTWJQXTXOWMXMWNXSXKHUBUCX
      STXTTXKTXOTXMTWMTWJWDWK $.
      $( [9-Feb-2015] $)

    $( If two structures have the same components (properties), they have the
       same span function.  (Contributed by Mario Carneiro, 9-Feb-2015.) $)
    lsppropd $p |- ( ph -> ( LSpan ` K ) = ( LSpan ` L ) ) $=
      ( vs vt cfv eqid cbs cpw cv wss clss crab cint cmpt clspn eqtr3d lsspropd
      pweqd wceq rabeq syl mpteq12dv clmod wcel lspfval lmodpropd mpbid 3eqtr4d
      inteqd ) AQGUASZUBZQUCRUCUDZRGUESZUFZUGZUHZQHUASZUBZVFRHUESZUFZUGZUHZGUIS
      ZHUISZAQVEVIVLVOAVDVKADVDVKIJUJULAVHVNAVGVMUMVHVNUMABCDEFGHIJKLMNOPUKVFRV
      GVMUNUOVCUPAGUQURZVQVJUMPRVGVQVDGUQQVDTVGTVQTUSUOAHUQURZVRVPUMAVSVTPABCDE
      FGHIJKLMNOUTVARVMVRVKHUQQVKTVMTVRTUSUOVB $.
      $( [9-Feb-2015] $)
  $}

