$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Functors
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  $( The class of all functors. $)
  $c Func $.

  $( The class of all isomorphisms. $)
  $c Isofunc $.

  $( Extend class notation with the class of all functors. $)
  cfunc $a class Func $.

  $( Extend class notation with the class of all isomorphisms. $)
  cifunc $a class Isofunc $.


  ${
    $d t u v f o p m n $.
    $( Function returning all the functors from a category ` t ` to a category
       ` u ` .  Intuitively a functor associates any morphism of ` t ` to a
       morphism of ` u ` , any object of ` t ` to an object of ` u ` , and
       respects the identity, the composition, the domain and the codomain.
       Here to capture the idea that a functor associates any object of ` t `
       to an object of ` u ` we write it associates any identity of ` t ` to an
       identity of ` u ` which simplifies the definition. $)
    df-func $a |- Func = { <. <. t , u >. , v >. |
      ( ( t e. Cat /\ u e. Cat ) /\
      v = { f | ( f : dom ( dom_ ` t ) --> dom ( dom_ ` u ) /\
      ( A. o e. dom ( id_ ` t )
      E. p e. dom ( id_ ` u ) ( f ` ( ( id_ ` t ) ` o ) ) =
           ( ( id_ ` u ) ` p ) /\
      ( A. m e. dom ( dom_ ` t )
        ( f ` ( ( id_ ` t ) ` ( ( dom_ ` t ) ` m ) ) ) =
           ( ( id_ ` u ) ` ( ( dom_ ` u ) ` ( f ` m ) ) ) /\
       A. m e. dom ( dom_ ` t )
        ( f ` ( ( id_ ` t ) ` ( ( cod_ ` t ) ` m ) ) ) =
           ( ( id_ ` u ) ` ( ( cod_ ` u ) ` ( f ` m ) ) ) ) /\
       A. m e. dom ( dom_ ` t ) A. n e. dom ( dom_ ` t )
        ( ( ( cod_ ` t ) ` n ) = ( ( dom_ ` t ) ` m ) ->
          ( f ` ( m ( o_ ` t ) n ) ) =
           ( ( f ` m ) ( o_ ` u ) ( f ` n ) ) ) ) ) } ) } $.
  $}

  ${
    $d C1 u v $.  $d C2 u v $.  $d D1 u v $.  $d D2 u v $.  $d I1 u v $.
    $d I2 u v $.  $d M1 f m t u v $.  $d M1 x $.  $d M2 f u v $.  $d M2 x $.
    $d O1 o u v $.  $d O2 p u v $.  $d Ro1 u v $.  $d Ro2 u v $.
    $d T f m n o p t u v $.  $d U f m n o p t u v $.
    isfuna.1 $e |- O1 = dom ( id_ ` T ) $.
    isfuna.2 $e |- M1 = dom ( dom_ ` T ) $.
    isfuna.3 $e |- D1 = ( dom_ ` T ) $.
    isfuna.4 $e |- C1 = ( cod_ ` T ) $.
    isfuna.5 $e |- I1 = ( id_ ` T ) $.
    isfuna.6 $e |- Ro1 = ( o_ ` T ) $.
    isfuna.7 $e |- O2 = dom ( id_ ` U ) $.
    isfuna.8 $e |- M2 = dom ( dom_ ` U ) $.
    isfuna.9 $e |- D2 = ( dom_ ` U ) $.
    isfuna.10 $e |- C2 = ( cod_ ` U ) $.
    isfuna.11 $e |- I2 = ( id_ ` U ) $.
    isfuna.12 $e |- Ro2 = ( o_ ` U ) $.
    $( The class of functors between the categories ` T ` and ` U ` . $)
    isfuna $p |- ( ( T e. Cat /\ U e. Cat ) -> ( Func ` <. T , U >. ) =
      { f | ( f : M1 --> M2 /\
       ( A. o e. O1 E. p e. O2 ( f ` ( I1 ` o ) ) = ( I2 ` p ) /\
        ( A. m e. M1 ( f ` ( I1 ` ( D1 ` m ) ) ) =
            ( I2 ` ( D2 ` ( f ` m ) ) ) /\
          A. m e. M1 ( f ` ( I1 ` ( C1 ` m ) ) ) =
            ( I2 ` ( C2 ` ( f ` m ) ) ) ) /\
          A. m e. M1 A. n e. M1 ( ( C1 ` n ) = ( D1 ` m ) ->
            ( f ` ( m Ro1 n ) ) = ( ( f ` m ) Ro2 ( f ` n ) ) ) ) ) } ) $=
      ( vx vt vu vv ccat wcel cv wf cfv wceq wrex wral wa co wi w3a cab cvv
      cop cfunc cmap wb cdom_ cdm fvex dmex eqeltri pm3.2i a1i elmapg syl
      anbi1d abbidv crab df-rab mapvalg ancoms mapex eqeltrd rabexg syl5eqelr
      eqeltrrd df-opr cid_ ccod_ co_ fveq2 dmeqd syl6eqr feq2d fveq1d fveq2d
      eqeq1d rexbidv raleqbidv fveq12d anbi12d eqeq12d opreqd imbi12d
      3anbi123d feq3 eqcomd rexeqbidv 3eqtrd eleq2d bicomd ralbidv2 eleq2i
      df-func oprabval2g syl5eqr mpd3an3 ) AUPUQZBUPUQZIKCURZUSZFURZLUTZYGUTZGU
      RZPUTZVAZGJVBZFHVCZDURZMUTZLUTZYGUTZYQYGUTZQUTZPUTZVAZDIVCZYQNUTZLUTZYGUT
      ZUUARUTZPUTZVAZDIVCZVDZEURZNUTZYRVAZYQUUNOVEZYGUTZUUAUUNYGUTZSVEZVAZVFZEI
      VCZDIVCZVGZVDZCVHZVIUQZABVJVKUTZUVGVAYEYFVDZYGKIVLVEZUQZUVEVDZCVHZUVGVIUV
      JUVMUVFCUVJUVLYHUVEUVJKVIUQZIVIUQZVDZUVLYHVMUVQUVJUVOUVPKBVNUTZVOZVIUGUVR
      BVNVPVQVRZIAVNUTZVOZVIUAUWAAVNVPVQVRZVSZVTKIYGVIVIWAWBWCWDUVJUVNUVECUVKWE
      ZVIUVECUVKWFUVJUVKVIUQUWEVIUQUVJUVKIKULURUSULVHZVIYFYEUVKUWFVAZYFYEVDZUVQ
      UWGUVQUWHUWDVTKIVIVIULWGWBWHUVJUVPUVOVDZUWFVIUQUWIUVJUVPUVOUWCUVTVSVTIKVI
      VIULWIWBWJUVECUVKVIWKWBWLWMYEYFUVHVGUVIABVKVEUVGABVKWNUMUNUOABUPUPUMURZVN
      UTZVOZUNURZVNUTZVOZYGUSZYIUWJWOUTZUTZYGUTZYLUWMWOUTZUTZVAZGUWTVOZVBZFUWQV
      OZVCZYQUWKUTZUWQUTZYGUTZUUAUWNUTZUWTUTZVAZDUWLVCZYQUWJWPUTZUTZUWQUTZYGUTZ
      UUAUWMWPUTZUTZUWTUTZVAZDUWLVCZVDZUUNUXNUTZUXGVAZYQUUNUWJWQUTZVEZYGUTZUUAU
      USUWMWQUTZVEZVAZVFZEUWLVCZDUWLVCZVGZVDZCVHUVGVKIUWOYGUSZYIAWOUTZUTZYGUTZU
      XAVAZGUXCVBZFUYRVOZVCZYQUWAUTZUYRUTZYGUTZUXKVAZDUWBVCZYQAWPUTZUTZUYRUTZYG
      UTZUXTVAZDUWBVCZVDZUUNVUJUTZVUEVAZYQUUNAWQUTZVEZYGUTZUYJVAZVFZEUWBVCZDUWB
      VCZVGZVDZCVHVIUWJAVAZUYPVVGCVVHUWPUYQUYOVVFVVHUWLIUWOYGVVHUWLUWBIVVHUWKUW
      AUWJAVNWRZWSZUAWTXAVVHUXFVUDUYCVUPUYNVVEVVHUXDVUBFUXEVUCVVHUWQUYRUWJAWOWR
      ZWSVVHUXBVUAGUXCVVHUWSUYTUXAVVHUWRUYSYGVVHYIUWQUYRVVKXBXCXDXEXFVVHUXMVUIU
      YBVUOVVHUXLVUHDUWLUWBVVJVVHUXIVUGUXKVVHUXHVUFYGVVHUXGVUEUWQUYRVVKVVHYQUWK
      UWAVVIXBZXGXCXDXFVVHUYAVUNDUWLUWBVVJVVHUXQVUMUXTVVHUXPVULYGVVHUXOVUKUWQUY
      RVVKVVHYQUXNVUJUWJAWPWRZXBXGXCXDXFXHVVHUYMVVDDUWLUWBVVJVVHUYLVVCEUWLUWBVV
      JVVHUYEVURUYKVVBVVHUYDVUQUXGVUEVVHUUNUXNVUJVVMXBVVLXIVVHUYHVVAUYJVVHUYGVU
      TYGVVHUYFVUSYQUUNUWJAWQWRXJXCXDXKXFXFXLXHWDUWMBVAZVVGUVFCVVNUYQYHVVFUVEVV
      NUWOKVAUYQYHVMVVNUWOUVSKVVNUWNUVRUWMBVNWRZWSUGWTUWOKIYGXMWBVVNVUDYPVUPUUM
      VVEUVDVVNVUBYOFVUCHVVNHVUCHVUCVAVVNTVTXNVVNVUAYNGUXCJVVNUXCBWOUTZVOJVVNUW
      TVVPUWMBWOWRZWSUFWTVVNUYTYKUXAYMVVNUYSYJYGVVNYIUYRLVVNLUYRLUYRVAVVNUDVTXN
      ZXBXCVVNYLUWTPVVNUWTVVPPVVQUJWTZXBXIXOXFVVNVUIUUEVUOUULVVNVUHUUDDUWBIVVNI
      UWBIUWBVAVVNUAVTZXNVVNVUGYTUXKUUCVVNVUFYSYGVVNVUEYRUYRLVVRVVNYRVUEVVNYQMU
      WAMUWAVAVVNUBVTXBXNZXGXCVVNUXKUXJVVPUTUUAUVRUTZVVPUTUUCVVNUXJUWTVVPVVQXBV
      VNUXJVWBVVPVVNUUAUWNUVRVVOXBXCVVNVWBUUBVVPPVVNPVVPPVVPVAVVNUJVTXNVVNUUAUV
      RQVVNQUVRQUVRVAVVNUHVTXNXBXGXPXIXFVVNVUNUUKDUWBIVVNYQUWBUQZYQIUQZVUNUUKVV
      NVWDVWCVVNIUWBYQVVTXQXRVVNVUMUUHUXTUUJVVNVULUUGYGVVNVUKUUFUYRLVVRVVNYQVUJ
      NVVNNVUJNVUJVAVVNUCVTZXNXBXGXCVVNUXSUUIUWTPVVSVVNUUAUXRRVVNUXRBWPUTRUWMBW
      PWRUIWTXBXGXIXKXSXHVVNVVDUVCDUWBIVVNVWCVWDVVDUVCVVNVWDVWCVWDVWCVMVVNIUWBY
      QUAXTVTXRVVNVVCUVBEUWBIVVNUUNUWBUQZUUNIUQZVVCUVBVVNVWGVWFVVNIUWBUUNVVTXQX
      RVVNVURUUPVVBUVAVVNVUQUUOVUEYRVVNUUOVUQVVNUUNNVUJVWEXBXNVWAXIVVNVVAUURUYJ
      UUTVVNVUTUUQYGVVNVUSOYQUUNVVNOVUSOVUSVAVVNUEVTXNXJXCVVNUYISUUAUUSVVNUYIBW
      QUTSUWMBWQWRUKWTXJXIXKXKXSXKXSXLXHWDUOUNUMCDEFGYAYBYCYD $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}


  ${
    $d C1 f $.  $d C2 f $.  $d D1 f $.  $d D2 f $.  $d F f m n o p $.
    $d I1 f $.  $d I2 f $.  $d M1 f m $.  $d M2 f $.  $d O1 f o $.
    $d O2 f p $.  $d Ro1 f $.  $d Ro2 f $.  $d T f m n o p $.
    $d U f m n o p $.
    isfunb.1 $e |- O1 = dom ( id_ ` T ) $.
    isfunb.2 $e |- M1 = dom ( dom_ ` T ) $.
    isfunb.3 $e |- D1 = ( dom_ ` T ) $.
    isfunb.4 $e |- C1 = ( cod_ ` T ) $.
    isfunb.5 $e |- I1 = ( id_ ` T ) $.
    isfunb.6 $e |- Ro1 = ( o_ ` T ) $.
    isfunb.7 $e |- O2 = dom ( id_ ` U ) $.
    isfunb.8 $e |- M2 = dom ( dom_ ` U ) $.
    isfunb.9 $e |- D2 = ( dom_ ` U ) $.
    isfunb.10 $e |- C2 = ( cod_ ` U ) $.
    isfunb.11 $e |- I2 = ( id_ ` U ) $.
    isfunb.12 $e |- Ro2 = ( o_ ` U ) $.
    $( The predicate "is a functor" . $)
    isfunb $p |- ( ( T e. Cat /\ U e. Cat /\ F e. A ) ->
       ( F e. ( Func ` <. T , U >. ) <->
       ( F : M1 --> M2 /\ ( A. o e. O1
        E. p e. O2 ( F ` ( I1 ` o ) ) = ( I2 ` p ) /\
      ( A. m e. M1
       ( F ` ( I1 ` ( D1 ` m ) ) ) =
          ( I2 ` ( D2 ` ( F ` m ) ) ) /\
      A. m e. M1
       ( F ` ( I1 ` ( C1 ` m ) ) ) =
          ( I2 ` ( C2 ` ( F ` m ) ) ) ) /\
      A. m e. M1 A. n e. M1
       ( ( C1 ` n ) = ( D1 ` m ) ->
         ( F ` ( m Ro1 n ) ) =
          ( ( F ` m ) Ro2 ( F ` n ) ) ) ) ) ) ) $=
      ( vf ccat wcel w3a cop cfunc cfv cv wf wceq wrex wral wa co wi cab
      isfuna 3adant3 eleq2d wb feq1 fveq1 eqeq1d rexbidv ralbidv fveq2d
      eqeq12d anbi12d opreq12d imbi2d 2ralbidv 3anbi123d elabg 3ad2ant3 bitrd
      ) BUNUOZCUNUOZGAUOZUPZGBCUQURUSZUOGJLUMUTZVAZFUTMUSZWMUSZHUTQUSZVBZHKVCZF
      IVDZDUTZNUSZMUSZWMUSZXAWMUSZRUSZQUSZVBZDJVDZXAOUSMUSZWMUSZXESUSZQUSZVBZDJ
      VDZVEZEUTZOUSXBVBZXAXQPVFZWMUSZXEXQWMUSZTVFZVBZVGZEJVDDJVDZUPZVEZUMVHZUOZ
      JLGVAZWOGUSZWQVBZHKVCZFIVDZXCGUSZXAGUSZRUSZQUSZVBZDJVDZXJGUSZYPSUSZQUSZVB
      ZDJVDZVEZXRXSGUSZYPXQGUSZTVFZVBZVGZEJVDDJVDZUPZVEZWKWLYHGWHWIWLYHVBWJBCUM
      DEFHIJKLMNOPQRSTUAUBUCUDUEUFUGUHUIUJUKULVIVJVKWJWHYIUUNVLWIYGUUNUMGAWMGVB
      ZWNYJYFUUMJLWMGVMUUOWTYNXPUUFYEUULUUOWSYMFIUUOWRYLHKUUOWPYKWQWOWMGVNVOVPV
      QUUOXIYTXOUUEUUOXHYSDJUUOXDYOXGYRXCWMGVNUUOXFYQQUUOXEYPRXAWMGVNZVRVRVSVQU
      UOXNUUDDJUUOXKUUAXMUUCXJWMGVNUUOXLUUBQUUOXEYPSUUPVRVRVSVQVTUUOYDUUKDEJJUU
      OYCUUJXRUUOXTUUGYBUUIXSWMGVNUUOXEYPYAUUHTUUPXQWMGVNWAVSWBWCWDVTWEWFWG $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}

  ${
    $d F w x y z $.  $d M1 x $.  $d T w x y z $.  $d U w x y z $.
    fmamo.1 $e |- M1 = dom ( dom_ ` T ) $.
    fmamo.2 $e |- M2 = dom ( dom_ ` U ) $.
    $( A functor is a mapping between morphisms. $)
    fmamo $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) -> F : M1 --> M2 ) ) $=
      ( vz vw vx vy ccat wcel wa cop cfunc cfv wf wi w3a cv cid_ wceq cdm wrex
      wral cdom_ ccod_ co_ co eqid isfunb simprbda ex 3expia pm2.43d ) ALMZBLMZ
      NCABOPQZMZDECRZUQURUTUTVASUQURUTTZUTVAVBUTVAHUAAUBQZQCQIUABUBQZQUCIVDUDZU
      EHVCUDZUFJUAZAUGQZQZVCQCQVGCQZBUGQZQVDQUCJDUFVGAUHQZQVCQCQVJBUHQZQVDQUCJD
      UFNKUAZVLQVIUCVGVNAUIQZUJCQVJVNCQBUIQZUJUCSKDUFJDUFTUSABJKHCIVFDVEEVCVHVL
      VOVDVKVMVPVFUKFVHUKVLUKVCUKVOUKVEUKGVKUKVMUKVDUKVPUKULUMUNUOUP $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}

  ${
    $d F m n o p $.  $d O1 o $.  $d O2 p $.  $d T m n o p $.  $d U m n o p $.
    vidfunid.1 $e |- O1 = dom ( id_ ` T ) $.
    vidfunid.2 $e |- I1 = ( id_ ` T ) $.
    vidfunid.3 $e |- O2 = dom ( id_ ` U ) $.
    vidfunid.4 $e |- I2 = ( id_ ` U ) $.
    $( The functor ` F ` associates every object of ` T ` to an object in
       ` U ` .  For the identification of objects with the identities see
       ~ df-func .  JFM CAT_1 th. 97. $)
    vidfunid $p |- ( ( T e. Cat /\ U e. Cat ) ->
       ( F e. ( Func ` <. T , U >. ) ->
         A. o e. O1
        E. p e. O2 ( F ` ( I1 ` o ) ) = ( I2 ` p ) ) ) $=
      ( vm vn ccat wcel wa cop cfunc cfv cv wceq wrex wral wi w3a cdom_ cdm
      ccod_ co_ co wf eqid isfunb simplbda simp1d ex 3expia pm2.43d ) APQZBPQZR
      DABSTUAZQZCUBHUADUAEUBIUAUCEGUDCFUEZVAVBVDVDVEUFVAVBVDUGZVDVEVFVDRVENUBZA
      UHUAZUAZHUADUAVGDUAZBUHUAZUAIUAUCNVHUIZUEVGAUJUAZUAHUADUAVJBUJUAZUAIUAUCN
      VLUERZOUBZVMUAVIUCVGVPAUKUAZULDUAVJVPDUABUKUAZULUCUFOVLUENVLUEZVFVDVLVKUI
      ZDUMVEVOVSUGVCABNOCDEFVLGVTHVHVMVQIVKVNVRJVLUNVHUNVMUNKVQUNLVTUNVKUNVNUNM
      VRUNUOUPUQURUSUT $.
      $( [11-Feb-2008] $) $( [10-Feb-2008] $)
  $}

  ${
    $d F a b m n $.  $d M1 m $.  $d T a b m n $.  $d U a b m n $.
    iddvvidd.1 $e |- M1 = dom ( dom_ ` T ) $.
    iddvvidd.2 $e |- D1 = ( dom_ ` T ) $.
    iddvvidd.3 $e |- I1 = ( id_ ` T ) $.
    iddvvidd.4 $e |- I2 = ( id_ ` U ) $.
    iddvvidd.5 $e |- D2 = ( dom_ ` U ) $.
    $( Functors preserve domains.  JFM CAT_1 th. 98. $)
    iddvvidd $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) ->
         A. m e. M1 ( F ` ( I1 ` ( D1 ` m ) ) ) =
           ( I2 ` ( D2 ` ( F ` m ) ) ) ) ) $=
      ( va vb vn ccat wcel wa cop cfunc cfv cv wceq wral wi w3a ccod_ cid_ cdm
      wrex co_ co cdom_ wf eqid isfunb simplbda simp2d simpld ex 3expia
      pm2.43d ) ARSZBRSZTDABUAUBUCZSZCUDZGUCZFUCDUCVIDUCZIUCHUCUECEUFZVEVFVHVHV
      LUGVEVFVHUHZVHVLVMVHTZVLVIAUIUCZUCFUCDUCVKBUIUCZUCHUCUECEUFZVNOUDFUCDUCPU
      DHUCUEPBUJUCUKZULOAUJUCUKZUFZVLVQTZQUDZVOUCVJUEVIWBAUMUCZUNDUCVKWBDUCBUMU
      CZUNUEUGQEUFCEUFZVMVHEBUOUCUKZDUPVTWAWEUHVGABCQODPVSEVRWFFGVOWCHIVPWDVSUQ
      JKVOUQLWCUQVRUQWFUQNVPUQMWDUQURUSUTVAVBVCVD $.
      $( [1-Jun-2008] $) $( [5-May-2008] $)
  $}

  ${
    $d F a b m n $.  $d M1 m $.  $d T a b m n $.  $d U a b m n $.
    idcvvidc.1 $e |- M1 = dom ( dom_ ` T ) $.
    idcvvidc.2 $e |- C1 = ( cod_ ` T ) $.
    idcvvidc.3 $e |- I1 = ( id_ ` T ) $.
    idcvvidc.4 $e |- I2 = ( id_ ` U ) $.
    idcvvidc.5 $e |- C2 = ( cod_ ` U ) $.
    $( Functors preserve codomains.  JFM CAT_1 th. 98. $)
    idcvvidc $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) ->
         A. m e. M1 ( F ` ( I1 ` ( C1 ` m ) ) ) =
           ( I2 ` ( C2 ` ( F ` m ) ) ) ) ) $=
      ( va vb vn ccat wcel wa cop cfunc cfv cv wceq wral wi w3a cdom_ cid_ cdm
      wrex co_ co wf eqid isfunb simplbda simp2d simprd ex 3expia pm2.43d ) ARS
      ZBRSZTDABUAUBUCZSZCUDZGUCFUCDUCVHDUCZIUCHUCUECEUFZVDVEVGVGVJUGVDVEVGUHZVG
      VJVKVGTZVHAUIUCZUCZFUCDUCVIBUIUCZUCHUCUECEUFZVJVLOUDFUCDUCPUDHUCUEPBUJUCU
      KZULOAUJUCUKZUFZVPVJTZQUDZGUCVNUEVHWAAUMUCZUNDUCVIWADUCBUMUCZUNUEUGQEUFCE
      UFZVKVGEVOUKZDUOVSVTWDUHVFABCQODPVREVQWEFVMGWBHVOIWCVRUPJVMUPKLWBUPVQUPWE
      UPVOUPNMWCUPUQURUSUTVAVBVC $.
      $( [1-Jun-2008] $) $( [5-May-2008] $)
  $}

  ${
    $d F m n x y $.  $d M1 m $.  $d T m n x y $.  $d U m n x y $.
    fmp.1 $e |- M1 = dom ( dom_ ` T ) $.
    fmp.2 $e |- C1 = ( cod_ ` T ) $.
    fmp.3 $e |- D1 = ( dom_ ` T ) $.
    fmp.6 $e |- Ro1 = ( o_ ` T ) $.
    fmp.7 $e |- Ro2 = ( o_ ` U ) $.
    $( Functors preserve morphisms composition.  JFM CAT_1 th. 99. $)
    fmp $p |- ( ( T e. Cat /\ U e. Cat ) ->
      ( F e. ( Func ` <. T , U >. ) ->
         A. m e. M1 A. n e. M1 ( ( C1 ` n ) = ( D1 ` m )
            -> ( F ` ( m Ro1 n ) ) = ( ( F ` m ) Ro2 ( F ` n ) ) ) ) ) $=
      ( vx vy ccat wcel wa cop cfunc cfv cv wceq co wi wral cid_ cdm wrex
      cdom_ ccod_ wf w3a eqid isfunb biimpd 3expia pm2.43d imp simprd simp3d
      ex ) ARSZBRSZTZEABUAUBUCZSZDUDZHUCCUDZGUCZUEVKVJIUFEUCVKEUCZVJEUCJUFUEUGD
      FUHCFUHZVGVITZPUDAUIUCZUCEUCQUDBUIUCZUCUEQVQUJZUKPVPUJZUHZVLVPUCEUCVMBULU
      CZUCVQUCUECFUHVKHUCVPUCEUCVMBUMUCZUCVQUCUECFUHTZVNVOFWAUJZEUNZVTWCVNUOZVG
      VIWEWFTZVGVIWGVEVFVIVIWGUGVEVFVIUOVIWGVHABCDPEQVSFVRWDVPGHIVQWAWBJVSUPKML
      VPUPNVRUPWDUPWAUPWBUPVQUPOUQURUSUTVAVBVCVD $.
      $( [3-Aug-2009] $) $( [2-Aug-2009] $)
  $}

  ${
    $d T a b m n $.
    $( The identity functor is a functor. $)
    idfisf $p |- ( T e. Cat ->
      ( _I |` dom ( dom_ ` T ) ) e. ( Func ` <. T , T >. ) ) $=
      ( va vb vm vn ccat wcel cid cdom_ cfv cdm cres cop cfunc cvv fvex dmex
      resiexg ax-mp w3a wf cv cid_ wceq wrex wral ccod_ wa co_ co wi eqid jdmo
      fvresi syl fveq2 eqeq2d rcla4ev ex adantl mpd r19.21aiv simpl dmo jca
      3syl eqcomd fveq2d eqtrd cdmo cmpmorp com12 eqcoms opreqan12rd sylan9eqr
      3adant1 syld 3com23 3expib r19.21aivv 3jca wf1o f1oi f1of jctil 3ad2ant1
      isfunb mpbird 3exp mpii pm2.43i ) AFGZHAIJZKZLZAAMNJGZWLWLWOOGZWPWNOGWQWM
      AIPQWNORSWLWLWQWPWLWLWQTWPWNWNWOUAZBUBZAUCJZJZWOJZCUBZWTJZUDZCWTKZUEZBXFU
      FZDUBZWMJZWTJZWOJZXIWOJZWMJZWTJZUDZDWNUFZXIAUGJZJZWTJZWOJZXMXRJZWTJZUDZDW
      NUFZUHZEUBZXRJZXJUDZXIYGAUIJZUJZWOJZXMYGWOJZYJUJZUDZUKZEWNUFDWNUFZTZUHZWL
      WLYSWQWLYRWRWLXHYFYQWLXGBXFWLWSXFGZXGWLYTUHZXBXAUDZXGUUAXAWNGUUBWSAWTWNXF
      WNULZXFULZWTULZUMWNXAUNUOYTUUBXGUKWLYTUUBXGXEUUBCWSXFXCWSUDXDXAXBXCWSWTUP
      UQURUSUTVAUSVBWLXQYEWLXPDWNWLXIWNGZXPWLUUFUHZXLXKXOUUGWLXJXFGZUHXKWNGXLXK
      UDUUGWLUUHWLUUFVCZWMAXIWNXFUUCUUDWMULZVDVEXJAWTWNXFUUCUUDUUEUMWNXKUNVFUUF
      XKXOUDWLUUFXJXNWTUUFXIXMWMUUFXMXIWNXIUNZVGZVHVHUTVIUSVBWLYDDWNWLUUFYDUUGY
      AXTYCUUGWLXSXFGZUHXTWNGYAXTUDUUGWLUUMUUIXRAXIWNXFUUCUUDXRULZVJVEXSAWTWNXF
      UUCUUDUUEUMWNXTUNVFUUFXTYCUDWLUUFXSYBWTUUFXIXMXRUULVHVHUTVIUSVBVEWLYPDEWN
      WNWLUUFYGWNGZYPWLUUOUUFYPWLUUOUUFTZYIYKWNGZYOYIUUPUUQUUPUUQUKXJYHUUPXJYHU
      DUUQXRWMYJAYGXIWNUUCUUJUUNYJULZVKVLVMVLUUOUUFUUQYOUKWLUUOUUFUHZUUQYOUUQUU
      SYLYKYNWNYKUNUUSYNYKUUFUUOXMXIYMYGYJUUKWNYGUNVNVGVOUSVPVQVRVSVTWAWNWNWOWB
      WRWNWCWNWNWOWDSWEWFOAADEBWOCXFWNXFWNWTWMXRYJWTWMXRYJUUDUUCUUJUUNUUEUURUUD
      UUCUUJUUNUUEUURWGWHWIWJWK $.
      $( [22-Jul-2008] $) $( [15-Jul-2008] $)
  $}

  ${
    $d t u v f g $.
    $( Class of isomorphisms. $)
    df-isof $a |- Isofunc = { <. <. t , u >. , v >. |
      ( ( t e. Cat /\ u e. Cat ) /\
      v = { f e. ( Func ` <. u , v >. ) | E. g e. ( Func ` <. v , u >. )
      ( ( f o. g ) = ( _I |` dom ( dom_ ` v ) ) /\
        ( g o. f ) = ( _I |` dom ( dom_ ` u ) ) ) } ) } $.
  $}

