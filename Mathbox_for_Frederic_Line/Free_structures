$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Free structures
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  $c SubSemiGrp $.

  $( Extend class notation to include the class of subsemigroups. $)
  csubsmg $a class SubSemiGrp $.

  ${
    $d g h s $.
    $( Define the set of subsemigroups of ` g ` .  Experimental. $)
    df-subsmg $a |- SubSemiGrp = { <. g , s >. |
           ( g e. SemiGrp /\ s = { h e. SemiGrp | h C_ g } ) } $.
  $}

  $c subSemiGrpGen $.

  $( Extend class notation with a function that returns the subsemigroup of a
     group generated by a set. $)
  csbsgrg $a class subSemiGrpGen $.

  ${
    $d g x h $.
    $( the subsemigroup of ` g ` generated by ` x ` .  Experimental. $)
    df-sggen $a |- subSemiGrpGen = ( g e. SemiGrp , x e. ~P dom dom g |->
     |^| { h e. ( SubSemiGrp ` g ) | x C_ dom dom h } ) $.
  $}

  $c SemiGrpHom $.

  $( Extend class notation to include the class of semigroup homomorphisms. $)
  csmhom $a class SemiGrpHom $.

  ${
    $d f g h s x y $.
    $( Define the set of semigroup homomorphisms from ` g ` to ` h ` .
       Experimental. $)
    df-gsmhom $a |- SemiGrpHom = { <. <. g , h >. , s >. | ( ( g
        e. SemiGrp /\ h e. SemiGrp ) /\ s = { f | ( f : dom dom g -->
        dom dom h /\ A. x e. dom dom g A. y e. dom dom g ( ( f ` x ) h
        ( f ` y ) ) = ( f ` ( x g y ) ) ) } ) } $.
  $}

  $c FreeSemiGrp $.

  $( Extend class notation to include the class of free semigroup. $)
  cfsm $a class FreeSemiGrp $.

  ${
    $d g x h a u $.
    $( Definition of a free semigroup.  The definition is somewhat cryptic.
       But this is better understood if one knows that it is not always
       possible to define recursively a function ` f ` on the inductive closure
       generated by ` x ` knowing the value of ` f ` for the elements of
       ` x ` .  On the contrary the definition of a free semigroup makes it
       necessary that those recursive definitions exist.  (See a nice
       explanation in Gallier p. 2O. ) Experimental. $)
    df-frsmgrp $a |- FreeSemiGrp = { <. g , x >. | ( g = ( subSemiGrpGen
      ` <. g , x >. ) /\ A. h e. SemiGrp A. a e. ( dom dom h ^m x )
      E. u e. ( SemiGrpHom ` <. g , h >. ) ( u |` x ) = a ) } $.
  $}

