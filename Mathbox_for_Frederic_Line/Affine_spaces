$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Affine spaces
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c RAffSp $.

  $( Extend class notation with the class of all R affine spaces. $)
  craffsp $a class RAffSp $.

  ${
    $d x y t a b v $.
    $( Define a ` RR ` affine space id est a ` RR ` vector space ` x ` ( called
       the free vectors class ) together with a function ` y ` . ` y `
       associates to each vector a bijection from a set ` t ` (called the
       space) to itself (here ` t ` is retrieved from the operation.)
       Technically speaking, ` y ` is a faithful (i.e. injective) and
       transitive group action (id est a group homomorphism whose range is the
       underlying set of a symmetry group ).  Informally speaking the aim of
       all of that is to associate to each point of ` t ` a unique point of
       ` t ` through the "action" of a vector of ` x ` and thus to formalize
       the idea of translation.  When we have embedded the idea of translation
       it is easy to define a repere and thus all the cartesian geometry is
       available. $)
    df-raffsp $a |- RAffSp = { <. x , y >. | ( x e. RVec /\ E. t
      ( y e. ( ( 1st ` x ) GrpHom ( SymGrp ` t ) ) /\
      y : ran ( 1st ` x ) -1-1-> t /\
     A. a e. t A. b e. t E. v e. ran ( 1st ` x ) ( ( y ` v ) ` a ) = b ) ) } $.
  $}

