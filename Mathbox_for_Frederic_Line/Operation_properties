$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
             Operation properties
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c Com1 $.

  $( Extend class notation with a class that adds commutativity to semi-groups,
     monoids and so on. $)
  ccm1 $a class Com1 $.


  ${ $d g x y $.
    $( A device to add commutativity to magmas, semi-groups,
       monoids and so on. A commutative group is composed of 5 properties
       (internal operation, commutativity, associativity, existence of
       a neutral element and an inverse. If we switch on
       or off those four properties we get 32 structures. Instead of
       giving a name to those 32 structures, I suggest we use intersected
       classes and speak of ` ( Magma i^i Com1 ) ` or
       ` ( Magma i^i ExId ) ` . $)
    df-com1 $a |- Com1 = { g |  A. x e. dom dom g A. y e. dom dom g
      ( x g y ) = ( y g x ) } $.
  $}

  $c Ass $.

  $( Extend class notation with a device to add associativity to internal
     operations. $)
  cass $a class Ass $.

  ${ $d g x y z $.
  $( A device to add associativity to various sorts of internal operations.
     The definition is meaningful when ` g ` is a magma at least. $)
  df-ass $a |- Ass = { g | A. x e. dom dom g A. y e. dom dom g
    A. z e. dom dom g ( ( x g y ) g z ) = ( x g ( y g z ) ) } $.
  $}

  ${ $d G g x y z $. $d X g x y z $.
    isass.1 $e |- X = dom dom G $.
    $( The predicate "is an associative operation". $)
    isass $p |- ( G e. A -> ( G e. Ass <-> A. x e. X A. y e. X  A. z e. X
      ( ( x G y ) G z ) = ( x G ( y G z ) ) ) ) $=
      ( vg cv co wceq cdm wral cass wcel w3a wi wal dmeq dmeqd eleq2d
      3anbi123d opreq opreq1d eqtrd opreq2d eqeq12d imbi12d albidv 2albidv
      r3al 3bitr4g eqcomi a1i raleq1d ralbidv 2ralbidv 3bitrd bitrd df-ass
      elab2g ) AIZBIZHIZJZCIZVDJZVBVCVFVDJZVDJZKZCVDLZLZMBVLMAVLMZVBVCEJZVFEJZV
      BVCVFEJZEJZKZCFMZBFMAFMZHENDVDEKZVMVRCELZLZMZBWCMZAWCMZVTWAVBVLOZVCVLOZVF
      VLOZPZVJQZCRZBRARVBWCOZVCWCOZVFWCOZPZVRQZCRZBRARVMWFWAWLWRABWAWKWQCWAWJWP
      VJVRWAWGWMWHWNWIWOWAVLWCVBWAVKWBVDESTZUAWAVLWCVCWSUAWAVLWCVFWSUAUBWAVGVOV
      IVQWAVGVNVFVDJVOWAVEVNVFVDVBVCVDEUCUDVNVFVDEUCUEWAVIVBVPVDJVQWAVHVPVBVDVC
      VFVDEUCUFVBVPVDEUCUEUGUHUIUJVJABCVLVLVLUKVRABCWCWCWCUKULWAWFWEAFMWDBFMZAF
      MVTWAWEAWCFWCFKWAFWCGUMUNZUOWAWEWTAFWAWDBWCFXAUOUPWAWDVSABFFWAVRCWCFXAUOU
      QURUSABCHUTVA $.
      $( [3-Nov-2009] $) $( [1-Nov-2009] $)
  $}

  $c ExId $.

  $( Extend class notation with the class of all the internal operations
     with an identity element. $)
  cexid $a class ExId $.

  ${ $d g x y $.
  $( A device to add an identity element to various sorts
     of internal operations. $)
  df-exid $a |- ExId = { g | E. x e. dom dom g A. y e. dom dom g
    ( ( y g x ) = y /\ ( x g y ) = y ) } $.
  $}

  ${ $d G g x y $. $d X g $.
    isexid.1 $e |- X = dom dom G $.
    $( The predicate ` G ` has a left and right identity element. $)
    isexid $p |- ( G e. A -> ( G e. ExId <-> E. x e. X A. y e. X
      ( ( y G x ) = y /\ ( x G y ) = y ) ) ) $=
      ( vg cv co wceq wa cdm wral wrex cexid dmeq dmeqd opreq eqeq1d anbi12d
      raleq12d rexeq12d wcel eqcomi eleq2i imbi1i ralbii2 anbi12i rexbii2
      syl6bb df-exid elab2g ) BHZAHZGHZIZUMJZUNUMUOIZUMJZKZBUOLZLZMZAVBNZUMUNDI
      ZUMJZUNUMDIZUMJZKZBEMZAENZGDOCUODJZVDVIBDLZLZMZAVNNVKVLVCVOAVBVNVLVAVMUOD
      PQZVLUTVIBVBVNVPVLUQVFUSVHVLUPVEUMUMUNUODRSVLURVGUMUNUMUODRSTUAUBVOVJAVNE
      UNVNUCUNEUCVOVJVNEUNEVNFUDZUEVIVIBVNEUMVNUCUMEUCVIVNEUMVQUEUFUGUHUIUJABGU
      KUL $.
      $( [3-Nov-2009] $) $( [2-Nov-2009] $)
  $}

