$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Axioms ax-10 and ax-11
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Show that ~ ax-10o can be derived from ~ ax-10 .  An open problem is
     whether this theorem can be derived from ~ ax-10 and the others when
     ~ ax-11 is replaced with ~ ax-11o .  See theorem ~ ax10 for the
     rederivation of ~ ax-10 from ~ ax10o .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-10o
     below so that uses of ~ ax-10o can be more easily identified. $)
  ax10o $p |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $=
    ( weq wal wi ax-10 ax-11 equcoms a4s pm2.27 al2imi sylsyld ) BCDZBECBDZCEAB
    EZOAFZCEZACEBCGNPRFZBSCBACBHIJOQACOAKLM $.
    $( [16-May-2008] $)

  $( Axiom ~ ax-10o ("o" for "old") was the original version of ~ ax-10 ,
     before it was discovered (in May 2008) that the shorter ~ ax-10 could
     replace it.  It appears as Axiom scheme C11' in [Megill] p. 448 (p. 16 of
     the preprint).

     This axiom is redundant, as shown by theorem ~ ax10o . $)
  ax-10o $a |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $.

  $( Rederivation of ~ ax-10 from original version ~ ax-10o .  See theorem
     ~ ax10o for the derivation of ~ ax-10o from ~ ax-10 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-10
     above so that uses of ~ ax-10 can be more easily identified. $)
  ax10 $p |- ( A. x x = y -> A. y y = x ) $=
    ( weq wal ax-10o pm2.43i equcomi alimi syl ) ABCZADZJBDZBACZBDKLJABEFJMBABG
    HI $.
    $( [16-May-2008] $)

  $( Commutation law for identical variable specifiers.  The antecedent and
     consequent are true when ` x ` and ` y ` are substituted with the same
     variable.  Lemma L12 in [Megill] p. 445 (p. 12 of the preprint). $)
  alequcom $p |- ( A. x x = y -> A. y y = x ) $=
    ( ax-10 ) ABC $.
    $( [5-Aug-1993] $)

  ${
    alequcoms.1 $e |- ( A. x x = y -> ph ) $.
    $( A commutation rule for identical variable specifiers. $)
    alequcoms $p |- ( A. y y = x -> ph ) $=
      ( weq wal alequcom syl ) CBECFBCEBFACBGDH $.
      $( [5-Aug-1993] $)
  $}

  ${
    nalequcoms.1 $e |- ( -. A. x x = y -> ph ) $.
    $( A commutation rule for distinct variable specifiers. $)
    nalequcoms $p |- ( -. A. y y = x -> ph ) $=
      ( weq wal alequcom nsyl4 con1i ) ACBECFZBCEBFJABCGDHI $.
      $( [2-Jan-2002] $)
  $}

  $( All variables are effectively bound in an identical variable specifier. $)
  hbae $p |- ( A. x x = y -> A. z A. x x = y ) $=
    ( weq wal wi wn ax-12 ax-4 syl7 ax-10o alequcoms pm2.43i syl5 pm2.61ii a5i
    ax-7 syl ) ABDZAEZSCEZAETCESUAACADCEZCBDCEZTUAFZUBGUCGSUATABCHSAIJUDACSACKL
    UDBCBCDBESBEZUATSBCKTUESABKMNLOPSACQR $.
    $( [5-Aug-1993] $)

  ${
    hbalequs.1 $e |- ( A. z A. x x = y -> ph ) $.
    $( Rule that applies ~ hbae to antecedent. $)
    hbaes $p |- ( A. x x = y -> ph ) $=
      ( weq wal hbae syl ) BCFBGZJDGABCDHEI $.
      $( [5-Aug-1993] $)
  $}

  $( All variables are effectively bound in a distinct variable specifier.
     Lemma L19 in [Megill] p. 446 (p. 14 of the preprint). $)
  hbnae $p |- ( -. A. x x = y -> A. z -. A. x x = y ) $=
    ( weq wal hbae hbn ) ABDAECABCFG $.
    $( [5-Aug-1993] $)

  ${
    hbnalequs.1 $e |- ( A. z -. A. x x = y -> ph ) $.
    $( Rule that applies ~ hbnae to antecedent. $)
    hbnaes $p |- ( -. A. x x = y -> ph ) $=
      ( weq wal wn hbnae syl ) BCFBGHZKDGABCDIEJ $.
      $( [5-Aug-1993] $)
  $}

  $( Lemma used in proofs of substitution properties. $)
  equs3 $p |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) $=
    ( weq wn wi wal wa wex alinexa con2bii ) BCDZAEFBGLAHBILABJK $.
    $( [5-Aug-1993] $)

  $( Lemma used in proofs of substitution properties. $)
  equs4 $p |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) $=
    ( weq wi wal wn wa wex simpr ax-4 imp jc nsyl ex hbn1 syl6 a5i ax-9o syl
    equs3 sylibr ) BCDZAEZBFZUCAGEZBFZGZUCAHBIUEUCUHBFZEZBFUHUDUJBUEUCUHUIUEUCU
    HUEUCHZUFUGUKUCAUEUCJUEUCAUDBKLMUFBKNOUFBPQRUHBCSTABCUAUB $.
    $( [5-Aug-1993] $)

  ${
    equsal.1 $e |- ( ps -> A. x ps ) $.
    equsal.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution.  (The proof was shortened
       by Andrew Salmon, 12-Aug-2011.) $)
    equsal $p |- ( A. x ( x = y -> ph ) <-> ps ) $=
      ( weq wi wal 19.3 syl6bbr pm5.74i albii a1d 19.21ai ax-9o impbii bitr4i
      ) CDGZAHZCISBCIZHZCIZBTUBCSAUASABUAFBCEJKLMBUCBUBCEBUASENOBCDPQR $.
      $( [12-Aug-2011] $) $( [5-Aug-1993] $)

    $( A useful equivalence related to substitution. $)
    equsalOLD $p |- ( A. x ( x = y -> ph ) <-> ps ) $=
      ( weq wi wal 19.3 syl6bbr pm5.74i albii ax-1 a5i syl ax-9o impbii bitr4i
      ) CDGZAHZCITBCIZHZCIZBUAUCCTAUBTABUBFBCEJKLMBUDBUBUDEBUCCUBTNOPBCDQRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    equsex.1 $e |- ( ps -> A. x ps ) $.
    equsex.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution. $)
    equsex $p |- ( E. x ( x = y /\ ph ) <-> ps ) $=
      ( weq wn wi wex wal wa exnal df-an exbii hbn notbid equsal con2bii
      3bitr4i ) CDGZAHZIZHZCJUCCKZHUAALZCJBUCCMUFUDCUAANOUEBUBBHCDBCEPUAABFQRST
      $.
      $( [5-Aug-1993] $)
  $}

  ${
    dvelimfALT.1 $e |- ( ph -> A. x ph ) $.
    dvelimfALT.2 $e |- ( ps -> A. z ps ) $.
    dvelimfALT.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Proof of ~ dvelimf without using ~ ax-11 .  See ~ dvelimALT for a proof
       (of the distinct variable version ~ dvelim ) that doesn't require
       ~ ax-10 . $)
    dvelimfALT $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi ax-10o alequcoms hba1 syl5 a1d wa hbnae hban ax-12 imp
      a1i hbimd hbald ex pm2.61i equsal albii 3imtr3g ) CDICJKZEDIZALZEJZUNCJZB
      BCJCEICJZUKUNUOLZLUPUQUKUPUNEJZUOUNURUOLECUNECMNUMEOPQUPKZUKUQUSUKRZUMCEU
      SUKECEESCDESTUTULACUSUKCCECSCDCSTUSUKULULCJLEDCUAUBAACJLUTFUCUDUEUFUGABED
      GHUHZUNBCVAUIUJ $.
      $( [12-Nov-2002] $)
  $}

  ${
    dral1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral1 $p |- ( A. x x = y -> ( A. x ph <-> A. y ps ) ) $=
      ( weq wal hbae biimpd alimd ax-10o syld biimprd wi alequcoms impbid ) CDF
      CGZACGZBDGZQRBCGSQABCCDCHQABEIJBCDKLQSADGZRQBADCDDHQABEMJTRNDCADCKOLP $.
      $( [24-Nov-1994] $)
  $}

  ${
    dral2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral2 $p |- ( A. x x = y -> ( A. z ph <-> A. z ps ) ) $=
      ( weq wal hbae albid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex1 $p |- ( A. x x = y -> ( E. x ph <-> E. y ps ) ) $=
      ( weq wal wn wex notbid dral1 df-ex 3bitr4g ) CDFCGZAHZCGZHBHZDGZHACIBDIN
      PROQCDNABEJKJACLBDLM $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex2 $p |- ( A. x x = y -> ( E. z ph <-> E. z ps ) ) $=
      ( weq wal hbae exbid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  $( Closed theorem form of ~ a4im . $)
  a4imt $p |- ( A. x ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) ->
              ( A. x ph -> ps ) ) $=
    ( wal wi weq wa imim2 imim2d imp com23 al2imi ax-9o syl6 ) BBCEZFZCDGZABFZF
    ZHZCEACERPFZCEBUAAUBCUARAPQTRAPFZFQSUCRBPAIJKLMBCDNO $.
    $( [15-Jan-2008] $)

  ${
    a4im.1 $e |- ( ps -> A. x ps ) $.
    a4im.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Specialization, using implicit substitition.  Compare Lemma 14 of
       [Tarski] p. 70.  The ~ a4im series of theorems requires that only one
       direction of the substitution hypothesis hold. $)
    a4im $p |- ( A. x ph -> ps ) $=
      ( wal weq wi syl6com alimi ax-9o syl ) ACGCDHZBCGZIZCGBAPCNABOFEJKBCDLM
      $.
      $( [8-May-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    a4ime.1 $e |- ( ph -> A. x ph ) $.
    a4ime.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Existential introduction, using implicit substitition.  Compare Lemma 14
       of [Tarski] p. 70. $)
    a4ime $p |- ( ph -> E. x ps ) $=
      ( wn wal wex hbn weq con3d a4im con2i df-ex sylibr ) ABGZCHZGBCIRAQAGCDAC
      EJCDKABFLMNBCOP $.
      $( [7-Aug-1994] $)
  $}

  ${
    a4imed.1 $e |- ( ch -> A. x ch ) $.
    a4imed.2 $e |- ( ch -> ( ph -> A. x ph ) ) $.
    a4imed.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Deduction version of ~ a4ime . $)
    a4imed $p |- ( ch -> ( ph -> E. x ps ) ) $=
      ( wex wa wal 19.26 adantr imp sylanbrc weq adantld a4ime ex ) CABDICAJZBD
      ETDKCDKZADKZTCADLCUAAFMCAUBGNODEPABCHQRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv1.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv1.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv1.3 $e |- ( ph -> ( x = y -> ( ps -> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv1 $p |- ( A. x A. y ph -> ( A. x ps -> A. y ch ) ) $=
      ( wal wi a4s al2imi ax-7 syl6 weq com23 syl6d ax-9o a7s syld ) AEIZDIZBDI
      ZUCEIZCEIZUBUCBEIZDIUDUABUFDABUFJEFKLBDEMNAUDUEJEDADIZUCCEUGUCDEOZCDIZJZD
      ICABUJDABUHCUIAUHBCHPGQLCDERNLST $.
      $( [5-Aug-1993] $)
  $}


  ${
    cbv2.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv2.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv2.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv2 $p |- ( A. x A. y ph -> ( A. x ps <-> A. y ch ) ) $=
      ( wal weq wb wi bi1 syl6 cbv1 bi2 equcomi syl5 a7s impbid ) AEIDIBDIZCEIZ
      ABCDEFGADEJZBCKZBCLHBCMNOAUBUALEDACBEDGFAUCCBLZEDJAUCUDUEHBCPNEDQROST $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv3.1 $e |- ( ph -> A. y ph ) $.
    cbv3.2 $e |- ( ps -> A. x ps ) $.
    cbv3.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition, that
       does not use ~ ax-12 . $)
    cbv3 $p |- ( A. x ph -> A. y ps ) $=
      ( wi wal imim2i a1i weq cbv1 id ax-gen mpg ) AAHZDIACIBDIHCQABCDAADIAEJBB
      CIHQFKCDLABHHQGKMQDANOP $.
      $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbv3ALT $p |- ( A. x ph -> A. y ps ) $=
      ( weq wal wi a1i cbv1 stdpc6 mpg ) DDHZDIACIBDIJCOABCDAADIJOEKBBCIJOFKCDH
      ABJJOGKLDMN $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    cbval.1 $e |- ( ph -> A. y ph ) $.
    cbval.2 $e |- ( ps -> A. x ps ) $.
    cbval.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbval $p |- ( A. x ph <-> A. y ps ) $=
      ( wal weq biimpd cbv3 wb equcoms biimprd impbii ) ACHBDHABCDEFCDIABGJKBAD
      CFEDCIABABLCDGMNKO $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvalOLD $p |- ( A. x ph <-> A. y ps ) $=
      ( wi wal wb imim2i a1i weq cbv2 id ax-gen mpg ) AAHZDIACIBDIJCRABCDAADIAE
      KBBCIHRFLCDMABJHRGLNRDAOPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbvex.1 $e |- ( ph -> A. y ph ) $.
    cbvex.2 $e |- ( ps -> A. x ps ) $.
    cbvex.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex $p |- ( E. x ph <-> E. y ps ) $=
      ( wn wal wex hbn weq notbid cbval notbii df-ex 3bitr4i ) AHZCIZHBHZDIZHAC
      JBDJSUARTCDADEKBCFKCDLABGMNOACPBDPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    chv2.1 $e |- ( ps -> A. x ps ) $.
    chv2.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    chv2.3 $e |- ph $.
    $( Implicit substitution of ` y ` for ` x ` into a theorem.  (Contributed
       by Raph Levien, 9-Jul-2003.) $)
    chvar $p |- ps $=
      ( weq biimpd a4im mpg ) ABCABCDECDHABFIJGK $.
      $( [9-Jul-2003] $)
  $}

  $( A variable introduction law for equality.  Lemma 15 of [Monk2] p. 109,
     however we do not require ` z ` to be distinct from ` x ` and ` y `
     (making the proof longer).  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  equvini $p |- ( x = y -> E. z ( x = z /\ z = y ) ) $=
    ( weq wal wa wex wi equcomi alimi a9e jctir a1d 19.29 syl6 eximi ax-mp
    a1i12 anc2ri 19.29r wo wn ioran hbnae hban ax-12 imp ax-8 anc2li equcoms
    a4imed sylbi ecase3 ) CADZCEZCBDZCEZABDZACDZUPFZCGZHZUOURUSCEZUPCGZFZVAUOVE
    URUOVCVDUNUSCCAIZJCBKLMUSUPCNOUQURUSCGZUQFVAUQURVGUQURVGUNCGVGCAKUNUSCVFPQR
    SUSUPCTOUOUQUAUBUOUBZUQUBZFZVBUOUQUCURUTVJCAVHVICCACUDCBCUDUEVHVIURURCEHABC
    UFUGURUTHACUSURUPACBUHUIUJUKULUM $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( A variable introduction law for equality.  Lemma 15 of [Monk2] p. 109,
     however we do not require ` z ` to be distinct from ` x ` and ` y `
     (making the proof longer). $)
  equviniOLD $p |- ( x = y -> E. z ( x = z /\ z = y ) ) $=
    ( weq wal wo wa wex wi a9e equid jctl eximi ax-mp hbae ax-8 a4s anim1d
    eximd mpi equcomi jctir equtrr anim2d jaoi a1d wn ioran hbnae hban ax-12
    imp anc2li equcoms a4imed sylbi pm2.61i ) CADZCEZCBDZCEZFZABDZACDZUTGZCHZIZ
    VBVFVCUSVFVAUSCCDZUTGZCHZVFUTCHVJCBJUTVICUTVHCKZLMNUSVIVECCACOUSVHVDUTURVHV
    DICCACPQRSTVAVDVHGZCHZVFURCHVMCAJURVLCURVDVHCAUAVKUBMNVAVLVECCBCOVAVHUTVDUT
    VHUTICCBCUCQUDSTUEUFVBUGUSUGZVAUGZGZVGUSVAUHVCVEVPCAVNVOCCACUICBCUIUJVNVOVC
    VCCEIABCUKULVCVEIACVDVCUTACBPUMUNUOUPUQ $.
    $( [5-Aug-1993] $)

  $( Bound-variable hypothesis builder for ` x = x ` .  This theorem tells us
     that ` x ` is effectively not free in ` x = x ` , even though it is
     technically free according to the traditional definition of free
     variable.  (The proof shows that this can be proved without ~ ax-9 , even
     though the theorem ~ equid cannot be.  A shorter proof that uses ~ ax-9 is
     obtainable from ~ equid and ~ hbth .)  See ~ hbequid for a more general
     version. $)
  hbequid2 $p |- ( x = x -> A. x x = x ) $=
    ( weq wal wi ax-12 ax-1 pm2.61ii ) AABZACZIHIDAAAEIHFZJG $.
    $( [3-Aug-2008] $) $( [27-Dec-2004] $)

