$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
       Auxiliary theorems for Alan Sare's virtual deduction, part 1
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    iin3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( ~ in3 without virtual deduction connectives.  Special theorem needed for
       Alan Sare's virtual deduction translation tool.  (Contributed by Alan
       Sare, 23-Jul-2011.) $)
    iin3 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      (  ) E $.
      $( [28-Oct-2011] $) $( [23-Jul-2011] $)
  $}

  $( ~ idn3 without virtual deduction connectives.  Special theorem needed for
     Alan Sare's virtual deduction translation tool.  (Contributed by Alan
     Sare, 23-Jul-2011.) $)
  iidn3 $p |- ( ph -> ( ps -> ( ch -> ch ) ) ) $=
    ( wi id a1i12 ) ABCCDCEF $.
    $( [28-Oct-2011] $) $( [23-Jul-2011] $)

  ${
    ee222.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee222.2 $e |- ( ph -> ( ps -> th ) ) $.
    ee222.3 $e |- ( ph -> ( ps -> ta ) ) $.
    ee222.4 $e |- ( ch -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e222 without virtual deduction connectives.  Special theorem needed
       for Alan Sare's virtual deduction translation tool.  (Contributed by
       Alan Sare, 7-Jul-2011.) $)
    ee222 $p |- ( ph -> ( ps -> et ) ) $=
      ( wa imp syl3c ex ) ABFABKCDEFABCGLABDHLABEILJMN $.
      $( [28-Oct-2011] $) $( [7-Jul-2011] $)
  $}

  ${
    ee22.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee22.2 $e |- ( ph -> ( ps -> th ) ) $.
    ee22.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( Virtual deduction rule ~ e22 without virtual deduction connectives.
       Special theorem needed for Alan Sare's virtual deduction translation
       tool.  (Contributed by Alan Sare, 2-May-2011.) $)
    ee22 $p |- ( ph -> ( ps -> ta ) ) $=
      ( syl6c ) ABCDEFGHI $.
      $( [28-Oct-2011] $) $( [2-May-2011] $)
  $}

  ${
    ee12an.1 $e |- ( ph -> ps ) $.
    ee12an.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee12an.3 $e |- ( ( ps /\ th ) -> ta ) $.
    $( ~ e12an without virtual deduction connectives.  Special theorem needed
       for Alan Sare's virtual deduction translation tool.  (Contributed by
       Alan Sare, 28-Oct-2011.) $)
    ee12an $p |- ( ph -> ( ch -> ta ) ) $=
      ( wa jctild syl6 ) ACBDIEACDBGFJHK $.
      $( [28-Oct-2011] $) $( [28-Oct-2011] $)
  $}

  ${
    ee3bir.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee3bir.2 $e |- ( ta <-> th ) $.
    $( Right-biconditional form of ~ e3 without virtual deduction connectives.
       Special theorem needed for Alan Sare's virtual deduction translation
       tool.  (Contributed by Alan Sare, 22-Jul-2011.) $)
    ee3bir $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( biimpri syl8 ) ABCDEFEDGHI $.
      $( [28-Oct-2011] $) $( [22-Jul-2011] $)
  $}

  ${
    ee13.1 $e |- ( ph -> ps ) $.
    ee13.2 $e |- ( ph -> ( ch -> ( th -> ta ) ) ) $.
    ee13.3 $e |- ( ps -> ( ta -> et ) ) $.
    $( ~ e13 without virtual deduction connectives.  Special theorem needed for
       Alan Sare's virtual deduction translation tool.  (Contributed by Alan
       Sare, 28-Oct-2011.) $)
    ee13 $p |- ( ph -> ( ch -> ( th -> et ) ) ) $=
      ( wi syl syl6d ) ACDEFHABEFJGIKL $.
      $( [28-Oct-2011] $)
  $}

  ${
    ee23.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee23.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee23.3 $e |- ( ch -> ( ta -> et ) ) $.
    $( ~ e23 without virtual deductions.  (Contributed by Alan Sare,
       17-Jul-2011.) $)
    ee23 $p |- ( ph -> ( ps -> ( th -> et ) ) ) $=
      ( wi syl6 syldd ) ABDEFHABCEFJGIKL $.
      $( [17-Jul-2011] $)
  $}

  ${
    ee121.1 $e |- ( ph -> ps ) $.
    ee121.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee121.3 $e |- ( ph -> ta ) $.
    ee121.4 $e |- ( ps -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e121 without virtual deductions.  (Contributed by Alan Sare,
       13-Jul-2011.) $)
    ee121 $p |- ( ph -> ( ch -> et ) ) $=
      ( a1d ee222 ) ACBDEFABCGKHAECIKJL $.
      $( [13-Jul-2011] $)
  $}

  ${
    ee122.1 $e |- ( ph -> ps ) $.
    ee122.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee122.3 $e |- ( ph -> ( ch -> ta ) ) $.
    ee122.4 $e |- ( ps -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e122 without virtual deductions.  (Contributed by Alan Sare,
       13-Jul-2011.) $)
    ee122 $p |- ( ph -> ( ch -> et ) ) $=
      ( a1d ee222 ) ACBDEFABCGKHIJL $.
      $( [13-Jul-2011] $)
  $}

  ${
    ee333.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee333.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee333.3 $e |- ( ph -> ( ps -> ( ch -> et ) ) ) $.
    ee333.4 $e |- ( th -> ( ta -> ( et -> ze ) ) ) $.
    $( ~ e333 without virtual deductions. $)
    ee333 $p |- ( ph -> ( ps -> ( ch -> ze ) ) ) $=
      ( w3a 3imp syl3c 3exp ) ABCGABCLDEFGABCDHMABCEIMABCFJMKNO $.
      $( [17-Jul-2011] $)
  $}

  ${
    ee323.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee323.2 $e |- ( ph -> ( ps -> ta ) ) $.
    ee323.3 $e |- ( ph -> ( ps -> ( ch -> et ) ) ) $.
    ee323.4 $e |- ( th -> ( ta -> ( et -> ze ) ) ) $.
    $( ~ e323 without virtual deductions. $)
    ee323 $p |- ( ph -> ( ps -> ( ch -> ze ) ) ) $=
      ( a1dd ee333 ) ABCDEFGHABECILJKM $.
      $( [17-Apr-2012] $)
  $}

  $( If the second and third disjuncts of a true triple disjunction are false,
     then the first disjunct is true.  Automatically derived from
     ~ 3ornot23VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
  3ornot23 $p |- ( ( -. ph /\ -. ps ) -> ( ( ch \/ ph \/ ps ) -> ch ) ) $=
    ( wn w3o wi idd pm2.21 3jaao 3anidm12 ) ADZBDZCABECFKCCKALBKCGACHBCHIJ $.
    $( [31-Dec-2011] $)

  $( ~ orbi1 with order of disjuncts reversed.  Derived from ~ orbi1rVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  orbi1r $p |- ( ( ph <-> ps ) -> ( ( ch \/ ph ) <-> ( ch \/ ps ) ) ) $=
    ( wb id orbi2d ) ABDZABCGEF $.
    $( [31-Dec-2011] $)

  $( Closed nested implication form of ~ bitr3i .  Derived automatically from
     ~ bitr3VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
  bitr3 $p |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) -> ( ps <-> ch ) ) ) $=
    ( wb bibi1 biimpd ) ABDACDBCDABCEF $.
    $( [11-Nov-2012] $) $( [31-Dec-2011] $)

  $( ~ pm4.39 with a 3-conjunct antecedent.  This proof is ~ 3orbi123VD
     automatically translated and minimized.  (Contributed by Alan Sare,
     31-Dec-2011). $)
  3orbi123 $p |- ( ( ( ph <-> ps ) /\ ( ch <-> th ) /\ ( ta <-> et ) ) ->
                 ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) ) $=
    ( wb w3a simp1 simp2 simp3 3orbi123d ) ABGZCDGZEFGZHABCDEFMNOIMNOJMNOKL $.
    $( [31-Dec-2011] $)

  $( Exportation implication also converting head from biconditional to
     conditional.  This proof is ~ exbirVD automatically translated and
     minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
  exbir $p |- ( ( ( ph /\ ps ) -> ( ch <-> th ) ) ->
              ( ph -> ( ps -> ( th -> ch ) ) ) ) $=
    ( wa wb wi bi2 imim2i exp3a ) ABEZCDFZGABDCGZLMKCDHIJ $.
    $( [31-Dec-2011] $)

  $( ~ impexp with a 3-conjunct antecedent.  This proof is ~ 3impexpVD
     automatically translated and minimized.  (Contributed by Alan Sare,
     31-Dec-2011.) $)
  3impexp $p |- ( ( ( ph /\ ps /\ ch ) -> th ) <->
                ( ph -> ( ps -> ( ch -> th ) ) ) ) $=
    ( w3a wi id 3expd 3impd impbii ) ABCEDFZABCDFFFZKABCDKGHLABCDLGIJ $.
    $( [31-Dec-2011] $)

  $( ~ 3impexp with biconditional consequent of antecedent that is commuted in
     consequent.  Derived automatically from ~ 3impexpVD .  (Contributed by
     Alan Sare, 31-Dec-2011.) $)
  3impexpbicom $p |- ( ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) <->
                     ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) ) $=
    ( w3a wb wi bicom imbi2 biimpcd mpi 3expd 3impexp biimpri syl6ibr impbii )
    ABCFZDEGZHZABCEDGZHHHZTABCUATSUAGZRUAHZDEIZUCTUDSUARJKLMUBRUASUDUBABCUANOUE
    PQ $.
    $( [31-Dec-2011] $)

  ${
    3impexpbicomi.1 $e |- ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) $.
    $( Deduction form of ~ 3impexpbicom .  Derived automatically from
       ~ 3impexpbicomiVD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3impexpbicomi $p |- ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) $=
      ( wb w3a bicomd 3exp ) ABCEDGABCHDEFIJ $.
      $( [31-Dec-2011] $)
  $}

  $( Closed form of ~ syl5OLD .  Derived automatically from ~ syl5impVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  syl5imp $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( th -> ps ) ->
                ( ph -> ( th -> ch ) ) ) ) $=
    ( wi pm2.04 imim2d com34 ) ABCEEZDBEDACIBACEDABCFGH $.
    $( [31-Dec-2011] $)

  ${
    idi.1 $e |- ph $.
    $( Deduction form of ~ id .  Derived automatically from ~ idiVD .
       (Contributed by Alan Sare, 31-Dec-2011.) $)
    idi $p |- ph $=
      (  ) B $.
      $( [31-Dec-2011] $)
  $}

  $( Closed form of ~ ancoms .  Derived automatically from ~ ancomsimpVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  ancomsimp $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ps /\ ph ) -> ch ) ) $=
    ( wa ancom imbi1i ) ABDBADCABEF $.
    $( [31-Dec-2011] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant.  After the
     User's Proof was completed it was minimized.  The completed User's Proof
     before minimization is not shown.
     <HTML> <TABLE>
     <TR> <TD> 1::    <TD> ` |- ( ( ( ps /\ ch ) -> th ) <-> ( ps -> ( ch -> `
     ` th ) ) ) `
     <TR> <TD> qed:1: <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <-> ( ph `
     ` -> ( ps -> ( ch -> th ) ) ) ) `
     </TABLE> </HTML> $)
  impexp3a $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                 ( ph -> ( ps -> ( ch -> th ) ) ) ) $=
    ( wa wi impexp imbi2i ) BCEDFBCDFFABCDGH $.
    $( [18-Mar-2012] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual Deduction Proof (not shown) was minimized.  The
     minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` -> ( ph -> ( ch -> ( ps -> th ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ch -> ( ps -> th ) ) ) `
     ` -> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` -> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ch -> ( ph -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ch -> ( ps -> th ) ) ) ) `
     <TR> <TD> 5::      <TD> ` |- ( ( ph -> ( ch -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> 6:4,5:   <TD> ` |- ( ( ch -> ( ph -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> qed:3,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` <-> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     </TABLE> </HTML> $)
  com3rgbi $p |- ( ( ph -> ( ps -> ( ch -> th ) ) ) <->
                 ( ch -> ( ph -> ( ps -> th ) ) ) ) $=
    ( wi pm2.04 com24 com34 impbii ) ABCDEZEEZCABDEZEEZKBACDABJFGMACBDCALFHI $.
    $( [18-Mar-2012] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual Deduction Proof (not shown) was minimized.  The
     minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) `
     ` <-> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` <-> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> qed:1,2: <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) `
     ` <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  impexp3acom3r $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                      ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wa wi impexp3a com3rgbi bitr4i ) ABCEDFFABCDFFFBCADFFFABCDGBCADHI $.
    $( [18-Mar-2012] $)

  ${
    exp3acom3r.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( The following User's Proof is a Virtual Deduction proof completed
       automatically by the tools program completeusersproof.cmd, which invokes
       Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
       completed Virtual Deduction Proof (not shown) was minimized.  The
       minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::   <TD> ` |- ( ph -> ( ( ps /\ ch ) -> th ) ) `
       <TR> <TD> qed:1: <TD> ` |- ( ps -> ( ch -> ( ph -> th ) ) ) `
       </TABLE> </HTML> $)
    exp3acom3r $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( exp3a com3l ) ABCDABCDEFG $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ exp3acom23 .(Contributed by Alan Sare,
     22-Jul-2012.) $)
  exp3acom23g $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                        ( ph -> ( ch -> ( ps -> th ) ) ) ) $=
    ( wa wi ancomsimp impexp bitri imbi2i ) BCEDFZCBDFFZAKCBEDFLBCDGCBDHIJ $.
    $( [22-Jul-2012] $)

  ${
    exp3acom23.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( The exportation deduction ~ exp3a with commutation of the conjoined
       wwfs.  (Contributed by Alan Sare, 22-Jul-2012.) $)
    exp3acom23 $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( exp3a com23 ) ABCDABCDEFG $.
      $( [22-Jul-2012] $)
  $}

  $( Implication form of ~ simplbi2com .  (Contributed by Alan Sare,
     22-Jul-2012.) $)
  simplbi2comg $p |- ( ( ph <-> ( ps /\ ch ) ) -> ( ch -> ( ps -> ph ) ) ) $=
    ( wa wb bi2 exp3acom23 ) ABCDZEBCAAHFG $.
    $( [22-Jul-2012] $)

  ${
    simplbi2com.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( A deduction eliminating a conjunct, similar to ~ simplbi2 .
       (Contributed by Alan Sare, 22-Jul-2012.)  (The proof was shortened by
       Wolf Lammen, 10-Nov-2012.) $)
    simplbi2com $p |- ( ch -> ( ps -> ph ) ) $=
      ( simplbi2 com12 ) BCAABCDEF $.
      $( [10-Nov-2012] $) $( [22-Jul-2012] $)
  $}

  ${
    ee1111.1 $e |- ( ph -> ps ) $.
    ee1111.2 $e |- ( ph -> ch ) $.
    ee1111.3 $e |- ( ph -> th ) $.
    ee1111.4 $e |- ( ph -> ta ) $.
    ee1111.5 $e |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) $.
    $( Non-virtual deduction form of ~ e1111 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ps )  `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ch ) `
       <TR> <TD> h3::     <TD> ` |- ( ph -> th ) `
       <TR> <TD> h4::     <TD> ` |- ( ph -> ta ) `
       <TR> <TD> h5::    <TD> ` |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 6:1,5:  <TD> ` |- ( ph -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 7:6:    <TD> ` |- ( ch -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 8:2,7:  <TD> ` |- ( ph -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( ph -> ( th -> ( ta -> et ) ) ) `
       <TR> <TD> 10:9:    <TD> ` |- ( th -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 11:3,10: <TD> ` |- ( ph -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 12:11:   <TD> ` |- ( ph -> ( ta -> et ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ta -> ( ph -> et ) ) `
       <TR> <TD> 14:4,13: <TD> ` |- ( ph -> ( ph -> et ) ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> et )  `
       </TABLE> </HTML> $)
    ee1111 $p |- ( ph -> et ) $=
      ( wi syl3c mpd ) AEFJABCDEFLGHIKMN $.
      $( [18-Mar-2012] $)
  $}

  $( Logical equivalence of a 2-left-nested implication and a 1-left-nested
     implicated
     when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).
     The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual
     Deduction Proof (not shown) was minimized.  The minimized proof is
     shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ph -> ( ps -> ch ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ph -> ( ps -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ph -> ( ps -> ch ) ) -> ( ps `
     ` -> ( ph -> ch ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ps -> ( ph -> ch ) ) ) `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ph -> ch ) ) -> ( ph `
     ` -> ( ps -> ( ph -> ch ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` <-> ( ps -> ( ph -> ch ) ) ) `
     </TABLE> </HTML> $)
  pm2.43bgbi $p |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) <->
               ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.21 pm2.04 ja com23 ax-1 impbii ) ABACDDZDZKLABCAKABCDZDAMEBACFGHKA
    IJ $.
    $( [18-Mar-2012] $)

  $( Logical equivalence of a 3-left-nested implication and a 2-left-nested
     implicated when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).  The following User's Proof is
     a Virtual Deduction proof completed automatically by the tools program
     completeusersproof.cmd, which invokes Mel O'Cat's mmj2 and Norm Megill's
     Metamath Proof Assistant.  The completed Virtual Deduction Proof (not
     shown) was minimized.  The minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ps -> ( ph -> ( ch -> th ) ) )  `
     ` -> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ch -> ( ph -> th ) ) ) )  `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) )  `
     ` -> ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  pm2.43cbi $p |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) <->
                   ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wi wn pm2.24 com4l id ja ax-1 impbii ) ABCADEEEZEMAMMAAFBCDABCDEEGHMIJMAK
    L $.
    $( [18-Mar-2012] $)

  ${
    ee233.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee233.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee233.3 $e |- ( ph -> ( ps -> ( th -> et ) ) ) $.
    ee233.4 $e |- ( ch -> ( ta -> ( et -> ze ) ) ) $.
    $( Non-virtual deduction form of ~ e233 . (Contributed by Alan Sare,
       18-Mar-2012.)
       The following User's Proof is a Virtual Deduction proof completed
       automatically by the tools program completeusersproof.cmd, which invokes
       Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
       completed Virtual
       Deduction Proof (not shown) was minimized.  The minimized proof is
       shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ( ps -> ch ) )   `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ( ps -> ( th -> ta ) ) )  `
       <TR> <TD> h3::     <TD> ` |- ( ph -> ( ps -> ( th -> et ) ) )  `
       <TR> <TD> h4::     <TD> ` |- ( ch -> ( ta -> ( et -> ze ) ) ) `
       <TR> <TD> 5:1,4:   <TD> ` |- ( ph -> ( ps -> ( ta -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 6:5:     <TD> ` |- ( ta -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 7:2,6:   <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( et -> ze ) ) ) ) ) ) `
       <TR> <TD> 8:7:     <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( et  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( th -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 10:9:    <TD> ` |- ( ph -> ( ps -> ( th -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 11:10:   <TD> ` |- ( et -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> 12:3,11: <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( th -> ze ) ) ) ) ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( th  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 14:13:   <TD> ` |- ( th -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> ( ps -> ( th -> ze ) ) ) `
       </TABLE> </HTML> $)
    ee233 $p |- ( ph -> ( ps -> ( th -> ze ) ) ) $=
      ( wi syl6 com3r syl8 pm2.43cbi mpbi com14 ) DABDGLZLZLZLZUABUBLZUBAUCLUCA
      BDFUAJDABFGBDABFGLZLZLZLZLZUGAUHLUHABDEUFIABEUDABCEUDLHKMNOABDUEPQBDAUDPQ
      ROABDTPQBDASPQDABGPQ $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ imbi12i . ~ imbi12 is ~ imbi12VD without virtual
     deductions and was automatically derived from ~ imbi12VD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi12 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ph -> ch )
               <-> ( ps -> th ) ) ) ) $=
    ( wb wi wn simplim simprim imbi12d expi ) ABEZCDEZACFBDFELMGZFGABCDLNHLMIJK
    $.
    $( [18-Mar-2012] $)

  $( Join three logical equivalences to form equivalence of implications.
     ~ imbi13 is ~ imbi13VD without virtual deductions and was automatically
     derived from ~ imbi13VD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi13 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ta <-> et ) ->
               ( ( ph -> ( ch -> ta ) ) <-> ( ps -> ( th -> et ) ) ) ) ) ) $=
    ( wb wi imbi12 syl9r ) CDGEFGCEHZDFHZGABGAKHBLHGCDEFIABKLIJ $.
    $( [18-Mar-2012] $)

  ${
    $( Non-virtual deduction from of ~ e21 . ~ ee21 is ~ ee21VD without virtual
       deductions and was automatically derived from ~ ee21VD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Mar-2012.)  $)

    ee21.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee21.2 $e |- ( ph -> th ) $.
    ee21.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e21 without virtual deductions. $)
    ee21 $p |- ( ph -> ( ps -> ta ) ) $=
      ( a1d ee22 ) ABCDEFADBGIHJ $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee33.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee33.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee33.3 $e |- ( th -> ( ta -> et ) ) $.
    $( Non-virtual deduction form of ~ e33 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::   <TD> ` |- ( ph -> ( ps -> ( ch -> th ) ) )  `
       <TR> <TD> h2::   <TD> ` |- ( ph -> ( ps -> ( ch -> ta ) ) )  `
       <TR> <TD> h3::   <TD> ` |- ( th -> ( ta -> et ) ) `
       <TR> <TD> 4:1,3: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ta -> et ) ) ) ) `
       <TR> <TD> 5:4:   <TD> ` |- ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> 6:2,5: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ph -> ( ps -> `
       ` ( ch -> et ) ) ) ) ) ) `
       <TR> <TD> 7:6:   <TD> ` |- ( ps -> ( ch -> ( ph -> ( ps -> ( ch -> `
       ` et ) ) ) ) ) `
       <TR> <TD> 8:7:   <TD> ` |- ( ch -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> qed:8: <TD> ` |- ( ph -> ( ps -> ( ch -> et ) ) ) `
       </TABLE> </HTML> $)
    ee33 $p |- ( ph -> ( ps -> ( ch -> et ) ) ) $=
      ( wi imim3i ee22 ) ABCDJCEJCFJGHDEFCIKL $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee10.1 $e |- ( ph -> ps ) $.
    ee10.2 $e |- ch $.
    ee10.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( ~ e10 without virtual deductions. $)
    ee10 $p |- ( ph -> th ) $=
      ( mpi syl ) ABDEBCDFGHI $.
      $( [25-Jul-2011] $)
  $}

  ${
    iin1.1 $e |- ( ph -> ps ) $.
    $( ~ in1 without virtual deductions. $)
    iin1 $p |- ( ph -> ps ) $=
      (  ) C $.
      $( [23-Jul-2011] $)
  $}

  ${
    ee02.1 $e |- ph $.
    ee02.2 $e |- ( ps -> ( ch -> th ) ) $.
    ee02.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( ~ e02 without virtual deductions. $)
    ee02 $p |- ( ps -> ( ch -> ta ) ) $=
      ( a1i sylsyld ) BACDEABFIGHJ $.
      $( [22-Jul-2012] $)
  $}

$( End of auxiliary theorems for Alan Sare's virtual deduction, part 1 $)

