$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    "Strong" transfinite recursion
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c recs $.

  $( Notation for a function defined by strong transfinite recursion. $)
  crecs $a class recs ( F ) $.

  ${
    $d F f x y $.
    $( Define a function ` recs ( F ) ` on ` On ` , the class of ordinal
       numbers, by transfinite recursion given a rule ` F ` which sets the next
       value given all values so far.  See ~ df-rdg for more details on why
       this definition is desirable.  Unlike ~ df-rdg which restricts the
       update rule to use only the previous value, this version allows the
       update rule to use _all_ previous values, which is why it is described
       as "strong", although it is actually more primitive.  See ~ recsfnon and
       ~ recsval for the primary contract of this definition.

       _EDITORIAL_: there are several existing versions of this construction
       without the definition, notably in ~ ordtype , ~ zorn2 , and
       ~ aceq8alem . $)
    df-recs $a |- recs ( F ) = U. { f | E. x e. On ( f Fn x /\
        A. y e. x ( f ` y ) = ( F ` ( f |` y ) ) ) } $.
  $}

  ${
    $d F a b c y $.  $d G a b c y $.  $d x y a b c $.
    $( Equality theorem for ` recs ` .  (Contributed by Stefan O'Rear,
       18-Jan-2015.) $)
    recseq $p |- ( F = G -> recs ( F ) = recs ( G ) ) $=
      ( va vb vc wceq cv wfn cfv cres wral wa con0 wrex cuni crecs fveq1 eqeq2d
      cab df-recs ralbidv anbi2d rexbidv abbidv unieqd 3eqtr4g ) ABFZCGZDGZHZEG
      ZUHIZUHUKJZAIZFZEUIKZLZDMNZCSZOUJULUMBIZFZEUIKZLZDMNZCSZOAPBPUGUSVEUGURVD
      CUGUQVCDMUGUPVBUJUGUOVAEUIUGUNUTULUMABQRUAUBUCUDUEDECATDECBTUF $.
      $( [18-Jan-2015] $)

    hbrecs.f $e |- ( y e. F -> A. x y e. F ) $.
    $( Bound-variable hypothesis builder for ` recs ` .  (Contributed by Stefan
       O'Rear, 18-Jan-2015.) $)
    hbrecs $p |- ( y e. recs ( F ) -> A. x y e. recs ( F ) ) $=
      ( va vb vc crecs cv wfn cfv cres wceq wral wa con0 wrex cab wcel ax-17
      cuni df-recs wel hbfv hbeq hbral hban hbrex hbab hbuni hbxfreq ) ABCHEIZF
      IZJZGIZULKZULUOLZCKZMZGUMNZOZFPQZERZUAFGECUBABVCVBAEBVAAFPUMPSATUNUTAUNAT
      USAGUMGFUCATABBUPURBIZUPSATABUQCDVDUQSATUDUEUFUGUHUIUJUK $.
      $( [18-Jan-2015] $)
  $}

  ${
    $d F a b c d e f g $.  $d A g $.
    $( Strong transfinite recursion defines a function on ordinals.
       (Contributed by Stefan O'Rear, 18-Jan-2015.) $)
    recsfnon $p |- recs ( F ) Fn On $=
      ( ve vf va vb vc vd cv wfn cfv cres wceq wral con0 wrex cab crecs rdglem1
      wa df-recs tfr1 ) BCDHZEHZIFHZUBJUBUDKAJLFUCMSENODPGAQAEFBCDGAREFDATUA $.
      $( [18-Jan-2015] $)

    $( Strong transfinite recursion in terms of all previous values.
       (Contributed by Stefan O'Rear, 18-Jan-2015.) $)
    recsval $p |- ( A e. On -> ( recs ( F ) ` A ) =
          ( F ` ( recs ( F ) |` A ) ) ) $=
      ( vg ve vf va vb vc vd cv crecs cfv cres wceq fveq2 reseq2 fveq2d eqeq12d
      con0 wfn wral wa wrex cab rdglem1 df-recs tfr2 vtoclga ) CJZBKZLZUJUIMZBL
      ZNAUJLZUJAMZBLZNCASUIANZUKUNUMUPUIAUJOUQULUOBUIAUJPQRDECFJZGJZTHJZURLURUT
      MBLNHUSUAUBGSUCFUDIUJBGHDEFIBUEGHFBUFUGUH $.
      $( [18-Jan-2015] $)
  $}

