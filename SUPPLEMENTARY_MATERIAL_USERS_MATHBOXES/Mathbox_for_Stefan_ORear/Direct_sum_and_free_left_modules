$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    Direct sum and free left modules
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c (+)m $.

  $( Class of module direct sum generator. $)
  cdsmm $a class (+)m $.

  ${
    $d s r f x $.
    $( The direct sum of a family of Abelian groups or left modules is the
       induced group structure on finite linear combinations of elements, here
       represented as functions with finite support. $)
    df-dsmm $a |- (+)m = ( s e. _V , r e. _V |-> ( ( s Xm_ r ) |`s
        { f e. X_ x e. dom r ( Base ` ( r ` x ) ) |
          { x e. dom r | ( f ` x ) =/= ( 0g ` ( r ` x ) ) } e. Fin } ) ) $.
  $}

  ${
    $d S s r f x $.  $d R s r f x $.  $d B s r $.
    $( The direct sum is a well-behaved binary operator.  (Contributed by
       Stefan O'Rear, 7-Jan-2015.) $)
    reldmdsmm $p |- Rel dom (+)m $=
      ( vs vr vx vf cvv cv cprdm cfv c0g wne cdm crab cfn wcel cixp cress cdsmm
      co cbs df-dsmm reldmmpt2 ) ABEEAFBFZGRCFZDFHUCUBHZIHJCUBKZLMNDCUEUDSHOLPR
      QCDABTUA $.
      $( [7-Jan-2015] $)

    dsmmval.b $e |- B = { f e. ( Base ` ( S Xm_ R ) ) |
        { x e. dom R | ( f ` x ) =/= ( 0g ` ( R ` x ) ) } e. Fin } $.
    $( Value of the module direct sum.  (Contributed by Stefan O'Rear,
       7-Jan-2015.) $)
    dsmmval $p |- ( R e. V -> ( S (+)m R ) = ( ( S Xm_ R ) |`s B ) ) $=
      ( vs vr wcel cvv co cprdm cress wceq cv cfv crab cbs c0 cdsmm c0g wne cdm
      elex cfn cixp oveq1 vex eqid prdmbas mp2an fveq2d rabeq syl oveq12d oveq2
      syl5eq dmeq fveq1 neeq2d rabeqbidv eleq1d syl6eqr df-dsmm ovmpt2 wn ress0
      ovex eqcomi reldmdsmm ovprc1 reldmprdm oveq1d 3eqtr4a adantr pm2.61ian )
      CFJCKJZDCUALZDCMLZBNLZOZCFUEDKJZVRWBHIDCKKHPZIPZMLZAPZEPQZWGWEQZUBQZUCZAW
      EUDZRZUFJZEAWLWISQUGZRZNLWAUADWEMLZWNEWQSQZRZNLWDDOZWFWQWPWSNWDDWEMUHZWTW
      OWROWPWSOWTWOWFSQZWRWDKJWEKJWOXBOHUIIUIAWFWEWDKKWFUJUKULWTWFWQSXAUMURWNEW
      OWRUNUOUPWECOZWQVTWSBNWECDMUQZXCWSWHWGCQZUBQZUCZACUDZRZUFJZEVTSQZRBXCWNXJ
      EWRXKXCWQVTSXDUMXCWMXIUFXCWKXGAWLXHWECUSXCWJXFWHXCWIXEUBWGWECUTUMVAVBVCVB
      GVDUPAEHIVEVTBNVIVFWCVGZWBVRXLTTBNLZVSWAXMTBVHVJDCUAVKVLXLVTTBNDCMVMVLVNV
      OVPVQUO $.
      $( [7-Jan-2015] $)

    $( Base set of the module direct sum.  (Contributed by Stefan O'Rear,
       7-Jan-2015.) $)
    dsmmbase $p |- ( R e. V -> B = ( Base ` ( S (+)m R ) ) ) $=
      ( wcel cvv cdsmm co cbs cfv wceq elex cprdm cress cv crab eqid fveq2d wss
      dsmmval c0g wne cdm cfn ssrab2 eqsstri ressbas2 ax-mp syl6reqr syl ) CFHC
      IHZBDCJKZLMZNCFOUNUPDCPKZBQKZLMZBUNUOURLABCDEIGUCUABUQLMZUBBUSNBARZERMVAC
      MUDMUEACUFSUGHZEUTSUTGVBEUTUHUIBUTURUQURTUTTUJUKULUM $.
      $( [7-Jan-2015] $)
  $}

  ${
    $d S s r f x $.  $d R s r f x $.  $d B s r $.
    dsmmval2.b $e |- B = ( Base ` ( S (+)m R ) ) $.
    $( Self-referential definition of the module direct sum.  (Contributed by
       Stefan O'Rear, 7-Jan-2015.) $)
    dsmmval2 $p |- ( S (+)m R ) = ( ( S Xm_ R ) |`s B ) $=
      ( vx vf cdsmm co cprdm cbs cfv cress cvv wcel wceq crab oveq2i 3eqtr4a c0
      eqid cv c0g wne cdm cfn ssrab2 ressbas2 ax-mp dsmmval fveq2d oveq2d ress0
      wn eqcomi reldmdsmm ovprc1 reldmprdm oveq1d pm2.61i ovprc2 oveq12d eqtr4i
      wss ) CBGHZCBIHZVDJKZLHZVEALHBMNZVDVGOVHVEEUAZFUAKZVIBKUBKUCEBUDPUENZFVEJ
      KZPZLHZVEVNJKZLHVDVGVMVOVELVMVLVCVMVOOVKFVLUFVMVLVNVEVNTVLTUGUHQEVMBCFMVM
      TUIZVHVFVOVELVHVDVNJVPUJUKRVHUMZCCGHZCCIHZVRJKZLHZVDVGCMNZVRWAOWBVSVJVICK
      UBKUCECUDPUENZFVSJKZPZLHZVSWFJKZLHVRWAWEWGVSLWEWDVCWEWGOWCFWDUFWEWDWFVSWF
      TWDTUGUHQEWECCFMWETUIZWBVTWGVSLWBVRWFJWHUJUKRWBUMZSSVTLHZVRWAWJSVTULUNCCG
      UOUPWIVSSVTLCCIUQUPURRUSCBGUTZVQVEVSVFVTLCBIUTVQVDVRJWKUJVARUSAVFVELDQVB
      $.
      $( [7-Jan-2015] $)
  $}

  $(
  @{
    @d M a b c f @.  @d B a b c f @.  @d N a b c f @.  @d K a b c f @.
    @d S a b c f @.  @d Z a b c f @.  @d T a b c f @.  @d F a b c f @.
    @d I a b c f @.
    ellspd.n @e |- N = ( LSpan ` M ) @.
    ellspd.v @e |- B = ( Base ` M ) @.
    ellspd.k @e |- K = ( Base ` S ) @.
    ellspd.s @e |- S = ( Scalar ` M ) @.
    ellspd.z @e |- Z = ( 0g ` S ) @.
    ellspd.t @e |- T = ( vsca ` M ) @.

    @{
      ellspd.f @e |- ( ph -> F : I --> B ) @.
      ellspd.m @e |- ( ph -> M e. LMod ) @.
      ellspd.i @e |- ( ph -> I e. _V ) @.
      @( The elements of the span of an indexed collection of basic vectors are
         those vectors which can be written as finite linear combinations of
         basic vectors. @)
      ellspd @p |- ( ph -> ( X e. ( N ` ( F " I ) ) <->
          E. f e. ( K ^m I ) ( ( `' f " { Z } ) e. Fin /\
            X = ( M gsum ( f oF T F ) ) ) ) ) @=
        ? @.
    @}

    @{
      elfilspd.f @e |- ( ph -> F : I --> B ) @.
      elfilspd.m @e |- ( ph -> M e. LMod ) @.
      elfilspd.i @e |- ( ph -> I e. Fin ) @.
      @( Simplified version of ~ ellspd when the spanning set is finite: all
         linear combinations are then acceptable. @)
      elfilspd @p |- ( ph -> ( X e. ( N ` ( F " I ) ) <->
          E. f e. ( K ^m I ) X = ( M gsum ( f oF T F ) ) ) ) @=
        ? @.
    @}
  @}
  $)

