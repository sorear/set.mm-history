$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              (Trans)finite Recursion Theorems
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $.  $d x y z $.
    frsucopabn.1 $e |- ( z e. A -> A. x z e. A ) $.
    frsucopabn.2 $e |- ( z e. B -> A. x z e. B ) $.
    frsucopabn.3 $e |- ( z e. D -> A. x z e. D ) $.
    frsucopabn.4 $e |- F = ( rec ( { <. x , y >. | y = C } , A ) |` om ) $.
    frsucopabn.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The value of the finite recursive definition generator at a successor
       (special case where the characteristic function is an ordered-pair class
       abstraction and where the mapping class ` D ` is a proper class).  This
       is a technical lemma that can be used together with ~ frsucopab to help
       eliminate redundant sethood antecedents.  (Contributed by Scott Fenton,
       19-Feb-2011.) $)
    frsucopabn $p |- ( -. D e. _V -> ( F ` suc B ) = (/) ) $=
      ( com wcel wn cfv c0 wceq cv cvv csuc copab crdg cres fveq1i frsuc syl5eq
      hbopab1 hbrdg ax-17 hbres hbfv eqeq2i fvopabnf sylan9eq cdm peano2b dmeqi
      sylbir wfn frfnom ax-mp eqtri eleq2i bitr4i ndmfv sylnbi adantr pm2.61ian
      fndm ) ENOZGUAOPZEUBZHQZRSZVLVMVOEBTFSZABUCZDUDZNUEZQZVRQZRVLVOVNVTQWBVNH
      VTLUFDEVRUGUHABCWAFGACEVTACVSNACDVRVQABCUIIUJCTNOAUKULJUMKATZWASWCEHQZSFG
      SWDWAWCEHVTLUFUNMUTUOUPVLPVPVMVLVNHUQZOZVPVLVNNOWFEURWENVNWEVTUQZNHVTLUSV
      TNVAWGNSDVRVBNVTVKVCVDVEVFVNHVGVHVIVJ $.
      $( [19-Feb-2011] $)
  $}

  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $.  $d x y z $.
    frsucmptn.1 $e |- ( z e. A -> A. x z e. A ) $.
    frsucmptn.2 $e |- ( z e. B -> A. x z e. B ) $.
    frsucmptn.3 $e |- ( z e. D -> A. x z e. D ) $.
    frsucmptn.4 $e |- F = ( rec ( ( x e. _V |-> C ) , A ) |` om ) $.
    frsucpmtn.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The value of the finite recursive definition generator at a successor
       (special case where the characteristic function is a mapping abstraction
       and where the mapping class ` D ` is a proper class).  This is a
       technical lemma that can be used together with ~ frsucmpt to help
       eliminate redundant sethood antecedents.  (Contributed by Scott Fenton,
       28-Apr-2012.) $)
    frsucmptn $p |- ( -. D e. _V -> ( F ` suc B ) = (/) ) $=
      ( vy cvv cmpt crdg com cres cv wceq copab rdgeq1 reseq1 eqtri frsucopabn
      mptv mp2b ) AMBCDEFGHIJGANEOZCPZQRZMSETAMUAZCPZQRZKUHUKTUIULTUJUMTAMEUFCU
      HUKUBUIULQUCUGUDLUE $.
      $( [12-May-2012] $) $( [28-Apr-2012] $)
  $}

  ${
    $d ph y z $.  $d x y z $.
    $( A closed form of ~ tfis .  (Contributed by Scott Fenton, 8-Jun-2011.) $)
    tfisg $p |- ( A. x e. On ( A. y e. x [ y / x ] ph -> ph ) ->
                 A. x e. On ph ) $=
      ( vz wsb cv wral wi con0 crab wceq wss wcel ssrab2 wa dfss3 ax-17 elrabsf
      simprbi hbs1 ralimi sylbi wel hbral hbim weq raleq sbequ12 imbi12d impcom
      rcla4 syl5 simpr jctild syl6ibr ralrimiva tfi sylancr eqcomd rabid2 sylib
      ) ABCEZCBFZGZAHZBIGZIABIJZKABIGVFVGIVFVGILDFZVGLZVHVGMZHZDIGVGIKABINVFVKD
      IVFVHIMZOZVIVLABDEZOVJVMVIVNVLVIVBCVHGZVMVNVICFZVGMZCVHGVOCVHVGPVQVBCVHVQ
      VPIMVBABDVPIVLBQZRSUAUBVLVFVOVNHZVEVSBVHIVOVNBVBBCVHCDUCBQABCTUDABDTUEBDU
      FVDVOAVNVBCVCVHUGABDUHUIUKUJULVFVLUMUNABDVHIVRRUOUPDVGUQURUSABIUTVA $.
      $( [8-Jun-2011] $)
  $}

