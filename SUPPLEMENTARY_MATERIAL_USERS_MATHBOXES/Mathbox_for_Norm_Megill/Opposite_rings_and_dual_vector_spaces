$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Opposite rings and dual vector spaces
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c ROpp $.

  $( Extend class notation with the opposite of a ring. $)
  cro $a class ROpp $.

  ${
    $d r x y $.
    $( Define the opposite of a ring, which is the ring with multiplication
       reversed.  An opposite ring is useful for defining the dual of a vector
       space as a left (instead of right) vector space. $)
    df-ropp $a |- ROpp = ( r e. _V |-> {
       <. ( Base ` ndx ) , ( Base ` r ) >. ,
       <. ( +g ` ndx ) , ( +g ` r ) >. ,
       <. ( .r ` ndx ) , ( x e. ( Base ` r ) , y e. ( Base ` r ) |->
          ( y ( .r ` r ) x ) ) >. } ) $.
  $}

  ${
    $d r B $.  $d r P $.  $d r x y R $.  $d r T $.
    roppset.o $e |- O = ( ROpp ` R ) $.
    roppset.b $e |- B = ( Base ` R ) $.
    roppset.p $e |- P = ( +g ` R ) $.
    roppset.t $e |- T = ( .r ` R ) $.
    roppset.r $e |- ( ph -> R e. V ) $.
    $( Structure for the opposite of a ring. $)
    roppset $p |- ( ph -> O = { <. ( Base ` ndx ) , B >. ,
       <. ( +g ` ndx ) , P >. ,
       <. ( .r ` ndx ) , ( x e. B , y e. B |-> ( y T x ) ) >. } ) $=
      ( vr cbs cfv cop cplusg cmulr cvv wcel cnx cv cmpt2 ctp wceq elex syl cro
      fveq2 syl6eqr opeq2d oveqd mpt2eq123dv tpeq123d df-ropp tpex fvmpt syl5eq
      co ) AFUAUBZHUCPQZDRZUCSQZERZUCTQZBCDDCUDZBUDZGVAZUEZRZUFZUGZAFIUBVBNFIUH
      UIVBVBVNFUAUHVBHFUJQVMJOFVCOUDZPQZRZVEVOSQZRZVGBCVPVPVHVIVOTQZVAZUEZRZUFV
      MUAUJVOFUGZVQVDVSVFWCVLWDVPDVCWDVPFPQDVOFPUKKULZUMWDVREVEWDVRFSQEVOFSUKLU
      LUMWDWBVKVGWDBCVPVPWADDVJWEWEWDVTGVHVIWDVTFTQGVOFTUKMULUNUOUMUPBCOUQVDVFV
      LURUSUTUIUI $.
      $( [16-Oct-1014] $)
  $}

  ${
    $d x y R $.
    roppbase.b $e |- B = ( Base ` R ) $.
    roppbase.o $e |- O = ( ROpp ` R ) $.
    roppbase.c $e |- C = ( Base ` O ) $.
    roppbase.r $e |- ( ph -> R e. V ) $.
    $( The base set of the opposite of a ring. $)
    roppbase $p |- ( ph -> C = B ) $=
      ( vx vy cbs cfv cnx cop cplusg cmulr eqid cvv cv cmpt2 ctp roppset fveq2d
      co wcel wceq fvex eqeltri rngbase ax-mp 3eqtr4g ) AEMNOMNBPOQNDQNZPORNKLB
      BLUAKUADRNZUFUBZPUCZMNZCBAEUQMAKLBUNDUOEFHGUNSUOSJUDUEIBTUGBURUHBDMNTGDMU
      IUJBUNUQUPTUQSUKULUM $.
      $( [16-Oct-1014] $)
  $}

  ${
    $d x y R $.
    roppadd.p $e |- P = ( +g ` R ) $.
    roppadd.o $e |- O = ( ROpp ` R ) $.
    roppadd.q $e |- Q = ( +g ` O ) $.
    roppadd.r $e |- ( ph -> R e. V ) $.
    $( The addition operation of the opposite of a ring. $)
    roppadd $p |- ( ph -> Q = P ) $=
      ( vx vy cplusg cfv cnx cbs cop cmulr eqid cvv cv cmpt2 ctp roppset fveq2d
      co wcel wceq fvex eqeltri rngplusg ax-mp 3eqtr4g ) AEMNOPNDPNZQOMNBQORNKL
      UNUNLUAKUADRNZUFUBZQUCZMNZCBAEUQMAKLUNBDUOEFHUNSGUOSJUDUEIBTUGBURUHBDMNTG
      DMUIUJUNBUQUPTUQSUKULUM $.
      $( [17-Oct-1014] $)
  $}

  ${
    $d x y B $.  $d x y R $.
    roppfmul.b $e |- B = ( Base ` R ) $.
    roppfmul.t $e |- T = ( .r ` R ) $.
    roppfmul.o $e |- O = ( ROpp ` R ) $.
    roppfmul.u $e |- U = ( .r ` O ) $.
    roppfmul.r $e |- ( ph -> R e. V ) $.
    $( The multiplication operation of the opposite of a ring. $)
    roppfmul $p |- ( ph -> U = ( x e. B , y e. B |-> ( y T x ) ) ) $=
      ( cmulr cfv cnx cbs cop cvv cplusg cv co cmpt2 ctp eqid roppset wcel wceq
      fveq2d fvex eqeltri mpt2ex rngmulr ax-mp 3eqtr4g ) AHOPQRPDSQUAPEUAPZSQOP
      BCDDCUBBUBFUCZUDZSUEZOPZGUSAHUTOABCDUQEFHILJUQUFKNUGUJMUSTUHUSVAUIBCDDURD
      ERPTJERUKULZVBUMDUQUTUSTUTUFUNUOUP $.
      $( [17-Oct-1014] $)

    $d x y T $.  $d x y X $.  $d y Y $.
    roppmul.x $e |- ( ph -> X e. B ) $.
    roppmul.y $e |- ( ph -> Y e. B ) $.
    $( The multiplication operation of the opposite of a ring. $)
    roppmul $p |- ( ph -> ( X U Y ) = ( Y T X ) ) $=
      ( vx vy co wcel cv cmpt2 roppfmul oveqd cvv wceq ovex oveq2 oveq1 ovmpt2g
      a1i eqid syl3anc eqtrd ) AHIESHIQRBBRUAZQUAZDSZUBZSZIHDSZAEURHIAQRBCDEFGJ
      KLMNUCUDAHBTIBTUTUETZUSUTUFOPVAAIHDUGUKQRHIBBUQUTURUOHDSUEUPHUODUHUOIHDUI
      URULUJUMUN $.
      $( [17-Oct-1014] $)
  $}

  ${
    $d x y B $.  $d x y T $.  $d x y X $.  $d y Y $.
    roppmul2.u $e |- U = ( x e. B , y e. B |-> ( y T x ) ) $.
    roppmul2.x $e |- ( ph -> X e. B ) $.
    roppmul2.y $e |- ( ph -> Y e. B ) $.
    $( The multiplication operation of the opposite of a ring. $)
    roppmul2 $p |- ( ph -> ( X U Y ) = ( Y T X ) ) $=
      ( wcel co wceq cv oveq2 oveq1 ovex ovmpt2 syl2anc ) AGDLHDLGHFMHGEMZNJKBC
      GHDDCOZBOZEMUAFUBGEMUCGUBEPUBHGEQIHGERST $.
      $( [17-Oct-1014] $)
  $}

  ${
    $d a b c x y B $.  $d a b c O $.  $d x y P $.  $d a x y R $.  $d x y T $.
    $d a b c ph $.
    ropprng.o $e |- O = ( ROpp ` R ) $.
    ropprng.r $e |- ( ph -> R e. Ring ) $.
    ${
      ropprng.b $e |- B = ( Base ` R ) $.
      ropprng.p $e |- P = ( +g ` R ) $.
      ropprng.t $e |- T = ( .r ` R ) $.
      ropprng.m $e |- M = ( x e. B , y e. B |-> ( y T x ) ) $.
      $( Lemma for ~ ropprng . $)
      ropprnglem $p |- ( ph -> O e. Ring ) $=
        ( cfv co wcel wceq roppmul2 va vb vc cur cbs crg roppbase eqcomd cplusg
        eqid roppadd cmulr cmpt2 roppfmul syl6reqr cminusg c0g cvv fvex eqeltri
        cro a1i rngacl syl3an1 cgrp w3a rnggrp syl grpass sylan rng0cl grpinvcl
        cv grplid grplinv isgrpd cabel rngabl ablcom simp2 simp3 3ad2ant1 rngcl
        isabld syl3anc eqeltrd simpr1 adantr simpr3 simpr2 oveq2d oveq1d rngass
        wa syl13anc 3eqtr4d 3eqtr4rd rngdir oveq12d rngdi rngidcl simpr rngridm
        eqtrd rnglidm isrngd ) AUAUBUCDEIHFUDPZAIUEPZDADXHFIUFLJXHUJKUGUHZAIUIP
        ZEAEXJFIUFMJXJUJKUKUHZAIULPZBCDDCVMBVMGQUMHABCDFGXLIUFLNJXLUJKUNOUOAUAU
        BDEIAUAUBUCDEIUAVMZFUPPZPZFUQPZXIXKIURRAIFVAPURJFVAUSUTVBAFUFRZXMDRZUBV
        MZDRZXMXSEQZDRZKDEFXMXSLMVCZVDAFVERZXRXTUCVMZDRZVFZYAYEEQXMXSYEEQZEQSAX
        QYDKFVGVHZDEFXMXSYELMVIVJAXQXPDRKDFXPLXPUJZVKVHAYDXRXPXMEQXMSYIDEFXPXML
        MYJVNVJAYDXRXODRYIDFXNXMLXNUJZVLVJAYDXRXOXMEQXPSYIDEFXNXPXMLMYJYKVOVJVP
        XIXKAFVQRZXRXTYAXSXMEQSAXQYLKFVRVHDEFXMXSLMVSVDWDAXRXTVFZXMXSHQZXSXMGQZ
        DYMBCDGHXMXSOAXRXTVTZAXRXTWAZTYMXQXTXRYODRZAXRXQXTKWBYQYPDFGXSXMLNWCZWE
        WFAYGWNZXMYEXSGQZHQUUAXMGQZXMXSYEHQZHQYNYEHQZYTBCDGHXMUUAOAXRXTYFWGZYTX
        QYFXTUUADRAXQYGKWHZAXRXTYFWIZAXRXTYFWJZDFGYEXSLNWCWETYTUUCUUAXMHYTBCDGH
        XSYEOUUHUUGTZWKYTYOYEHQYEYOGQZUUDUUBYTBCDGHYOYEOYTXQXTXRYRUUFUUHUUEYSWE
        UUGTYTYNYOYEHYTBCDGHXMXSOUUEUUHTZWLYTXQYFXTXRUUBUUJSUUFUUGUUHUUEDFGYEXS
        XMLNWMWOWPWQYTYHXMGQZYOYEXMGQZEQZXMYHHQYNXMYEHQZEQYTXQXTYFXRUULUUNSUUFU
        UHUUGUUEDEFGXSYEXMLMNWRWOYTBCDGHXMYHOUUEYTXQXTYFYHDRUUFUUHUUGDEFXSYELMV
        CWETYTYNYOUUOUUMEUUKYTBCDGHXMYEOUUEUUGTZWSWPYTYEYAGQZUUMUUAEQZYAYEHQUUO
        UUCEQYTXQYFXRXTUUQUURSUUFUUGUUEUUHDEFGYEXMXSLMNWTWOYTBCDGHYAYEOYTXQXRXT
        YBUUFUUEUUHYCWEUUGTYTUUOUUMUUCUUAEUUPUUIWSWPAXQXGDRZKDFXGLXGUJZXAVHZAXR
        WNZXGXMHQXMXGGQZXMUVBBCDGHXGXMOAUUSXRUVAWHZAXRXBZTAXQXRUVCXMSKDFGXGXMLN
        UUTXCVJXDUVBXMXGHQXGXMGQZXMUVBBCDGHXMXGOUVEUVDTAXQXRUVFXMSKDFGXGXMLNUUT
        XEVJXDXF $.
        $( [17-Oct-1014] $)
    $}

    $( The opposite of a ring is also a ring. $)
    ropprng $p |- ( ph -> O e. Ring ) $=
      ( vx vy cbs cfv cplusg cmulr cv co cmpt2 eqid ropprnglem ) AFGBHIZBJIZBBK
      IZFGQQGLFLSMNZCDEQOROSOTOP $.
      $( [17-Oct-1014] $)
  $}

  ${
    ropp0.z $e |- Z = ( 0g ` R ) $.
    ropp0.o $e |- O = ( ROpp ` R ) $.
    ropp0.y $e |- Y = ( 0g ` O ) $.
    ropp0.r $e |- ( ph -> R e. Ring ) $.
    $( The zero (additive identity) element of the opposite of a ring. $)
    ropp0 $p |- ( ph -> Y = Z ) $=
      ( cplusg cfv co wceq crg eqid cgrp wcel cbs rnggrp syl oveqd rng0cl eqtrd
      roppadd grplid syl2anc wb ropprng roppbase eleqtrrd grpid mpbid ) AEECJKZ
      LZEMZDEMZAUNEEBJKZLZEAUMUQEEAUQUMBCNUQOZGUMOZIUDUAABPQZEBRKZQZUREMABNQZVA
      IBSTAVDVCIVBBEVBOZFUBTZVBUQBEEVEUSFUEUFUCACPQZECRKZQUOUPUGACNQVGABCGIUHCS
      TAEVBVHVFAVBVHBCNVEGVHOZIUIUJVHUMCDEVIUTHUKUFUL $.
      $( [17-Oct-1014] $)
  $}

  ${
    $d a R $.  $d a U $.  $d a V $.  $d a ph $.
    ropp1.u $e |- U = ( 1r ` R ) $.
    ropp1.o $e |- O = ( ROpp ` R ) $.
    ropp1.v $e |- V = ( 1r ` O ) $.
    ropp1.r $e |- ( ph -> R e. Ring ) $.
    $( The ring unit element of the opposite of a ring. $)
    ropp1 $p |- ( ph -> V = U ) $=
      ( va cbs cfv wcel cmulr co wceq wa crg eqid adantr cv wral wb isrngid syl
      ropprng rngidcl eleqtrd eleq2d simpr roppmul rngridm sylan eqtr3d rnglidm
      roppbase jca ex sylbird ralrimiv mpbi2and eqcomd ) ACEAEBKLZMZEJUAZBNLZOZ
      VEPZVEEVFOZVEPZQZJVCUBZCEPZABRMZVDVLQVMUCIJVCBVFCEVCSZVFSZFUDUEAEDKLZVCAD
      RMZEVQMABDGIUFZVQDEVQSZHUGUEAVCVQBDRVOGVTIUPZUHZAVKJVCAVEVCMVEVQMZVKAVQVC
      VEWAUIAWCVKAWCQZVHVJWDVEEDNLZOZVGVEWDVCBVFWEDRVEEVOVPGWESZAVNWCITZWDVEVQV
      CAWCUJAVQVCPWCWATUHZAVDWCWBTZUKAVRWCWFVEPVSVQDWEEVEVTWGHULUMUNWDEVEWEOZVI
      VEWDVCBVFWEDREVEVOVPGWGWHWJWIUKAVRWCWKVEPVSVQDWEEVEVTWGHUOUMUNUQURUSUTVAV
      B $.
      $( [18-Oct-1014] $)
  $}

  ${
    $d a b B $.  $d a b O $.  $d a b R $.  $d a b ph $.
    roppdrng.o $e |- O = ( ROpp ` R ) $.
    roppdrng.r $e |- ( ph -> R e. DivRing ) $.
    ${
      roppdrng.b $e |- B = ( Base ` R ) $.
      roppdrng.t $e |- T = ( .r ` R ) $.
      $( Lemma for ~ roppdrng . $)
      roppdrnglem $p |- ( ph -> O e. DivRing ) $=
        ( va vb cfv cdr eqid eqcomd wcel wne wa co syl3anc cmulr cur cv c0g cbs
        cinvr roppbase eqidd crg drngrng syl ropp0 ropp1 3ad2ant1 simp2l simp3l
        ropprng roppmul drngmulne0 simp3r simp2r mpbir2and adantr simprl simprr
        w3a eqnetrd drngunz drnginvrcl drnginvrn0 wceq drnginvrl eqtrd isdrngrd
        ) AJKBEEUALZCUBLZJUCZCUFLZLZCUDLZAEUELZBABWACEMHFWANGUGOAVOUHAEUDLZVTAC
        EWBVTVTNZFWBNACMPZCUIPGCUJUKZULOAEUBLZVPACVPEWFVPNZFWFNWEUMOACEFWEUQAVQ
        BPZVQVTQZRZKUCZBPZWKVTQZRZVFZVQWKVOSWKVQDSZVTWOBCDVOEMVQWKHIFVONZAWJWDW
        NGUNZAWHWIWNUOZAWJWLWMUPZURWOWPVTQWMWIWOBCDVTWKVQHWCIWRWTWSUSAWJWLWMUTA
        WHWIWNVAVBVGAWDVPVTQGCVPVTWCWGVHUKAWJRZWDWHWIVSBPAWDWJGVCZAWHWIVDZAWHWI
        VEZBCVRVQVTHWCVRNZVITZXAWDWHWIVSVTQXBXCXDBCVRVQVTHWCXEVJTXAVQVSVOSVSVQD
        SZVPXABCDVOEMVQVSHIFWQXBXCXFURXAWDWHWIXGVPVKXBXCXDBCDVPVRVQVTHWCIWGXEVL
        TVMVN $.
        $( [18-Oct-1014] $)
    $}

    $( The opposite of a division ring is also a division ring. $)
    roppdrng $p |- ( ph -> O e. DivRing ) $=
      ( cbs cfv cmulr eqid roppdrnglem ) ABFGZBBHGZCDEKILIJ $.
      $( [18-Oct-1014] $)
  $}

  $c LDual $.

  $( Extend class notation with left dualvector space. $)
  cld $a class LDual $.

  ${
    $d v k f g $.
    $( Define the (left) dual of a left vector space (or module) in which the
       vectors are functionals.  In many texts, this is defined as a right
       vector space, but by reversing the multiplication we achieve a left
       vector space, as is done in definition of dual vector space in
       [Holland95] p. 218.  This allows us to reuse our existing collection of
       left vector space theorems.  The restriction on ` oF ( +g `` v ) `
       allows it to be a set; see ~ ofmres .  Note the operation reversal in
       the scalar product to allow us to use the original scalar ring instead
       of the ` ROpp ` ring, for convenience. $)
    df-ldual $a |- LDual = ( v e. _V |->
      ( { <. ( Base ` ndx ) , ( LFnl ` v ) >. ,
          <. ( +g ` ndx ) , ( oF ( +g ` ( Scalar ` v ) )
                 |` ( ( LFnl ` v ) X. ( LFnl ` v ) ) ) >. ,
          <. ( Scalar ` ndx ) , ( ROpp ` ( Scalar ` v ) ) >. } u. {
          <. ( vsca ` ndx ) , ( k e. ( Base ` ( Scalar ` v ) ) ,
             f e. ( LFnl ` v ) |-> ( f oF ( .r ` ( Scalar ` v ) )
               ( ( Base ` v ) X. { k } ) ) ) >. } ) ) $.
  $}

  ${
    $d w F $.  $d w O $.  $d w P $.  $d w S $.  $d f k w W $.
    ldualset.v $e |- V = ( Base ` W ) $.
    ldualset.a $e |- A = ( +g ` R ) $.
    ldualset.p $e |- P = ( oF A |` ( F X. F ) ) $.
    ldualset.f $e |- F = ( LFnl ` W ) $.
    ldualset.d $e |- D = ( LDual ` W ) $.
    ldualset.r $e |- R = ( Scalar ` W ) $.
    ldualset.k $e |- K = ( Base ` R ) $.
    ldualset.t $e |- T = ( .r ` R ) $.
    ldualset.o $e |- O = ( ROpp ` R ) $.
    ldualset.s $e |- S = ( k e. K , f e. F |-> ( f oF T ( V X. { k } ) ) ) $.
    ldualset.w $e |- ( ph -> W e. X ) $.
    $( Define the (left) dual of a left vector space (or module) in which the
       vectors are functionals.  In many texts, this is defined as a right
       vector space, but by reversing the multiplication we achieve a left
       vector space, as is done in definition of dual vector space in
       [Holland95] p. 218.  This allows us to reuse our existing collection of
       left vector space theorems.  Note the operation reversal in the scalar
       product to allow us to use the original scalar ring instead of the
       ` ROpp ` ring, for convenience. $)
    ldualset $p |- ( ph -> D = ( { <. ( Base ` ndx ) , F >. ,
         <. ( +g ` ndx ) , P >. , <. ( Scalar ` ndx ) , O >. }
       u. { <. ( vsca ` ndx ) , S >. } ) ) $=
      ( vw wcel cvv cnx cbs cfv cop cplusg csca ctp cvsca csn cun wceq elex cld
      cv clfn cof cxp cres cro cmulr cmpt2 fveq2 syl6eqr opeq2d fveq2d ofeq syl
      xpeq12d reseq12d tpeq123d eqidd xpeq1d oveq123d mpt2eq123dv sneqd uneq12d
      co df-ldual tpex snex unex fvmpt syl5eq 3syl ) ANOUHNUIUHZCUJUKULZJUMZUJU
      NULZDUMZUJUOULZLUMZUPZUJUQULZFUMZURZUSZUTUFNOVAWNCNVBULXETUGNWOUGVCZVDULZ
      UMZWQXFUOULZUNULZVEZXGXGVFZVGZUMZWSXIVHULZUMZUPZXBIHXIUKULZXGHVCZXFUKULZI
      VCURZVFZXIVIULZVEZWFZVJZUMZURZUSXEUIVBXFNUTZXQXAYHXDYIXHWPXNWRXPWTYIXGJWO
      YIXGNVDULJXFNVDVKSVLZVMYIXMDWQYIXMBVEZJJVFZVGDYIXKYKXLYLYIXJBUTXKYKUTYIXJ
      EUNULBYIXIEUNYIXINUOULEXFNUOVKUAVLZVNQVLXJBVOVPYIXGJXGJYJYJVQVRRVLVMYIXOL
      WSYIXOEVHULLYIXIEVHYMVNUDVLVMVSYIYGXCYIYFFXBYIYFIHKJXSMYAVFZGVEZWFZVJFYII
      HXRXGYEKJYPYIXREUKULKYIXIEUKYMVNUBVLYJYIXSXSYBYNYDYOYIYCGUTYDYOUTYIYCEVIU
      LGYIXIEVIYMVNUCVLYCGVOVPYIXSVTYIXTMYAYIXTNUKULMXFNUKVKPVLWAWBWCUEVLVMWDWE
      UGHIWGXAXDWPWRWTWHXCWIWJWKWLWM $.
      $( [18-Oct-1014] $)
  $}

  ${
    $d f k W $.
    ldualvbase.f $e |- F = ( LFnl ` W ) $.
    ldualvbase.d $e |- D = ( LDual ` W ) $.
    ldualvbase.v $e |- V = ( Base ` D ) $.
    ldualvbase.w $e |- ( ph -> W e. X ) $.
    $( The vectors of a dual space are functionals of the original space. $)
    ldualvbase $p |- ( ph -> V = F ) $=
      ( vk vf cbs cfv cnx cop cplusg csca eqid cvv cof cxp cro ctp cvsca cv csn
      cres cmulr cmpt2 cun ldualset fveq2d wcel wceq clfn fvex eqeltri lmodbase
      co ax-mp 3eqtr4g ) ABMNOMNCPOQNERNZQNZUACCUBUHZPORNVCUCNZPUDOUENKLVCMNZCL
      UFEMNZKUFUGUBVCUINZUAUTUJZPUGUKZMNZDCABVKMAVDBVEVCVJVILKCVGVFVHEFVHSVDSVE
      SGHVCSVGSVISVFSVJSJULUMICTUNCVLUOCEUPNTGEUPUQURCVEVJVFVKTVKSUSVAVB $.
      $( [18-Oct-1014] $)
  $}

  ${
    $d f k W $.
    ldualvadd.f $e |- F = ( LFnl ` W ) $.
    ldualvadd.r $e |- R = ( Scalar ` W ) $.
    ldualvadd.a $e |- A = ( +g ` R ) $.
    ldualvadd.d $e |- D = ( LDual ` W ) $.
    ldualvadd.p $e |- P = ( +g ` D ) $.
    ldualvadd.w $e |- ( ph -> W e. X ) $.
    ${
      ldualfvadd.q $e |- Q = ( oF A |` ( F X. F ) ) $.
      $( Vector addition in the dual of a vector space. $)
      ldualfvadd $p |- ( ph -> P = Q ) $=
        ( cplusg cfv eqid cvv vk vf cnx cbs cop csca cro ctp cvsca cv csn cmulr
        cxp cof co cmpt2 cun ldualset wcel wceq cres clfn fvex eqeltri ofmresex
        fveq2d id ax-mp lmodplusg 3eqtr4g ) ACQRUCUDRGUEUCQREUEUCUFRFUGRZUEUHUC
        UIRUAUBFUDRZGUBUJHUDRZUAUJUKUMFULRZUNUOUPZUEUKUQZQRZDEACVPQABCEFVOVNUBU
        AGVLVKVMHIVMSLPJMKVLSVNSVKSVOSOURVFNETUSEVQUTEBUNGGUMVAZTPGTUSZVRTUSGHV
        BRTJHVBVCVDVSGGBTTVSVGZVTVEVHVDGEVOVKVPTVPSVIVHVJ $.
        $( [21-Oct-1014] $)
    $}

    ldualvadd.g $e |- ( ph -> G e. F ) $.
    ldualvadd.h $e |- ( ph -> H e. F ) $.
    $( Vector addition in the dual of a vector space. $)
    ldualvadd $p |- ( ph -> ( G P H ) = ( G oF A H ) ) $=
      ( co cof cxp cres eqid ldualfvadd oveqd ofmresval eqtrd ) AGHDSGHBTZFFUAU
      BZSGHUHSADUIGHABCDUIEFIJKLMNOPUIUCUDUEAFFBGHQRUFUG $.
      $( [21-Oct-1014] $)
  $}

  ${
    ldualvaddcl.f $e |- F = ( LFnl ` W ) $.
    ldualvaddcl.d $e |- D = ( LDual ` W ) $.
    ldualvaddcl.p $e |- P = ( +g ` D ) $.
    ldualvaddcl.w $e |- ( ph -> W e. LMod ) $.
    ldualvaddcl.g $e |- ( ph -> G e. F ) $.
    ldualvaddcl.h $e |- ( ph -> H e. F ) $.
    $( The scalar product operation value is a functional. $)
    ldualvaddcl $p |- ( ph -> ( G P H ) e. F ) $=
      ( co csca cfv cplusg cof clmod eqid ldualvadd eqid1 lfladdcl eqeltrd ) AE
      FCNEFGOPZQPZRNDAUFBCUEDEFGSHUETZUFTIJKLMUAAUFUEDEFGUGUFUBHKLMUCUD $.
      $( [21-Oct-1014] $)
  $}

  ${
    $d f k W $.
    ldualsca.f $e |- F = ( Scalar ` W ) $.
    ldualsca.o $e |- O = ( ROpp ` F ) $.
    ldualsca.d $e |- D = ( LDual ` W ) $.
    ldualsca.r $e |- R = ( Scalar ` D ) $.
    ldualsca.w $e |- ( ph -> W e. X ) $.
    $( The ring of scalars of the dual of a vector space. $)
    ldualsca $p |- ( ph -> R = O ) $=
      ( vk vf csca cfv cnx cbs cop eqid clfn cplusg cof cxp cres cvsca cv cmulr
      ctp csn co cmpt2 cun ldualset fveq2d cvv wcel wceq cro fvex eqeltri ax-mp
      lmodsca 3eqtr4g ) ABOPQRPFUAPZSQUBPDUBPZUCVEVEUDUEZSQOPESUIQUFPMNDRPZVENU
      GFRPZMUGUJUDDUHPZUCUKULZSUJUMZOPZCEABVLOAVFBVGDVKVJNMVEVHEVIFGVITVFTVGTVE
      TJHVHTVJTIVKTLUNUOKEUPUQEVMUREDUSPUPIDUSUTVAVEVGVKEVLUPVLTVCVBVD $.
      $( [18-Oct-1014] $)
  $}

  ${
    ldualsbase.f $e |- F = ( Scalar ` W ) $.
    ldualsbase.l $e |- L = ( Base ` F ) $.
    ldualsbase.d $e |- D = ( LDual ` W ) $.
    ldualsbase.r $e |- R = ( Scalar ` D ) $.
    ldualsbase.k $e |- K = ( Base ` R ) $.
    ldualsbase.w $e |- ( ph -> W e. V ) $.
    $( Base set of scalar ring for the dual of a vector space. $)
    ldualsbase $p |- ( ph -> K = L ) $=
      ( cro cfv cbs eqid cvv csca ldualsca fveq2d syl5eq wcel fvex a1i roppbase
      eqeltri eqtrd ) AEDOPZQPZFAECQPUKMACUJQABCDUJHGIUJRZKLNUAUBUCAFUKDUJSJULU
      KRDSUDADHTPSIHTUEUHUFUGUI $.
      $( [24-Oct-1014] $)
  $}

  ${
    ldualsadd.f $e |- F = ( Scalar ` W ) $.
    ldualsadd.q $e |- Q = ( +g ` F ) $.
    ldualsadd.d $e |- D = ( LDual ` W ) $.
    ldualsadd.r $e |- R = ( Scalar ` D ) $.
    ldualsadd.p $e |- P = ( +g ` R ) $.
    ldualsadd.w $e |- ( ph -> W e. V ) $.
    $( Scalar addition for the dual of a vector space. $)
    ldualsadd $p |- ( ph -> P = Q ) $=
      ( cro cfv cplusg eqid cvv csca ldualsca fveq2d syl5eq eqeltri a1i roppadd
      wcel fvex eqtrd ) ACFOPZQPZDACEQPUKMAEUJQABEFUJHGIUJRZKLNUAUBUCADUKFUJSJU
      LUKRFSUGAFHTPSIHTUHUDUEUFUI $.
      $( [24-Oct-1014] $)
  $}

  ${
    ldualsmul.f $e |- F = ( Scalar ` W ) $.
    ldualsmul.k $e |- K = ( Base ` F ) $.
    ldualsmul.t $e |- T = ( .r ` F ) $.
    ldualsmul.o $e |- O = ( ROpp ` F ) $.
    ldualsmul.d $e |- D = ( LDual ` W ) $.
    ldualsmul.r $e |- R = ( Scalar ` D ) $.
    ldualsmul.m $e |- M = ( .r ` R ) $.
    ldualsmul.w $e |- ( ph -> W e. V ) $.
    ldualsmul.x $e |- ( ph -> X e. K ) $.
    ldualsmul.y $e |- ( ph -> Y e. K ) $.
    $( Scalar multiplication for the dual of a vector space. $)
    ldualsmul $p |- ( ph -> ( X M Y ) = ( Y T X ) ) $=
      ( co cmulr cfv ldualsca fveq2d syl5eq cvv eqid wcel csca fvex eqeltri a1i
      oveqd roppmul eqtrd ) AKLGUCKLHUDUEZUCLKDUCAGUSKLAGCUDUEUSSACHUDABCEHJIMP
      QRTUFUGUHUPAFEDUSHUIKLNOPUSUJEUIUKAEJULUEUIMJULUMUNUOUAUBUQUR $.
      $( [19-Oct-1014] $)
  $}

  ${
    $d f k F $.  $d f k K $.  $d f k W $.
    ldualfvs.f $e |- F = ( LFnl ` W ) $.
    ldualfvs.v $e |- V = ( Base ` W ) $.
    ldualfvs.r $e |- R = ( Scalar ` W ) $.
    ldualfvs.k $e |- K = ( Base ` R ) $.
    ldualfvs.t $e |- T = ( .r ` R ) $.
    ldualfvs.d $e |- D = ( LDual ` W ) $.
    ldualfvs.s $e |- S = ( vsca ` D ) $.
    ldualfvs.w $e |- ( ph -> W e. Y ) $.
    ${
      ldualfvs.m $e |- M
           = ( k e. K , f e. F |-> ( f oF T ( V X. { k } ) ) ) $.
      $( Scalar product operation for the dual of a vector space. $)
      ldualfvs $p |- ( ph -> S = M ) $=
        ( cvsca cfv cnx cbs cop cplusg cof cxp cres cro ctp cv csn co cmpt2 cun
        csca eqid ldualset fveq2d cvv wcel wceq fvex clfn mpt2ex lmodvsca ax-mp
        eqeltri eqtri 3eqtr4g ) ABUCUDUEUFUDHUGUEUHUDCUHUDZUIHHUJUKZUGUEUSUDCUL
        UDZUGUMUEUCUDGFIHFUNKGUNUOUJEUIUPZUQZUGUOURZUCUDZDJABVSUCAVNBVOCVREFGHI
        VPKLMOVNUTVOUTNSPQRVPUTVRUTUAVAVBTJVRVTUBVRVCVDVRVTVEGFIHVQICUFUDVCQCUF
        VFVKHLVGUDVCNLVGVFVKVHHVOVRVPVSVCVSUTVIVJVLVM $.
        $( [18-Oct-1014] $)
    $}

    $d f G $.  $d f k T $.  $d f k V $.  $d f k X $.
    ldualvs.x $e |- ( ph -> X e. K ) $.
    ldualvs.g $e |- ( ph -> G e. F ) $.
    $( Scalar product operation value (which is a functional) for the dual of a
       vector space. $)
    ldualvs $p |- ( ph -> ( X S G ) = ( G oF T ( V X. { X } ) ) ) $=
      ( vk vf co cv csn cxp cof cmpt2 eqid ldualfvs oveqd wcel wceq sneq xpeq2d
      oveq2d oveq1 ovex ovmpt2 syl2anc eqtrd ) AKGDUEKGUCUDHFUDUFZIUCUFZUGZUHZE
      UIZUEZUJZUEZGIKUGZUHZVHUEZADVJKGABCDEUDUCFHVJIJLMNOPQRSTVJUKZULUMAKHUNGFU
      NVKVNUOUAUBUCUDKGHFVIVNVJVDVMVHUEVEKUOZVGVMVDVHVPVFVLIVEKUPUQURVDGVMVHUSV
      OGVMVHUTVAVBVC $.
      $( [18-Oct-1014] $)

    ldualvs.a $e |- ( ph -> A e. V ) $.
    $( Value of scalar product operation value for the dual of a vector
       space. $)
    ldualvsval $p |- ( ph -> ( ( X S G ) ` A ) = ( ( G ` A ) T X ) ) $=
      ( co cfv csn cxp cof ldualvs fveq1d wcel wceq cvv cbs fvex eqeltri a1i wf
      wfn lflf syl2anc ffn syl wa eqidd ofc2 mpdan eqtrd ) ABLHEUEZUFBHJLUGUHFU
      IUEZUFZBHUFZLFUEZABVJVKACDEFGHIJKLMNOPQRSTUAUBUCUJUKABJULZVLVNUMUDAJLVMFH
      UNIBJUNULAJKUOUFUNOKUOUPUQURUBAJIHUSZHJUTAKMULHGULVPUAUCDGHIJKMPQONVAVBJI
      HVCVDAVOVEVMVFVGVHVI $.
      $( [18-Oct-1014] $)
  $}

  ${
    ldualvscl.f $e |- F = ( LFnl ` W ) $.
    ldualvscl.r $e |- R = ( Scalar ` W ) $.
    ldualvscl.k $e |- K = ( Base ` R ) $.
    ldualvscl.d $e |- D = ( LDual ` W ) $.
    ldualvscl.s $e |- S = ( vsca ` D ) $.
    ldualvscl.w $e |- ( ph -> W e. LMod ) $.
    ldualvscl.x $e |- ( ph -> X e. K ) $.
    ldualvscl.g $e |- ( ph -> G e. F ) $.
    $( The scalar product operation value is a functional. $)
    ldualvscl $p |- ( ph -> ( X S G ) e. F ) $=
      ( co cfv eqid cbs csn cxp cmulr cof clmod ldualvs lflvscl eqeltrd ) AIFDR
      FHUASZIUBUCCUDSZUEREABCDUKEFGUJHIUFJUJTZKLUKTZMNOPQUGACIUKEFGUJHULKLUMJOQ
      PUHUI $.
      $( [18-Oct-1014] $)
  $}

  ${
    ldualvsass.f $e |- F = ( LFnl ` W ) $.
    ldualvsass.r $e |- R = ( Scalar ` W ) $.
    ldualvsass.k $e |- K = ( Base ` R ) $.
    ldualvsass.t $e |- T = ( .r ` R ) $.
    ldualvsass.d $e |- D = ( LDual ` W ) $.
    ldualvsass.s $e |- S = ( vsca ` D ) $.
    ldualvsass.w $e |- ( ph -> W e. LMod ) $.
    ldualvsass.x $e |- ( ph -> X e. K ) $.
    ldualvsass.y $e |- ( ph -> Y e. K ) $.
    ldualvsass.g $e |- ( ph -> G e. F ) $.
    $( Associative law for scalar product operation. $)
    ldualvsass $p |- ( ph -> ( ( Y T X ) S G ) = ( X S ( Y S G ) ) ) $=
      ( co cbs cfv csn cxp cof clmod eqid crg lmodrng syl rngcl syl3anc ldualvs
      wcel eqidd eqtrd lflvsass lflvscl eqcomd oveq2d ) AKJEUBZGDUBZJGIUCUDZKUE
      UFEUGZUBZDUBZJKGDUBZDUBZAVDVGVEJUEUFVFUBZVHAVDGVEVCUEUFVFUBZVKAVDVLVLABCD
      EFGHVEIVCUHLVEUIZMNOPQRACUJUPZKHUPJHUPVCHUPAIUHUPVNRCIMUKULTSHCEKJNOUMUNU
      AUOAVLUQURACEFGHVEIKJVMMNOLRTSUAUSURAVHVKABCDEFVGHVEIJUHLVMMNOPQRSACKEFGH
      VEIVMMNOLRUATUTUOVAURAVJVHAVIVGJDABCDEFGHVEIKUHLVMMNOPQRTUAUOVBVAUR $.
      $( [20-Oct-1014] $)
  $}

  ${
    ldualvsass2.f $e |- F = ( LFnl ` W ) $.
    ldualvsass2.r $e |- R = ( Scalar ` W ) $.
    ldualvsass2.k $e |- K = ( Base ` R ) $.
    ldualvsass2.d $e |- D = ( LDual ` W ) $.
    ldualvsass2.q $e |- Q = ( Scalar ` D ) $.
    ldualvsass2.t $e |- T = ( .r ` Q ) $.
    ldualvsass2.s $e |- S = ( vsca ` D ) $.
    ldualvsass2.w $e |- ( ph -> W e. LMod ) $.
    ldualvsass2.x $e |- ( ph -> X e. K ) $.
    ldualvsass2.y $e |- ( ph -> Y e. K ) $.
    ldualvsass2.g $e |- ( ph -> G e. F ) $.
    $( Associative law for scalar product operation, using operations from the
       dual space. $)
    ldualvsass2 $p |- ( ph -> ( ( X T Y ) S G ) = ( X S ( Y S G ) ) ) $=
      ( co cmulr cfv cro clmod eqid ldualsmul oveq1d ldualvsass eqtrd ) AKLFUDZ
      HEUDLKDUEUFZUDZHEUDKLHEUDEUDAUNUPHEABCUODIFDUGUFZUHJKLNOUOUIZUQUIPQRTUAUB
      UJUKABDEUOGHIJKLMNOURPSTUAUBUCULUM $.
      $( [20-Oct-1014] $)
  $}

  ${
    ldualvsdi1.f $e |- F = ( LFnl ` W ) $.
    ldualvsdi1.r $e |- R = ( Scalar ` W ) $.
    ldualvsdi1.k $e |- K = ( Base ` R ) $.
    ldualvsdi1.d $e |- D = ( LDual ` W ) $.
    ldualvsdi1.p $e |- P = ( +g ` D ) $.
    ldualvsdi1.s $e |- S = ( vsca ` D ) $.
    ldualvsdi1.w $e |- ( ph -> W e. LMod ) $.
    ldualvsdi1.x $e |- ( ph -> X e. K ) $.
    ldualvsdi1.g $e |- ( ph -> G e. F ) $.
    ldualvsdi1.h $e |- ( ph -> H e. F ) $.
    $( Distributive law for scalar product operation, using operations from the
       dual space. $)
    ldualvsdi1 $p |- ( ph
        -> ( X S ( G P H ) ) = ( ( X S G ) P ( X S H ) ) ) $=
      ( cplusg cfv cof cbs csn cxp cmulr clmod eqid ldualvs ldualvscl ldualvadd
      co oveq12d ldualvaddcl oveq1d eqid1 lflvsdi1 3eqtrd 3eqtr4rd ) AKGEUNZKHE
      UNZDUBUCZUDZUNGJUEUCZKUFUGZDUHUCZUDZUNZHVGVIUNZVEUNZVBVCCUNKGHCUNZEUNZAVB
      VJVCVKVEABDEVHFGIVFJKUILVFUJZMNVHUJZOQRSTUKABDEVHFHIVFJKUILVOMNVPOQRSUAUK
      UOAVDBCDFVBVCJUILMVDUJZOPRABDEFGIJKLMNOQRSTULABDEFHIJKLMNOQRSUAULUMAVNVMV
      GVIUNGHVEUNZVGVIUNVLABDEVHFVMIVFJKUILVOMNVPOQRSABCFGHJLOPRTUAUPUKAVMVRVGV
      IAVDBCDFGHJUILMVQOPRTUAUMUQAVDDVHFGHIVFJKVOMNVDURVPLRSTUAUSUTVA $.
      $( [21-Oct-1014] $)
  $}

  ${
    ldualvsdi2.f $e |- F = ( LFnl ` W ) $.
    ldualvsdi2.r $e |- R = ( Scalar ` W ) $.
    ldualvsdi2.a $e |- A = ( +g ` R ) $.
    ldualvsdi2.k $e |- K = ( Base ` R ) $.
    ldualvsdi2.d $e |- D = ( LDual ` W ) $.
    ldualvsdi2.p $e |- P = ( +g ` D ) $.
    ldualvsdi2.s $e |- S = ( vsca ` D ) $.
    ldualvsdi2.w $e |- ( ph -> W e. LMod ) $.
    ldualvsdi2.x $e |- ( ph -> X e. K ) $.
    ldualvsdi2.y $e |- ( ph -> Y e. K ) $.
    ldualvsdi2.g $e |- ( ph -> G e. F ) $.
    $( Reverse distributive law for scalar product operation, using operations
       from the dual space. $)
    ldualvsdi2 $p |- ( ph
        -> ( ( X A Y ) S G ) = ( ( X S G ) P ( Y S G ) ) ) $=
      ( cbs cfv csn cxp cmulr clmod eqid wcel lmodacl syl3anc ldualvs lflvsdi2a
      co cof ldualvscl ldualvadd oveq12d eqtr2d 3eqtrd ) AKLBUPZHFUPHJUDUEZVCUF
      UGEUHUEZUQZUPHVDKUFUGVFUPZHVDLUFUGVFUPZBUQZUPZKHFUPZLHFUPZDUPZACEFVEGHIVD
      JVCUIMVDUJZNPVEUJZQSTAJUIUKKIUKLIUKVCIUKTUAUBBEIJKLNPOULUMUCUNABEVEGHIVDJ
      KLVNNPOVOMTUAUBUCUOAVMVKVLVIUPVJABCDEGVKVLJUIMNOQRTACEFGHIJKMNPQSTUAUCURA
      CEFGHIJLMNPQSTUBUCURUSAVKVGVLVHVIACEFVEGHIVDJKUIMVNNPVOQSTUAUCUNACEFVEGHI
      VDJLUIMVNNPVOQSTUBUCUNUTVAVB $.
      $( [21-Oct-1014] $)
  $}


  ${
    $d x y z D $.  $d x y z F $.  $d x y z K $.  $d x y z R $.  $d x y z S $.
    $d x y V $.  $d y W $.  $d x y z ph $.
    ldualgrp.d $e |- D = ( LDual ` W ) $.
    ldualgrp.w $e |- ( ph -> W e. LMod ) $.
    ${
      ldualgrp.v $e |- V = ( Base ` W ) $.
      ldualgrp.p $e |- P = oF ( +g ` W ) $.
      ldualgrp.f $e |- F = ( LFnl ` W ) $.
      ldualgrp.r $e |- R = ( Scalar ` W ) $.
      ldualgrp.k $e |- K = ( Base ` R ) $.
      ldualgrp.t $e |- T = ( .r ` R ) $.
      ldualgrp.o $e |- O = ( ROpp ` R ) $.
      ldualgrp.s $e |- S = ( vsca ` D ) $.
      $( Lemma for ~ ldualgrp . $)
      ldualgrplem $p |- ( ph -> D e. Grp ) $=
        ( vx vy vz cplusg cfv cv cminusg c0g csn cxp cbs clmod eqid1 ldualvbase
        cmpt eqidd cvv wcel cld fvex eqeltri a1i w3a 3ad2ant1 simp2 ldualvaddcl
        eqcomd simp3 wa cof adantr simpr2 simpr3 ldualvadd oveq2d simpr1 oveq1d
        co eqid lfladdass 3eqtrd 3eqtr4rd lfl0f simpr lfladd0l lflnegcl lflnegl
        syl eqtrd isgrpd ) AUBUCUDGBUEUFZBUCJUCUGZUBUGZUFDUHUFZUFUPZJDUIUFZUJUK
        ZABULUFZGABGWSKUMPLWSUNMUOVHAWLUQBURUSABKUTUFURLKUTVAVBVCAWNGUSZWMGUSZV
        DBWLGWNWMKPLWLUNAWTKUMUSZXAMVEAWTXAVFAWTXAVIVGAWTXAUDUGZGUSZVDZVJZWNWMX
        CWLVSZDUEUFZVKZVSWNWMXCXIVSZXIVSZWNXGWLVSWNWMWLVSZXCWLVSZXFXGXJWNXIXFXH
        BWLDGWMXCKUMPQXHVTZLWLVTZAXBXEMVLZAWTXAXDVMZAWTXAXDVNZVOVPXFXHBWLDGWNXG
        KUMPQXNLXOXPAWTXAXDVQZXFBWLGWMXCKPLXOXPXQXRVGVOXFXMXLXCXIVSWNWMXIVSZXCX
        IVSXKXFXHBWLDGXLXCKUMPQXNLXOXPXFBWLGWNWMKPLXOXPXSXQVGXRVOXFXLXTXCXIXFXH
        BWLDGWNWMKUMPQXNLXOXPXSXQVOVRXFXHDGWNWMXCKQXNPXPXSXQXRWAWBWCAXBWRGUSZMD
        GWQJKQWQVTZNPWDWIZAWTVJZWRWNWLVSWRWNXIVSWNYDXHBWLDGWRWNKUMPQXNLXOAXBWTM
        VLZAYAWTYCVLAWTWEZVOYDXHDGWNWQJKNQXNYBPYEYFWFWJYDUCDGWNWOWPJKNQWOVTZWPV
        TZPYEYFWGZYDWPWNWLVSWPWNXIVSWRYDXHBWLDGWPWNKUMPQXNLXOYEYIYFVOYDUCXHDGWN
        WOWPWQJKNQYGYHPYEYFXNYBWHWJWK $.
        $( [22-Oct-1014] $)
    $}

    $( The dual of a vector space is a group. $)
    ldualgrp $p |- ( ph -> D e. Grp ) $=
      ( cplusg cfv cof csca cvsca cmulr clfn cbs cro eqid ldualgrplem ) ABCFGHZ
      CIGZBJGZRKGZCLGZRMGZRNGZCMGZCDEUDOQOUAOROUBOTOUCOSOP $.
      $( [21-Oct-1014] $)
  $}

  ${
    ldualv0.v $e |- V = ( Base ` W ) $.
    ldualv0.r $e |- R = ( Scalar ` W ) $.
    ldualv0.z $e |- Z = ( 0g ` R ) $.
    ldualv0.d $e |- D = ( LDual ` W ) $.
    ldualv0.o $e |- O = ( 0g ` D ) $.
    ldualv0.w $e |- ( ph -> W e. LMod ) $.
    $( The zero vector of the dual of a vector space. $)
    ldualv0 $p |- ( ph -> O = ( V X. { Z } ) ) $=
      ( cplusg cfv co wceq clmod eqid wcel csn cxp cof clfn lfl0f syl ldualvadd
      lfladd0l eqtrd cgrp cbs ldualgrp ldualvbase eleqtrrd grpid syl2anc mpbid
      wb ) AEGUAUBZUSBNOZPZUSQZDUSQZAVAUSUSCNOZUCPUSAVDBUTCFUDOZUSUSFRVESZIVDSZ
      KUTSZMAFRTUSVETMCVEGEFIJHVFUEUFZVIUGAVDCVEUSGEFHIVGJVFMVIUHUIABUJTUSBUKOZ
      TVBVCURABFKMULAUSVEVJVIABVEVJFRVFKVJSZMUMUNVJUTBDUSVKVHLUOUPUQ $.
      $( [24-Oct-1014] $)
  $}

  ${
    $d x y z D $.  $d x y z F $.  $d x y z K $.  $d x y z R $.  $d x y z S $.
    $d x y z ph $.
    lduallmod.d $e |- D = ( LDual ` W ) $.
    lduallmod.w $e |- ( ph -> W e. LMod ) $.
    ${
      lduallmod.v $e |- V = ( Base ` W ) $.
      lduallmod.p $e |- P = oF ( +g ` W ) $.
      lduallmod.f $e |- F = ( LFnl ` W ) $.
      lduallmod.r $e |- R = ( Scalar ` W ) $.
      lduallmod.k $e |- K = ( Base ` R ) $.
      lduallmod.t $e |- T = ( .r ` R ) $.
      lduallmod.o $e |- O = ( ROpp ` R ) $.
      lduallmod.s $e |- S = ( vsca ` D ) $.
      $( Lemma for ~ lduallmod . $)
      lduallmodlem $p |- ( ph -> D e. LMod ) $=
        ( vx vy vz cplusg cfv csca cmulr cur clmod eqid ldualvbase eqcomd eqidd
        cbs ldualsca cvsca wceq a1i crg wcel lmodrng syl roppbase roppadd eqid1
        fveq2d ropp1 ropprng ldualgrp w3a 3ad2ant1 simp2 simp3 ldualvscl adantr
        cv wa simpr1 simpr2 simpr3 ldualvsdi1 ldualvsdi2 ldualvsass2 co csn cxp
        cof rngidcl simpr ldualvs lfl1sc eqtrd islmodd ) AUBUCUDBUEUFZHDUEUFZEB
        UGUFZUHUFZDUIUFZIGBABUOUFZGABGWTKUJPLWTUKMULUMAWOUNAWQIABWQDIKUJQTLWQUK
        ZMUPZUMEBUQUFURAUAUSAIUOUFZHAHXCDIUTRTXCUKAKUJVAZDUTVAZMDKQVBVCZVDUMAIU
        EUFZWPAWPXGDIUTWPUKZTXGUKXFVEUMAWQIUHXBVGAIUIUFZWSADWSIXIWSUKZTXIVFXFVH
        UMADITXFVIABKLMVJAUBVQZHVAZUCVQZGVAZVKBDEGXMHKXKPQRLUAAXLXDXNMVLAXLXNVM
        AXLXNVNVOAXLXNUDVQZGVAZVKZVRBWODEGXMXOHKXKPQRLWOUKZUAAXDXQMVPAXLXNXPVSA
        XLXNXPVTAXLXNXPWAWBAXLXMHVAZXPVKZVRZWPBWODEGXOHKXKXMPQXHRLXRUAAXDXTMVPZ
        AXLXSXPVSZAXLXSXPVTZAXLXSXPWAZWCYABWQDEWRGXOHKXKXMPQRLXAWRUKUAYBYCYDYEW
        DAXKGVAZVRZWSXKEWEXKJWSWFWGFWHWEXKYGBDEFGXKHJKWSUJPNQRSLUAAXDYFMVPZAWSH
        VAZYFAXEYIXFHDWSRXJWIVCVPAYFWJZWKYGDFGXKWSHJKNQPRSXJYHYJWLWMWN $.
        $( [22-Oct-1014] $)
    $}

    $( The dual of a left module is also a left module. $)
    lduallmod $p |- ( ph -> D e. LMod ) $=
      ( cplusg cfv cof csca cvsca cmulr clfn cbs cro eqid lduallmodlem ) ABCFGH
      ZCIGZBJGZRKGZCLGZRMGZRNGZCMGZCDEUDOQOUAOROUBOTOUCOSOP $.
      $( [22-Oct-1014] $)
  $}

  ${
    $d x y z D $.  $d x y z F $.  $d x y z K $.  $d x y z R $.  $d x y z S $.
    $d x y z ph $.
    lduallvec.d $e |- D = ( LDual ` W ) $.
    lduallvec.w $e |- ( ph -> W e. LVec ) $.
    $( The dual of a left vector space is also a left vector space.  Note that
       scalar multiplication is reversed by ~ df-ropp ; otherwise, the dual
       would be a right vector space as is sometimes the case in the
       literature. $)
    lduallvec $p |- ( ph -> D e. LVec ) $=
      ( clmod wcel csca cfv cdr clvec lveclmod lduallmod eqid ldualsca lvecdrng
      syl cro roppdrng eqeltrd islvec2 sylanbrc ) ABFGBHIZJGBKGABCDACKGZCFGECLQ
      MAUCCHIZRIZJABUCUEUFCKUENZUFNZDUCNZEOAUEUFUHAUDUEJGEUECUGPQSTUCBUIUAUB $.
      $( [22-Oct-1014] $)
  $}

  ${
    $d g k D $.  $d k F $.  $d g k G $.  $d k L $.  $d g k N $.  $d k W $.
    $d g k ph $.
    ldual1dim.f $e |- F = ( LFnl ` W ) $.
    ldual1dim.l $e |- L = ( LKer ` W ) $.
    ldual1dim.d $e |- D = ( LDual ` W ) $.
    ldual1dim.n $e |- N = ( LSpan ` D ) $.
    ldual1dim.w $e |- ( ph -> W e. LVec ) $.
    ldual1dim.g $e |- ( ph -> G e. F ) $.
    $( Equivalent expressions for a 1-dim subspace (ray) of functionals. $)
    ldual1dim $p |- ( ph -> ( N ` { G } )
        = { g e. F | ( L ` G ) C_ ( L ` g ) } ) $=
      ( vk cfv cbs wcel wa eqid cv cvsca co wceq csca cab csn cxp cmulr cof wss
      clvec ldualsbase eleq2d anbi1d adantr simpr ldualvs eqeq2d pm5.32da bitrd
      wrex crab rexbidv2 clmod lveclmod lduallmod syl ldualvbase eleqtrrd lspsn
      abbidv syl2anc lfl1dim 3eqtr4d ) ACUAZOUAZEBUBPZUCZUDZOBUEPZQPZVBZCUFZVPE
      HQPZVQUGUHHUEPZUIPZUJUCZUDZOWFQPZVBZCUFEUGGPZEFPVPFPUKCDVCAWCWKCAVTWIOWBW
      JAVQWBRZVTSVQWJRZVTSWNWISAWMWNVTAWBWJVQABWAWFWBWJULHWFTZWJTZKWATZWBTZMUMU
      NUOAWNVTWIAWNSZVSWHVPWSBWFVRWGDEWJWEHVQULIWETZWOWPWGTZKVRTZAHULRZWNMUPAWN
      UQAEDRWNNUPURUSUTVAVDVLABVERZEBQPZRWLWDUDAXCXDMXCBHKHVFVGVHAEDXENABDXEHUL
      IKXETZMVIVJCVROWAWBGXEBEWQWRXFXBLVKVMAWFWGCODEWJFWEHWTWOIJWPXAMNVNVO $.
      $( [24-Oct-1014] $)
  $}

