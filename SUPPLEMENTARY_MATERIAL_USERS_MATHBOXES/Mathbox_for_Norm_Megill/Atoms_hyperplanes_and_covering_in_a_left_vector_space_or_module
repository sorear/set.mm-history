$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Atoms, hyperplanes, and covering in a left vector space (or module)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c LSAtoms $.
  $c LSHyp $.

  $( Extend class notation with all 1-dim subspaces (atoms) of a left module or
     left vector space. $)
  clsa $a class LSAtoms $.

  $( Extend class notation with all subspaces of a left module or left vector
     space that are hyperplanes. $)
  clsh $a class LSHyp $.

  ${
    $d s v w $.
    $( Define the set of all 1-dim subspaces (atoms) of a left module or left
       vector space. $)
    df-lsatoms $a |- LSAtoms = ( w e. _V |-> { s | E. v e. ( ( Base ` w ) \
                 { ( 0g ` w ) } ) s = ( ( LSpan ` w ) ` { v } ) } ) $.
  $}

  ${
    $d s v w $.
    $( Define the set of all hyperplanes of a left module or left vector
       space.  Also called co-atoms, these are subspaces that are one dimension
       less that the full space. $)
    df-lshyp $a |- LSHyp = ( w e. _V |-> { s e. ( LSubSp ` w ) |
       ( s =/= ( Base ` w ) /\ E. v e. ( Base ` w )
           ( ( LSpan ` w ) ` ( s u. { v } ) ) = ( Base ` w ) ) } ) $.
  $}

  ${
    $d w N $.  $d s w S $.  $d v w V $.  $d s v w W $.
    lshpset.v $e |- V = ( Base ` W ) $.
    lshpset.n $e |- N = ( LSpan ` W ) $.
    lshpset.s $e |- S = ( LSubSp ` W ) $.
    lshpset.h $e |- H = ( LSHyp ` W ) $.
    $( The set of all hyperplanes of a left module or left vector space. $)
    lshpset $p |- ( W e. X -> H = { s e. S | ( s =/= V /\
                   E. v e. V ( N ` ( s u. { v } ) ) = V ) } ) $=
      ( vw cfv cv wceq cvv cbs clspn clss wcel clsh wne csn cun wrex crab fveq2
      wa elex syl6eqr neeq2d fveq1d eqeq12d rexeqbidv anbi12d rabeqbidv eqeltri
      df-lshyp fvex rabex fvmpt syl syl5eq ) FGUAZCFUBNZHOZEUCZVGAOUDUEZDNZEPZA
      EUFZUIZHBUGZLVEFQUAVFVNPFGUJMFVGMOZRNZUCZVIVOSNZNZVPPZAVPUFZUIZHVOTNZUGVN
      QUBVOFPZWBVMHWCBWDWCFTNZBVOFTUHKUKWDVQVHWAVLWDVPEVGWDVPFRNEVOFRUHIUKZULWD
      VTVKAVPEWFWDVSVJVPEWDVIVRDWDVRFSNDVOFSUHJUKUMWFUNUOUPUQMAHUSVMHBBWEQKFTUT
      URVAVBVCVD $.
      $( [29-Jun-2014] $)

    $d s N $.  $d s v U $.  $d s V $.
    $( The predicate "is a hyperplane" (of a left module or left vector
       space). $)
    islshp $p |- ( W e. X -> ( U e. H <-> ( U e. S /\ U =/= V
        /\ E. v e. V ( N ` ( U u. { v } ) ) = V ) ) ) $=
      ( vs wcel cv wne cun cfv wceq wa csn wrex crab lshpset eleq2d neeq1 uneq1
      w3a fveq2d eqeq1d rexbidv anbi12d elrab 3anass bitr4i syl6bb ) GHNZCDNCMO
      ZFPZURAOUAZQZERZFSZAFUBZTZMBUCZNZCBNZCFPZCUTQZERZFSZAFUBZUHZUQDVFCABDEFGH
      MIJKLUDUEVGVHVIVMTZTVNVEVOMCBURCSZUSVIVDVMURCFUFVPVCVLAFVPVBVKFVPVAVJEURC
      UTUGUIUJUKULUMVHVIVMUNUOUP $.
      $( [29-Jun-2014] $)
  $}

  ${
    $d v S $.  $d v U $.  $d v V $.  $d v W $.  $d v ph $.
    lshpsmel.v $e |- V = ( Base ` W ) $.
    lshpsmel.n $e |- N = ( LSpan ` W ) $.
    lshpsmel.s $e |- S = ( LSubSp ` W ) $.
    lshpsmel.p $e |- P = ( LSSum ` W ) $.
    lshpsmel.h $e |- H = ( LSHyp ` W ) $.
    lshpsmel.w $e |- ( ph -> W e. LMod ) $.
    $( Hyperplane properties expressed with subspace sums. $)
    lshpsmel $p |- ( ph -> ( U e. H <-> ( U e. S /\ U =/= V /\
                   E. v e. V ( U P ( N ` { v } ) ) = V ) ) ) $=
      ( wcel cun cfv wceq wa wne cv csn wrex w3a co clmod wb islshp syl simplrl
      ad2antrr lspid syl2anc uneq1d fveq2d wss lssss adantl lspun syl3anc lspcl
      snssiALT lsmsp 3eqtr4rd eqeq1d rexbidva pm5.32da bicomd df-3an 3bitr4g
      bitrd ) AEFPZEDPZEHUAZEBUBZUCZQGRZHSZBHUDZUEZVNVOEVQGRZCUFZHSZBHUDZUEZAIU
      GPZVMWAUHOBDEFGHIUGJKLNUIUJAVNVOTZVTTZWHWETZWAWFAWJWIAWHWEVTAWHTZWDVSBHWK
      VPHPZTZWCVRHWMEGRZWBQZGRZEWBQZGRZVRWCWMWOWQGWMWNEWBWMWGVNWNESAWGWHWLOULZA
      VNVOWLUKZDEGILKUMUNUOUPWMWGEHUQZVQHUQZVRWPSWSWMWGVNXAWSWTDEHIUGJLURUNWLXB
      WKVPHVCUSZEVQGHIJKUTVAWMWGVNWBDPZWCWRSWSWTWMWGXBXDWSXCDVQGHIJLKVBUNCDEWBG
      ILKMVDVAVEVFVGVHVIVNVOVTVJVNVOWEVJVKVL $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v U $.  $d v W $.
    lshplss.s $e |- S = ( LSubSp ` W ) $.
    lshplss.h $e |- H = ( LSHyp ` W ) $.
    lshplss.w $e |- ( ph -> W e. LMod ) $.
    lshplss.u $e |- ( ph -> U e. H ) $.
    $( A hyperplane is a subspace. $)
    lshplss $p |- ( ph -> U e. S ) $=
      ( vv wcel cbs cfv wne cv csn cun clspn clmod eqid wceq wrex w3a wb islshp
      syl mpbid simp1d ) ACBKZCELMZNZCJOPQERMZMUJUAJUJUBZACDKZUIUKUMUCZIAESKUNU
      OUDHJBCDULUJESUJTULTFGUEUFUGUH $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v U $.  $d v V $.  $d v W $.
    lshpne.v $e |- V = ( Base ` W ) $.
    lshpne.h $e |- H = ( LSHyp ` W ) $.
    lshpne.w $e |- ( ph -> W e. LMod ) $.
    lshpne.u $e |- ( ph -> U e. H ) $.
    $( A hyperplane is not equal to the vector space. $)
    lshpne $p |- ( ph -> U =/= V ) $=
      ( vv clss cfv wcel wne cv csn cun clspn clmod eqid wceq w3a wb islshp syl
      wrex mpbid simp2d ) ABEKLZMZBDNZBJOPQERLZLDUAJDUFZABCMZUJUKUMUBZIAESMUNUO
      UCHJUIBCULDESFULTUITGUDUEUGUH $.
      $( [4-Jul-2014] $)
  $}

  ${
    $d v U $.  $d v V $.  $d v W $.  $d v ph $.
    lshpnel.v $e |- V = ( Base ` W ) $.
    lshpnel.n $e |- N = ( LSpan ` W ) $.
    lshpnel.p $e |- P = ( LSSum ` W ) $.
    lshpnel.h $e |- H = ( LSHyp ` W ) $.
    lshpnel.w $e |- ( ph -> W e. LMod ) $.
    lshpnel.u $e |- ( ph -> U e. H ) $.
    lshpnel.x $e |- ( ph -> X e. V ) $.
    lshpnel.e $e |- ( ph -> ( U P ( N ` { X } ) ) = V ) $.
    $( The member of the span in the hyperplane definition does not belong to
       the hyperplane. $)
    lshpnel $p |- ( ph -> -. X e. U ) $=
      ( wcel wceq cfv adantr wne wn lshpne wa csn co clmod clss lshplss lspsncl
      wss syl2anc simpr lspsnss syl3anc lsmss1 syl121anc eqtr3d ex necon3ad mpd
      eqid ) ACFUAHCQZUBACDFGILMNUCAVCCFAVCCFRAVCUDZCHUEESZBUFZCFVDGUGQZCGUHSZQ
      ZVEVHQZVECUKZVFCRAVGVCMTZAVIVCAVHCDGVHVBZLMNUITZVDVGHFQZVJVLAVOVCOTVHEFGH
      IVMJUJULVDVGVIVCVKVLVNAVCUMVHCEGHVMJUNUOBVHCVEGVMKUPUQAVFFRVCPTURUSUTVA
      $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v N $.  $d v P $.  $d v U $.  $d v V $.  $d v W $.  $d v X $.
    $d v ph $.
    lshpnelr.v $e |- V = ( Base ` W ) $.
    lshpnelr.n $e |- N = ( LSpan ` W ) $.
    lshpnelr.p $e |- P = ( LSSum ` W ) $.
    lshpnelr.h $e |- H = ( LSHyp ` W ) $.
    lshpnelr.w $e |- ( ph -> W e. LVec ) $.
    lshpnelr.u $e |- ( ph -> U e. H ) $.
    lshpnelr.x $e |- ( ph -> X e. V ) $.
    ${
      lshpnelr.e $e |- ( ph -> -. X e. U ) $.
      $( The subspace sum of a hyperplane and an element not in it is the
         vector space.  TODO: combine into ~ lshpnelb ? $)
      lshpnelr $p |- ( ph -> ( U P ( N ` { X } ) ) = V ) $=
        ( vv wcel wss syl2anc cv csn cfv co wceq wrex clss wne eqid clvec clmod
        w3a lveclmod syl lshpsmel mpbid simp3d wpss simp1 simp2 lshplss lspsncl
        lsmub1 syl3anc wn lsmub2 lspsnid sseldd nelne1 necomd sylanbrc 3ad2ant1
        df-pss lsmcl lssss simp3 sseqtr4d wa adantr simpr lsmcv syl211anc eqtrd
        3exp rexlimdv mpd ) ACQUAZUBEUCBUDZFUEZQFUFZCHUBEUCZBUDZFUEZACGUGUCZRZC
        FUHZWJACDRWOWPWJULNAQBWNCDEFGIJWNUIZKLAGUJRZGUKRZMGUMUNZUOUPUQAWIWMQFAW
        GFRZWIWMAXAWIULZWLWHFXBAXACWLURZWLWHSWLWHUEAXAWIUSAXAWIUTAXAXCWIACWLSZC
        WLUHXCAWSWOWKWNRZXDWTAWNCDGWQLWTNVAZAWSHFRZXEWTOWNEFGHIWQJVBTZBWNCWKGWQ
        KVCVDAWLCAHWLRHCRVEWLCUHAWKWLHAWSWOXEWKWLSWTXFXHBWNCWKGWQKVFVDAWSXGHWKR
        WTOEFGHIJVGTVHPHWLCVITVJCWLVMVKVLXBWLFWHAXAWLFSZWIAWRWLWNRZXIMAWSWOXEXJ
        WTXFXHBWNCWKGWQKVNVDZWNWLFGUJIWQVOTVLAXAWIVPZVQAXAVRBWNCWLEFGWGIWQJKAWR
        XAMVSAWOXAXFVSAXJXAXKVSAXAVTWAWBXLWCWDWEWF $.
        $( [2-Oct-2014] $)
    $}

    $( The subspace sum of a hyperplane and the span of an element equals the
       vector space iff the element is not in the hyperplane. $)
    lshpnelb $p |- ( ph -> ( -. X e. U <-> ( U P ( N ` { X } ) ) = V ) ) $=
      ( wcel wn wa adantr simpr csn cfv co wceq clvec lshpnelr lveclmod lshpnel
      clmod syl impbida ) AHCPQZCHUAEUBBUCFUDZAULRBCDEFGHIJKLAGUEPZULMSACDPZULN
      SAHFPZULOSAULTUFAUMRBCDEFGHIJKLAGUIPZUMAUNUQMGUGUJSAUOUMNSAUPUMOSAUMTUHUK
      $.
      $( [2-Oct-2014] $)
  $}

  ${
    $d v N $.  $d v U $.  $d v V $.  $d v W $.  $d v X $.
    lshpnel2.v $e |- V = ( Base ` W ) $.
    lshpnel2.s $e |- S = ( LSubSp ` W ) $.
    lshpnel2.n $e |- N = ( LSpan ` W ) $.
    lshpnel2.p $e |- P = ( LSSum ` W ) $.
    lshpnel2.h $e |- H = ( LSHyp ` W ) $.
    lshpnel2.w $e |- ( ph -> W e. LVec ) $.
    lshpnel2.u $e |- ( ph -> U e. S ) $.
    lshpnel2.t $e |- ( ph -> U =/= V ) $.
    lshpnel2.x $e |- ( ph -> X e. V ) $.
    lshpnel2.e $e |- ( ph -> -. X e. U ) $.
    $( Condition that determines a hyperplane. $)
    lshpnel2 $p |- ( ph -> ( U e. H <-> ( U P ( N ` { X } ) ) = V ) ) $=
      ( wcel vv csn cfv co wceq wa clvec adantr simpr lshpnelr wne cun wrex w3a
      wn cv wb islshp syl clmod lveclmod lspid syl2anc uneq1d lssss snssd lspun
      fveq2d syl3anc lspsncl lsmsp 3eqtr4rd eqeq1d biimpa sneq uneq2d mpbir3and
      wss rcla4ev impbida ) ADETZDIUBZFUCZBUDZGUEZAWAUFBDEFGHIJLMNAHUGTZWAOUHAW
      AUIAIGTZWARUHAIDTUOWASUHUJAWEUFZWADCTZDGUKZDUAUPZUBZULZFUCZGUEZUAGUMZWHWF
      WAWIWJWPUNUQAWFWEOUHUACDEFGHUGJLKNURUSAWIWEPUHAWJWEQUHWHWGDWBULZFUCZGUEZW
      PAWGWERUHAWEWSAWDWRGADFUCZWCULZFUCZDWCULZFUCZWRWDAXAXCFAWTDWCAHUTTZWIWTDU
      EAWFXEOHVAUSZPCDFHKLVBVCVDVHAXEDGVRZWBGVRWRXBUEXFAWFWIXGOPCDGHUGJKVEVCAIG
      RVFDWBFGHJLVGVIAXEWIWCCTZWDXDUEXFPAXEWGXHXFRCFGHIJKLVJVCBCDWCFHKLMVKVIVLV
      MVNWOWSUAIGWKIUEZWNWRGXIWMWQFXIWLWBDWKIVOVPVHVMVSVCVQVT $.
      $( [3-Oct-2014] $)
  $}

  ${
    lshpne0.v $e |- V = ( Base ` W ) $.
    lshpne0.n $e |- N = ( LSpan ` W ) $.
    lshpne0.p $e |- P = ( LSSum ` W ) $.
    lshpne0.h $e |- H = ( LSHyp ` W ) $.
    lshpne0.o $e |- O = ( 0g ` W ) $.
    lshpne0.w $e |- ( ph -> W e. LMod ) $.
    lshpne0.u $e |- ( ph -> U e. H ) $.
    lshpne0.x $e |- ( ph -> X e. V ) $.
    lshpne0.e $e |- ( ph -> ( U P ( N ` { X } ) ) = V ) $.
    $( The member of the span in the hyperplane definition does not belong to
       the hyperplane. $)
    lshpne0 $p |- ( ph -> X =/= O ) $=
      ( wcel cfv wn wne lshpnel wceq wi csn wss clmod clss eqid lshplss syl2anc
      lss0ss c0g cvv fvex eqeltri snss sylibr eleq1a syl necon3bd mpd ) AICSZUA
      IFUBABCDEGHIJKLMOPQRUCAVDIFAFCSZIFUDVDUEAFUFCUGZVEAHUHSCHUITZSVFOAVGCDHVG
      UJZMOPUKVGHCFNVHUMULFCFHUNTUONHUNUPUQURUSFCIUTVAVBVC $.
      $( [14-Jul-2014] $)
  $}

  ${
    $d k v N $.  $d k v U $.  $d k V $.  $d k v X $.  $d k v O $.  $d k W $.
    $d k v ph $.
    lshpdisj.v $e |- V = ( Base ` W ) $.
    lshpdisj.o $e |- O = ( 0g ` W ) $.
    lshpdisj.n $e |- N = ( LSpan ` W ) $.
    lshpdisj.p $e |- P = ( LSSum ` W ) $.
    lshpdisj.h $e |- H = ( LSHyp ` W ) $.
    lshpdisj.w $e |- ( ph -> W e. LVec ) $.
    lshpdisj.u $e |- ( ph -> U e. H ) $.
    lshpdisj.x $e |- ( ph -> X e. V ) $.
    lshpdisj.e $e |- ( ph -> ( U P ( N ` { X } ) ) = V ) $.
    $( A hyperplane and the span in the hyperplane definition are disjoint. $)
    lshpdisj $p |- ( ph -> ( U i^i ( N ` { X } ) ) = { O } ) $=
      ( cfv wcel vv vk csn cin cv wa wceq cvsca co csca cbs wrex clmod wb clvec
      lveclmod syl adantr eqid lspsnel syl2anc wi lshpnel ad2antrr clss lshplss
      wne wn simpr lspsnmul lspsnel4 mtbid ex necon4ad eleq1 imbi12d syl5ibrcom
      eqeq1 com23 com24 imp31 rexlimdva expimpd elin elsn 3imtr4g ssrdv lspsncl
      sylbid wss lssincl syl3anc lss0ss eqssd ) ACIUCESZUDZFUCZAUAWPWQAUAUEZCTZ
      WRWOTZUFWRFUGZWRWPTWRWQTAWSWTXAAWSUFZWTWRUBUEZIHUHSZUIZUGZUBHUJSZUKSZULZX
      AXBHUMTZIGTZWTXIUNAXJWSAHUOTZXJOHUPUQZURAXKWSQURXDWRUBXGXHEGHIXGUSZXHUSZJ
      XDUSZLUTVAXBXFXAUBXHAWSXCXHTZXFXAVBAXFXQWSXAAXQXFWSXAVBZAXQXFXRVBAXQUFZXR
      XFXECTZXEFUGZVBXSXTXEFXSXEFVGZXTVHXSYBUFZICTZXTAYDVHXQYBABCDEGHIJLMNXMPQR
      VCVDYCHVESZCEFGHIXEJKYEUSZLAXLXQYBOVDACYETZXQYBAYECDHYFNXMPVFZVDAXKXQYBQV
      DXSXEWOTYBXSXCXDXGXHEGHIJXPXNXOLAXJXQXMURAXQVIAXKXQQURVJURXSYBVIVKVLVMVNX
      FWSXTXAYAWRXECVOWRXEFVRVPVQVMVSVTWAWBWIWCWRCWOWDUAFWEWFWGAXJWPYETZWQWPWJX
      MAXJYGWOYETZYIXMYHAXJXKYJXMQYEEGHIJYFLWHVAYECWOHYFWKWLYEHWPFKYFWMVAWN $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v T $.  $d v U $.  $d v W $.  $d v ph $.
    lshpcmp.h $e |- H = ( LSHyp ` W ) $.
    lshpcmp.w $e |- ( ph -> W e. LVec ) $.
    lshpcmp.t $e |- ( ph -> T e. H ) $.
    lshpcmp.u $e |- ( ph -> U e. H ) $.
    $( If two hyperplanes are comparable, they are equal. $)
    lshpcmp $p |- ( ph -> ( T C_ U <-> T = U ) ) $=
      ( vv wss wceq cfv wne eqid clvec wcel lshplss wa adantr wpss wn cbs clmod
      lveclmod syl lshpne clss lssss syl2anc cv csn clspn clsm co wrex lshpsmel
      wi w3a mpbid simp3d id adantrr simpr syl3an1 3expia simplrr sseq2d eqeq2d
      lsmcv 3imtr3d rexlimdv mpd mpid necon3ad df-pss simplbi2 necon1bd syl5com
      exp42 eqimss impbid1 ) ABCKZBCLZABCUAZUBZWCWDACEUCMZNWFACDWGEWGOZFAEPQZEU
      DQGEUEUFZIUGAWECWGAWECWGKZCWGLZAWICEUHMZQZWKGAWMCDEWMOZFWJIRZWMCWGEPWHWOU
      IUJABJUKZULEUMMZMEUNMZUOZWGLZJWGUPZWEWKWLURZURZABWMQZBWGNZXBABDQXEXFXBUSH
      AJWSWMBDWRWGEWHWROZWOWSOZFWJUQUTVAAXAXDJWGAWQWGQZXAWEXCAXIXASSZWESZCWTKZC
      WTLZWKWLXJWEXLXMXJAXISZWEXLXMAXIXNXAXNVBVCXNWSWMBCWRWGEWQWHWOXGXHAWIXIGTA
      XEXIAWMBDEWOFWJHRTAWNXIWPTAXIVDVJVEVFXKWTWGCAXIXAWEVGZVHXKWTWGCXOVIVKVTVL
      VMVNVOVMWCWEBCWEWCBCNBCVPVQVRVSBCWAWB $.
      $( [9-Oct-2014] $)
  $}

  ${
    lshpin.h $e |- H = ( LSHyp ` W ) $.
    lshpin.w $e |- ( ph -> W e. LVec ) $.
    lshpin.t $e |- ( ph -> T e. H ) $.
    lshpin.u $e |- ( ph -> U e. H ) $.
    $( The intersection of two different hyperplanes is not a hyperplane. $)
    lshpin $p |- ( ph -> ( ( T i^i U ) e. H <-> T = U ) ) $=
      ( cin wcel wceq wa wss inss1 clvec adantr simpr lshpcmp mpbii inss2 inidm
      eqtr3d ex syl5eqel ineq2 eleq1d syl5ibcom impbid ) ABCJZDKZBCLZAUKULAUKMZ
      UJBCUMUJBNUJBLBCOUMUJBDEFAEPKUKGQZAUKRZABDKUKHQSTUMUJCNUJCLBCUAUMUJCDEFUN
      UOACDKUKIQSTUCUDABBJZDKULUKAUPBDBUBHUEULUPUJDBCBUFUGUHUI $.
      $( [29-Oct-2014] $)
  $}

  ${
    $d s w N $.  $d s v w V $.  $d s v w W $.  $d s v w Z $.  $d v X $.
    lsatset.v $e |- V = ( Base ` W ) $.
    lsatset.n $e |- N = ( LSpan ` W ) $.
    lsatset.z $e |- Z = ( 0g ` W ) $.
    lsatset.a $e |- A = ( LSAtoms ` W ) $.
    $( The set of all 1-dim subspaces (atoms) of a left module or left vector
       space. $)
    lsatset $p |- ( W e. X -> A = { s |
                   E. v e. ( V \ { Z } ) s = ( N ` { v } ) } ) $=
      ( vw wcel cfv cv csn wceq cvv cbs clsa cdif wrex cab elex clspn c0g fveq2
      syl6eqr difeq12d fveq1d eqeq2d rexeqbidv abbidv df-lsatoms eqeltri difexg
      sneqd fvex ax-mp abrexex fvmpt syl syl5eq ) EFNZBEUAOZHPZAPQZCOZRZADGQZUB
      ZUCZHUDZLVEESNVFVNREFUEMEVGVHMPZUFOZOZRZAVOTOZVOUGOZQZUBZUCZHUDVNSUAVOERZ
      WCVMHWDVRVJAWBVLWDVSDWAVKWDVSETOZDVOETUHIUIWDVTGWDVTEUGOGVOEUGUHKUIURUJWD
      VQVIVGWDVHVPCWDVPEUFOCVOEUFUHJUIUKULUMUNMAHUOAHVLVIDSNVLSNDWESIETUSUPDVKS
      UQUTVAVBVCVD $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)

    $d s v U $.  $d v x N $.  $d x U $.  $d x V $.  $d x Z $.
    $( The predicate "is a 1-dim subspace (atom)" (of a left module or left
       vector space). $)
    islsat $p |- ( W e. X -> ( U e. A <-> E. x e. ( V \ { Z } )
                  U = ( N ` { x } ) ) ) $=
      ( vv vs wcel cv csn wceq wrex cvv cfv cdif cab lsatset eleq2d fvex mpbiri
      eleq1 rexlimivw eqeq1 rexbidv elab3 syl6bb weq sneq fveq2d eqeq2d cbvrexv
      ) FGOZCBOZCMPZQZDUAZRZMEHQUBZSZCAPZQZDUAZRZAVESUSUTCNPZVCRZMVESZNUCZOVFUS
      BVNCMBDEFGHNIJKLUDUEVMVFNCVDCTOZMVEVDVOVCTOVBDUFCVCTUHUGUIVKCRVLVDMVEVKCV
      CUJUKULUMVDVJMAVEMAUNZVCVICVPVBVHDVAVGUOUPUQURUM $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)

    $( The span of a non-zero singleton is an atom. $)
    lsatlspsn $p |- ( ( W e. LMod /\ X e. V /\ X =/= Z )
           -> ( N ` { X } ) e. A ) $=
      ( vv clmod wcel wne w3a csn cfv cv wceq cdif wrex 3simpc sylibr eqid sneq
      wa eldifsn fveq2d eqeq2d rcla4ev sylancl wb islsat 3ad2ant1 mpbird ) DLMZ
      ECMZEFNZOZEPZBQZAMZVAKRZPZBQZSZKCFPTZUAZUSEVGMZVAVASZVHUSUQURUFVIUPUQURUB
      ECFUGUCVAUDVFVJKEVGVCESZVEVAVAVKVDUTBVCEUEUHUIUJUKUPUQVBVHULURKAVABCDLFGH
      IJUMUNUO $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)
  $}

  ${
    $d v N $.  $d v U $.  $d v V $.  $d v W $.
    islsati.v $e |- V = ( Base ` W ) $.
    islsati.n $e |- N = ( LSpan ` W ) $.
    islsati.a $e |- A = ( LSAtoms ` W ) $.
    $( A 1-dim subspace (atom) (of a left module or left vector space) equals
       the span of some vector. $)
    islsati $p |- ( ( W e. X /\ U e. A ) -> E. v e. V U = ( N ` { v } ) ) $=
      ( c0g cfv csn cdif wss wcel wa cv wceq wrex difss islsat biimpa ssrexv
      eqid mpsyl ) EFKLZMZNZEOFGPZCBPZQCARMDLSZAUITZULAETEUHUAUJUKUMABCDEFGUGHI
      UGUEJUBUCULAUIEUDUF $.
      $( [1-Oct-2014] $)
  $}

  ${
    $d v U $.  $d v W $.  $d v Z $.  $d v ph $.
    lsateln0.z $e |- Z = ( 0g ` W ) $.
    lsateln0.a $e |- A = ( LSAtoms ` W ) $.
    lsateln0.w $e |- ( ph -> W e. LMod ) $.
    lsateln0.u $e |- ( ph -> U e. A ) $.
    $( A 1-dim subspace (atom) (of a left module or left vector space) contains
       a nonzero vector. $)
    lsateln0 $p |- ( ph -> E. v e. U v =/= Z ) $=
      ( cv wcel cbs cfv csn wrex clmod eqid syl wa cdif wne clspn wceq wb mpbid
      islsat eldifi lspsnid syl2an eleq2 syl5ibrcom reximdva mpd eldifsn anbi1i
      anass bitri simprbi ancomd reximi2 ) ABKZDLZBEMNZFOZUAZPZVBFUBZBDPADVBOEU
      CNZNZUDZBVFPZVGADCLZVLJAEQLZVMVLUEIBCDVIVDEQFVDRZVIRZGHUGSUFAVKVCBVFAVBVF
      LZTVCVKVBVJLZAVNVBVDLZVRVQIVBVDVEUHVIVDEVBVOVPUIUJDVJVBUKULUMUNVCVHBVFDVQ
      VCTZVHVCVTVSVHVCTZVTVSVHTZVCTVSWATVQWBVCVBVDFUOUPVSVHVCUQURUSUTVAS $.
      $( [2-Jan-1015] $)
  $}

  ${
    $d s v S $.  $d s v W $.
    lsatlss.s $e |- S = ( LSubSp ` W ) $.
    lsatlss.a $e |- A = ( LSAtoms ` W ) $.
    $( The set of 1-dim subspaces is a set of subspaces. $)
    lsatlss $p |- ( W e. LMod -> A C_ S ) $=
      ( vs vv clmod wcel cv csn clspn cfv wceq cbs c0g cdif wrex cab eqid wa wi
      lsatset eldifi lspsncl sylan2 eleq1a syl rexlimdva abssdv eqsstrd ) CHIZA
      FJZGJZKCLMZMZNZGCOMZCPMZKZQZRZFSBGAUOURCHUSFURTZUOTZUSTEUCULVBFBULUQUMBIZ
      GVAULUNVAIZUAUPBIZUQVEUBVFULUNURIVGUNURUTUDBUOURCUNVCDVDUEUFUPBUMUGUHUIUJ
      UK $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)

    lssatssel.w $e |- ( ph -> W e. LMod ) $.
    lssatssel.u $e |- ( ph -> U e. A ) $.
    $( An atom is a subspace. $)
    lsatlssel $p |- ( ph -> U e. S ) $=
      ( clmod wcel wss lsatlss syl sseldd ) ABCDAEJKBCLHBCEFGMNIO $.
      $( [25-Aug-2014] $)
  $}

  ${
    $d v O $.  $d v U $.  $d v W $.  $d v ph $.
    lsatn0.o $e |- O = ( 0g ` W ) $.
    lsatn0.a $e |- A = ( LSAtoms ` W ) $.
    lsatn0.w $e |- ( ph -> W e. LMod ) $.
    lsatn0.u $e |- ( ph -> U e. A ) $.
    $( A 1-dim subspace (atom) of a left module or left vector space is
       nonzero.  ( ~ atne0 analog.) $)
    lsatn0 $p |- ( ph -> U =/= { O } ) $=
      ( vv cv csn cfv wceq wne wcel clmod wb eqid wa clspn cbs cdif wrex islsat
      syl mpbid wi eldifsn lspsneq0 sylan biimpd necon3d expimpd neeq1 biimprcd
      syl5bi syl6 rexlimdv mpd ) ACJKZLEUAMZMZNZJEUBMZDLZUCZUDZCVFOZACBPZVHIAEQ
      PZVJVHRHJBCVBVEEQDVESZVBSZFGUEUFUGAVDVIJVGAVAVGPZVCVFOZVDVIUHVNVAVEPZVADO
      ZTAVOVAVEDUIAVPVQVOAVPTZVCVFVADVRVCVFNZVADNZAVKVPVSVTRHVBVEEVADVLFVMUJUKU
      LUMUNUQVDVIVOCVCVFUOUPURUSUT $.
      $( [25-Aug-2014] $)
  $}

  ${
    $d x y A $.  $d x y N $.  $d x y S $.  $d x y U $.  $d y W $.
    lssats.s $e |- S = ( LSubSp ` W ) $.
    lssats.n $e |- N = ( LSpan ` W ) $.
    lssats.a $e |- A = ( LSAtoms ` W ) $.
    $( The lattice of subspaces is atomistic, i.e. any element is the supremum
       of its atoms.  Part of proof of Theorem 16.9 of [MaedaMaeda] p. 70.
       Hypothesis ( ~ shatomistici analog.) $)
    lssats $p |- ( ( W e. LMod /\ U e. S )
          -> U = ( N ` U. { x e. A | x C_ U } ) ) $=
      ( vy clmod wcel wa cv wss crab cuni cfv syl3anc syl2anc c0g eleq1 wne csn
      wceq simplll cbs simpllr simplr lssel lspsncl lspid lsatlss adantr rabss2
      eqid uniss 3syl unimax adantl lssss eqsstrd sstrd simpr lsatlspsn lspsnss
      ad2antrr sseq1 elrab sylanbrc elssuni lspss eqsstr3d lspsnid sseldd lspcl
      syl simpll syldan lss0cl pm2.61ne ssrdv simpl fveq2d eqtrd sseqtrd eqssd
      ex ) FKLZDCLZMZDANZDOZABPZQZERZWKJDWPWKJNZDLZWQWPLZWKWRMZWSFUARZWPLZWQXAW
      QXAWPUBWTWQXAUCZMZWQUDERZWPWQXDXEXEERZWPXDWIXECLZXFXEUEWIWJWRXCUFZXDWIWQF
      UGRZLZXGXHXDWIWJWRXJXHWIWJWRXCUHZWKWRXCUIZCDXIFWQKXIUPZGUJSZCEXIFWQXMGHUK
      TCXEEFGHULTXDWIWOXIOZXEWOOZXFWPOXHWKXOWRXCWKWOWMACPZQZXIWKBCOZWNXQOWOXROZ
      WIXSWJBCFGIUMUNWMABCUOWNXQUQURZWKXRDXIWJXRDUEWIADCUSUTZCDXIFKXMGVAVBZVCZV
      GXDXEWNLZXPXDXEBLZXEDOZYEXDWIXJXCYFXHXNWTXCVDBEXIFWQXAXMHXAUPZIVESXDWIWJW
      RYGXHXKXLCDEFWQGHVFSWMYGAXEBWLXEDVHVIVJXEWNVKVQXEWOEXIFXMHVLSVMXDWIXJWQXE
      LXHXNEXIFWQXMHVNTVOWTWIWPCLZXBWIWJWRVRWKYIWRWIWJXOYIYDCWOEXIFXMGHVPVSUNCW
      PFXAYHGVTTWAWHWBWKWPXRERZDWKWIXRXIOXTWPYJOWIWJWCYCYAWOXREXIFXMHVLSWKYJDER
      DWKXRDEYBWDCDEFGHULWEWFWG $.
      $( [9-Apr-2014] $)
  $}

  ${
    $d p A $.  $d p S $.  $d p T $.  $d p U $.  $d p W $.
    lssatle.s $e |- S = ( LSubSp ` W ) $.
    lssatle.a $e |- A = ( LSAtoms ` W ) $.
    lssatle.w $e |- ( ph -> W e. LMod ) $.
    lssatle.t $e |- ( ph -> T e. S ) $.
    lssatle.u $e |- ( ph -> U e. S ) $.
    $( The ordering of two subspaces is determined by the atoms under them.
       ( ~ chrelat3 analog.) $)
    lssatle $p |- ( ph
       -> ( T C_ U <-> A. p e. A ( p C_ T -> p C_ U ) ) ) $=
      ( wss crab cuni cfv clmod wcel wceq syl2anc cv wi wral sstrALT2 ralrimivw
      expcom ss2rab clspn cbs adantr lsatlss syl rabss2 uniss 3syl unimax lssss
      wa eqid eqsstrd sstrd adantl lspss syl3anc lssats sseq12d sylibrd syl5bir
      ex impbid2 ) ADEMZGUAZDMZVLEMZUBZGBUCZVKVOGBVMVKVNVLDEUDUFUEVPVMGBNZVNGBN
      ZMZAVKVMVNGBUGAVSVQOZFUHPZPZVROZWAPZMZVKAVSWEAVSURFQRZWCFUIPZMZVTWCMZWEAW
      FVSJUJAWHVSAWCVNGCNZOZWGABCMZVRWJMWCWKMAWFWLJBCFHIUKULVNGBCUMVRWJUNUOAWKE
      WGAECRZWKESLGECUPULAWFWMEWGMJLCEWGFQWGUSZHUQTUTVAUJVSWIAVQVRUNVBVTWCWAWGF
      WNWAUSZVCVDVIADWBEWDAWFDCRDWBSJKGBCDWAFHWOIVETAWFWMEWDSJLGBCEWAFHWOIVETVF
      VGVHVJ $.
      $( [29-Oct-2014] $)
  $}

  ${
    $d v T $.  $d v U $.  $d v W $.  $d v ph $.
    lsatcmp.a $e |- A = ( LSAtoms ` W ) $.
    lsatcmp.w $e |- ( ph -> W e. LVec ) $.
    lsatcmp.t $e |- ( ph -> T e. A ) $.
    lsatcmp.u $e |- ( ph -> U e. A ) $.
    $( If two atoms are comparable, they are equal.  ( ~ atsseq analog.) $)
    lsatcmp $p |- ( ph -> ( T C_ U <-> T = U ) ) $=
      ( vv csn cfv wceq wss wb wcel clmod eqid wa ad2antrr cv cbs c0g cdif wrex
      clspn clvec lveclmod syl islsat mpbid wi eldifsn lsatn0 clss wo lsatlssel
      wne simplrl simpr lspsnat syl31anc ord necon1ad mpd eqimss impbid1 syl5bi
      ex sseq2 eqeq2 bibi12d biimprcd syl6 rexlimdv ) ADJUAZKEUFLZLZMZJEUBLZEUC
      LZKZUDZUEZCDNZCDMZOZADBPZWDIAEQPZWHWDOAEUGPZWIGEUHUIZJBDVQVTEQWAVTRZVQRZW
      ARZFUJUIUKAVSWGJWCAVPWCPZCVRNZCVRMZOZVSWGULWOVPVTPZVPWAURZSZAWRVPVTWAUMAX
      AWRAXASZWPWQXBWPWQXBWPSZCWBURZWQAXDXAWPABCWAEWNFWKHUNTXCWQCWBXCWQCWBMZXCW
      JCEUOLZPZWSWPWQXEUPAWJXAWPGTAXGXAWPABXFCEXFRZFWKHUQTAWSWTWPUSXBWPUTXFCVQV
      TEVPWAWLWNXHWMVAVBVCVDVEVICVRVFVGVIVHVSWGWRVSWEWPWFWQDVRCVJDVRCVKVLVMVNVO
      VE $.
      $( [25-Aug-2014] $)
  $}

  ${
    lsatel.o $e |- O = ( 0g ` W ) $.
    lsatel.n $e |- N = ( LSpan ` W ) $.
    lsatel.a $e |- A = ( LSAtoms ` W ) $.
    lsatel.w $e |- ( ph -> W e. LVec ) $.
    lsatel.u $e |- ( ph -> U e. A ) $.
    lsatel.x $e |- ( ph -> X e. U ) $.
    lsatel.e $e |- ( ph -> X =/= O ) $.
    $( A nonzero member of an atom determines the atom. $)
    lsatel $p |- ( ph -> U = ( N ` { X } ) ) $=
      ( csn cfv wcel clvec eqid syl3anc wss wceq lveclmod syl lsatlssel lspsnss
      clmod clss cbs wne lssel lsatlspsn lsatcmp mpbid eqcomd ) AGODPZCAUPCUAZU
      PCUBAFUGQZCFUHPZQZGCQZUQAFRQZURKFUCUDZABUSCFUSSZJVCLUEZMUSCDFGVDIUFTABUPC
      FJKAURGFUIPZQZGEUJUPBQVCAVBUTVAVGKVEMUSCVFFGRVFSZVDUKTNBDVFFGEVHIHJULTLUM
      UNUO $.
      $( [25-Aug-2014] $)
  $}

  ${
    $d p A $.  $d p S $.  $d p U $.  $d p V $.  $d p W $.
    lssat.s $e |- S = ( LSubSp ` W ) $.
    lssat.a $e |- A = ( LSAtoms ` W ) $.
    $( Two subspaces in a proper subset relationship imply the existence of a
       1-dim subspace less than or equal to one but not the other.
       ( ~ chpssati analog.) $)
    lssat $p |- ( ( ( W e. LMod /\ U e. S /\ V e. S ) /\ U C. V )
          -> E. p e. A ( p C_ V /\ -. p C_ U ) ) $=
      ( clmod wcel wss wn wa wral crab cuni cfv syl wceq syl2anc wpss cv dfpss3
      w3a wrex simprbi wi ss2rab iman ralbii bitr2i clspn simpl1 lsatlss rabss2
      cbs uniss 3syl simpl2 unimax eqid lssss eqsstrd sstrd adantl lspss simpl3
      syl3anc lssats 3sstr4d ex syl5bi con3d imp dfrex2 sylibr sylan2 ) CDUAZEI
      JZCBJZDBJZUDZDCKZLZFUBZDKZWECKZLMZFAUEZVRCDKWDCDUCUFWBWDMWHLZFANZLZWIWBWD
      WLWBWKWCWKWFFAOZWGFAOZKZWBWCWOWFWGUGZFANWKWFWGFAUHWPWJFAWFWGUIUJUKWBWOWCW
      BWOMZWMPZEULQZQZWNPZWSQZDCWQVSXAEUPQZKWRXAKZWTXBKVSVTWAWOUMZWQXAWGFBOZPZX
      CWQABKZWNXFKXAXGKWQVSXHXEABEGHUNRWGFABUOWNXFUQURWQXGCXCWQVTXGCSVSVTWAWOUS
      ZFCBUTRWQVSVTCXCKXEXIBCXCEIXCVAZGVBTVCVDWOXDWBWMWNUQVEWRXAWSXCEXJWSVAZVFV
      HWQVSWADWTSXEVSVTWAWOVGFABDWSEGXKHVITWQVSVTCXBSXEXIFABCWSEGXKHVITVJVKVLVM
      VNWHFAVOVPVQ $.
      $( [9-Apr-2014] $)
  $}

  ${
    $d v P $.  $d v Q $.  $d v T $.  $d v U $.  $d v W $.  $d v ph $.
    lsmsatcv.s $e |- S = ( LSubSp ` W ) $.
    lsmsatcv.p $e |- P = ( LSSum ` W ) $.
    lsmsatcv.a $e |- A = ( LSAtoms ` W ) $.
    lsmsatcv.w $e |- ( ph -> W e. LVec ) $.
    lsmsatcv.t $e |- ( ph -> T e. S ) $.
    lsmsatcv.u $e |- ( ph -> U e. S ) $.
    lsmsatcv.x $e |- ( ph -> Q e. A ) $.
    $( Subspace sum has the covering property (using spans of singletons to
       represent atoms).  Similar to Exercise 5 of [Kalmbach] p. 153.
       ( ~ spansncvi analog.)  Explicit atom version of ~ lsmcv . $)
    lsmsatcv $p |- ( ( ph /\ T C. U /\ U C_ ( T P Q ) )
      -> U = ( T P Q ) ) $=
      ( vv wceq cfv wa wcel wpss co wss cv csn clspn wrex wi clvec eqid islsati
      cbs syl2anc w3a adantr simpr lsmcv 3expib 3adant3 wb sseq2d anbi2d eqeq2d
      oveq2 imbi12d 3ad2ant3 mpbird 3exp rexlimdv mpd 3impib ) AFGUAZGFDCUBZUCZ
      GVMQZADPUDZUEHUFRZRZQZPHULRZUGZVLVNSZVOUHZAHUITZDBTWALOPBDVQVTHUIVTUJZVQU
      JZKUKUMAVSWCPVTAVPVTTZVSWCAWGVSUNWCVLGFVRCUBZUCZSZGWHQZUHZAWGWLVSAWGSZVLW
      IWKWMCEFGVQVTHVPWEIWFJAWDWGLUOAFETWGMUOAGETWGNUOAWGUPUQURUSVSAWCWLUTWGVSW
      BWJVOWKVSVNWIVLVSVMWHGDVRFCVDZVAVBVSVMWHGWNVCVEVFVGVHVIVJVK $.
      $( [29-Oct-2014] $)
  $}

  $c <oL $.

  $( Extend class notation with all polarities of a left module or left vector
     space. $)
  clcv $a class <oL $.

  ${
    $d s t u w $.
    $( Define the covers relation for subspaces of a left vector space.
       Similar to Definition 3.2.18 of [PtakPulmannova] p. 68.
       Ptak/Pulmannova's notation ` A ( <oL `` W ) B ` is read " ` B ` covers
       ` A ` " or " ` A ` is covered by ` B ` " , and it means that ` B ` is
       larger than ` A ` and there is nothing in between.  See ~ lcvbr for
       binary relation.  ( ~ df-cv analog.) $)
    df-lcv $a |- <oL = ( w e. _V |->
     { <. t , u >. | ( ( t e. ( LSubSp ` w ) /\ u e. ( LSubSp ` w ) ) /\
         ( t C. u /\ -. E. s e. ( LSubSp ` w ) ( t C. s /\ s C. u ) ) ) } ) $.
  $}

  ${
    $d s t u w S $.  $d s t u w W $.
    lcvfbr.s $e |- S = ( LSubSp ` W ) $.
    lcvfbr.c $e |- C = ( <oL ` W ) $.
    lcvfbr.w $e |- ( ph -> W e. X ) $.
    $( The covers relation for a left vector space (or a left module). $)
    lcvfbr $p |- ( ph -> C = { <. t , u >. | ( ( t e. S /\ u e. S ) /\
         ( t C. u /\ -. E. s e. S ( t C. s /\ s C. u ) ) ) } ) $=
      ( vw clcv cfv cv wcel wa wpss cvv clss wrex copab wceq elex fveq2 syl6eqr
      wn eleq2d anbi12d rexeqdv notbid anbi2d opabbidv df-lcv fvex eqeltri xpex
      cxp opabssxp ssexi fvmpt 3syl syl5eq ) ADFMNZCOZEPZBOZEPZQZVEVGRZVEHOZRVK
      VGRQZHEUAZUGZQZQZCBUBZJAFGPFSPVDVQUCKFGUDLFVELOZTNZPZVGVSPZQZVJVLHVSUAZUG
      ZQZQZCBUBVQSMVRFUCZWFVPCBWGWBVIWEVOWGVTVFWAVHWGVSEVEWGVSFTNZEVRFTUEIUFZUH
      WGVSEVGWIUHUIWGWDVNVJWGWCVMWGVLHVSEWIUJUKULUIUMLBCHUNVQEEUREEEWHSIFTUOUPZ
      WJUQVOCBEEUSUTVAVBVC $.
      $( [7-Jan-1015] $)

    $d s t u T $.  $d s t u U $.
    lcvfbr.t $e |- ( ph -> T e. S ) $.
    lcvfbr.u $e |- ( ph -> U e. S ) $.
    $( The covers relation for a left vector space (or a left module).
       ( ~ cvbr analog.) $)
    lcvbr $p |- ( ph -> ( T C U <-> ( ( T e. S /\ U e. S )
       /\ ( T C. U /\ -. E. s e. S ( T C. s /\ s C. U ) ) ) ) ) $=
      ( vt vu cv wcel wa wpss anbi12d wbr wrex wn copab lcvfbr breqd wceq eleq1
      wb anbi1d psseq1 rexbidv notbid anbi2d psseq2 eqid brabg syl2anc bitrd )
      ADEBUADENPZCQZOPZCQZRZUTVBSZUTHPZSZVFVBSZRZHCUBZUCZRZRZNOUDZUAZDCQZECQZRZ
      DESZDVFSZVFESZRZHCUBZUCZRZRZABVNDEAONBCFGHIJKUEUFAVPVQVOWFUILMVMVPVCRZDVB
      SZVTVHRZHCUBZUCZRZRWFNODECCVNUTDUGZVDWGVLWLWMVAVPVCUTDCUHUJWMVEWHVKWKUTDV
      BUKWMVJWJWMVIWIHCWMVGVTVHUTDVFUKUJULUMTTVBEUGZWGVRWLWEWNVCVQVPVBECUHUNWNW
      HVSWKWDVBEDUOWNWJWCWNWIWBHCWNVHWAVTVBEVFUOUNULUMTTVNUPUQURUS $.
      $( [7-Jan-1015] $)

    lcvpss.d $e |- ( ph -> T C U ) $.
    $( The covers relation implies proper subset.  ( ~ cvpss analog.) $)
    lcvpss $p |- ( ph -> T C. U ) $=
      ( vs wcel wa wpss cv wrex wn wbr lcvbr mpbid simprl syl ) ADCOECOPZDEQZDN
      RZQUHEQPNCSTZPPZUGADEBUAUJMABCDEFGNHIJKLUBUCUFUGUIUDUE $.
      $( [7-Jan-1015] $)
  $}

  ${
    $d s x O $.  $d s x Q $.  $d s x W $.  $d s x ph $.
    lsatcv0.o $e |- O = ( 0g ` W ) $.
    lsatcv0.a $e |- A = ( LSAtoms ` W ) $.
    lsatcv0.c $e |- C = ( <oL ` W ) $.
    lsatcv0.w $e |- ( ph -> W e. LVec ) $.
    lsatcv0.q $e |- ( ph -> Q e. A ) $.
    $( An atom covers the zero subspace.  ( ~ atcv0 analog.) $)
    lsatcv0 $p |- ( ph -> { O } C Q ) $=
      ( vs vx cfv wcel wa wpss wrex syl eqid csn wbr cv wn clvec eqid1 lveclmod
      clss clmod lsssn0 lsatlssel lcvbr jca wss wne lss0ss lsatn0 necomd df-pss
      syl2anc sylanbrc clspn wceq cbs cdif wb islsat mpbid adantr eldifi adantl
      wi eldifsn simprbi lspsncv0 ex psseq2 anbi2d rexbidv notbid biimprcd syl6
      rexlimdv mpd mpbir2and ) AEUAZDCUBWFFUHNZOZDWGOZPWFDQZWFLUCZQZWKDQZPZLWGR
      ZUDZPACWGWFDFUELWGUFIJAFUIOZWHAFUEOZWQJFUGSZWGFEGWGTZUJSZABWGDFWTHWSKUKZU
      LAWHWIXAXBUMAWJWPAWFDUNZWFDUOWJAWQWIXCWSXBWGFDEGWTUPUTADWFABDEFGHWSKUQURW
      FDUSVAADMUCZUAFVBNZNZVCZMFVDNZWFVEZRZWPADBOZXJKAWQXKXJVFWSMBDXEXHFUIEXHTZ
      XETZGHVGSVHAXGWPMXIAXDXIOZWLWKXFQZPZLWGRZUDZXGWPVLAXNXRAXNPLWGXEXHFXDEXLG
      WTXMAWRXNJVIXNXDXHOZAXDXHWFVJVKXNXDEUOZAXNXSXTXDXHEVMVNVKVOVPXGWPXRXGWOXQ
      XGWNXPLWGXGWMXOWLDXFWKVQVRVSVTWAWBWCWDUMWE $.
      $( [7-Jan-1015] $)
  $}

  ${
    $d u R $.  $d u S $.  $d u T $.  $d u U $.  $d u W $.
    lcvnbtwn.s $e |- S = ( LSubSp ` W ) $.
    lcvnbtwn.c $e |- C = ( <oL ` W ) $.
    lcvnbtwn.w $e |- ( ph -> W e. X ) $.
    lcvnbtwn.r $e |- ( ph -> R e. S ) $.
    lcvnbtwn.t $e |- ( ph -> T e. S ) $.
    lcvnbtwn.u $e |- ( ph -> U e. S ) $.
    lcvnbtwn.d $e |- ( ph -> R C T ) $.
    $( The covers relation implies no in-betweenness.  ( ~ cvnbtwn analog.) $)
    lcvnbtwn $p |- ( ph -> -. ( R C. U /\ U C. T ) ) $=
      ( vu wpss wa cv wcel wrex wn wbr lcvbr mpbid simprr psseq2 psseq1 anbi12d
      syl wceq rcla4ev sylan mtand ) ACFQZFEQZRZCPSZQZUREQZRZPDUAZACDTEDTRZCEQZ
      VBUBZRRZVEACEBUCVFOABDCEGHPIJKLMUDUEVCVDVEUFUJAFDTUQVBNVAUQPFDURFUKUSUOUT
      UPURFCUGURFEUHUIULUMUN $.
      $( [7-Jan-1015] $)

    ${
      lcvnbtwn2.p $e |- ( ph -> R C. U ) $.
      lcvnbtwn2.q $e |- ( ph -> U C_ T ) $.
      $( The covers relation implies no in-betweenness.  ( ~ cvnbtwn2
         analog.) $)
      lcvnbtwn2 $p |- ( ph -> U = T ) $=
        ( wpss wa wn wss wceq lcvnbtwn anass dfpss2 anbi2i bitr4i notbii bitr2i
        wi iman sylib mp2and ) ACFRZFEUAZFEUBZPQAUNFERZSZTZUNUOSZUPUJZABCDEFGHI
        JKLMNOUCVAUTUPTZSZTUSUTUPUKVCURVCUNUOVBSZSURUNUOVBUDUQVDUNFEUEUFUGUHUIU
        LUM $.
        $( [7-Jan-1015] $)
    $}

    ${
      lcvnbtwn3.p $e |- ( ph -> R C_ U ) $.
      lcvnbtwn3.q $e |- ( ph -> U C. T ) $.
      $( The covers relation implies no in-betweenness.  ( ~ cvnbtwn3
         analog.) $)
      lcvnbtwn3 $p |- ( ph -> U = R ) $=
        ( wpss wa wn wss wceq wi lcvnbtwn iman eqcom imbi2i dfpss2 anbi1i bitri
        an32 notbii 3bitr4ri sylib mp2and ) ACFUAZFERZFCUBZPQACFRZUQSZTZUPUQSZU
        RUCZABCDEFGHIJKLMNOUDVBCFUBZUCVBVDTZSZTVCVAVBVDUEURVDVBFCUFUGUTVFUTUPVE
        SZUQSVFUSVGUQCFUHUIUPVEUQUKUJULUMUNUO $.
        $( [7-Jan-1015] $)
    $}
  $}

  ${
    lsatcveq0.o $e |- O = ( 0g ` W ) $.
    lsatcveq0.s $e |- S = ( LSubSp ` W ) $.
    lsatcveq0.a $e |- A = ( LSAtoms ` W ) $.
    lsatcveq0.c $e |- C = ( <oL ` W ) $.
    lsatcveq0.w $e |- ( ph -> W e. LVec ) $.
    lsatcveq0.u $e |- ( ph -> U e. S ) $.
    lsatcveq0.q $e |- ( ph -> Q e. A ) $.
    $( A subspace covered by an atom must be the zero subspace.  ( ~ atcveq0
       analog.) $)
    lsatcveq0 $p |- ( ph -> ( U C Q <-> U = { O } ) ) $=
      ( wbr clvec wcel adantr 3ad2ant1 csn wceq wa clmod lveclmod syl lsatlssel
      wpss simpr lcvpss ex wi lsatcv0 w3a lsssn0 simp2 wss lss0ss syl2anc simp3
      lcvnbtwn3 3exp mpd syld breq1 syl5ibrcom impbid ) AFDCPZFGUAZUBZAVHFDUHZV
      JAVHVKAVHUCCEFDHQJLAHQRZVHMSAFERZVHNSADERZVHABEDHJKAVLHUDRZMHUEUFZOUGZSAV
      HUIUJUKAVIDCPZVKVJULABCDGHIKLMOUMZAVRVKVJAVRVKUNCVIEDFHQJLAVRVLVKMTAVRVIE
      RZVKAVOVTVPEHGIJUOUFTAVRVNVKVQTAVRVMVKNTAVRVKUPAVRVIFUQZVKAVOVMWAVPNEHFGI
      JURUSTAVRVKUTVAVBVCVDAVHVJVRVSFVIDCVEVFVG $.
      $( [7-Jan-1015] $)
  $}

  ${
    lcvexch.o $e |- O = ( 0g ` W ) $.
    lcvexch.s $e |- S = ( LSubSp ` W ) $.
    lcvexch.p $e |- P = ( LSSum ` W ) $.
    lcvexch.c $e |- C = ( <oL ` W ) $.
    lcvexch.w $e |- ( ph -> W e. LVec ) $.
    lcvexch.t $e |- ( ph -> T e. S ) $.
    lcvexch.u $e |- ( ph -> U e. S ) $.
    $( Subspaces satisfy the exchange axiom.
      Proposition 1(iii) of [Kalmbach] p. 140 and its converse.
      This proof is from Lemma 7.5 of [MaedaMaeda] p. 31.
      ( ~ cvexchi analog.) $)
$(
    lcvexch $p |- ( ph -> ( ( T i^i U ) C U <-> T C ( T P U ) ) ) $=
      ( impbid ) ?????P $.
$)
      $( [8-Jan-1015] $)
  $}

