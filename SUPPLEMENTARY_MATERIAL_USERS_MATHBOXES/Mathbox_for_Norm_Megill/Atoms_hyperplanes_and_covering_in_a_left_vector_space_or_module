$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Atoms, hyperplanes, and covering in a left vector space (or module)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c LSAtoms $.
  $c LSHyp $.

  $( Extend class notation with all 1-dim subspaces (atoms) of a left module or
     left vector space. $)
  clsa $a class LSAtoms $.

  $( Extend class notation with all subspaces of a left module or left vector
     space that are hyperplanes. $)
  clsh $a class LSHyp $.

  ${
    $d s v w $.
    $( Define the set of all 1-dim subspaces (atoms) of a left module or left
       vector space. $)
    df-lsatoms $a |- LSAtoms = ( w e. _V |-> { s | E. v e. ( ( Base ` w ) \
                 { ( 0g ` w ) } ) s = ( ( LSpan ` w ) ` { v } ) } ) $.
  $}

  ${
    $d s v w $.
    $( Define the set of all hyperplanes of a left module or left vector
       space.  Also called co-atoms, these are subspaces that are one dimension
       less that the full space. $)
    df-lshyp $a |- LSHyp = ( w e. _V |-> { s e. ( LSubSp ` w ) |
       ( s =/= ( Base ` w ) /\ E. v e. ( Base ` w )
           ( ( LSpan ` w ) ` ( s u. { v } ) ) = ( Base ` w ) ) } ) $.
  $}

  ${
    $d w N $.  $d s w S $.  $d v w V $.  $d s v w W $.
    lshpset.v $e |- V = ( Base ` W ) $.
    lshpset.n $e |- N = ( LSpan ` W ) $.
    lshpset.s $e |- S = ( LSubSp ` W ) $.
    lshpset.h $e |- H = ( LSHyp ` W ) $.
    $( The set of all hyperplanes of a left module or left vector space. $)
    lshpset $p |- ( W e. X -> H = { s e. S | ( s =/= V /\
                   E. v e. V ( N ` ( s u. { v } ) ) = V ) } ) $=
      ( vw cfv cv wceq cvv cbs clspn clss wcel clsh wne csn cun wrex crab fveq2
      wa elex syl6eqr neeq2d fveq1d eqeq12d rexeqbidv anbi12d rabeqbidv eqeltri
      df-lshyp fvex rabex fvmpt syl syl5eq ) FGUAZCFUBNZHOZEUCZVGAOUDUEZDNZEPZA
      EUFZUIZHBUGZLVEFQUAVFVNPFGUJMFVGMOZRNZUCZVIVOSNZNZVPPZAVPUFZUIZHVOTNZUGVN
      QUBVOFPZWBVMHWCBWDWCFTNZBVOFTUHKUKWDVQVHWAVLWDVPEVGWDVPFRNEVOFRUHIUKZULWD
      VTVKAVPEWFWDVSVJVPEWDVIVRDWDVRFSNDVOFSUHJUKUMWFUNUOUPUQMAHUSVMHBBWEQKFTUT
      URVAVBVCVD $.
      $( [29-Jun-2014] $)

    $d s N $.  $d s v U $.  $d s V $.
    $( The predicate "is a hyperplane" (of a left module or left vector
       space). $)
    islshp $p |- ( W e. X -> ( U e. H <-> ( U e. S /\ U =/= V
        /\ E. v e. V ( N ` ( U u. { v } ) ) = V ) ) ) $=
      ( vs wcel cv wne cun cfv wceq wa csn wrex crab lshpset eleq2d neeq1 uneq1
      w3a fveq2d eqeq1d rexbidv anbi12d elrab 3anass bitr4i syl6bb ) GHNZCDNCMO
      ZFPZURAOUAZQZERZFSZAFUBZTZMBUCZNZCBNZCFPZCUTQZERZFSZAFUBZUHZUQDVFCABDEFGH
      MIJKLUDUEVGVHVIVMTZTVNVEVOMCBURCSZUSVIVDVMURCFUFVPVCVLAFVPVBVKFVPVAVJEURC
      UTUGUIUJUKULUMVHVIVMUNUOUP $.
      $( [29-Jun-2014] $)
  $}

  ${
    $d v S $.  $d v U $.  $d v V $.  $d v W $.  $d v ph $.
    islshpsm.v $e |- V = ( Base ` W ) $.
    islshpsm.n $e |- N = ( LSpan ` W ) $.
    islshpsm.s $e |- S = ( LSubSp ` W ) $.
    islshpsm.p $e |- P = ( LSSum ` W ) $.
    islshpsm.h $e |- H = ( LSHyp ` W ) $.
    islshpsm.w $e |- ( ph -> W e. LMod ) $.
    $( Hyperplane properties expressed with subspace sum. $)
    islshpsm $p |- ( ph -> ( U e. H <-> ( U e. S /\ U =/= V /\
                   E. v e. V ( U P ( N ` { v } ) ) = V ) ) ) $=
      ( wcel cun cfv wceq wa wne cv csn wrex w3a co clmod wb islshp syl simplrl
      ad2antrr lspid syl2anc uneq1d fveq2d wss lssss adantl lspun syl3anc lspcl
      snssiALT lsmsp 3eqtr4rd eqeq1d rexbidva pm5.32da bicomd df-3an 3bitr4g
      bitrd ) AEFPZEDPZEHUAZEBUBZUCZQGRZHSZBHUDZUEZVNVOEVQGRZCUFZHSZBHUDZUEZAIU
      GPZVMWAUHOBDEFGHIUGJKLNUIUJAVNVOTZVTTZWHWETZWAWFAWJWIAWHWEVTAWHTZWDVSBHWK
      VPHPZTZWCVRHWMEGRZWBQZGRZEWBQZGRZVRWCWMWOWQGWMWNEWBWMWGVNWNESAWGWHWLOULZA
      VNVOWLUKZDEGILKUMUNUOUPWMWGEHUQZVQHUQZVRWPSWSWMVNXAWTDEHIJLURUJWLXBWKVPHV
      CUSZEVQGHIJKUTVAWMWGVNWBDPZWCWRSWSWTWMWGXBXDWSXCDVQGHIJLKVBUNCDEWBGILKMVD
      VAVEVFVGVHVIVNVOVTVJVNVOWEVJVKVL $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v U $.  $d v W $.
    lshplss.s $e |- S = ( LSubSp ` W ) $.
    lshplss.h $e |- H = ( LSHyp ` W ) $.
    lshplss.w $e |- ( ph -> W e. LMod ) $.
    lshplss.u $e |- ( ph -> U e. H ) $.
    $( A hyperplane is a subspace. $)
    lshplss $p |- ( ph -> U e. S ) $=
      ( vv wcel cbs cfv wne cv csn cun clspn clmod eqid wceq wrex w3a wb islshp
      syl mpbid simp1d ) ACBKZCELMZNZCJOPQERMZMUJUAJUJUBZACDKZUIUKUMUCZIAESKUNU
      OUDHJBCDULUJESUJTULTFGUEUFUGUH $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v U $.  $d v V $.  $d v W $.
    lshpne.v $e |- V = ( Base ` W ) $.
    lshpne.h $e |- H = ( LSHyp ` W ) $.
    lshpne.w $e |- ( ph -> W e. LMod ) $.
    lshpne.u $e |- ( ph -> U e. H ) $.
    $( A hyperplane is not equal to the vector space. $)
    lshpne $p |- ( ph -> U =/= V ) $=
      ( vv clss cfv wcel wne cv csn cun clspn clmod eqid wceq w3a wb islshp syl
      wrex mpbid simp2d ) ABEKLZMZBDNZBJOPQERLZLDUAJDUFZABCMZUJUKUMUBZIAESMUNUO
      UCHJUIBCULDESFULTUITGUDUEUGUH $.
      $( [4-Jul-2014] $)
  $}

  ${
    $d v U $.  $d v V $.  $d v W $.  $d v ph $.
    lshpnel.v $e |- V = ( Base ` W ) $.
    lshpnel.n $e |- N = ( LSpan ` W ) $.
    lshpnel.p $e |- P = ( LSSum ` W ) $.
    lshpnel.h $e |- H = ( LSHyp ` W ) $.
    lshpnel.w $e |- ( ph -> W e. LMod ) $.
    lshpnel.u $e |- ( ph -> U e. H ) $.
    lshpnel.x $e |- ( ph -> X e. V ) $.
    lshpnel.e $e |- ( ph -> ( U P ( N ` { X } ) ) = V ) $.
    $( The member of the span in the hyperplane definition does not belong to
       the hyperplane. $)
    lshpnel $p |- ( ph -> -. X e. U ) $=
      ( wcel wceq cfv adantr wne wn lshpne wa csn co clmod clss lshplss lspsncl
      wss syl2anc simpr lspsnss syl3anc lsmss2 syl121anc eqtr3d ex necon3ad mpd
      eqid ) ACFUAHCQZUBACDFGILMNUCAVCCFAVCCFRAVCUDZCHUEESZBUFZCFVDGUGQZCGUHSZQ
      ZVEVHQZVECUKZVFCRAVGVCMTZAVIVCAVHCDGVHVBZLMNUITZVDVGHFQZVJVLAVOVCOTVHEFGH
      IVMJUJULVDVGVIVCVKVLVNAVCUMVHCEGHVMJUNUOBVHCVEGVMKUPUQAVFFRVCPTURUSUTVA
      $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v N $.  $d v P $.  $d v U $.  $d v V $.  $d v W $.  $d v X $.
    $d v ph $.
    lshpnelr.v $e |- V = ( Base ` W ) $.
    lshpnelr.n $e |- N = ( LSpan ` W ) $.
    lshpnelr.p $e |- P = ( LSSum ` W ) $.
    lshpnelr.h $e |- H = ( LSHyp ` W ) $.
    lshpnelr.w $e |- ( ph -> W e. LVec ) $.
    lshpnelr.u $e |- ( ph -> U e. H ) $.
    lshpnelr.x $e |- ( ph -> X e. V ) $.
    ${
      lshpnelr.e $e |- ( ph -> -. X e. U ) $.
      $( The subspace sum of a hyperplane and an element not in it is the
         vector space.  TODO: combine into ~ lshpnelb ? $)
      lshpnelr $p |- ( ph -> ( U P ( N ` { X } ) ) = V ) $=
        ( vv cfv wcel wss cv csn co wceq wrex clss wne w3a clvec clmod lveclmod
        eqid syl islshpsm mpbid simp3d wpss simp1 simp2 lshplss lspsncl syl2anc
        lsmub1 syl3anc wn lsmub2 lspsnid sseldd nelne1 necomd sylanbrc 3ad2ant1
        df-pss lsmcl lssss simp3 sseqtr4d wa adantr simpr lsmcv syl211anc eqtrd
        3exp rexlimdv mpd ) ACQUAZUBERBUCZFUDZQFUEZCHUBERZBUCZFUDZACGUFRZSZCFUG
        ZWJACDSWOWPWJUHNAQBWNCDEFGIJWNULZKLAGUISZGUJSZMGUKUMZUNUOUPAWIWMQFAWGFS
        ZWIWMAXAWIUHZWLWHFXBAXACWLUQZWLWHTWLWHUDAXAWIURAXAWIUSAXAXCWIACWLTZCWLU
        GXCAWSWOWKWNSZXDWTAWNCDGWQLWTNUTZAWSHFSZXEWTOWNEFGHIWQJVAVBZBWNCWKGWQKV
        CVDAWLCAHWLSHCSVEWLCUGAWKWLHAWSWOXEWKWLTWTXFXHBWNCWKGWQKVFVDAWSXGHWKSWT
        OEFGHIJVGVBVHPHWLCVIVBVJCWLVMVKVLXBWLFWHAXAWLFTZWIAWLWNSZXIAWSWOXEXJWTX
        FXHBWNCWKGWQKVNVDZWNWLFGIWQVOUMVLAXAWIVPZVQAXAVRBWNCWLEFGWGIWQJKAWRXAMV
        SAWOXAXFVSAXJXAXKVSAXAVTWAWBXLWCWDWEWF $.
        $( [2-Oct-2014] $)
    $}

    $( The subspace sum of a hyperplane and the span of an element equals the
       vector space iff the element is not in the hyperplane. $)
    lshpnelb $p |- ( ph -> ( -. X e. U <-> ( U P ( N ` { X } ) ) = V ) ) $=
      ( wcel wn wa adantr simpr csn cfv co wceq clvec lshpnelr lveclmod lshpnel
      clmod syl impbida ) AHCPQZCHUAEUBBUCFUDZAULRBCDEFGHIJKLAGUEPZULMSACDPZULN
      SAHFPZULOSAULTUFAUMRBCDEFGHIJKLAGUIPZUMAUNUQMGUGUJSAUOUMNSAUPUMOSAUMTUHUK
      $.
      $( [2-Oct-2014] $)
  $}

  ${
    $d v N $.  $d v U $.  $d v V $.  $d v W $.  $d v X $.
    lshpnel2.v $e |- V = ( Base ` W ) $.
    lshpnel2.s $e |- S = ( LSubSp ` W ) $.
    lshpnel2.n $e |- N = ( LSpan ` W ) $.
    lshpnel2.p $e |- P = ( LSSum ` W ) $.
    lshpnel2.h $e |- H = ( LSHyp ` W ) $.
    lshpnel2.w $e |- ( ph -> W e. LVec ) $.
    lshpnel2.u $e |- ( ph -> U e. S ) $.
    lshpnel2.t $e |- ( ph -> U =/= V ) $.
    lshpnel2.x $e |- ( ph -> X e. V ) $.
    lshpnel2.e $e |- ( ph -> -. X e. U ) $.
    $( Condition that determines a hyperplane. $)
    lshpnel2 $p |- ( ph -> ( U e. H <-> ( U P ( N ` { X } ) ) = V ) ) $=
      ( wcel vv csn cfv co wceq wa clvec adantr simpr wn lshpnelr wne cun clmod
      cv lveclmod syl lspid syl2anc uneq1d fveq2d wss lssss snssd lspun syl3anc
      wrex lspsncl lsmsp 3eqtr4rd eqeq1d biimpa uneq2d rcla4ev w3a wb mpbir3and
      sneq islshp impbida ) ADETZDIUBZFUCZBUDZGUEZAWAUFBDEFGHIJLMNAHUGTZWAOUHAW
      AUIAIGTZWARUHAIDTUJWASUHUKAWEUFZWADCTZDGULZDUAUOZUBZUMZFUCZGUEZUAGVGZAWIW
      EPUHAWJWEQUHWHWGDWBUMZFUCZGUEZWPAWGWERUHAWEWSAWDWRGADFUCZWCUMZFUCZDWCUMZF
      UCZWRWDAXAXCFAWTDWCAHUNTZWIWTDUEAWFXEOHUPUQZPCDFHKLURUSUTVAAXEDGVBZWBGVBW
      RXBUEXFAWIXGPCDGHJKVCUQAIGRVDDWBFGHJLVEVFAXEWIWCCTZWDXDUEXFPAXEWGXHXFRCFG
      HIJKLVHUSBCDWCFHKLMVIVFVJVKVLWOWSUAIGWKIUEZWNWRGXIWMWQFXIWLWBDWKIVRVMVAVK
      VNUSWHWFWAWIWJWPVOVPAWFWEOUHUACDEFGHUGJLKNVSUQVQVT $.
      $( [3-Oct-2014] $)
  $}

  ${
    lshpne0.v $e |- V = ( Base ` W ) $.
    lshpne0.n $e |- N = ( LSpan ` W ) $.
    lshpne0.p $e |- P = ( LSSum ` W ) $.
    lshpne0.h $e |- H = ( LSHyp ` W ) $.
    lshpne0.o $e |- O = ( 0g ` W ) $.
    lshpne0.w $e |- ( ph -> W e. LMod ) $.
    lshpne0.u $e |- ( ph -> U e. H ) $.
    lshpne0.x $e |- ( ph -> X e. V ) $.
    lshpne0.e $e |- ( ph -> ( U P ( N ` { X } ) ) = V ) $.
    $( The member of the span in the hyperplane definition does not belong to
       the hyperplane. $)
    lshpne0 $p |- ( ph -> X =/= O ) $=
      ( wcel cfv wn wne lshpnel wceq wi csn wss clmod clss eqid lshplss syl2anc
      lss0ss c0g cvv fvex eqeltri snss sylibr eleq1a syl necon3bd mpd ) AICSZUA
      IFUBABCDEGHIJKLMOPQRUCAVDIFAFCSZIFUDVDUEAFUFCUGZVEAHUHSCHUITZSVFOAVGCDHVG
      UJZMOPUKVGHCFNVHUMULFCFHUNTUONHUNUPUQURUSFCIUTVAVBVC $.
      $( [14-Jul-2014] $)
  $}

  ${
    $d k v N $.  $d k v U $.  $d k V $.  $d k v X $.  $d k v O $.  $d k W $.
    $d k v ph $.
    lshpdisj.v $e |- V = ( Base ` W ) $.
    lshpdisj.o $e |- O = ( 0g ` W ) $.
    lshpdisj.n $e |- N = ( LSpan ` W ) $.
    lshpdisj.p $e |- P = ( LSSum ` W ) $.
    lshpdisj.h $e |- H = ( LSHyp ` W ) $.
    lshpdisj.w $e |- ( ph -> W e. LVec ) $.
    lshpdisj.u $e |- ( ph -> U e. H ) $.
    lshpdisj.x $e |- ( ph -> X e. V ) $.
    lshpdisj.e $e |- ( ph -> ( U P ( N ` { X } ) ) = V ) $.
    $( A hyperplane and the span in the hyperplane definition are disjoint. $)
    lshpdisj $p |- ( ph -> ( U i^i ( N ` { X } ) ) = { O } ) $=
      ( cfv wcel vv vk csn cin cv wa wceq cvsca co csca cbs wrex clmod wb clvec
      lveclmod syl adantr eqid lspsnel syl2anc wi lshpnel ad2antrr clss lshplss
      wne wn simpr lspsnmul lspsnel4 mtbid ex necon4ad eleq1 imbi12d syl5ibrcom
      eqeq1 com23 com24 imp31 rexlimdva expimpd elin elsn 3imtr4g ssrdv lspsncl
      sylbid wss lssincl syl3anc lss0ss eqssd ) ACIUCESZUDZFUCZAUAWPWQAUAUEZCTZ
      WRWOTZUFWRFUGZWRWPTWRWQTAWSWTXAAWSUFZWTWRUBUEZIHUHSZUIZUGZUBHUJSZUKSZULZX
      AXBHUMTZIGTZWTXIUNAXJWSAHUOTZXJOHUPUQZURAXKWSQURXDWRUBXGXHEGHIXGUSZXHUSZJ
      XDUSZLUTVAXBXFXAUBXHAWSXCXHTZXFXAVBAXFXQWSXAAXQXFWSXAVBZAXQXFXRVBAXQUFZXR
      XFXECTZXEFUGZVBXSXTXEFXSXEFVGZXTVHXSYBUFZICTZXTAYDVHXQYBABCDEGHIJLMNXMPQR
      VCVDYCHVESZCEFGHIXEJKYEUSZLAXLXQYBOVDACYETZXQYBAYECDHYFNXMPVFZVDAXKXQYBQV
      DXSXEWOTYBXSXCXDXGXHEGHIJXPXNXOLAXJXQXMURAXQVIAXKXQQURVJURXSYBVIVKVLVMVNX
      FWSXTXAYAWRXECVOWRXEFVRVPVQVMVSVTWAWBWIWCWRCWOWDUAFWEWFWGAXJWPYETZWQWPWJX
      MAXJYGWOYETZYIXMYHAXJXKYJXMQYEEGHIJYFLWHVAYECWOHYFWKWLYEHWPFKYFWMVAWN $.
      $( [3-Jul-2014] $)
  $}

  ${
    $d v T $.  $d v U $.  $d v W $.  $d v ph $.
    lshpcmp.h $e |- H = ( LSHyp ` W ) $.
    lshpcmp.w $e |- ( ph -> W e. LVec ) $.
    lshpcmp.t $e |- ( ph -> T e. H ) $.
    lshpcmp.u $e |- ( ph -> U e. H ) $.
    $( If two hyperplanes are comparable, they are equal. $)
    lshpcmp $p |- ( ph -> ( T C_ U <-> T = U ) ) $=
      ( vv wss wceq cfv wne eqid wcel syl lshplss wa adantr wpss wn clvec clmod
      cbs lveclmod lshpne clss lssss cv csn clspn clsm co wi w3a islshpsm mpbid
      wrex simp3d id adantrr simpr syl3an1 3expia simplrr sseq2d eqeq2d 3imtr3d
      lsmcv exp42 rexlimdv mpd necon3ad df-pss simplbi2 necon1bd syl5com eqimss
      mpid impbid1 ) ABCKZBCLZABCUAZUBZWBWCACEUEMZNWEACDWFEWFOZFAEUCPZEUDPGEUFQ
      ZIUGAWDCWFAWDCWFKZCWFLZACEUHMZPZWJAWLCDEWLOZFWIIRZWLCWFEWGWNUIQABJUJZUKEU
      LMZMEUMMZUNZWFLZJWFUSZWDWJWKUOZUOZABWLPZBWFNZXAABDPXDXEXAUPHAJWRWLBDWQWFE
      WGWQOZWNWROZFWIUQURUTAWTXCJWFAWPWFPZWTWDXBAXHWTSSZWDSZCWSKZCWSLZWJWKXIWDX
      KXLXIAXHSZWDXKXLAXHXMWTXMVAVBXMWRWLBCWQWFEWPWGWNXFXGAWHXHGTAXDXHAWLBDEWNF
      WIHRTAWMXHWOTAXHVCVJVDVEXJWSWFCAXHWTWDVFZVGXJWSWFCXNVHVIVKVLVMVTVNVMWBWDB
      CWDWBBCNBCVOVPVQVRBCVSWA $.
      $( [9-Oct-2014] $)
  $}

  ${
    lshpin.h $e |- H = ( LSHyp ` W ) $.
    lshpin.w $e |- ( ph -> W e. LVec ) $.
    lshpin.t $e |- ( ph -> T e. H ) $.
    lshpin.u $e |- ( ph -> U e. H ) $.
    $( The intersection of two different hyperplanes is not a hyperplane. $)
    lshpin $p |- ( ph -> ( ( T i^i U ) e. H <-> T = U ) ) $=
      ( cin wcel wceq wa wss inss1 clvec adantr simpr lshpcmp mpbii inss2 inidm
      eqtr3d ex syl5eqel ineq2 eleq1d syl5ibcom impbid ) ABCJZDKZBCLZAUKULAUKMZ
      UJBCUMUJBNUJBLBCOUMUJBDEFAEPKUKGQZAUKRZABDKUKHQSTUMUJCNUJCLBCUAUMUJCDEFUN
      UOACDKUKIQSTUCUDABBJZDKULUKAUPBDBUBHUEULUPUJDBCBUFUGUHUI $.
      $( [29-Oct-2014] $)
  $}

  ${
    $d s w N $.  $d s v w V $.  $d s v w W $.  $d s v w Z $.  $d v X $.
    lsatset.v $e |- V = ( Base ` W ) $.
    lsatset.n $e |- N = ( LSpan ` W ) $.
    lsatset.z $e |- Z = ( 0g ` W ) $.
    lsatset.a $e |- A = ( LSAtoms ` W ) $.
    $( The set of all 1-dim subspaces (atoms) of a left module or left vector
       space. $)
    lsatset $p |- ( W e. X -> A = { s |
                   E. v e. ( V \ { Z } ) s = ( N ` { v } ) } ) $=
      ( vw wcel cfv cv csn wceq cvv cbs clsa cdif wrex cab elex clspn c0g fveq2
      syl6eqr difeq12d fveq1d eqeq2d rexeqbidv abbidv df-lsatoms eqeltri difexg
      sneqd fvex ax-mp abrexex fvmpt syl syl5eq ) EFNZBEUAOZHPZAPQZCOZRZADGQZUB
      ZUCZHUDZLVEESNVFVNREFUEMEVGVHMPZUFOZOZRZAVOTOZVOUGOZQZUBZUCZHUDVNSUAVOERZ
      WCVMHWDVRVJAWBVLWDVSDWAVKWDVSETOZDVOETUHIUIWDVTGWDVTEUGOGVOEUGUHKUIURUJWD
      VQVIVGWDVHVPCWDVPEUFOCVOEUFUHJUIUKULUMUNMAHUOAHVLVIDSNVLSNDWESIETUSUPDVKS
      UQUTVAVBVCVD $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)

    $d s v U $.  $d v x N $.  $d x U $.  $d x V $.  $d x Z $.
    $( The predicate "is a 1-dim subspace (atom)" (of a left module or left
       vector space). $)
    islsat $p |- ( W e. X -> ( U e. A <-> E. x e. ( V \ { Z } )
                  U = ( N ` { x } ) ) ) $=
      ( vv vs wcel cv csn wceq wrex cvv cfv cdif cab lsatset eleq2d fvex mpbiri
      eleq1 rexlimivw eqeq1 rexbidv elab3 syl6bb weq sneq fveq2d eqeq2d cbvrexv
      ) FGOZCBOZCMPZQZDUAZRZMEHQUBZSZCAPZQZDUAZRZAVESUSUTCNPZVCRZMVESZNUCZOVFUS
      BVNCMBDEFGHNIJKLUDUEVMVFNCVDCTOZMVEVDVOVCTOVBDUFCVCTUHUGUIVKCRVLVDMVEVKCV
      CUJUKULUMVDVJMAVEMAUNZVCVICVPVBVHDVAVGUOUPUQURUM $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)

    $( The span of a non-zero singleton is an atom.  TODO: make this obsolete
       and use ~ lsatlspsn instead? $)
    lsatlspsn2 $p |- ( ( W e. LMod /\ X e. V /\ X =/= Z )
           -> ( N ` { X } ) e. A ) $=
      ( vv clmod wcel wne w3a csn cfv cv wceq cdif wrex 3simpc sylibr eqid sneq
      wa eldifsn fveq2d eqeq2d rcla4ev sylancl wb islsat 3ad2ant1 mpbird ) DLMZ
      ECMZEFNZOZEPZBQZAMZVAKRZPZBQZSZKCFPTZUAZUSEVGMZVAVASZVHUSUQURUFVIUPUQURUB
      ECFUGUCVAUDVFVJKEVGVCESZVEVAVAVKVDUTBVCEUEUHUIUJUKUPUQVBVHULURKAVABCDLFGH
      IJUMUNUO $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)

    lsatlspsn.w $e |- ( ph -> W e. LMod ) $.
    lsatlspsn.x $e |- ( ph -> X e. ( V \ { Z } ) ) $.
    $( The span of a non-zero singleton is an atom. $)
    lsatlspsn $p |- ( ph -> ( N ` { X } ) e. A ) $=
      ( vv csn cfv wcel cv wceq clmod cdif wrex eqid sneq fveq2d eqeq2d rcla4ev
      sylancl wb islsat syl mpbird ) AFOZCPZBQZUNNRZOZCPZSZNDGOUAZUBZAFUTQUNUNS
      ZVAMUNUCUSVBNFUTUPFSZURUNUNVCUQUMCUPFUDUEUFUGUHAETQUOVAUILNBUNCDETGHIJKUJ
      UKUL $.
      $( [16-Jan-1015] $)
  $}

  ${
    $d v N $.  $d v U $.  $d v V $.  $d v W $.
    islsati.v $e |- V = ( Base ` W ) $.
    islsati.n $e |- N = ( LSpan ` W ) $.
    islsati.a $e |- A = ( LSAtoms ` W ) $.
    $( A 1-dim subspace (atom) (of a left module or left vector space) equals
       the span of some vector. $)
    islsati $p |- ( ( W e. X /\ U e. A ) -> E. v e. V U = ( N ` { v } ) ) $=
      ( c0g cfv csn cdif wss wcel wa cv wceq wrex difss islsat biimpa ssrexv
      eqid mpsyl ) EFKLZMZNZEOFGPZCBPZQCARMDLSZAUITZULAETEUHUAUJUKUMABCDEFGUGHI
      UGUEJUBUCULAUIEUDUF $.
      $( [1-Oct-2014] $)
  $}

  ${
    $d v U $.  $d v W $.  $d v Z $.  $d v ph $.
    lsateln0.z $e |- Z = ( 0g ` W ) $.
    lsateln0.a $e |- A = ( LSAtoms ` W ) $.
    lsateln0.w $e |- ( ph -> W e. LMod ) $.
    lsateln0.u $e |- ( ph -> U e. A ) $.
    $( A 1-dim subspace (atom) (of a left module or left vector space) contains
       a nonzero vector. $)
    lsateln0 $p |- ( ph -> E. v e. U v =/= Z ) $=
      ( cv wcel cbs cfv csn wrex clmod eqid syl wa cdif wne clspn wceq wb mpbid
      islsat eldifi lspsnid syl2an eleq2 syl5ibrcom reximdva mpd eldifsn anbi1i
      anass bitri simprbi ancomd reximi2 ) ABKZDLZBEMNZFOZUAZPZVBFUBZBDPADVBOEU
      CNZNZUDZBVFPZVGADCLZVLJAEQLZVMVLUEIBCDVIVDEQFVDRZVIRZGHUGSUFAVKVCBVFAVBVF
      LZTVCVKVBVJLZAVNVBVDLZVRVQIVBVDVEUHVIVDEVBVOVPUIUJDVJVBUKULUMUNVCVHBVFDVQ
      VCTZVHVCVTVSVHVCTZVTVSVHTZVCTVSWATVQWBVCVBVDFUOUPVSVHVCUQURUSUTVAS $.
      $( [2-Jan-1015] $)
  $}

  ${
    $d s v S $.  $d s v W $.
    lsatlss.s $e |- S = ( LSubSp ` W ) $.
    lsatlss.a $e |- A = ( LSAtoms ` W ) $.
    $( The set of 1-dim subspaces is a set of subspaces. $)
    lsatlss $p |- ( W e. LMod -> A C_ S ) $=
      ( vs vv clmod wcel cv csn clspn cfv wceq cbs c0g cdif wrex cab eqid wa wi
      lsatset eldifi lspsncl sylan2 eleq1a syl rexlimdva abssdv eqsstrd ) CHIZA
      FJZGJZKCLMZMZNZGCOMZCPMZKZQZRZFSBGAUOURCHUSFURTZUOTZUSTEUCULVBFBULUQUMBIZ
      GVAULUNVAIZUAUPBIZUQVEUBVFULUNURIVGUNURUTUDBUOURCUNVCDVDUEUFUPBUMUGUHUIUJ
      UK $.
      $( [24-Jun-2014] $) $( [9-Apr-2014] $)

    lssatssel.w $e |- ( ph -> W e. LMod ) $.
    lssatssel.u $e |- ( ph -> U e. A ) $.
    $( An atom is a subspace. $)
    lsatlssel $p |- ( ph -> U e. S ) $=
      ( clmod wcel wss lsatlss syl sseldd ) ABCDAEJKBCLHBCEFGMNIO $.
      $( [25-Aug-2014] $)
  $}

  ${
    $d v O $.  $d v U $.  $d v W $.  $d v ph $.
    lsatn0.o $e |- O = ( 0g ` W ) $.
    lsatn0.a $e |- A = ( LSAtoms ` W ) $.
    lsatn0.w $e |- ( ph -> W e. LMod ) $.
    lsatn0.u $e |- ( ph -> U e. A ) $.
    $( A 1-dim subspace (atom) of a left module or left vector space is
       nonzero.  ( ~ atne0 analog.) $)
    lsatn0 $p |- ( ph -> U =/= { O } ) $=
      ( vv cv csn cfv wceq wne wcel clmod wb eqid wa clspn cbs cdif wrex islsat
      syl mpbid wi eldifsn lspsneq0 sylan biimpd necon3d expimpd neeq1 biimprcd
      syl5bi syl6 rexlimdv mpd ) ACJKZLEUAMZMZNZJEUBMZDLZUCZUDZCVFOZACBPZVHIAEQ
      PZVJVHRHJBCVBVEEQDVESZVBSZFGUEUFUGAVDVIJVGAVAVGPZVCVFOZVDVIUHVNVAVEPZVADO
      ZTAVOVAVEDUIAVPVQVOAVPTZVCVFVADVRVCVFNZVADNZAVKVPVSVTRHVBVEEVADVLFVMUJUKU
      LUMUNUQVDVIVOCVCVFUOUPURUSUT $.
      $( [25-Aug-2014] $)
  $}

  ${
    lsatspn0.v $e |- V = ( Base ` W ) $.
    lsatspn0.n $e |- N = ( LSpan ` W ) $.
    lsatspn0.o $e |- O = ( 0g ` W ) $.
    lsatspn0.a $e |- A = ( LSAtoms ` W ) $.
    isateln0.w $e |- ( ph -> W e. LMod ) $.
    isateln0.x $e |- ( ph -> X e. V ) $.
    $( The span of a vector is an atom iff the vector is nonzero. $)
    lsatspn0 $p |- ( ph -> ( ( N ` { X } ) e. A <-> X =/= O ) ) $=
      ( csn cfv wcel wne wa adantr wceq clmod simpr lsatn0 fveq2d adantl lspsn0
      sneq syl eqtrd ex necon3d mpd cdif eldifsn sylanbrc lsatlspsn impbida ) A
      GNZCOZBPZGDQZAUTRZUSDNZQVAVBBUSDFJKAFUAPZUTLSZAUTUBUCVBGDUSVCVBGDTZUSVCTV
      BVFRZUSVCCOZVCVFUSVHTVBVFURVCCGDUGUDUEVGVDVHVCTVBVDVFVESCFDJIUFUHUIUJUKUL
      AVARZBCEFGDHIJKAVDVALSVIGEPZVAGEVCUMPAVJVAMSAVAUBGEDUNUOUPUQ $.
      $( [4-Feb-1015] $)
  $}

  ${
    lsatssn0.o $e |- O = ( 0g ` W ) $.
    lsatssn0.a $e |- A = ( LSAtoms ` W ) $.
    lsatssn0.w $e |- ( ph -> W e. LMod ) $.
    lsatssn0.q $e |- ( ph -> Q e. A ) $.
    lsatssn0.u $e |- ( ph -> Q C_ U ) $.
    $( A subspace (or any class) including an atom is nonzero. $)
    lsatssn0 $p |- ( ph -> U =/= { O } ) $=
      ( csn wss wne wpss wa wcel syl2anc necomd df-pss clmod clss cfv lsatlssel
      eqid lss0ss lsatn0 sylanbrc psssstr sylib simprd ) AELZDAULDMZULDNZAULDOZ
      UMUNPAULCOZCDMUOAULCMZULCNUPAFUAQCFUBUCZQUQIABURCFURUEZHIJUDURFCEGUSUFRAC
      ULABCEFGHIJUGSULCTUHKULCDUIRULDTUJUKS $.
      $( [3-Feb-1015] $)
  $}

  ${
    $d v T $.  $d v U $.  $d v W $.  $d v ph $.
    lsatcmp.a $e |- A = ( LSAtoms ` W ) $.
    lsatcmp.w $e |- ( ph -> W e. LVec ) $.
    lsatcmp.t $e |- ( ph -> T e. A ) $.
    lsatcmp.u $e |- ( ph -> U e. A ) $.
    $( If two atoms are comparable, they are equal.  ( ~ atsseq analog.) $)
    lsatcmp $p |- ( ph -> ( T C_ U <-> T = U ) ) $=
      ( vv csn cfv wceq wss wb wcel clmod eqid wa ad2antrr cv cbs c0g cdif wrex
      clspn clvec lveclmod syl islsat mpbid wi eldifsn lsatn0 clss wo lsatlssel
      wne simplrl simpr lspsnat syl31anc ord necon1ad mpd eqimss impbid1 syl5bi
      ex sseq2 eqeq2 bibi12d biimprcd syl6 rexlimdv ) ADJUAZKEUFLZLZMZJEUBLZEUC
      LZKZUDZUEZCDNZCDMZOZADBPZWDIAEQPZWHWDOAEUGPZWIGEUHUIZJBDVQVTEQWAVTRZVQRZW
      ARZFUJUIUKAVSWGJWCAVPWCPZCVRNZCVRMZOZVSWGULWOVPVTPZVPWAURZSZAWRVPVTWAUMAX
      AWRAXASZWPWQXBWPWQXBWPSZCWBURZWQAXDXAWPABCWAEWNFWKHUNTXCWQCWBXCWQCWBMZXCW
      JCEUOLZPZWSWPWQXEUPAWJXAWPGTAXGXAWPABXFCEXFRZFWKHUQTAWSWTWPUSXBWPUTXFCVQV
      TEVPWAWLWNXHWMVAVBVCVDVEVICVRVFVGVIVHVSWGWRVSWEWPWFWQDVRCVJDVRCVKVLVMVNVO
      VE $.
      $( [25-Aug-2014] $)
  $}

  ${
    lsatcmp2.o $e |- O = ( 0g ` W ) $.
    lsatcmp2.a $e |- A = ( LSAtoms ` W ) $.
    lsatcmp2.w $e |- ( ph -> W e. LVec ) $.
    lsatcmp2.t $e |- ( ph -> T e. A ) $.
    lsatcmp2.u $e |- ( ph -> ( U e. A \/ U = { O } ) ) $.
    $( If an atoms is included in at-most an atom, they are equal.  More
       general version of ~ lsatcmp . $)
    lsatcmp2 $p |- ( ph -> ( T C_ U <-> T = U ) ) $=
      ( wss wceq wa simpr clvec wcel adantr csn wne clmod lveclmod syl lsatssn0
      wi ord necon1ad mpd lsatcmp mpbid ex eqimss impbid1 ) ACDLZCDMZAUNUOAUNNZ
      UNUOAUNOZUPBCDFHAFPQZUNIRACBQUNJRZUPDESZTZDBQZUPBCDEFGHAFUAQZUNAURVCIFUBU
      CRUSUQUDAVAVBUEUNAVBDUTAVBDUTMKUFUGRUHUIUJUKCDULUM $.
      $( [3-Feb-1015] $)
  $}

  ${
    lsatel.o $e |- O = ( 0g ` W ) $.
    lsatel.n $e |- N = ( LSpan ` W ) $.
    lsatel.a $e |- A = ( LSAtoms ` W ) $.
    lsatel.w $e |- ( ph -> W e. LVec ) $.
    lsatel.u $e |- ( ph -> U e. A ) $.
    lsatel.x $e |- ( ph -> X e. U ) $.
    lsatel.e $e |- ( ph -> X =/= O ) $.
    $( A nonzero member of an atom determines the atom. $)
    lsatel $p |- ( ph -> U = ( N ` { X } ) ) $=
      ( csn cfv wss wcel eqid syl3anc wceq clmod lveclmod syl lsatlssel lspsnss
      clss clvec cbs wne lssel syl2anc lsatlspsn2 lsatcmp mpbid eqcomd ) AGODPZ
      CAUQCQZUQCUAAFUBRZCFUGPZRZGCRZURAFUHRUSKFUCUDZABUTCFUTSZJVCLUEZMUTCDFGVDI
      UFTABUQCFJKAUSGFUIPZRZGEUJUQBRVCAVAVBVGVEMUTCVFFGVFSZVDUKULNBDVFFGEVHIHJU
      MTLUNUOUP $.
      $( [25-Aug-2014] $)
  $}

  ${
    lsatelb.v $e |- V = ( Base ` W ) $.
    lsatelb.o $e |- O = ( 0g ` W ) $.
    lsatelb.n $e |- N = ( LSpan ` W ) $.
    lsatelb.a $e |- A = ( LSAtoms ` W ) $.
    lsatelb.w $e |- ( ph -> W e. LVec ) $.
    lsatelb.x $e |- ( ph -> X e. ( V \ { O } ) ) $.
    lsatelb.u $e |- ( ph -> U e. A ) $.
    $( A nonzero member of an atom determines the atom. $)
    lsatelb $p |- ( ph -> ( X e. U <-> U = ( N ` { X } ) ) ) $=
      ( wcel csn cfv wa adantr wceq clvec simpr wne eldifsn sylib simprd lsatel
      cdif eqimss2 adantl wb clss eqid clmod lveclmod lsatlssel simpld lspsnel5
      wss syl mpbird impbida ) AHCPZCHQDRZUAZAVDSBCDEGHJKLAGUBPZVDMTACBPVDOTAVD
      UCAHEUDZVDAHFPZVHAHFEQUIPVIVHSNHFEUEUFZUGTUHAVFSVDVECUTZVFVKAVECUJUKAVDVK
      ULVFAGUMRZCDFGHIVLUNZKAVGGUOPMGUPVAZABVLCGVMLVNOUQAVIVHVJURUSTVBVC $.
      $( [3-Feb-1015] $)
  $}

  ${
    $d p q r y z A $.  $d q r y z O $.  $d p q r y z P $.  $d p r Q $.
    $d p q r y z T $.  $d p q r y z U $.  $d p q r y z W $.  $d q r y z ph $.
    lsmsat.o $e |- O = ( 0g ` W ) $.
    lsmsat.s $e |- S = ( LSubSp ` W ) $.
    lsmsat.p $e |- P = ( LSSum ` W ) $.
    lsmsat.a $e |- A = ( LSAtoms ` W ) $.
    lsmsat.w $e |- ( ph -> W e. LMod ) $.
    lsmsat.t $e |- ( ph -> T e. S ) $.
    lsmsat.u $e |- ( ph -> U e. S ) $.
    lsmsat.q $e |- ( ph -> Q e. A ) $.
    lsmsat.n $e |- ( ph -> T =/= { O } ) $.
    lsmsat.l $e |- ( ph -> Q C_ ( T P U ) ) $.
    $( Convert comparison of atom with sum of subspaces to a comparison to sum
       with atom.  ( ~ elpaddati analog.)  TODO: any way to shorten this? $)
    lsmsat $p |- ( ph -> E. p e. A ( p C_ T /\ Q C_ ( p P U ) ) ) $=
      ( vr vy vz vq cv csn clspn cfv wceq cbs cdif wrex wss co wa wcel clmod wb
      eqid islsat syl mpbid cplusg simp3 3ad2ant1 eqsstr3d lsmcl syl3anc eldifi
      w3a 3ad2ant2 lspsnel5 mpbird lsmelval wi wne lssne0 adantr simpr2 syl2anc
      lssel simpr3 lsatlspsn2 simpl3 simpr1 oveq1d simp2r 3eqtrd fveq2d lspsnss
      0vlid sneqd eqsstrd lspsncl lsmub2 sstrd sseq1 oveq1 sseq2d anbi12d 3exp2
      rcla4ev syl12anc imp rexlimdv mpd simp2l simpr cpr lspvadd lsmpr lsmless2
      sseqtrd syl31anc pm2.61dane rexlimdvv 3adant3 anbi2d rexbidv 3ad2ant3
      3exp ) ADUAUEZUFZIUGUHZUHZUIZUAIUJUHZHUFZUKZULZJUEZFUMZDYKGCUNZUMZUOZJBUL
      ZADBUPZYJRAIUQUPZYQYJUROUABDYDYGIUQHYGUSZYDUSZKNUTVAVBAYFYPUAYIAYBYIUPZYF
      YPAUUAYFVJZYPYLYEYMUMZUOZJBULZUUBYBUBUEZUCUEZIVCUHZUNZUIZUCGULUBFULZUUEUU
      BYBFGCUNZUPZUUKUUBUUMYEUULUMUUBYEDUULAUUAYFVDAUUADUULUMYFTVEVFUUBEUULYDYG
      IYBYSLYTAUUAYRYFOVEZAUUAUULEUPZYFAYRFEUPZGEUPZUUOOPQCEFGILMVGVHVEUUAAYBYG
      UPYFYBYGYHVIVKVLVMUUBYRUUPUUQUUMUUKURUUNAUUAUUPYFPVEAUUAUUQYFQVEUBUCUUHCE
      FGIYBUUHUSZLMVNVHVBAUUAUUKUUEVOYFAUUAUOZUUJUUEUBUCFGUUSUUFFUPZUUGGUPZUOZU
      UJUUEUUSUVBUUJVJZUUEUUFHUVCUUFHUIZUOZUDUEZHVPZUDFULZUUEUVCUVHUVDUUSUVBUVH
      UUJAUVHUUAAFYHVPZUVHSAUUPUVIUVHURPUDEIFHKLVQVAVBVRVEVRUVEUVGUUEUDFUVCUVDU
      VFFUPZUVGUUEVOVOUVCUVDUVJUVGUUEUVCUVDUVJUVGVJZUOZUVFUFYDUHZBUPZUVMFUMZYEU
      VMGCUNZUMZUUEUVLYRUVFYGUPZUVGUVNUVCYRUVKUUSUVBYRUUJAYRUUAOVRVEZVRZUVLUUPU
      VJUVRUVCUUPUVKUUSUVBUUPUUJAUUPUUAPVRVEZVRZUVCUVDUVJUVGVSZEFYGIUVFYSLWAVTZ
      UVCUVDUVJUVGWBBYDYGIUVFHYSYTKNWCVHUVLUVJUVOUWCUVLEFYDYGIUVFYSLYTUVTUWBUWD
      VLVBUVLYEGUVPUVLYEUUGUFZYDUHZGUVLYCUWEYDUVLYBUUGUVLYBUUIHUUGUUHUNZUUGUUSU
      VBUUJUVKWDUVLUUFHUUGUUHUVCUVDUVJUVGWEWFUVLYRUUGYGUPZUWGUUGUIUVTUVCUWHUVKU
      VCUUQUVAUWHUUSUVBUUQUUJAUUQUUAQVRVEZUUSUUTUVAUUJWGZEGYGIUUGYSLWAVTZVRUUHY
      GIUUGHYSUURKWKVTWHWLWIUVCUWFGUMZUVKUVCYRUUQUVAUWLUVSUWIUWJEGYDIUUGLYTWJVH
      ZVRWMUVLYRUVMEUPZUUQGUVPUMUVTUVLYRUVRUWNUVTUWDEYDYGIUVFYSLYTWNVTUVCUUQUVK
      UWIVRCEUVMGILMWOVHWPUUDUVOUVQUOJUVMBYKUVMUIZYLUVOUUCUVQYKUVMFWQUWOYMUVPYE
      YKUVMGCWRWSWTXBXCXAXDXEXFUVCUUFHVPZUOZUUFUFYDUHZBUPZUWRFUMZYEUWRGCUNZUMZU
      UEUWQYRUUFYGUPZUWPUWSUVCYRUWPUVSVRUVCUXCUWPUVCUUPUUTUXCUWAUUSUUTUVAUUJXGZ
      EFYGIUUFYSLWAVTZVRUVCUWPXHBYDYGIUUFHYSYTKNWCVHUVCUWTUWPUVCUUTUWTUXDUVCEFY
      DYGIUUFYSLYTUVSUWAUXEVLVBVRUVCUXBUWPUVCYEUWRUWFCUNZUXAUVCYEUUFUUGXIYDUHZU
      XFUVCYEUUIUFZYDUHZUXGUVCYCUXHYDUVCYBUUIUUSUVBUUJVDWLWIUVCYRUXCUWHUXIUXGUM
      UVSUXEUWKUUHYDYGIUUFUUGYSUURYTXJVHWMUVCCYDYGIUUFUUGYSYTMUVSUXEUWKXKXMUVCY
      RUWREUPZUUQUWLUXFUXAUMUVSUVCYRUXCUXJUVSUXEEYDYGIUUFYSLYTWNVTUWIUWMCEUWRUW
      FGILMXLXNWPVRUUDUWTUXBUOJUWRBYKUWRUIZYLUWTUUCUXBYKUWRFWQUXKYMUXAYEYKUWRGC
      WRWSWTXBXCXOYAXPXQXFYFAYPUUEURUUAYFYOUUDJBYFYNUUCYLDYEYMWQXRXSXTVMYAXEXF
      $.
      $( [15-Jan-1015] $)
  $}

  ${
    $d p r y z A $.  $d p r y z P $.  $d p r Q $.  $d y z T $.  $d p r y z U $.
    $d p r y z W $.  $d r y z ph $.
    lsmsatOLD.s $e |- S = ( LSubSp ` W ) $.
    lsmsatOLD.p $e |- P = ( LSSum ` W ) $.
    lsmsatOLD.a $e |- A = ( LSAtoms ` W ) $.
    lsmsatOLD.w $e |- ( ph -> W e. LMod ) $.
    lsmsatOLD.t $e |- ( ph -> T e. S ) $.
    lsmsatOLD.u $e |- ( ph -> U e. S ) $.
    lsmsatOLD.q $e |- ( ph -> Q e. A ) $.
    lsmsatOLD.l $e |- ( ph -> Q C_ ( T P U ) ) $.
    $( Obsolete version of ~ lsmsat as of 15-Jan-2015. $)
    lsmsatOLD $p |- ( ph -> E. p e. A Q C_ ( p P U ) ) $=
      ( wcel 3ad2ant1 adantr vr vy vz cv csn clspn cfv wceq cbs c0g cdif co wss
      wrex clmod wb eqid islsat syl mpbid w3a cplusg simp3 eqcomd eqsstrd lsmcl
      syl3anc eldifi 3ad2ant2 lspsnel5 mpbird lsmelval wi simpl3 oveq1d simpl2r
      wa simpr lssel syl2anc 0vlid 3eqtrd fveq2d wne eldifsn simprbi lsatlspsn2
      sneqd adantl lspsncl lsmss1 syl121anc sseqtrd oveq1 sseq2d rcla4ev simp2l
      eqeltrrd cpr simp2r lspvadd lsmpr lsmless2 syl31anc sstrd pm2.61dane 3exp
      lspsnss rexlimdvv 3adant3 mpd sseq1 rexbidv 3ad2ant3 rexlimdv ) ADUAUDZUE
      ZHUFUGZUGZUHZUAHUIUGZHUJUGZUEZUKZUNZDIUDZGCULZUMZIBUNZADBRZYEPAHUORZYJYEU
      PMUABDXRYAHUOYBYAUQZXRUQZYBUQZLURUSUTAXTYIUAYDAXPYDRZXTYIAYOXTVAZYIXSYGUM
      ZIBUNZYPXPUBUDZUCUDZHVBUGZULZUHZUCGUNUBFUNZYRYPXPFGCULZRZUUDYPUUFXSUUEUMY
      PXSDUUEYPDXSAYOXTVCVDAYODUUEUMXTQSVEYPEUUEXRYAHXPYLJYMAYOYKXTMSZAYOUUEERZ
      XTAYKFERZGERZUUHMNOCEFGHJKVFVGSYOAXPYARZXTXPYAYCVHZVIVJVKYPYKUUIUUJUUFUUD
      UPUUGAYOUUIXTNSAYOUUJXTOSUBUCUUACEFGHXPUUAUQZJKVLVGUTAYOUUDYRVMXTAYOVQZUU
      CYRUBUCFGUUNYSFRZYTGRZVQZUUCYRUUNUUQUUCVAZYRYSYBUURYSYBUHZVQZYTUEZXRUGZBR
      XSUVBGCULZUMZYRUUTXSUVBBUUTXQUVAXRUUTXPYTUUTXPUUBYBYTUUAULZYTUUNUUQUUCUUS
      VNUUTYSYBYTUUAUURUUSVRVOUUTYKYTYARZUVEYTUHUURYKUUSUUNUUQYKUUCAYKYOMTSZTZU
      UTUUJUUPUVFUURUUJUUSUUNUUQUUJUUCAUUJYOOTSZTZUUOUUPUUNUUCUUSVPZEGYAHYTYLJV
      SZVTZUUAYAHYTYBYLUUMYNWAVTWBWHWCZUUTYKUUKXPYBWDZXSBRUVHUURUUKUUSUUNUUQUUK
      UUCYOUUKAUULWISTUURUVOUUSUUNUUQUVOUUCYOUVOAYOUUKUVOXPYAYBWEWFWISTBXRYAHXP
      YBYLYMYNLWGVGWRUUTXSGUVCUUTXSUVBGUVNUUTUUPUVBGUMZUVKUUTEGXRYAHYTYLJYMUVHU
      VJUVMVJUTZVEUUTUVCGUUTYKUVBERZUUJUVPUVCGUHUVHUUTYKUVFUVRUVHUVMEXRYAHYTYLJ
      YMWJVTUVJUVQCEUVBGHJKWKWLVDWMYQUVDIUVBBYFUVBUHYGUVCXSYFUVBGCWNWOWPVTUURYS
      YBWDZVQZYSUEXRUGZBRZXSUWAGCULZUMZYRUVTYKYSYARZUVSUWBUURYKUVSUVGTUURUWEUVS
      UURUUIUUOUWEUUNUUQUUIUUCAUUIYONTSUUNUUOUUPUUCWQEFYAHYSYLJVSVTZTUURUVSVRBX
      RYAHYSYBYLYMYNLWGVGUURUWDUVSUURXSUWAUVBCULZUWCUURXSYSYTWSXRUGZUWGUURXSUUB
      UEZXRUGZUWHUURXQUWIXRUURXPUUBUUNUUQUUCVCWHWCUURYKUWEUVFUWJUWHUMUVGUWFUURU
      UJUUPUVFUVIUUNUUOUUPUUCWTZUVLVTZUUAXRYAHYSYTYLUUMYMXAVGVEUURCXRYAHYSYTYLY
      MKUVGUWFUWLXBWMUURYKUWAERZUUJUVPUWGUWCUMUVGUURYKUWEUWMUVGUWFEXRYAHYSYLJYM
      WJVTUVIUURYKUUJUUPUVPUVGUVIUWKEGXRHYTJYMXHVGCEUWAUVBGHJKXCXDXETYQUWDIUWAB
      YFUWAUHYGUWCXSYFUWAGCWNWOWPVTXFXGXIXJXKXTAYIYRUPYOXTYHYQIBDXSYGXLXMXNVKXG
      XOXK $.
      $( [15-Jan-1015] $)
  $}

  ${
    $d v P $.  $d v Q $.  $d v T $.  $d v U $.  $d v W $.  $d v ph $.
    lsmsatcv.s $e |- S = ( LSubSp ` W ) $.
    lsmsatcv.p $e |- P = ( LSSum ` W ) $.
    lsmsatcv.a $e |- A = ( LSAtoms ` W ) $.
    lsmsatcv.w $e |- ( ph -> W e. LVec ) $.
    lsmsatcv.t $e |- ( ph -> T e. S ) $.
    lsmsatcv.u $e |- ( ph -> U e. S ) $.
    lsmsatcv.x $e |- ( ph -> Q e. A ) $.
    $( Subspace sum has the covering property (using spans of singletons to
       represent atoms).  Similar to Exercise 5 of [Kalmbach] p. 153.
       ( ~ spansncvi analog.)  Explicit atom version of ~ lsmcv . $)
    lsmsatcv $p |- ( ( ph /\ T C. U /\ U C_ ( T P Q ) )
      -> U = ( T P Q ) ) $=
      ( vv wceq cfv wa wcel wpss co wss cv csn clspn wrex wi clvec eqid islsati
      cbs syl2anc w3a adantr simpr lsmcv 3expib 3adant3 wb sseq2d anbi2d eqeq2d
      oveq2 imbi12d 3ad2ant3 mpbird 3exp rexlimdv mpd 3impib ) AFGUAZGFDCUBZUCZ
      GVMQZADPUDZUEHUFRZRZQZPHULRZUGZVLVNSZVOUHZAHUITZDBTWALOPBDVQVTHUIVTUJZVQU
      JZKUKUMAVSWCPVTAVPVTTZVSWCAWGVSUNWCVLGFVRCUBZUCZSZGWHQZUHZAWGWLVSAWGSZVLW
      IWKWMCEFGVQVTHVPWEIWFJAWDWGLUOAFETWGMUOAGETWGNUOAWGUPUQURUSVSAWCWLUTWGVSW
      BWJVOWKVSVNWIVLVSVMWHGDVRFCVDZVAVBVSVMWHGWNVCVEVFVGVHVIVJVK $.
      $( [29-Oct-2014] $)
  $}

  ${
    $d q x A $.  $d x O $.  $d q x U $.  $d q W $.  $d x ph $.
    lssatomic.s $e |- S = ( LSubSp ` W ) $.
    lssatomic.o $e |- O = ( 0g ` W ) $.
    lssatomic.a $e |- A = ( LSAtoms ` W ) $.
    lssatomic.w $e |- ( ph -> W e. LMod ) $.
    lssatomic.u $e |- ( ph -> U e. S ) $.
    lssatomic.n $e |- ( ph -> U =/= { O } ) $.
    $( The lattice of subspaces is atomic, i.e. any nonzero element is greater
       than or equal to some atom.  ( ~ shatomici analog.) $)
    lssatomic $p |- ( ph -> E. q e. A q C_ U ) $=
      ( vx cv wne wrex wss wcel cfv csn wb lssne0 syl mpbid w3a clspn clmod cbs
      3ad2ant1 simp2 eqid lssel syl2anc lsatlspsn2 syl3anc lspsnss rcla4ev 3exp
      simp3 sseq1 rexlimdv mpd ) ANOZEPZNDQZGOZDRZGBQZADEUAPZVFMADCSZVJVFUBLNCF
      DEIHUCUDUEAVEVINDAVDDSZVEVIAVLVEUFZVDUAFUGTZTZBSZVODRZVIVMFUHSZVDFUITZSZV
      EVPAVLVRVEKUJZVMVKVLVTAVLVKVELUJZAVLVEUKZCDVSFVDVSULZHUMUNAVLVEUTBVNVSFVD
      EWDVNULZIJUOUPVMVRVKVLVQWAWBWCCDVNFVDHWEUQUPVHVQGVOBVGVODVAURUNUSVBVC $.
      $( [10-Jan-1015] $)
  $}

  ${
    $d x y A $.  $d x y N $.  $d x y S $.  $d x y U $.  $d y W $.
    lssats.s $e |- S = ( LSubSp ` W ) $.
    lssats.n $e |- N = ( LSpan ` W ) $.
    lssats.a $e |- A = ( LSAtoms ` W ) $.
    $( The lattice of subspaces is atomistic, i.e. any element is the supremum
       of its atoms.  Part of proof of Theorem 16.9 of [MaedaMaeda] p. 70.
       Hypothesis ( ~ shatomistici analog.) $)
    lssats $p |- ( ( W e. LMod /\ U e. S )
          -> U = ( N ` U. { x e. A | x C_ U } ) ) $=
      ( vy wcel wa cv wss crab cuni cfv wceq syl2anc syl3anc clmod eleq1 simplr
      c0g wne csn simplll cbs simpllr lssel lspsncl lspid lsatlss adantr rabss2
      uniss unimax lssss eqsstrd adantl sstrd ad2antrr simpr lsatlspsn2 lspsnss
      eqid 3syl sseq1 elrab sylanbrc elssuni syl eqsstr3d lspsnid sseldd simpll
      lspss lspcl syldan lss0cl pm2.61ne ssrdv simpl fveq2d eqtrd sseqtrd eqssd
      ex ) FUAKZDCKZLZDAMZDNZABOZPZEQZWKJDWPWKJMZDKZWQWPKZWKWRLZWSFUDQZWPKZWQXA
      WQXAWPUBWTWQXAUEZLZWQUFEQZWPWQXDXEXEEQZWPXDWIXECKZXFXERWIWJWRXCUGZXDWIWQF
      UHQZKZXGXHXDWJWRXJWIWJWRXCUIZWKWRXCUCZCDXIFWQXIVFZGUJSZCEXIFWQXMGHUKSCXEE
      FGHULSXDWIWOXINZXEWONZXFWPNXHWKXOWRXCWKWOWMACOZPZXIWKBCNZWNXQNWOXRNZWIXSW
      JBCFGIUMUNWMABCUOWNXQUPVGZWJXRXINZWIWJXRDXIADCUQZCDXIFXMGURUSUTZVAZVBXDXE
      WNKZXPXDXEBKZXEDNZYFXDWIXJXCYGXHXNWTXCVCBEXIFWQXAXMHXAVFZIVDTXDWIWJWRYHXH
      XKXLCDEFWQGHVETWMYHAXEBWLXEDVHVIVJXEWNVKVLXEWOEXIFXMHVQTVMXDWIXJWQXEKXHXN
      EXIFWQXMHVNSVOWTWIWPCKZXBWIWJWRVPWKYJWRWIWJXOYJYECWOEXIFXMGHVRVSUNCWPFXAY
      IGVTSWAWHWBWKWPXREQZDWKWIYBXTWPYKNWIWJWCYDYAWOXREXIFXMHVQTWKYKDEQDWKXRDEW
      JXRDRWIYCUTWDCDEFGHULWEWFWG $.
      $( [9-Apr-2014] $)
  $}

  ${
    $d q A $.  $d q S $.  $d q T $.  $d q U $.  $d q W $.
    lpssat.s $e |- S = ( LSubSp ` W ) $.
    lpssat.a $e |- A = ( LSAtoms ` W ) $.
    lpssat.w $e |- ( ph -> W e. LMod ) $.
    lpssat.t $e |- ( ph -> T e. S ) $.
    lpssat.u $e |- ( ph -> U e. S ) $.
    lpssat.l $e |- ( ph -> T C. U ) $.
    $( Two subspaces in a proper subset relationship imply the existence of an
       atom less than or equal to one but not the other.  ( ~ chpssati
       analog.) $)
    lpssat $p |- ( ph -> E. q e. A ( q C_ U /\ -. q C_ T ) ) $=
      ( wss wn syl crab cuni cfv adantr cv wral wrex wpss dfpss3 simprbi ralbii
      wa iman ss2rab clspn clmod wcel cbs lsatlss rabss2 uniss 3syl wceq unimax
      wi eqid lssss eqsstrd sstrd adantl syl3anc lssats syl2anc 3sstr4d syl5bir
      lspss ex mtod dfrex2 sylibr ) AGUAZENZVQDNZOUHZOZGBUBZOVTGBUCAWBEDNZADEUD
      ZWCOZMWDDENWEDEUEUFPWBVRVSVAZGBUBZAWCWFWAGBVRVSUIUGWGVRGBQZVSGBQZNZAWCVRV
      SGBUJAWJWCAWJUHZWHRZFUKSZSZWIRZWMSZEDWKFULUMZWOFUNSZNZWLWONZWNWPNAWQWJJTA
      WSWJAWOVSGCQZRZWRABCNZWIXANWOXBNAWQXCJBCFHIUOPVSGBCUPWIXAUQURAXBDWRADCUMZ
      XBDUSKGDCUTPAXDDWRNKCDWRFWRVBZHVCPVDVETWJWTAWHWIUQVFWLWOWMWRFXEWMVBZVLVGA
      EWNUSZWJAWQECUMXGJLGBCEWMFHXFIVHVITADWPUSZWJAWQXDXHJKGBCDWMFHXFIVHVITVJVM
      VKVKVNVTGBVOVP $.
      $( [11-Jan-1015] $)
  $}

  ${
    $d q A $.  $d q S $.  $d q T $.  $d q U $.  $d q W $.  $d q ph $.
    lrelat.s $e |- S = ( LSubSp ` W ) $.
    lrelat.p $e |- P = ( LSSum ` W ) $.
    lrelat.a $e |- A = ( LSAtoms ` W ) $.
    lrelat.w $e |- ( ph -> W e. LMod ) $.
    lrelat.t $e |- ( ph -> T e. S ) $.
    lrelat.u $e |- ( ph -> U e. S ) $.
    lrelat.l $e |- ( ph -> T C. U ) $.
    $( Subspaces are relatively atomic.  Remark 2 of [Kalmbach] p. 149.
       ( ~ chrelati analog.) $)
    lrelat $p |- ( ph -> E. q e. A ( T C. ( T P q ) /\ ( T P q ) C_ U ) ) $=
      ( wss wa wrex wcel adantr cv wn lpssat ancom clmod simpr lsatlssel lssnle
      co wpss pssssd biantrurd wb lsmlub syl13anc bitrd anbi12d syl5bb rexbidva
      mpbid ) AHUAZFPZVAEPUBZQZHBREEVACUIZUJZVEFPZQZHBRABDEFGHIKLMNOUCAVDVHHBVD
      VCVBQAVABSZQZVHVBVCUDVJVCVFVBVGVJCDEVAGIJAGUESZVILTZAEDSZVIMTZVJBDVAGIKVL
      AVIUFUGZUHVJVBEFPZVBQZVGVJVPVBAVPVIAEFOUKTULVJVKVMVADSFDSZVQVGUMVLVNVOAVR
      VINTCDEVAFGIJUNUOUPUQURUSUT $.
      $( [11-Jan-1015] $)
  $}

  ${
    $d p A $.  $d p S $.  $d p T $.  $d p U $.  $d p W $.
    lssatle.s $e |- S = ( LSubSp ` W ) $.
    lssatle.a $e |- A = ( LSAtoms ` W ) $.
    lssatle.w $e |- ( ph -> W e. LMod ) $.
    lssatle.t $e |- ( ph -> T e. S ) $.
    lssatle.u $e |- ( ph -> U e. S ) $.
    $( The ordering of two subspaces is determined by the atoms under them.
       ( ~ chrelat3 analog.) $)
    lssatle $p |- ( ph
       -> ( T C_ U <-> A. p e. A ( p C_ T -> p C_ U ) ) ) $=
      ( wss crab cuni cfv wcel adantr syl wceq cv wi wral sstr expcom ralrimivw
      ss2rab clspn wa clmod lsatlss rabss2 uniss 3syl unimax eqid lssss eqsstrd
      cbs sstrd adantl lspss syl3anc ex syl2anc sseq12d sylibrd syl5bir impbid2
      lssats ) ADEMZGUAZDMZVLEMZUBZGBUCZVKVOGBVMVKVNVLDEUDUEUFVPVMGBNZVNGBNZMZA
      VKVMVNGBUGAVSVQOZFUHPZPZVROZWAPZMZVKAVSWEAVSUIFUJQZWCFUSPZMZVTWCMZWEAWFVS
      JRAWHVSAWCVNGCNZOZWGABCMZVRWJMWCWKMAWFWLJBCFHIUKSVNGBCULVRWJUMUNAWKEWGAEC
      QZWKETLGECUOSAWMEWGMLCEWGFWGUPZHUQSURUTRVSWIAVQVRUMVAVTWCWAWGFWNWAUPZVBVC
      VDADWBEWDAWFDCQDWBTJKGBCDWAFHWOIVJVEAWFWMEWDTJLGBCEWAFHWOIVJVEVFVGVHVI $.
      $( [29-Oct-2014] $)
  $}

  ${
    $d p A $.  $d p S $.  $d p U $.  $d p V $.  $d p W $.
    lssat.s $e |- S = ( LSubSp ` W ) $.
    lssat.a $e |- A = ( LSAtoms ` W ) $.
    $( Two subspaces in a proper subset relationship imply the existence of a
       1-dim subspace less than or equal to one but not the other.
       ( ~ chpssati analog.) $)
    lssat $p |- ( ( ( W e. LMod /\ U e. S /\ V e. S ) /\ U C. V )
          -> E. p e. A ( p C_ V /\ -. p C_ U ) ) $=
      ( wcel wss wn wa wral crab cuni cfv syl uniss wceq eqid wpss clmod w3a cv
      wrex dfpss3 simprbi wi ss2rab iman ralbii bitr2i clspn cbs simpl1 lsatlss
      rabss2 3syl simpl2 unimax lssss eqsstrd sstrd adantl lspss syl3anc simpl3
      lssats syl2anc 3sstr4d ex syl5bi con3d imp dfrex2 sylibr sylan2 ) CDUAZEU
      BIZCBIZDBIZUCZDCJZKZFUDZDJZWECJZKLZFAUEZVRCDJWDCDUFUGWBWDLWHKZFAMZKZWIWBW
      DWLWBWKWCWKWFFANZWGFANZJZWBWCWOWFWGUHZFAMWKWFWGFAUIWPWJFAWFWGUJUKULWBWOWC
      WBWOLZWMOZEUMPZPZWNOZWSPZDCWQVSXAEUNPZJWRXAJZWTXBJVSVTWAWOUOZWQXAWGFBNZOZ
      XCWQABJZWNXFJXAXGJWQVSXHXEABEGHUPQWGFABUQWNXFRURWQXGCXCWQVTXGCSVSVTWAWOUS
      ZFCBUTQWQVTCXCJXIBCXCEXCTZGVAQVBVCWOXDWBWMWNRVDWRXAWSXCEXJWSTZVEVFWQVSWAD
      WTSXEVSVTWAWOVGFABDWSEGXKHVHVIWQVSVTCXBSXEXIFABCWSEGXKHVHVIVJVKVLVMVNWHFA
      VOVPVQ $.
      $( [9-Apr-2014] $)
  $}

  ${
    $d q v P $.  $d q v S $.  $d q v U $.  $d q v V $.  $d q v W $.
    $d q v ph $.
    islshpat.v $e |- V = ( Base ` W ) $.
    islshpat.s $e |- S = ( LSubSp ` W ) $.
    islshpat.p $e |- P = ( LSSum ` W ) $.
    islshpat.h $e |- H = ( LSHyp ` W ) $.
    islshpat.a $e |- A = ( LSAtoms ` W ) $.
    islshpat.w $e |- ( ph -> W e. LMod ) $.
    $( Hyperplane properties expressed with subspace sum and an atom.  TODO:
       can proof be shortened?  Seems long for a simple variation of
       ~ islshpsm . $)
    islshpat $p |- ( ph -> ( U e. H <-> ( U e. S /\ U =/= V /\
                   E. q e. A ( U P q ) = V ) ) ) $=
      ( vv wcel wceq wrex wa wne cv csn clspn cfv w3a eqid islshpsm wex r19.42v
      co df-3an bitr4i c0g df-rex simpr sneqd fveq2d clmod ad3antrrr lspsn0 syl
      cdif eqtrd oveq2d simplrl lsm01 syl2anc simplrr eqnetrd pm4.71rd pm5.32da
      necon2d eldifsn anbi1i anass an12 anbi2i bitr2i syl6bb exbidv syl5bb fvex
      ex bitri rexcom4b ancom rexbii exbii r19.41v eqeq1d anbi2d pm5.32i bitr3i
      oveq2 syl6bbr wb islsat anbi1d bitr4d bitrd ) AEFQEDQZEGUAZEPUBZUCZHUDUEZ
      UEZCUKZGRZPGSZUFZXBXCEIUBZCUKZGRZIBSZUFZAPCDEFXFGHJXFUGZKLMOUHAXKXLBQZXBX
      CTZXNTZTZIUIZXPXKXSXITZPGSZAYBXKXSXJTYDXBXCXJULXSXIPGUJUMAYDXLXGRZPGHUNUE
      ZUCZVCZSZXTTZIUIZYBAYDYEYCTZPYHSZIUIZYKAYDXDYHQZYCTZPUIZYNYDXDGQZYCTZPUIA
      YQYCPGUOAYSYPPAYSYRXSXDYFUAZXITZTZTZYPAYRYCUUBAYRTZXSXIUUAUUDXSTZXIYTUUEX
      DYFXHGUUEXDYFRZXHGUAUUEUUFTZXHEGUUGXHEYGCUKZEUUGXGYGECUUGXGYGXFUEZYGUUGXE
      YGXFUUGXDYFUUEUUFUPUQURUUGHUSQZUUIYGRAUUJYRXSUUFOUTZXFHYFYFUGZXQVAVBVDVEU
      UGUUJXBUUHERUUKUUDXBXCUUFVFCDHEYFUULKLVGVHVDUUDXBXCUUFVIVJWDVMVKVLVLYPYRY
      TTZYCTZUUCYOUUMYCXDGYFVNVOUUNYRYTYCTZTUUCYRYTYCVPUUOUUBYRYTXSXIVQVRWEVSVT
      WAWBYQYCYETZPYHSZIUIZYNUURYCPYHSYQYCIPYHXGXEXFWCWFYCPYHUOVSUUQYMIUUPYLPYH
      YCYEWGWHWIWEVTYJYMIYJYEXTTZPYHSYMYEXTPYHWJUUSYLPYHYEXTYCYEXNXIXSYEXMXHGXL
      XGECWOWKWLWMWHWNWIWPAYAYJIAXRYIXTAUUJXRYIWQOPBXLXFGHUSYFJXQUULNWRVBWSWAWT
      WBXPXSXOTZYBXBXCXOULUUTXTIBSYBXSXNIBUJXTIBUOWNVSVTXA $.
      $( [11-Jan-1015] $)
  $}

  $c <oL $.

  $( Extend class notation with the covering relation for a left module or left
     vector space. $)
  clcv $a class <oL $.

  ${
    $d s t u w $.
    $( Define the covering relation for subspaces of a left vector space.
       Similar to Definition 3.2.18 of [PtakPulmannova] p. 68.
       Ptak/Pulmannova's notation ` A ( <oL `` W ) B ` is read " ` B ` covers
       ` A ` " or " ` A ` is covered by ` B ` " , and it means that ` B ` is
       larger than ` A ` and there is nothing in between.  See ~ lcvbr for
       binary relation.  ( ~ df-cv analog.) $)
    df-lcv $a |- <oL = ( w e. _V |->
     { <. t , u >. | ( ( t e. ( LSubSp ` w ) /\ u e. ( LSubSp ` w ) ) /\
         ( t C. u /\ -. E. s e. ( LSubSp ` w ) ( t C. s /\ s C. u ) ) ) } ) $.
  $}

  ${
    $d s t u w S $.  $d s t u w W $.
    lcvfbr.s $e |- S = ( LSubSp ` W ) $.
    lcvfbr.c $e |- C = ( <oL ` W ) $.
    lcvfbr.w $e |- ( ph -> W e. X ) $.
    $( The covers relation for a left vector space (or a left module). $)
    lcvfbr $p |- ( ph -> C = { <. t , u >. | ( ( t e. S /\ u e. S ) /\
         ( t C. u /\ -. E. s e. S ( t C. s /\ s C. u ) ) ) } ) $=
      ( vw clcv cfv cv wcel wa wpss cvv clss wrex copab wceq elex fveq2 syl6eqr
      wn eleq2d anbi12d rexeqdv notbid anbi2d opabbidv df-lcv fvex eqeltri xpex
      cxp opabssxp ssexi fvmpt 3syl syl5eq ) ADFMNZCOZEPZBOZEPZQZVEVGRZVEHOZRVK
      VGRQZHEUAZUGZQZQZCBUBZJAFGPFSPVDVQUCKFGUDLFVELOZTNZPZVGVSPZQZVJVLHVSUAZUG
      ZQZQZCBUBVQSMVRFUCZWFVPCBWGWBVIWEVOWGVTVFWAVHWGVSEVEWGVSFTNZEVRFTUEIUFZUH
      WGVSEVGWIUHUIWGWDVNVJWGWCVMWGVLHVSEWIUJUKULUIUMLBCHUNVQEEUREEEWHSIFTUOUPZ
      WJUQVOCBEEUSUTVAVBVC $.
      $( [7-Jan-1015] $)

    $d s t u T $.  $d s t u U $.
    lcvfbr.t $e |- ( ph -> T e. S ) $.
    lcvfbr.u $e |- ( ph -> U e. S ) $.
    $( The covers relation for a left vector space (or a left module).
       ( ~ cvbr analog.) $)
    lcvbr $p |- ( ph -> ( T C U
          <-> ( T C. U /\ -. E. s e. S ( T C. s /\ s C. U ) ) ) ) $=
      ( vt vu cv wcel wa wpss anbi12d wrex wn copab wb wceq eleq1 anbi1d psseq1
      wbr rexbidv notbid anbi2d psseq2 brabg syl2anc lcvfbr breqd jca biantrurd
      eqid 3bitr4d ) ADENPZCQZOPZCQZRZVBVDSZVBHPZSZVHVDSZRZHCUAZUBZRZRZNOUCZUIZ
      DCQZECQZRZDESZDVHSZVHESZRZHCUAZUBZRZRZDEBUIWGAVRVSVQWHUDLMVOVRVERZDVDSZWB
      VJRZHCUAZUBZRZRWHNODECCVPVBDUEZVFWIVNWNWOVCVRVEVBDCUFUGWOVGWJVMWMVBDVDUHW
      OVLWLWOVKWKHCWOVIWBVJVBDVHUHUGUJUKTTVDEUEZWIVTWNWGWPVEVSVRVDECUFULWPWJWAW
      MWFVDEDUMWPWLWEWPWKWDHCWPVJWCWBVDEVHUMULUJUKTTVPUTUNUOABVPDEAONBCFGHIJKUP
      UQAVTWGAVRVSLMURUSVA $.
      $( [9-Jan-1015] $)

    $( The covers relation for a left vector space (or a left module).
       ( ~ cvbr2 analog.) $)
    lcvbr2 $p |- ( ph -> ( T C U
          <-> ( T C. U /\ A. s e. S ( ( T C. s /\ s C_ U ) -> s = U ) ) ) ) $=
      ( wbr wpss cv wa wn wral anbi2i wrex wss wceq wi lcvbr iman dfpss2 bitr4i
      anass xchbinx ralbii ralnex bitri syl6bbr ) ADEBNDEOZDHPZOZUPEOZQZHCUARZQ
      UOUQUPEUBZQZUPEUCZUDZHCSZQABCDEFGHIJKLMUEVEUTUOVEUSRZHCSUTVDVFHCVDVBVCRZQ
      ZUSVBVCUFVHUQVAVGQZQUSUQVAVGUIURVIUQUPEUGTUHUJUKUSHCULUMTUN $.
      $( [9-Jan-1015] $)

    $( The covers relation for a left vector space (or a left module). $)
    lcvbr3 $p |- ( ph -> ( T C U
          <-> ( T C. U /\ A. s e. S ( ( T C_ s /\ s C_ U )
                  -> ( s = T \/ s = U ) ) ) ) ) $=
      ( wpss wa wn wss wne anbi2i bitri wbr cv wrex wceq wo wi wral iman df-pss
      lcvbr necom anbi12i an4 neanior xchbinxr ralbii ralnex syl6bbr ) ADEBUADE
      NZDHUBZNZUTENZOZHCUCPZOUSDUTQZUTEQZOZUTDUDUTEUDUEZUFZHCUGZOABCDEFGHIJKLMU
      JVJVDUSVJVCPZHCUGVDVIVKHCVIVGVHPZOZVCVGVHUHVCVEUTDRZOZVFUTERZOZOZVMVAVOVB
      VQVAVEDUTRZOVODUTUIVSVNVEDUTUKSTUTEUIULVRVGVNVPOZOVMVEVNVFVPUMVTVLVGUTDUT
      EUNSTTUOUPVCHCUQTSUR $.
      $( [9-Jan-1015] $)

    lcvpss.d $e |- ( ph -> T C U ) $.
    $( The covers relation implies proper subset.  ( ~ cvpss analog.) $)
    lcvpss $p |- ( ph -> T C. U ) $=
      ( vs wpss cv wa wrex wn wbr lcvbr mpbid simpl syl ) ADEOZDNPZOUFEOQNCRSZQ
      ZUEADEBTUHMABCDEFGNHIJKLUAUBUEUGUCUD $.
      $( [7-Jan-1015] $)
  $}

  ${
    $d u R $.  $d u S $.  $d u T $.  $d u U $.  $d u W $.
    lcvnbtwn.s $e |- S = ( LSubSp ` W ) $.
    lcvnbtwn.c $e |- C = ( <oL ` W ) $.
    lcvnbtwn.w $e |- ( ph -> W e. X ) $.
    lcvnbtwn.r $e |- ( ph -> R e. S ) $.
    lcvnbtwn.t $e |- ( ph -> T e. S ) $.
    lcvnbtwn.u $e |- ( ph -> U e. S ) $.
    lcvnbtwn.d $e |- ( ph -> R C T ) $.
    $( The covers relation implies no in-betweenness.  ( ~ cvnbtwn analog.) $)
    lcvnbtwn $p |- ( ph -> -. ( R C. U /\ U C. T ) ) $=
      ( vu wpss wa cv wrex wn wbr lcvbr mpbid simpr syl wcel wceq psseq2 psseq1
      anbi12d rcla4ev sylan mtand ) ACFQZFEQZRZCPSZQZUREQZRZPDTZACEQZVBUAZRZVDA
      CEBUBVEOABDCEGHPIJKLMUCUDVCVDUEUFAFDUGUQVBNVAUQPFDURFUHUSUOUTUPURFCUIURFE
      UJUKULUMUN $.
      $( [7-Jan-1015] $)

    ${
      lcvntr.p $e |- ( ph -> T C U ) $.
      $( The covers relation is not transitive.  ( ~ cvntr analog.) $)
      lcvntr $p |- ( ph -> -. R C U ) $=
        ( wpss wa wcel adantr wbr lcvpss jca wn simpr lcvnbtwn ex mt2d ) ACFBUA
        ZCEQZEFQZRZAUJUKABDCEGHIJKLMOUBABDEFGHIJKMNPUBUCAUIULUDAUIRBCDFEGHIJAGH
        SUIKTACDSUILTAFDSUINTAEDSUIMTAUIUEUFUGUH $.
        $( [10-Jan-1015] $)
    $}

    ${
      lcvnbtwn2.p $e |- ( ph -> R C. U ) $.
      lcvnbtwn2.q $e |- ( ph -> U C_ T ) $.
      $( The covers relation implies no in-betweenness.  ( ~ cvnbtwn2
         analog.) $)
      lcvnbtwn2 $p |- ( ph -> U = T ) $=
        ( wpss wa wn wss wceq lcvnbtwn anass dfpss2 anbi2i bitr4i notbii bitr2i
        wi iman sylib mp2and ) ACFRZFEUAZFEUBZPQAUNFERZSZTZUNUOSZUPUJZABCDEFGHI
        JKLMNOUCVAUTUPTZSZTUSUTUPUKVCURVCUNUOVBSZSURUNUOVBUDUQVDUNFEUEUFUGUHUIU
        LUM $.
        $( [7-Jan-1015] $)
    $}

    ${
      lcvnbtwn3.p $e |- ( ph -> R C_ U ) $.
      lcvnbtwn3.q $e |- ( ph -> U C. T ) $.
      $( The covers relation implies no in-betweenness.  ( ~ cvnbtwn3
         analog.) $)
      lcvnbtwn3 $p |- ( ph -> U = R ) $=
        ( wpss wa wn wss wceq wi lcvnbtwn iman eqcom imbi2i dfpss2 anbi1i bitri
        an32 notbii 3bitr4ri sylib mp2and ) ACFUAZFERZFCUBZPQACFRZUQSZTZUPUQSZU
        RUCZABCDEFGHIJKLMNOUDVBCFUBZUCVBVDTZSZTVCVAVBVDUEURVDVBFCUFUGUTVFUTUPVE
        SZUQSVFUSVGUQCFUHUIUPVEUQUKUJULUMUNUO $.
        $( [7-Jan-1015] $)
    $}
  $}

  ${
    $d x N $.  $d x P $.  $d x S $.  $d x U $.  $d x W $.  $d x X $.
    $d x ph $.
    lsmcv2.v $e |- V = ( Base ` W ) $.
    lsmcv2.s $e |- S = ( LSubSp ` W ) $.
    lsmcv2.n $e |- N = ( LSpan ` W ) $.
    lsmcv2.p $e |- P = ( LSSum ` W ) $.
    lsmcv2.c $e |- C = ( <oL ` W ) $.
    lsmcv2.w $e |- ( ph -> W e. LVec ) $.
    lsmcv2.u $e |- ( ph -> U e. S ) $.
    lsmcv2.x $e |- ( ph -> X e. V ) $.
    lsmcv2.l $e |- ( ph -> -. ( N ` { X } ) C_ U ) $.
    $( Subspace sum has the covering property (using spans of singletons to
       represent atoms).  Proposition 1(ii) of [Kalmbach] p. 153.
       ( ~ spansncv2 analog.) $)
    lsmcv2 $p |- ( ph -> U C ( U P ( N ` { X } ) ) ) $=
      ( vx wcel csn cfv co wbr wpss cv wss wa wceq wi wral clvec clmod lveclmod
      wn syl lspsncl syl2anc lssnle mpbid id 3adant3 simp3l simp3r adantr simpr
      w3a lsmcv syl3anc 3exp ralrimiv jca lsmcl lcvbr2 mpbird ) AEEIUAFUBZCUCZB
      UDEVQUEZESUFZUEZVSVQUGZUHZVSVQUIZUJZSDUKZUHAVRWEAVPEUGUOVRRACDEVPHKMAHULT
      ZHUMTZOHUNUPZPAWGIGTZVPDTZWHQDFGHIJKLUQURZUSUTAWDSDAVSDTZWBWCAWLWBVGAWLUH
      ZVTWAWCAWLWMWBWMVAVBAWLVTWAVCAWLVTWAVDWMCDEVSFGHIJKLMAWFWLOVEAEDTZWLPVEAW
      LVFAWIWLQVEVHVIVJVKVLABDEVQHULSKNOPAWGWNWJVQDTWHPWKCDEVPHKMVMVIVNVO $.
      $( [10-Jan-1015] $)
  $}

  ${
    $d q A $.  $d q S $.  $d q T $.  $d q U $.  $d q W $.  $d q ph $.
    lcvat.s $e |- S = ( LSubSp ` W ) $.
    lcvat.p $e |- P = ( LSSum ` W ) $.
    lcvat.a $e |- A = ( LSAtoms ` W ) $.
    icvat.c $e |- C = ( <oL ` W ) $.
    lcvat.w $e |- ( ph -> W e. LMod ) $.
    lcvat.t $e |- ( ph -> T e. S ) $.
    lcvat.u $e |- ( ph -> U e. S ) $.
    lcvat.l $e |- ( ph -> T C U ) $.
    $( If a subspace covers another, it equals the other joined with some
       atom.  This is a consequence of relative atomicity.  ( ~ cvati
       analog.) $)
    lcvat $p |- ( ph -> E. q e. A ( T P q ) = U ) $=
      ( clmod wcel 3ad2ant1 cv co wpss wss wa wrex wceq lcvpss lrelat w3a simp2
      lsatlssel lsmcl syl3anc wbr simp3l simp3r lcvnbtwn2 3exp reximdvai mpd )
      AFFIUAZDUBZUCZVCGUDZUEZIBUFVCGUGZIBUFABDEFGHIJKLNOPACEFGHRJMNOPQUHUIAVFVG
      IBAVBBSZVFVGAVHVFUJZCFEGVCHRJMAVHHRSZVFNTZAVHFESZVFOTZAVHGESVFPTVIVJVLVBE
      SVCESVKVMVIBEVBHJLVKAVHVFUKULDEFVBHJKUMUNAVHFGCUOVFQTAVHVDVEUPAVHVDVEUQUR
      USUTVA $.
      $( [11-Jan-1015] $)
  $}

  ${
    $d s x O $.  $d s x Q $.  $d s x W $.  $d s x ph $.
    lsatcv0.o $e |- O = ( 0g ` W ) $.
    lsatcv0.a $e |- A = ( LSAtoms ` W ) $.
    lsatcv0.c $e |- C = ( <oL ` W ) $.
    lsatcv0.w $e |- ( ph -> W e. LVec ) $.
    lsatcv0.q $e |- ( ph -> Q e. A ) $.
    $( An atom covers the zero subspace.  ( ~ atcv0 analog.) $)
    lsatcv0 $p |- ( ph -> { O } C Q ) $=
      ( vs vx wpss wa cfv wrex wcel syl eqid csn wbr cv clss wn wss clmod clvec
      wne lveclmod lsatlssel lss0ss syl2anc lsatn0 necomd df-pss sylanbrc clspn
      wceq cbs wb islsat mpbid wi adantr eldifi adantl eldifsn simprbi lspsncv0
      cdif ex psseq2 anbi2d rexbidv notbid biimprcd syl6 rexlimdv mpd jca lcvbr
      lsssn0 mpbird ) AEUAZDCUBWEDNZWELUCZNZWGDNZOZLFUDPZQZUEZOAWFWMAWEDUFZWEDU
      IWFAFUGRZDWKRWNAFUHRZWOJFUJSZABWKDFWKTZHWQKUKZWKFDEGWRULUMADWEABDEFGHWQKU
      NUOWEDUPUQADMUCZUAFURPZPZUSZMFUTPZWEVKZQZWMADBRZXFKAWOXGXFVAWQMBDXAXDFUGE
      XDTZXATZGHVBSVCAXCWMMXEAWTXERZWHWGXBNZOZLWKQZUEZXCWMVDAXJXNAXJOLWKXAXDFWT
      EXHGWRXIAWPXJJVEXJWTXDRZAWTXDWEVFVGXJWTEUIZAXJXOXPWTXDEVHVIVGVJVLXCWMXNXC
      WLXMXCWJXLLWKXCWIXKWHDXBWGVMVNVOVPVQVRVSVTWAACWKWEDFUHLWRIJAWOWEWKRWQWKFE
      GWRWCSWSWBWD $.
      $( [7-Jan-1015] $)
  $}

  ${
    lsatcveq0.o $e |- O = ( 0g ` W ) $.
    lsatcveq0.s $e |- S = ( LSubSp ` W ) $.
    lsatcveq0.a $e |- A = ( LSAtoms ` W ) $.
    lsatcveq0.c $e |- C = ( <oL ` W ) $.
    lsatcveq0.w $e |- ( ph -> W e. LVec ) $.
    lsatcveq0.u $e |- ( ph -> U e. S ) $.
    lsatcveq0.q $e |- ( ph -> Q e. A ) $.
    $( A subspace covered by an atom must be the zero subspace.  ( ~ atcveq0
       analog.) $)
    lsatcveq0 $p |- ( ph -> ( U C Q <-> U = { O } ) ) $=
      ( wbr clvec wcel adantr 3ad2ant1 csn wceq wa clmod lveclmod syl lsatlssel
      wpss simpr lcvpss ex wi lsatcv0 w3a lsssn0 simp2 wss lss0ss syl2anc simp3
      lcvnbtwn3 3exp mpd syld breq1 syl5ibrcom impbid ) AFDCPZFGUAZUBZAVHFDUHZV
      JAVHVKAVHUCCEFDHQJLAHQRZVHMSAFERZVHNSADERZVHABEDHJKAVLHUDRZMHUEUFZOUGZSAV
      HUIUJUKAVIDCPZVKVJULABCDGHIKLMOUMZAVRVKVJAVRVKUNCVIEDFHQJLAVRVLVKMTAVRVIE
      RZVKAVOVTVPEHGIJUOUFTAVRVNVKVQTAVRVMVKNTAVRVKUPAVRVIFUQZVKAVOVMWAVPNEHFGI
      JURUSTAVRVKUTVAVBVCVDAVHVJVRVSFVIDCVEVFVG $.
      $( [7-Jan-1015] $)
  $}

  ${
    $d r s P $.  $d r s S $.  $d r s T $.  $d r s U $.  $d r s W $.
    $d r s ph $.
    lcvexch.s $e |- S = ( LSubSp ` W ) $.
    lcvexch.p $e |- P = ( LSSum ` W ) $.
    lcvexch.c $e |- C = ( <oL ` W ) $.
    lcvexch.w $e |- ( ph -> W e. LMod ) $.
    lcvexch.t $e |- ( ph -> T e. S ) $.
    lcvexch.u $e |- ( ph -> U e. S ) $.
    $( Lemma for ~ lcvexch . $)
    lcvexchlem1 $p |- ( ph -> ( T C. ( T P U ) <-> ( T i^i U ) C. U ) ) $=
      ( wss wne wa wpss wcel syl3anc wceq co cin clmod lsmub1 inss2 a1i sseqin2
      2thd wb lsmss2b eqcom syl6bb syl5rbbr necon3bid anbi12d df-pss 3bitr4g )
      AEEFCUAZNZEUROZPEFUBZFNZVAFOZPEURQVAFQAUSVBUTVCAUSVBAGUCRZEDRZFDRZUSKLMCD
      EFGHIUDSVBAEFUEUFUHAEURVAFVAFTFENZAEURTZFEUGAVGURETZVHAVDVEVFVGVIUIKLMCDE
      FGHIUJSUREUKULUMUNUOEURUPVAFUPUQ $.
      $( [10-Jan-1015] $)

    ${
      lcvexch.r $e |- ( ph -> R e. S ) $.
      lcvexch.a $e |- ( ph -> ( T i^i U ) C_ R ) $.
      lcvexch.b $e |- ( ph -> R C_ U ) $.
      $( Lemma for ~ lcvexch . $)
      lcvexchlem2 $p |- ( ph -> ( ( R P T ) i^i U ) = R ) $=
        ( cin co wcel clmod wss wceq lsmmod syl131anc lssincl syl3anc syl121anc
        lsmss2 eqtr3d ) ADFGRZCSZDFCSGRZDAHUATZDETZFETZGETZDGUBULUMUCLOMNQDFGCE
        HIJUDUEAUNUOUKETZUKDUBULDUCLOAUNUPUQURLMNEFGHIUFUGPCEDUKHIJUIUHUJ $.
        $( [10-Jan-1015] $)
    $}

    ${
      lcvexch.q $e |- ( ph -> R e. S ) $.
      lcvexch.d $e |- ( ph -> T C_ R ) $.
      lcvexch.e $e |- ( ph -> R C_ ( T P U ) ) $.
      $( Lemma for ~ lcvexch . $)
      lcvexchlem3 $p |- ( ph -> ( ( R i^i U ) P T ) = R ) $=
        ( co wcel wceq cin clmod lsmmod2 syl131anc lsmcom syl3anc sseqtrd df-ss
        wss sylib eqtr3d ) ADGFCRZUAZDGUAFCRZDAHUBSZDESGESZFESZFDUIUMUNTLONMPDG
        FCEHIJUCUDADULUIUMDTADFGCRZULQAUOUQUPURULTLMNCEFGHIJUEUFUGDULUHUJUK $.
        $( [10-Jan-1015] $)
    $}

    ${
      lcvexch.f $e |- ( ph -> T C ( T P U ) ) $.
      $( Lemma for ~ lcvexch . $)
      lcvexchlem4 $p |- ( ph -> ( T i^i U ) C U ) $=
        ( wss wa wceq wi wcel syl3anc vs vr cin wbr wpss cv wo wral clmod lsmcl
        co lcvpss lcvexchlem1 mpbid w3a 3ad2ant1 simp2 lsmub2 lsmless1 syl31anc
        simp3r lsmcom sseqtr4d wb lcvbr3 adantr simpr sseq2 sseq1 anbi12d eqeq1
        orbi12d imbi12d rcla4v syl adantld sylbid 3adant3 mpd ineq1 lcvexchlem2
        mp2and simp3l eqeq1d syl5ib dfss1 eqeq12d orim12d 3exp ralrimiv lssincl
        sylib mpbir2and ) AEFUCZFBUDWNFUEZWNUAUFZOZWPFOZPZWPWNQZWPFQZUGZRZUADUH
        AEEFCUKZUEZWOABDEXDGUIHJKLAGUISZEDSZFDSZXDDSKLMCDEFGHIUJTZNULABCDEFGHIJ
        KLMUMUNAXCUADAWPDSZWSXBAXJWSUOZWPECUKZEQZXLXDQZUGZXBXKEXLOZXLXDOZXOXKXF
        XJXGXPAXJXFWSKUPZAXJWSUQZAXJXGWSLUPZCDWPEGHIURTXKXLFECUKZXDXKXFXHXGWRXL
        YAOXRAXJXHWSMUPZXTAXJWQWRVAZCDWPFEGHIUSUTAXJXDYAQZWSAXFXGXHYDKLMCDEFGHI
        VBTUPVCXKEXDBUDZXPXQPZXORZAXJYEWSNUPAXJYEYGRWSAXJPZYEXEEUBUFZOZYIXDOZPZ
        YIEQZYIXDQZUGZRZUBDUHZPZYGAYEYRVDXJABDEXDGUIUBHJKLXIVEVFYHYQYGXEYHXLDSZ
        YQYGRYHXFXJXGYSAXFXJKVFAXJVGAXGXJLVFCDWPEGHIUJTYPYGUBXLDYIXLQZYLYFYOXOY
        TYJXPYKXQYIXLEVHYIXLXDVIVJYTYMXMYNXNYIXLEVKYIXLXDVKVLVMVNVOVPVQVRVSWBXK
        XMWTXNXAXMXLFUCZWNQXKWTXLEFVTXKUUAWPWNXKBCWPDEFGHIJXRXTYBXSAXJWQWRWCYCW
        AZWDWEXNUUAXDFUCZQXKXAXLXDFVTXKUUAWPUUCFUUBXKFXDOZUUCFQXKXFXGXHUUDXRXTY
        BCDEFGHIURTFXDWFWLWGWEWHVSWIWJABDWNFGUIUAHJKAXFXGXHWNDSKLMDEFGHWKTMVEWM
        $.
        $( [10-Jan-1015] $)
    $}

    ${
      lcvexch.g $e |- ( ph -> ( T i^i U ) C U ) $.
      $( Lemma for ~ lcvexch . $)
      lcvexchlem5 $p |- ( ph -> T C ( T P U ) ) $=
        ( wss wa wceq wi wcel 3ad2ant1 vs vr co wbr wpss cv wo wral cin lssincl
        clmod syl3anc lcvpss lcvexchlem1 mpbird w3a simp3l ssrin inss2 jctir wb
        syl lcvbr3 adantr simpr sseq2 sseq1 anbi12d eqeq1 orbi12d rcla4v sylbid
        imbi12d adantld 3adant3 mpd oveq1 simp2 simp3r lcvexchlem3 inss1 lsmss1
        syl121anc eqeq12d syl5ib lsmcom orim12d 3exp ralrimiv lsmcl mpbir2and
        a1i ) AEEFCUCZBUDEWMUEZEUAUFZOZWOWMOZPZWOEQZWOWMQZUGZRZUADUHAWNEFUIZFUE
        ZABDXCFGUKHJKAGUKSZEDSZFDSZXCDSZKLMDEFGHUJULZMNUMABCDEFGHIJKLMUNUOAXBUA
        DAWODSZWRXAAXJWRUPZWOFUIZXCQZXLFQZUGZXAXKXCXLOZXLFOZPZXOXKXPXQXKWPXPAXJ
        WPWQUQZEWOFURVBWOFUSUTXKXCFBUDZXRXORZAXJXTWRNTAXJXTYARWRAXJPZXTXDXCUBUF
        ZOZYCFOZPZYCXCQZYCFQZUGZRZUBDUHZPZYAAXTYLVAXJABDXCFGUKUBHJKXIMVCVDYBYKY
        AXDYBXLDSZYKYARYBXEXJXGYMAXEXJKVDAXJVEAXGXJMVDDWOFGHUJULYJYAUBXLDYCXLQZ
        YFXRYIXOYNYDXPYEXQYCXLXCVFYCXLFVGVHYNYGXMYHXNYCXLXCVIYCXLFVIVJVMVKVBVNV
        LVOVPVPXKXMWSXNWTXMXLECUCZXCECUCZQXKWSXLXCECVQXKYOWOYPEXKBCWODEFGHIJAXJ
        XEWRKTAXJXFWRLTAXJXGWRMTAXJWRVRXSAXJWPWQVSVTZAXJYPEQZWRAXEXHXFXCEOZYRKX
        ILYSAEFWAWLCDXCEGHIWBWCTWDWEXNYOFECUCZQXKWTXLFECVQXKYOWOYTWMYQAXJYTWMQZ
        WRAXEXGXFUUAKMLCDFEGHIWFULTWDWEWGVPWHWIABDEWMGUKUAHJKLAXEXFXGWMDSKLMCDE
        FGHIWJULVCWK $.
        $( [10-Jan-1015] $)
    $}

    $( Subspaces satisfy the exchange axiom.  Lemma 7.5 of [MaedaMaeda] p. 31.
       ( ~ cvexchi analog.)  TODO: combine some lemmas. $)
    lcvexch $p |- ( ph -> ( ( T i^i U ) C U <-> T C ( T P U ) ) ) $=
      ( cin wbr co wa wcel adantr simpr clmod lcvexchlem5 lcvexchlem4 impbida )
      AEFNFBOZEEFCPBOZAUEQBCDEFGHIJAGUARZUEKSAEDRZUELSAFDRZUEMSAUETUBAUFQBCDEFG
      HIJAUGUFKSAUHUFLSAUIUFMSAUFTUCUD $.
      $( [10-Jan-1015] $)
  $}


  ${
    lcvp.s $e |- S = ( LSubSp ` W ) $.
    lcvp.p $e |- P = ( LSSum ` W ) $.
    lcvp.o $e |- O = ( 0g ` W ) $.
    lcvp.a $e |- A = ( LSAtoms ` W ) $.
    lcvp.c $e |- C = ( <oL ` W ) $.
    lcvp.w $e |- ( ph -> W e. LVec ) $.
    lcvp.u $e |- ( ph -> U e. S ) $.
    lcvp.q $e |- ( ph -> Q e. A ) $.
    $( Covering property of Definition 7.4 of [MaedaMaeda] p. 31 and its
       converse.  ( ~ cvp analog.) $)
    lcvp $p |- ( ph -> ( ( U i^i Q ) = { O } <-> U C ( U P Q ) ) ) $=
      ( cin wbr wcel csn wceq co clmod clvec lveclmod lsatlssel lssincl syl3anc
      syl lsatcveq0 lcvexch bitr3d ) AGERZECSUNHUAUBGGEDUCCSABCEFUNHILJMNOAIUDT
      ZGFTEFTUNFTAIUETUOOIUFUJZPABFEIJMUPQUGZFGEIJUHUIQUKACDFGEIJKNUPPUQULUM $.
      $( [10-Jan-1015] $)
  $}

  ${
    $d x C $.  $d x P $.  $d x Q $.  $d x U $.  $d x W $.  $d x ph $.
    lcv1.s $e |- S = ( LSubSp ` W ) $.
    lcv1.p $e |- P = ( LSSum ` W ) $.
    lcv1.a $e |- A = ( LSAtoms ` W ) $.
    lcv1.c $e |- C = ( <oL ` W ) $.
    lcv1.w $e |- ( ph -> W e. LVec ) $.
    lcv1.u $e |- ( ph -> U e. S ) $.
    lcv1.q $e |- ( ph -> Q e. A ) $.
    $( Covering property of a subspace plus an atom.  ( ~ chcv1 analog.) $)
    lcv1 $p |- ( ph -> ( -. Q C_ U <-> U C ( U P Q ) ) ) $=
      ( vx cfv wcel clvec adantr wss wn co wbr wa cv csn wceq cbs c0g cdif wrex
      clspn wb eqid islsat syl mpbid w3a 3ad2ant1 eldifi 3ad2ant2 simp1r sseq1d
      simp3 mtbid lsmcv2 oveq2d breqtrrd 3exp rexlimdv mpd wpss clmod lsatlssel
      lveclmod lsmcl syl3anc simpr lcvpss lssnle mpbird impbida ) AEGUAZUBZGGED
      UCZCUDZAWEUEZEPUFZUGHUMQZQZUHZPHUIQZHUJQZUGZUKZULZWGAWQWEAEBRZWQOAHSRZWRW
      QUNMPBEWJWMHSWNWMUOZWJUOZWNUOKUPUQURTWHWLWGPWPWHWIWPRZWLWGWHXBWLUSZGGWKDU
      CWFCXCCDFGWJWMHWIWTIXAJLWHXBWSWLAWSWEMTUTWHXBGFRZWLAXDWENTUTXBWHWIWMRWLWI
      WMWOVAVBXCWDWKGUAAWEXBWLVCXCEWKGWHXBWLVEZVDVFVGXCEWKGDXEVHVIVJVKVLAWGUEZW
      EGWFVMZXFCFGWFHSILAWSWGMTAXDWGNTAWFFRZWGAHVNRZXDEFRXHAWSXIMHVPUQZNABFEHIK
      XJOVOZDFGEHIJVQVRTAWGVSVTAWEXGUNWGADFGEHIJXJNXKWATWBWC $.
      $( [10-Jan-1015] $)
  $}

  ${
    lcv2.s $e |- S = ( LSubSp ` W ) $.
    lcv2.p $e |- P = ( LSSum ` W ) $.
    lcv2.a $e |- A = ( LSAtoms ` W ) $.
    lcv2.c $e |- C = ( <oL ` W ) $.
    lcv2.w $e |- ( ph -> W e. LVec ) $.
    lcv2.u $e |- ( ph -> U e. S ) $.
    lcv2.q $e |- ( ph -> Q e. A ) $.
    $( Covering property of a subspace plus an atom.  ( ~ chcv2 analog.) $)
    lcv2 $p |- ( ph -> ( U C. ( U P Q ) <-> U C ( U P Q ) ) ) $=
      ( wss wn co wpss wcel wbr clvec lveclmod syl lsatlssel lssnle lcv1 bitr3d
      clmod ) AEGPQGGEDRZSGUJCUAADFGEHIJAHUBTHUITMHUCUDZNABFEHIKUKOUEUFABCDEFGH
      IJKLMNOUGUH $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatexch.s $e |- S = ( LSubSp ` W ) $.
    lsatexch.p $e |- P = ( LSSum ` W ) $.
    lsatexch.o $e |- O = ( 0g ` W ) $.
    lsatexch.a $e |- A = ( LSAtoms ` W ) $.
    lsatexch.w $e |- ( ph -> W e. LVec ) $.
    lsatexch.u $e |- ( ph -> U e. S ) $.
    lsatexch.q $e |- ( ph -> Q e. A ) $.
    lsatexch.r $e |- ( ph -> R e. A ) $.
    lsatexch.l $e |- ( ph -> Q C_ ( U P R ) ) $.
    lsatexch.z $e |- ( ph -> ( U i^i Q ) = { O } ) $.
    $( The atom exchange property.  Proposition 1(i) of [Kalmbach] p. 140.  A
       version of this theorem was originally proved by Hermann Grassmann in
       1862.  ( ~ atexch analog.) $)
    lsatexch $p |- ( ph -> R C_ ( U P Q ) ) $=
      ( wcel co clmod wss clvec lveclmod syl lsatlssel lsmub2 syl3anc clcv eqid
      cfv lsmcl wpss wbr cin csn wceq mpbid lcvpss lsmub1 wa wb lsmlub syl13anc
      lcvp mpbi2and psssstr syl2anc lcv2 lcvnbtwn2 sseqtr4d ) AEGECUAZGDCUAZAIU
      BTZGFTZEFTZEVMUCAIUDTVONIUEUFZOABFEIJMVRQUGZCFGEIJKUHUIAIUJULZGFVMVNIUDJV
      TUKZNOAVOVPVQVMFTZVROVSCFGEIJKUMUIZAVOVPDFTZVNFTVROABFDIJMVRPUGZCFGDIJKUM
      UIZAGVMUNZGVMVTUOAGVNUNVNVMUCZWGAVTFGVNIUDJWANOWFAGDUPHUQURGVNVTUOSABVTCD
      FGHIJKLMWANOPVFUSUTZAGVMUCZDVMUCZWHAVOVPVQWJVROVSCFGEIJKVAUIRAVOVPWDWBWJW
      KVBWHVCVROWEWCCFGDVMIJKVDVEVGZGVNVMVHVIABVTCEFGIJKMWANOQVJUSWIWLVKVL $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatnle.o $e |- O = ( 0g ` W ) $.
    lsatnle.s $e |- S = ( LSubSp ` W ) $.
    lsatnle.a $e |- A = ( LSAtoms ` W ) $.
    lsatnle.w $e |- ( ph -> W e. LVec ) $.
    lsatnle.u $e |- ( ph -> U e. S ) $.
    lsatnle.q $e |- ( ph -> Q e. A ) $.
    $( The meet of a subspace and an incomparable atom is the zero subspace.
       ( ~ atnssm0 analog.) $)
    lsatnle $p |- ( ph -> ( -. Q C_ U <-> ( U i^i Q ) = { O } ) ) $=
      ( wss wn clsm cfv co clcv eqid wbr cin csn wceq lcv1 lcvp bitr4d ) ACENOE
      ECGPQZRGSQZUAECUBFUCUDABUIUHCDEGIUHTZJUITZKLMUEABUIUHCDEFGIUJHJUKKLMUFUG
      $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatnem0.o $e |- O = ( 0g ` W ) $.
    lsatnem0.a $e |- A = ( LSAtoms ` W ) $.
    lsatnem0.w $e |- ( ph -> W e. LVec ) $.
    lsatnem0.q $e |- ( ph -> Q e. A ) $.
    lsatnem0.r $e |- ( ph -> R e. A ) $.
    $( The meet of distinct atoms is the zero subspace.  ( ~ atnemeq0
       analog.) $)
    lsatnem0 $p |- ( ph -> ( Q =/= R <-> ( Q i^i R ) = { O } ) ) $=
      ( wss wn wne cin csn wceq lsatcmp eqcom wcel syl6bb necon3bbid clss clvec
      cfv eqid clmod lveclmod syl lsatlssel lsatnle bitr3d ) ADCLZMCDNCDOEPQAUM
      CDAUMDCQCDQABDCFHIKJRDCSUAUBABDFUCUEZCEFGUNUFZHIABUNCFUOHAFUDTFUGTIFUHUIJ
      UJKUKUL $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatexch1.p $e |- P = ( LSSum ` W ) $.
    lsatexch1.a $e |- A = ( LSAtoms ` W ) $.
    lsatexch1.w $e |- ( ph -> W e. LVec ) $.
    lsatexch1.u $e |- ( ph -> Q e. A ) $.
    lsatexch1.q $e |- ( ph -> R e. A ) $.
    lsatexch1.r $e |- ( ph -> S e. A ) $.
    lsatexch1.l $e |- ( ph -> Q C_ ( S P R ) ) $.
    lsatexch1.z $e |- ( ph -> Q =/= S ) $.
    $( The atom exch1ange property.  ( ~ hlatexch1 analog.) $)
    lsatexch1 $p |- ( ph -> R C_ ( S P Q ) ) $=
      ( clss cfv c0g eqid wcel clvec lveclmod syl lsatlssel wne cin wceq necomd
      clmod csn lsatnem0 mpbid lsatexch ) ABCDEGPQZFGRQZGUNSZHUOSZIJABUNFGUPIAG
      UATGUITJGUBUCMUDKLNAFDUEFDUFUOUJUGADFOUHABFDUOGUQIJMKUKULUM $.
      $( [14-Jan-1015] $)
  $}

  ${
    lsatcv0eq.o $e |- O = ( 0g ` W ) $.
    lsatcv0eq.p $e |- P = ( LSSum ` W ) $.
    lsatcv0eq.a $e |- A = ( LSAtoms ` W ) $.
    lsatcv0eq.c $e |- C = ( <oL ` W ) $.
    lsatcv0eq.w $e |- ( ph -> W e. LVec ) $.
    lsatcv0eq.q $e |- ( ph -> Q e. A ) $.
    lsatcv0eq.r $e |- ( ph -> R e. A ) $.
    $( If the sum of two atoms cover the zero subspace, they are equal..
       ( ~ atcv0eq analog.) $)
    lsatcv0eq $p |- ( ph -> ( { O } C ( Q P R ) <-> Q = R ) ) $=
      ( co wbr wceq wcel adantr csn wne wa wn cin lsatnem0 clss cfv clvec clmod
      eqid lveclmod syl lsatlssel lsatcv0 biantrurd 3bitrd lsssn0 lsmcl syl3anc
      lcvp simprl simprr lcvntr ex sylbid necon4ad lsmidm breqtrrd oveq2 breq2d
      syl2anc syl5ibcom impbid ) AGUAZEFDPZCQZEFRZAVQEFAEFUBZVOECQZEVPCQZUCZVQU
      DZAVSEFUEVORWAWBABEFGHIKMNOUFABCDFHUGUHZEGHWDUKZJIKLMABWDEHWEKAHUISZHUJSZ
      MHULUMZNUNZOVAAVTWAABCEGHIKLMNUOZUPUQAWBWCAWBUCCVOWDEVPHUIWELAWFWBMTAVOWD
      SZWBAWGWKWHWDHGIWEURUMTAEWDSZWBWITAVPWDSZWBAWGWLFWDSWMWHWIABWDFHWEKWHOUND
      WDEFHWEJUSUTTAVTWAVBAVTWAVCVDVEVFVGAVOEEDPZCQVRVQAVOEWNCWJAWGWLWNERWHWIDW
      DEHWEJVHVLVIVRWNVPVOCEFEDVJVKVMVN $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatcv1.o $e |- O = ( 0g ` W ) $.
    lsatcv1.p $e |- P = ( LSSum ` W ) $.
    lsatcv1.s $e |- S = ( LSubSp ` W ) $.
    lsatcv1.a $e |- A = ( LSAtoms ` W ) $.
    lsatcv1.c $e |- C = ( <oL ` W ) $.
    lsatcv1.w $e |- ( ph -> W e. LVec ) $.
    lsatcv1.u $e |- ( ph -> U e. S ) $.
    lsatcv1.q $e |- ( ph -> Q e. A ) $.
    lsatcv1.r $e |- ( ph -> R e. A ) $.
    lsatcv1.l $e |- ( ph -> U C ( Q P R ) ) $.
    $( ?.  ( ~ atcv1 analog.) $)
    lsatcv1 $p |- ( ph -> ( U = { O } <-> Q = R ) ) $=
      ( csn wceq co breq1 syl5ibcom lsatcv0eq sylibd wa adantr clvec wcel oveq1
      wbr clmod lveclmod syl lsatlssel lsmidm syl2anc sylan9eqr lsatcveq0 mpbid
      eqeltrd ex impbid ) AHIUAZUBZEFUBZAVGVFEFDUCZCUMZVHAHVICUMZVGVJTHVFVICUDU
      EABCDEFIJKLNOPRSUFUGAVHVGAVHUHZVKVGAVKVHTUIVLBCVIGHIJKMNOAJUJUKZVHPUIAHGU
      KVHQUIVLVIFBVHAVIFFDUCZFEFFDULAJUNUKZFGUKVNFUBAVMVOPJUOUPZABGFJMNVPSUQDGF
      JMLURUSUTAFBUKVHSUIVCVAVBVDVE $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatcvat.o $e |- O = ( 0g ` W ) $.
    lsatcvat.s $e |- S = ( LSubSp ` W ) $.
    lsatcvat.p $e |- P = ( LSSum ` W ) $.
    lsatcvat.a $e |- A = ( LSAtoms ` W ) $.
    lsatcvat.w $e |- ( ph -> W e. LVec ) $.
    lsatcvat.u $e |- ( ph -> U e. S ) $.
    lsatcvat.q $e |- ( ph -> Q e. A ) $.
    lsatcvat.r $e |- ( ph -> R e. A ) $.
    lsatcvat.n $e |- ( ph -> U =/= { O } ) $.
    lsatcvat.l $e |- ( ph -> U C. ( Q P R ) ) $.
    ${
      $d x A $.  $d x U $.  $d x W $.  $d x ph $.
      lsatcvat.m $e |- ( ph -> -. Q C_ U ) $.
      $( Lemma for ~ lsatcvat . $)
      lsatcvatlem $p |- ( ph -> U e. A ) $=
        ( vx wss wrex wcel clvec clmod lveclmod syl lssatomic w3a clcv cfv eqid
        cv co 3ad2ant1 simp2 lsatlssel lsmcl syl3anc cin csn wceq wbr wne wn wi
        sseq1 biimpcd necon3bd 3ad2ant3 mpd lsatnem0 mpbid lsmcom breqtrd simp3
        lcvp lsmub1 pssssd sstrd incom syl5eq lsatexch lsmlub syl13anc mpbi2and
        wpss wa wb eqssd psseq2d lcvnbtwn3 eqeltrd 3exp rexlimdv ) AUAUNZGUBZUA
        BUCGBUDZABFGHIUAKJMAIUEUDZIUFUDZNIUGUHZORUIAWRWSUABAWQBUDZWRWSAXCWRUJZG
        WQBXDIUKULZWQFDWQCUOZGIUEKXEUMZAXCWTWRNUPZXDBFWQIKMAXCXAWRXBUPZAXCWRUQZ
        URZXDXADFUDZWQFUDZXFFUDZXIAXCXLWRABFDIKMXBPURZUPZXKCFDWQIKLUSUTZAXCGFUD
        WROUPXDWQWQDCUOZXFXEXDWQDVAZHVBZVCZWQXRXEVDXDWQDVEZYAXDDGUBZVFZYBAXCYDW
        RTUPWRAYDYBVGXCWRYCWQDWQDVCWRYCWQDGVHVIVJVKVLXDBWQDHIJMXHXJAXCDBUDWRPUP
        ZVMVNZXDBXECDFWQHIKLJMXGXHXKYEVRVNXDXAXMXLXRXFVCXIXKXPCFWQDIKLVOUTVPAXC
        WRVQZXDGDECUOZWHZGXFWHAXCYIWRSUPXDYHXFGXDYHXFXDDXFUBZEXFUBZYHXFUBZXDXAX
        LXMYJXIXPXKCFDWQIKLVSUTXDBCWQEFDHIKLJMXHXPXJAXCEBUDWRQUPXDWQGYHYGAXCGYH
        UBWRAGYHSVTUPWAZXDDWQVAXSXTDWQWBYFWCWDXDXAXLEFUDZXNYJYKWIYLWJXIXPAXCYNW
        RABFEIKMXBQURZUPXQCFDEXFIKLWEWFWGXDDYHUBZWQYHUBZXFYHUBZAXCYPWRAXAXLYNYP
        XBXOYOCFDEIKLVSUTUPYMXDXAXLXMYHFUDZYPYQWIYRWJXIXPXKAXCYSWRAXAXLYNYSXBXO
        YOCFDEIKLUSUTUPCFDWQYHIKLWEWFWGWKWLVNWMXJWNWOWPVL $.
        $( [10-Jan-1015] $)
    $}

    $( A nonzero subspace less than the sum of two atoms is an atom.
       ( ~ atcvati analog.) $)
    lsatcvat $p |- ( ph -> U e. A ) $=
      ( adantr wss wn wo wcel co wpss wa clmod wb lveclmod syl lsatlssel lsmlub
      clvec syl13anc ssnpss syl6bi con2d ianor syl6ib mpd csn simpr lsatcvatlem
      wne wceq lsmcom syl3anc psseq2d mpbid jaodan mpdan ) ADGUAZUBZEGUAZUBZUCZ
      GBUDZAGDECUEZUFZVQSAVTVMVOUGZUBVQAWAVTAWAVSGUAZVTUBAIUHUDZDFUDZEFUDZGFUDZ
      WAWBUIAIUNUDZWCNIUJUKZABFDIKMWHPULZABFEIKMWHQULZOCFDEGIKLUMUOVSGUPUQURVMV
      OUSUTVAAVNVRVPAVNUGBCDEFGHIJKLMAWGVNNTAWFVNOTADBUDZVNPTAEBUDZVNQTAGHVBVEZ
      VNRTAVTVNSTAVNVCVDAVPUGBCEDFGHIJKLMAWGVPNTAWFVPOTAWLVPQTAWKVPPTAWMVPRTAGE
      DCUEZUFZVPAVTWOSAVSWNGAWCWDWEVSWNVFWHWIWJCFDEIKLVGVHVIVJTAVPVCVDVKVL $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatcvat2.s $e |- S = ( LSubSp ` W ) $.
    lsatcvat2.p $e |- P = ( LSSum ` W ) $.
    lsatcvat2.a $e |- A = ( LSAtoms ` W ) $.
    lsatcvat2.c $e |- C = ( <oL ` W ) $.
    lsatcvat2.w $e |- ( ph -> W e. LVec ) $.
    lsatcvat2.u $e |- ( ph -> U e. S ) $.
    lsatcvat2.q $e |- ( ph -> Q e. A ) $.
    lsatcvat2.r $e |- ( ph -> R e. A ) $.
    lsatcvat2.n $e |- ( ph -> Q =/= R ) $.
    lsatcvat2.l $e |- ( ph -> U C ( Q P R ) ) $.
    $( A subspace covered by the sum of two distinct atoms is an atom.
       ( ~ atcvat2i analog.) $)
    lsatcvat2 $p |- ( ph -> U e. A ) $=
      ( wcel c0g cfv eqid csn wne lsatcv1 necon3bid mpbird clvec clmod lveclmod
      co syl lsatlssel lsmcl syl3anc lcvpss lsatcvat ) ABDEFGHIUAUBZIUSUCZJKLNO
      PQAHUSUDZUEEFUERAHVAEFABCDEFGHUSIUTKJLMNOPQSUFUGUHACGHEFDULZIUIJMNOAIUJTZ
      EGTFGTVBGTAIUITVCNIUKUMZABGEIJLVDPUNABGFIJLVDQUNDGEFIJKUOUPSUQUR $.
      $( [10-Jan-1015] $)
  $}

  ${
    lsatcvat3.s $e |- S = ( LSubSp ` W ) $.
    lsatcvat3.p $e |- P = ( LSSum ` W ) $.
    lsatcvat3.a $e |- A = ( LSAtoms ` W ) $.
    lsatcvat3.w $e |- ( ph -> W e. LVec ) $.
    lsatcvat3.u $e |- ( ph -> U e. S ) $.
    lsatcvat3.q $e |- ( ph -> Q e. A ) $.
    lsatcvat3.r $e |- ( ph -> R e. A ) $.
    lsatcvat3.n $e |- ( ph -> Q =/= R ) $.
    lsatcvat3.m $e |- ( ph -> -. R C_ U ) $.
    lsatcvat3.l $e |- ( ph -> Q C_ ( U P R ) ) $.
    $( A condition implying that a certain subspace is an atom.  Part of Lemma
       3.2.20 of [PtakPulmannova] p. 68.  ( ~ atcvat3i analog.) $)
    lsatcvat3 $p |- ( ph -> ( U i^i ( Q P R ) ) e. A ) $=
      ( co wcel clcv cfv cin clmod clvec lveclmod syl lsatlssel syl3anc lssincl
      eqid lsmcl wss wbr lcv1 mpbid wceq lsmcom oveq2d lsmass syl13anc lsmless2
      eqtr4d syl31anc eqsstrd lsmidm syl2anc sseqtrd eqssd breqtrrd lcvexchlem4
      wn lsmub2 lsatcvat2 ) ABHUAUBZCDEFGDECSZUCZHIJKVOUKZLAHUDTZGFTZVPFTZVQFTA
      HUETVSLHUFUGZMAVSDFTZEFTZWAWBABFDHIKWBNUHZABFEHIKWBOUHZCFDEHIJULUIZFGVPHI
      UJUINOPAVOCFGVPHIJVRWBMWGAGGECSZGVPCSZVOAEGUMVLGWHVOUNQABVOCEFGHIJKVRLMOU
      OUPAWIWHAWIWHWHCSZWHAWIWHDCSZWJAWIGEDCSZCSZWKAVPWLGCAVSWCWDVPWLUQWBWEWFCF
      DEHIJURUIUSAVSVTWDWCWKWMUQWBMWFWECGFEDHIJUTVAVCAVSWHFTZWNDWHUMWKWJUMWBAVS
      VTWDWNWBMWFCFGEHIJULUIZWORCFWHDWHHIJVBVDVEAVSWNWJWHUQWBWOCFWHHIJVFVGVHAVS
      VTWAEVPUMZWHWIUMWBMWGAVSWCWDWPWBWEWFCFDEHIJVMUICFGEVPHIJVBVDVIVJVKVN $.
      $( [11-Jan-1015] $)
  $}

  ${
    $d q C $.  $d q S $.  $d q U $.  $d q V $.  $d q W $.  $d q ph $.
    islshpcv.v $e |- V = ( Base ` W ) $.
    islshpcv.s $e |- S = ( LSubSp ` W ) $.
    islshpcv.h $e |- H = ( LSHyp ` W ) $.
    islshpcv.c $e |- C = ( <oL ` W ) $.
    islshpcv.w $e |- ( ph -> W e. LVec ) $.
    $( Hyperplane properties expressed with covers relation. $)
    islshpcv $p |- ( ph -> ( U e. H <-> ( U e. S /\ U C V ) ) ) $=
      ( vq wcel cfv w3a wbr wa eqid syl wne cv clsm co wceq clsa clvec lveclmod
      wrex clmod islshpat wi simp12 wpss lssss simp13 df-pss sylanbrc wb psseq2
      wss 3ad2ant3 mpbird 3ad2ant1 simp2 lcv2 mpbid simp3 breqtrd 3exp rexlimdv
      3impd simprl adantr lss1 simprr lcvpss simprbi lcvat 3jca ex impbid bitrd
      jca ) ADENDCNZDFUAZDMUBZGUCOZUDZFUEZMGUFOZUIZPZWEDFBQZRZAWKWHCDEFGMHIWHSZ
      JWKSZAGUGNZGUJNZLGUHTZUKAWMWOAWEWFWLWOAWEWFWLWOULAWEWFPZWJWOMWKXAWGWKNZWJ
      WOXAXBWJPZWEWNAWEWFXBWJUMZXCDWIFBXCDWIUNZDWIBQXCXEDFUNZXCDFVAZWFXFXCWEXGX
      DCDFGHIUOTAWEWFXBWJUPDFUQZURWJXAXEXFUSXBWIFDUTVBVCXCWKBWHWGCDGIWPWQKXAXBW
      RWJAWEWRWFLVDVDXDXAXBWJVEVFVGXAXBWJVHVIWDVJVKVJVLAWOWMAWORZWEWFWLAWEWNVMZ
      XIXFWFXIBCDFGUGIKAWRWOLVNXJXIWSFCNAWSWOWTVNZCFGHIVOTZAWEWNVPZVQXFXGWFXHVR
      TXIWKBWHCDFGMIWPWQKXKXJXLXMVSVTWAWBWC $.
      $( [11-Jan-1015] $)
  $}

  ${
    $d v P $.  $d v Q $.  $d v U $.  $d v V $.  $d v W $.  $d v ph $.
    l1cvpat.v $e |- V = ( Base ` W ) $.
    l1cvpat.s $e |- S = ( LSubSp ` W ) $.
    l1cvpat.p $e |- P = ( LSSum ` W ) $.
    l1cvpat.a $e |- A = ( LSAtoms ` W ) $.
    l1cvpat.c $e |- C = ( <oL ` W ) $.
    l1cvpat.w $e |- ( ph -> W e. LVec ) $.
    l1cvpat.u $e |- ( ph -> U e. S ) $.
    l1cvpat.q $e |- ( ph -> Q e. A ) $.
    l1cvpat.l $e |- ( ph -> U C V ) $.
    l1cvpat.m $e |- ( ph -> -. Q C_ U ) $.
    $( A subspace covered by the set of all vectors, when summed with an atom
       not under it, equals the set of all vectors.  ( ~ 1cvrjat analog.) $)
    l1cvpat $p |- ( ph -> ( U P Q ) = V ) $=
      ( wcel vv cv csn clspn cfv wceq c0g cdif wrex wss wn co clvec eqid islsat
      wb syl mpbid wi eldifi clmod lveclmod 3ad2ant1 simp2 lspsnel5 notbid clsh
      w3a wa adantr wbr islshpcv mpbir2and simpl2 simpr lshpnelr ex sseq1 oveq2
      sylbird eqeq1d imbi12d 3ad2ant3 mpbird 3exp syl5 rexlimdv mp2d ) AEUAUBZU
      CIUDUEZUEZUFZUAHIUGUEZUCZUHZUIZEGUJZUKZGEDULZHUFZAEBTZWPQAIUMTZXAWPUPOUAB
      EWJHIUMWMJWJUNZWMUNMUOUQURSAWLWRWTUSZUAWOWIWOTWIHTZAWLXDUSWIHWNUTAXEWLXDA
      XEWLVHZXDWKGUJZUKZGWKDULZHUFZUSZXFXHWIGTZUKZXJXFXLXGXFFGWJHIWIJKXCAXEIVAT
      ZWLAXBXNOIVBUQVCAXEGFTZWLPVCAXEWLVDVEVFXFXMXJXFXMVIDGIVGUEZWJHIWIJXCLXPUN
      ZXFXBXMAXEXBWLOVCVJXFGXPTZXMAXEXRWLAXRXOGHCVKPRACFGXPHIJKXQNOVLVMVCVJAXEW
      LXMVNXFXMVOVPVQVTWLAXDXKUPXEWLWRXHWTXJWLWQXGEWKGVRVFWLWSXIHEWKGDVSWAWBWCW
      DWEWFWGWH $.
      $( [11-Jan-1015] $)
  $}

  ${
    l1cvat.v $e |- V = ( Base ` W ) $.
    l1cvat.s $e |- S = ( LSubSp ` W ) $.
    l1cvat.p $e |- P = ( LSSum ` W ) $.
    l1cvat.a $e |- A = ( LSAtoms ` W ) $.
    l1cvat.c $e |- C = ( <oL ` W ) $.
    l1cvat.w $e |- ( ph -> W e. LVec ) $.
    l1cvat.u $e |- ( ph -> U e. S ) $.
    l1cvat.q $e |- ( ph -> Q e. A ) $.
    l1cvat.r $e |- ( ph -> R e. A ) $.
    l1cvat.n $e |- ( ph -> Q =/= R ) $.
    l1cvat.l $e |- ( ph -> U C V ) $.
    l1cvat.m $e |- ( ph -> -. Q C_ U ) $.
    $( Create an atom under an element covered by the lattice unit.  Part of
       proof of Lemma B in [Crawley] p. 112.  ( ~ 1cvrat analog.) $)
    l1cvat $p |- ( ph -> ( ( Q P R ) i^i U ) e. A ) $=
      ( co cin clmod wcel wceq clvec lveclmod syl lsatlssel lsmcom ineq1d incom
      syl3anc syl6eq necomd wss lssss l1cvpat sseqtr4d lsatcvat3 eqeltrd ) AEFD
      UCZHUDZHFEDUCZUDZBAVEVFHUDVGAVDVFHAJUEUFZEGUFFGUFZVDVFUGAJUHUFVHPJUIUJZAB
      GEJLNVJRUKABGFJLNVJSUKZDGEFJLMULUOUMVFHUNUPABDFEGHJLMNPQSRAEFTUQUBAFIHEDU
      CAVIFIURVKGFIJKLUSUJABCDEGHIJKLMNOPQRUAUBUTVAVBVC $.
      $( [11-Jan-1015] $)
  $}

  ${
    lshpat.s $e |- S = ( LSubSp ` W ) $.
    lshpat.p $e |- P = ( LSSum ` W ) $.
    ishpat.h $e |- H = ( LSHyp ` W ) $.
    lshpat.a $e |- A = ( LSAtoms ` W ) $.
    lshpat.w $e |- ( ph -> W e. LVec ) $.
    lshpat.l $e |- ( ph -> U e. H ) $.
    lshpat.q $e |- ( ph -> Q e. A ) $.
    lshpat.r $e |- ( ph -> R e. A ) $.
    lshpat.n $e |- ( ph -> Q =/= R ) $.
    lshpat.m $e |- ( ph -> -. Q C_ U ) $.
    $( Create an atom under a hyperplane.  Part of proof of Lemma B in
       [Crawley] p. 112.  ( ~ lhpat analog.)  TODO:  This changes ` U C V ` in
       ~ l1cvpat and ~ l1cvat to ` U e. H ` , which in turn change ` U e. H `
       in ~ islshpcv to ` U C V ` , with a couple of conversions of span to
       atom.  Seems convoluted.  Would a direct proof be better? $)
    lshpat $p |- ( ph -> ( ( Q P R ) i^i U ) e. A ) $=
      ( cfv clcv cbs eqid wcel wbr wa islshpcv mpbid simpld simprd l1cvat ) ABI
      UATZCDEFGIUBTZIUMUCZJKMULUCZNAGFUDZGUMULUEZAGHUDUPUQUFOAULFGHUMIUNJLUONUG
      UHZUIPQRAUPUQURUJSUK $.
      $( [11-Jan-1015] $)
  $}

