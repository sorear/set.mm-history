$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Generic modules and vector spaces (New Structure builder)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c Hom $. $( The class of linear mappings. $)

  $( Extend class notation to include linear mappings. $)
  clinm $a class Hom $.

  ${
    $d m n f u v x $.
    $( Definition of a linear mapping. $)
    df-linm $a |- Hom = ( m e. LMod , n e. LMod |->
      { f e. ( ( Base ` n ) ^m ( Base ` m ) ) |
        ( A. u e. ( Base ` m ) A. v e. ( Base ` m )
      ( f ` ( u ( +g ` m ) v ) ) = ( ( f ` u ) ( +g ` n ) ( f ` v ) )
         /\ A. x e. ( Base ` m ) A. u e. ( Base ` m )
            ( f ` ( x ( vsca ` m ) u ) )
               = ( x ( vsca ` n ) ( f ` u ) ) ) } ) $.
  $}

  $c Action $. $( The class of actions. $)

  $( Extend class notation to include actions. $)
  cact $a class Action $.

  ${
    $d f k v s r w $.
    $( Definition of an action law.  The action is the function ( k ^m ( v ^m
       v ).  Definitions equivalent through currying. $)
    df-act $a |- Action = { f | E. k E. v E. s
    ( ( k = ( Base ` ( Scalar ` f ) ) /\ v = ( Base ` f ) /\ s = ( vsca ` f ) )
     /\ A. r e. k A. w e. v ( r s w ) e. v ) } $.
  $}

  $c GrpWOp $. $( The class of groups with operators. $)

  $( Extend class notation to include groups with operators. $)
  cgwo $a class GrpWOp $.

  $( The definition df-grpwop is not sound, since it has free variables
     s, k, v, a.  I commented out the definition. - NM 18-May-2014 $)
 $(
  @{
    @d a f k r s v w x @.
    @( Definition of a group with operators. @)
    df-grpwop @a |- GrpWOp = { f e. ( Grp i^i Action ) | ( E. k E. v E. a
      ( k = ( Base ` ( Scalar ` f ) ) /\ v = ( Base ` f ) /\ a = ( +g ` f ) )
        /\ A. r e. k A. x e. v A. w e. v
              ( r s ( w a x ) ) = ( ( r s w ) a ( r s x ) ) ) } @.
  @}
 $)

