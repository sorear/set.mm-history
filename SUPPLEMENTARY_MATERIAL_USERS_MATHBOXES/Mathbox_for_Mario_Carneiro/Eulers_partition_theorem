$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          Euler's partition theorem
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $(
  @{
    eulerpartlemm.f @e |- F = ( x e. NN0 , y e. { z e. NN | -. 2 || z } |->
      ( ( 2 ^ x ) x. y ) ) @.
    @( Lemma for ~ eulerpart .  The function ` F ` that decomposes a number
       into its "odd" and "even" parts, which is to say the largest power of
       two and largest odd divisor of a number, is a bijection from
       pairs of a natural number and an odd number to natural numbers. @)
    eulerpartlemm @p |- F : ( NN0 X. { z e. NN | -. 2 || z } ) -1-1-onto->
      NN ) @=
      ( cn0 cn cmap co wcel ccnv cima cfn cv cfv cmul csu wceq wa wf nn0ex nnex
      w3a elmap anbi1i cnveq eleq1d fveq1 oveq1d sumeq2sdv eqeq1d elrab2 3anass
      imaeq1d anbi12d 3bitr4i ) AGHIJZKZALZHMZNKZHDOZAPZVCQJZDRZESZTZTHGAUAZVHT
      ABKVIVBVGUDUSVIVHGHAUBUCUEUFCOZLZHMZNKZHVCVJPZVCQJZDRZESZTVHCAURBVJASZVMV
      BVQVGVRVLVANVRVKUTHVJAUGUOUHVRVPVFEVRHVOVEDVRVNVDVCQVCVJAUIUJUKULUPFUMVIV
      BVGUNUQ @.
      @( [26-Jan-2015] @)
  @}

  @{
    eulerpart.p @e |- P = { f e. ( NN0 ^m NN ) | ( ( `' f " NN ) e. Fin /\
      sum_ k e. NN ( ( f ` k ) x. k ) = N ) } @.
    @( Lemma for ~ eulerpart . @)
    eulerpartleme @p |- ( A e. P <-> ( A : NN --> NN0 /\ ( `' A " NN ) e. Fin
      /\ sum_ k e. NN ( ( A ` k ) x. k ) = N ) ) @=
      ( cn0 cn cmap co wcel ccnv cima cfn cv cfv cmul csu wceq wa wf nn0ex nnex
      w3a elmap anbi1i cnveq eleq1d fveq1 oveq1d sumeq2sdv eqeq1d elrab2 3anass
      imaeq1d anbi12d 3bitr4i ) AGHIJZKZALZHMZNKZHDOZAPZVCQJZDRZESZTZTHGAUAZVHT
      ABKVIVBVGUDUSVIVHGHAUBUCUEUFCOZLZHMZNKZHVCVJPZVCQJZDRZESZTVHCAURBVJASZVMV
      BVQVGVRVLVANVRVKUTHVJAUGUOUHVRVPVFEVRHVOVEDVRVNVDVCQVCVJAUIUJUKULUPFUMVIV
      BVGUNUQ @.
      @( [26-Jan-2015] @)

    @( Lemma for ~ eulerpart .  The set of all partitions of ` N ` is finite. @)
    eulerpartlemb @p |- P e. Fin @=
      ( vx cn c1 co wcel cc0 wa wceq adantl cn0 cle wbr syl wi adantr vg vy cfz
      cv csn cif cixp cfn wss wtru fzfid fzfi snfi keepel a1i wn eldifn iffalse
      cdif eqimss 3syl ixpfi2 trud ccnv cima cfv cmul csu w3a eulerpartleme wfn
      wf wral ffn 3ad2ant1 cr simp1 ffvelrn sylan nn0re idi remulcl syl2anc cdm
      cnvimass fdm syl5sseq cc sselda adantlr syldan nnnn0 nn0mulcl nn0cn simpl
      nnre cvv nn0supp suppssr oveq1d eldifi nncn mul02 eqtrd cuz eqimssi sumss
      nnuz nn0sscn caddc nn0addcl simpr 0nn0 fsumcllem eqeltrrd eleq1 syl5ibcom
      3impia nn0ge0 nnge1 lemulge11 syl22anc fveq2 oveq12d simprr fsumge1 eldif
      id expr ralrimiva eqeq1d rcla4cva sylan2br fsumge0 breqtrd syl6eleq elfz5
      wb eleqtrrd syld adantrr eqbrtrd pm2.61d 3adantl3 simpl3 letrd nn0uz nn0z
      cz mpbird iftrue lemulge12 syl21anc letr syl3anc syl5 sylibrd con3d elnn0
      mpan2d sylib ord imp fvex elsnc sylibr pm2.61dan vex elixp sylanbrc sylbi
      wo ssriv ssfi mp2an ) FGFUDZHDUCIZJZKDUCIZKUEZUFZUGZUHJZAUWBUIAUHJUWCUJFG
      UWAUVQKUJHDUKUWAUHJUJUVPGJZLUVRUVSUVTUHKDULKUMUNUOUJUVPGUVQUSJZLUVRUPZUWA
      UVTMZUWAUVTUIUWEUWFUJUVPGUVQUQNUVRUVSUVTURZUWAUVTUTVAVBVCUAAUWBUAUDZAJGOU
      WIVLZUWIVDZGVEZUHJZGCUDZUWIVFZUWNVGIZCVHZDMZVIZUWIUWBJZUWIABCDEVJUWSUWIGV
      KZUVPUWIVFZUWAJZFGVMUWTUWJUWMUXAUWRGOUWIVNVOUWSUXCFGUWSUWDLZUVRUXCUXDUVRL
      UXBUVSUWAUXDUXBUVSJZUVRUXDUXEUXBDPQZUXDUXBUXBUVPVGIZDUXDUXBOJZUXBVPJZUWSU
      WJUWDUXHUWJUWMUWRVQGOUVPUWIVRVSZUXBVTRZUXDUXIUVPVPJZUXGVPJZUXDUXISUXKWAUX
      DUXLSUWDUXLUWSUVPWPNZWAZUXBUVPWBWCZUXDDOJZDVPJZUWSUXQUWDUWJUWMUWRUXQUWJUW
      MLZUWQOJUWRUXQUXSUWLUWPCVHZUWQOUXSUWLGUWPCHUXSUWIWDZUWLGUWIGWEUWJUYAGMUWM
      GOUWIWFTWGZUXSUWNUWLJZLZUWPOJZUWPWHJUYDUWOOJZUWNOJZUYEUXSUYCUWNGJZUYFUXSU
      WLGUWNUYBWIZUWJUYHUYFUWMGOUWNUWIVRWJWKUYDUYHUYGUYIUWNWLRUWOUWNWMWCZUWPWNR
      UXSUWNGUWLUSZJZLZUWPKUWNVGIZKUYMUWOKUWNVGUXSGOUWIUWLUWNKUWJUWMWOUXSUWKWQU
      VTUSVEZUWLMZUYOUWLUIUWJUYPUWMUWIGWRTUYOUWLUTRWSWTUYMUYHUWNWHJUYNKMUYLUYHU
      XSUWNGUWLXANUWNXBUWNXCVAXDZGHXEVFZUIUXSGUYRXHXFUOXGZUXSFUBUWLUWPOCOWHUIUX
      SXIUOUVPOJZUBUDZOJLUVPVUAXJIOJUXSUVPVUAXKNUWJUWMXLZUYJKOJUXSXMUOXNXOUWQDO
      XPXQXRTZDVTRZUXDUXIUXLKUXBPQZHUVPPQZUXBUXGPQUXKUXNUXDUXHVUEUXDUXHSUXJWAUX
      BXSRUWDVUFUWSUVPXTNUXBUVPYAYBUXDUXGUWQDPUWJUWMUWDUXGUWQPQUWRUXSUWDLZUXGUX
      TUWQPVUGUVPUWLJZUXGUXTPQZUXSUWDVUHVUIUXSUWDVUHLZLUWLUWPUXGCUVPUXSUWMVUJVU
      BTUXSUYCUWPVPJZVUJUYDUYEVUKUYJUWPVTZRWJUXSUYCKUWPPQZVUJUYDUYEVUMUYJUWPXSZ
      RWJUWNUVPMZUWOUXBUWNUVPVGUWNUVPUWIYCVUOYHYDZUXSUWDVUHYEYFYIUXSUWDVUHUPZVU
      IUXSUWDVUQLZLUXGKUXTPVURUXSUVPUYKJZUXGKMZUVPGUWLYGUXSUWPKMZCUYKVMVUSVUTUX
      SVVACUYKUYQYJVVAVUTCUVPUYKVUOUWPUXGKVUPYKYLVSYMUXSUWDKUXTPQVUQVUGUWLUWPCU
      XSUWMUWDVUBTVUGUYCLZUYEVUKUXSUYCUYEUWDUYJWJZVULRVVBUYEVUMVVCVUNRYNUUAUUBY
      IUUCUXSUXTUWQMUWDUYSTYOUUDUWJUWMUWRUWDUUEYOZUUFUXDUXBKXEVFZJDUUIJZUXEUXFY
      RUXDUXBOVVEUXJUUGYPUXDUXQVVFVUCDUUHRZUXBKDYQWCUUJTUVRUWAUVSMUXDUVRUVSUVTU
      UKNYSUXDUWFLZUXBUVTUWAVVHUXBKMZUXBUVTJUXDUWFVVIUXDUWFUXBGJZUPVVIUXDVVJUVR
      UXDVVJUVPDPQZUVRVVJHUXBPQZUXDVVKUXBXTUXDVVLUVPUXGPQZVVKUXDUXLUXIKUVPPQZVV
      LVVMSUXNUXKUXDUYTVVNUWDUYTUWSUVPWLNUVPXSRUXLUXILVVNVVLVVMUVPUXBUULYIUUMUX
      DVVMUXGDPQZVVKVVDUXDUXLUXMUXRVVMVVOLVVKSUXOUXDUXMSUXPWAUXDUXRSVUDWAUVPUXG
      DUUNUUOUUTYTUUPUXDUVPUYRJVVFUVRVVKYRUXDUVPGUYRUWSUWDXLXHYPVVGUVPHDYQWCUUQ
      UURUXDVVJVVIUXDUXHVVJVVIUVLUXJUXBUUSUVAUVBYTUVCUXBKUVPUWIUVDUVEUVFUWFUWGU
      XDUWHNYSUVGYJFGUWAUWIUAUVHUVIUVJUVKUVMUWBAUVNUVO @.
      @( [26-Jan-2015] @)

    eulerpart.o @e |- O = { g e. P | A. n e. ( `' g " NN ) -. 2 || n } @.
    eulerpart.d @e |- D = { g e. P | A. n e. NN ( g ` n ) <_ 1 } @.
    @{
      eulerpart.f @e |- F = ( x e. ( ~P NN0 i^i Fin ) |->
        sum_ y e. x ( 2 ^ y ) ) @.
      @( Lemma for ~ eulerpart . @)
      eulerpartlemi @p |- ( A e. P -> { t e. NN |
      E. n e. ( `' F ` ( A ` t ) ) ( ( 2 ^ n ) x. t ) = M } C_ ( 1 ... M ) ) @=
        ( wcel cn0 c2 cv cexp co cmul wceq cfv ccnv wrex c1 cfz wi cn wral crab
        wss wa cle wbr cr cc0 nnre ad2antlr 2nn cpw cfn cin inss1 eulerpartleme
        wf cima csu simp1bi ffvelrn wf1o ackbijnn f1ocnv f1of mp2b ffvelrni syl
        sylan sseldi elpwi sselda nnexpcl sylancr simplr nnnn0 nn0ge0 lemulge12
        3syl nnge1 syl22anc cuz cz wb syl6eleq nnmulcl syl2anc nnz elfz5 mpbird
        nnuz oveq2 eleq2d syl5ibcom rexlimdva ralrimiva rabss sylibr ) DFSZUAJU
        BZUCUDZCUBZUEUDZLUFZJXODUGZKUHZUGZUIZXOUJLUKUDZSZULZCUMUNYACUMUOYBUPXLY
        DCUMXLXOUMSZUQZXQYCJXTYFXMXTSZUQZXOUJXPUKUDZSZXQYCYHYJXOXPURUSZYHXOUTSZ
        XNUTSZVAXOURUSZUJXNURUSZYKYEYLXLYGXOVBVCYHXNUMSZYMYHUAUMSXMTSYPVDYFXTTX
        MYFXTTVEZSXTTUPYFYQVFVGZYQXTYQVFVHYFXRTSZXTYRSXLUMTDVJZYEYSXLYTDUHUMVKV
        FSUMIUBZDUGUUAUEUDIVLMUFDFGIMOVIVMUMTXODVNWBTYRXRXSYRTKVOTYRXSVOTYRXSVJ
        ABKRVPYRTKVQTYRXSVRVSVTWAWCXTTWDWAWEUAXMWFWGZXNVBWAYHYEXOTSYNXLYEYGWHZX
        OWIXOWJWLYHYPYOUUBXNWMWAXOXNWKWNYHXOUJWOUGZSXPWPSZYJYKWQYHXOUMUUDUUCXDW
        RYHXPUMSZUUEYHYPYEUUFUUBUUCXNXOWSWTXPXAWAXOUJXPXBWTXCXQYIYBXOXPLUJUKXEX
        FXGXHXIYACUMYBXJXK @.
        @( [26-Jan-2015] @)

      eulerpart.g @e |- G = ( o e. P |-> ( m e. NN |-> ( # `
     { t e. NN | E. n e. ( `' F ` ( o ` t ) ) ( ( 2 ^ n ) x. t ) = m } ) ) ) @.
      @( Lemma for ~ eulerpart . @)
      eulerpartlemf @p |- ( A e. P -> ( G ` A ) = ( m e. NN |-> ( # `
     { t e. NN | E. n e. ( `' F ` ( A ` t ) ) ( ( 2 ^ n ) x. t ) = m } ) ) ) @=
        ( cn c2 cv cexp co cmul wceq cfv ccnv wrex crab chash cmpt fveq1 fveq2d
        rexeqdv rabbidv mpteq2dv nnex mptex fvmpt ) LDJUBUCKUDUEUFCUDZUGUFJUDUH
        ZKVCLUDZUIZMUJZUIZUKZCUBULZUMUIZUNJUBVDKVCDUIZVGUIZUKZCUBULZUMUIZUNFNVE
        DUHZJUBVKVPVQVJVOUMVQVIVNCUBVQVDKVHVMVQVFVLVGVCVEDUOUPUQURUPUSUAJUBVPUT
        VAVB @.
        @( [26-Jan-2015] @)

      @( Lemma for ~ eulerpart . @)
      eulerpartlema @p |- G : P --> P @=
        ? @.

      @( Lemma for ~ eulerpart . @)
      eulerpartlemh @p |- ( G |` O ) : O --> D @=
        ? @.

      @( Lemma for ~ eulerpart . @)
      eulerpartlemc @p |- ( G |` O ) : O -1-1-> D @=
        ? @.

      @( Lemma for ~ eulerpart . @)
      eulerpartlemg @p |- ( G |` O ) : O -1-1-onto-> D @=
        ? @.

      eulerpart.h @e |- H = ( d e. P |-> ( m e. NN |-> if ( 2 || m , 0 ,
    sum_ n e. NN0 ( ( d ` ( ( 2 ^ n ) x. m ) ) x. ( ( 2 ^ n ) x. m ) ) ) ) ) @.
      @( Lemma for ~ eulerpart . @)
      eulerpartlemj @p |- H : P --> O @=
        ? @.

      @( Lemma for ~ eulerpart . @)
      eulerpartlemk @p |- ( H |` D ) : D -1-1-> O @=
        ? @.

      @( Lemma for ~ eulerpart . @)
      eulerpartleml @p |- ( H |` D ) : D -1-1-onto-> O @=
        ? @.

    @}

    @( Euler's theorem on partitions, also known as a special case of
       Glaisher's theorem. Let ` P ` be the set of all partitions of ` N ` ,
       represented as multisets of natural numbers, which is to say functions
       from ` NN ` to ` NN0 ` where the value of the function represents the
       number of repetitions of an individual element, and the sum of all the
       elements with repetition equals ` N ` . Then the set ` O ` of all
       partitions that only consist of odd numbers and the set ` D ` of all
       partitions which have no repeated elements have the same cardinality. @)
    eulerpart @p |- ( N e. NN0 -> ( # ` O ) = ( # ` D ) ) @=
      ? @.
  @}
  $)

