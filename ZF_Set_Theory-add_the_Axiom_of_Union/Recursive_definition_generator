$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
            Recursive definition generator
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Define a constant for the recursive definition generator. $)
  $c rec $.

  $( Extend class notation with the recursive definition generator, with
     characteristic function ` F ` and initial value ` I ` . $)
  crdg $a class rec ( F , I ) $.

  ${
    $d x z f g F $.  $d x y f g I $.
    $( Define a recursive definition generator on ` On ` (the class of ordinal
       numbers) with characteristic function ` F ` and initial value ` I ` .
       This combines functions ` F ` in ~ tfr1 and ` G ` in ~ tz7.44-1 into one
       definition.  This rather amazing operation allows us to define, with
       compact direct definitions, functions that are usually defined in
       textbooks only with indirect self-referencing recursive definitions.  A
       recursive definition requires advanced metalogic to justify - in
       particular, eliminating a recursive definition is very difficult and
       often not even shown in textbooks.  On the other hand, the elimination
       of a direct definition is a matter of simple mechanical substitution.
       The price paid is the daunting complexity of our ` rec ` operation.  But
       once we get past this hurdle, otherwise recursive definitions become
       relatively simple, as in for example ~ oav , from which we prove the
       recursive textbook definition as theorems ~ oa0 , ~ oasuc , and ~ oalim
       (with the help of theorems ~ rdg0 , ~rdgsuc , and ~ rdglim2a ).  We can
       also restrict the ` rec ` operation to define otherwise recursive
       functions on the natural numbers ` om ` ; see ~ fr0g and ~ frsuc .  Our
       ` rec ` operation apparently does not appear in published literature,
       although closely related is Definition 25.2 of [Quine] p. 177, which he
       uses to "turn...a recursion into a genuine or direct definition" (p.
       174).  Note that the ` if ` operations (see ~ df-if ) select cases based
       on whether the domain of ` g ` is zero, a successor, or a limit ordinal.

       An important use of this definition is in the recursive sequence
       generator ~ df-seq1 on the natural numbers (as a subset of the complex
       numbers), allowing us to define, with direct definitions, recursive
       infinite sequences such as the factorial function ~ df-fac and integer
       powers ~ df-exp .

       _Note:  We introduce ` rec ` with the philosophical goal of being able_
       _to eliminate all definitions with direct mechanical substitution and_
       _to verify easily the soundness of definitions.  Metamath itself has no_
       _built-in technical limitation that prevents multiple-part recursive_
       _definitions in the traditional textbook style_. $)
    df-rdg $a |- rec ( F , I ) = U. { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( ( g e. _V |-> if ( g = (/) , I ,
                if ( Lim dom g , U. ran g , ( F ` ( g ` U. dom g ) ) ) ) )
                ` ( f |` y ) ) ) } $.
  $}

  ${
    $d x y z f g F $.  $d x y z f g G $.  $d x y z f g A $.  $d x y z f g B $.
    $( Equality theorem for the recursive definition generator. $)
    rdgeq1 $p |- ( F = G -> rec ( F , A ) = rec ( G , A ) ) $=
      ( vz vx vy vg wceq cv wfn cfv cres cvv c0 cdm wlim crn cuni cif cmpt
      wral wa con0 wrex cab crdg wcel fveq1 ifeq2d adantr mpteq2dva fveq1d
      eqeq2d ralbidv anbi2d rexbidv abbidv unieqd df-rdg 3eqtr4g ) BCHZDIZEIZJZ
      FIZVBKZVBVELZGMGIZNHZAVHOZPZVHQRZVJRVHKZBKZSZSZTZKZHZFVCUAZUBZEUCUDZDUEZR
      VDVFVGGMVIAVKVLVMCKZSZSZTZKZHZFVCUAZUBZEUCUDZDUEZRBAUFCAUFVAWCWMVAWBWLDVA
      WAWKEUCVAVTWJVDVAVSWIFVCVAVRWHVFVAVGVQWGVAGMVPWFVAVPWFHVHMUGVAVIVOWEAVAVK
      VNWDVLVMBCUHUIUIUJUKULUMUNUOUPUQUREFDGBAUSEFDGCAUSUT $.
      $( [8-Sep-2013] $) $( [9-Apr-1995] $)


    $( Equality theorem for the recursive definition generator. $)
    rdgeq2 $p |- ( A = B -> rec ( F , A ) = rec ( F , B ) ) $=
      ( vz vx vy vg wceq cv wfn cfv cres cvv c0 cdm wlim crn cuni cif cmpt
      wral wa con0 wrex cab crdg wcel ifeq1 adantr mpteq2dva fveq1d eqeq2d
      ralbidv anbi2d rexbidv abbidv unieqd df-rdg 3eqtr4g ) ABHZDIZEIZJZFIZVAKZ
      VAVDLZGMGIZNHZAVGOZPVGQRVIRVGKCKSZSZTZKZHZFVBUAZUBZEUCUDZDUEZRVCVEVFGMVHB
      VJSZTZKZHZFVBUAZUBZEUCUDZDUEZRCAUFCBUFUTVRWFUTVQWEDUTVPWDEUCUTVOWCVCUTVNW
      BFVBUTVMWAVEUTVFVLVTUTGMVKVSUTVKVSHVGMUGVHABVJUHUIUJUKULUMUNUOUPUQEFDGCAU
      REFDGCBURUS $.
      $( [8-Sep-2013] $) $( [9-Apr-1995] $)
  $}

  $( Equality theorem for the recursive definition generator.  (Contributed by
     Scott Fenton, 28-Apr-2012.) $)
  rdgeq12 $p |- ( ( F = G /\ A = B ) -> rec ( F , A ) = rec ( G , B ) ) $=
    ( wceq crdg rdgeq2 rdgeq1 eqeq2d biimpa sylan2 ) ABECDEZCAFZCBFZEZMDBFZEZAB
    CGLOQLNPMBCDHIJK $.
    $( [28-Apr-2012] $)

  ${
    $d y z w v f g F $.  $d y z w v f g A $.  $d x y z w v f g $.
    hbrdg.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbrdg.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for the recursive definition
       generator. $)
    hbrdg $p |- ( y e. rec ( F , A ) -> A. x y e. rec ( F , A ) ) $=
      ( vf vw vv vg crdg cv wfn cfv cres cvv c0 wceq cdm wlim crn cuni cif
      cmpt wral wa con0 wrex cab df-rdg wcel ax-17 hbfv hbif hbmpt hbeq hbral
      hban hbrex hbab hbuni hbxfreq ) ABDCKGLZHLZMZILZVCNZVCVFOZJPJLZQRZCVISZTZ
      VIUAUBZVKUBVINZDNZUCZUCZUDZNZRZIVDUEZUFZHUGUHZGUIZUBHIGJDCUJABWDWCAGBWBAH
      UGVDUGUKAULVEWAAVEAULVTAIVDVFVDUKAULABBVGVSBLZVGUKAULABVHVRAJBPVQWEPUKAUL
      VJABCVPVJAULFVLABVMVOVLAULWEVMUKAULABVNDEWEVNUKAULUMUNUNUOWEVHUKAULUMUPUQ
      URUSUTVAVB $.
      $( [8-Sep-2013] $) $( [14-Sep-2003] $)
  $}

  ${
    $d x y f g $.  $d x y z g $.  $d f g G $.  $d x z G $.  $d y z w g G $.
    $( Lemma used with the recursive definition generator.  This is a trivial
       lemma that just changes bound variables for later use. $)
    rdglem1 $p |- { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) }
                = { g | E. z e. On ( g Fn z /\
                A. w e. z ( g ` w ) = ( G ` ( g |` w ) ) ) } $=
      ( cv wfn cfv cres wceq wral wa con0 wrex cab eqid tfrlem3 fveq2 reseq2
      fveq2d eqeq12d cbvralv anbi2i rexbii abbii eqtri ) EHZAHZIBHZUIJUIUKKGJLB
      UJMNAOPEQZFHZCHZIZUKUMJZUMUKKZGJZLZBUNMZNZCOPZFQUODHZUMJZUMVCKZGJZLZDUNMZ
      NZCOPZFQABCULEFGULRSVBVJFVAVICOUTVHUOUSVGBDUNUKVCLZUPVDURVFUKVCUMTVKUQVEG
      UKVCUMUAUBUCUDUEUFUGUH $.
      $( [7-May-2004] $) $( [9-Apr-1995] $)
  $}

  ${
    $d x y z f g u v w F $.  $d x y z f g u v w A $.
    $( The recursive definition generator is a function on ordinal numbers. $)
    rdgfnon $p |- rec ( F , A ) Fn On $=
      ( vx vy vw vu vv vg vf cv wfn cfv cres cvv c0 wceq cdm wlim crn cuni cif
      cmpt wral wa con0 wrex cab crdg rdglem1 df-rdg tfr1 ) CDEJZFJZKGJZULLULUN
      MHNHJZOPAUOQZRUOSTUPTUOLBLUAUAUBZLPGUMUCUDFUEUFEUGIBAUHUQFGCDEIUQUIFGEHBA
      UJUK $.
      $( [8-Sep-2013] $) $( [9-Apr-1995] $)
  $}

  ${
    $d y z f g v w F $.  $d y z f g v w A $.  $d x z $.
    $( Value of the recursive definition generator. $)
    rdgval $p |- ( x e. On -> ( rec ( F , A ) ` x ) = ( ( g e. _V |->
  if ( g = (/) , A , if ( Lim dom g , U. ran g , ( F ` ( g ` U. dom g ) ) ) ) )
                   ` ( rec ( F , A ) |` x ) ) ) $=
      ( vy vz vw vv vf cv wfn cfv cres cvv c0 wceq cdm wlim crn cuni cif cmpt
      wral wa con0 wrex cab crdg rdglem1 df-rdg tfr2 ) EFAGJZFJZKHJZULLULUNMCNC
      JZOPBUOQZRUOSTUPTUOLDLUAUAUBZLPHUMUCUDFUEUFGUGIDBUHUQFHEFGIUQUIFHGCDBUJUK
      $.
      $( [8-Sep-2013] $) $( [9-Apr-1995] $)
  $}

  ${
    $d x y F $.  $d x y A $.  $d x y B $.
    ${
      rdg.1 $e |- A e. _V $.
      $( The initial value of the recursive definition generator. $)
      rdg0 $p |- ( rec ( F , A ) ` (/) ) = A $=
        ( vx vy crdg cvv cv c0 wceq cdm wlim crn cuni cfv cif cmpt eqid
        rdgfnon rdgval tz7.44-1 ) DEABAFDGDHZIJAUBKZLUBMNUCNUBOBOPPQZBUDRABSEAD
        BTCUA $.
        $( [8-Sep-2013] $) $( [23-Apr-1995] $)
    $}

    $( The value of the recursive definition generator at a successor. $)
    rdgsuc $p |- ( B e. On ->
                 ( rec ( F , A ) ` suc B ) = ( F ` ( rec ( F , A ) ` B ) ) ) $=
      ( vx vy crdg cvv cv c0 wceq cdm wlim crn cuni cfv cif cmpt eqid rdgfnon
      rdgval tz7.44-2 ) DEABCAFDGDHZIJAUBKZLUBMNUCNUBOCOPPQZCUDRACSEADCTUA $.
      $( [8-Sep-2013] $) $( [23-Apr-1995] $)

    $( The value of the recursive definition generator at a limit ordinal. $)
    rdglim $p |- ( ( B e. C /\ Lim B ) ->
                   ( rec ( F , A ) ` B ) = U. ( rec ( F , A ) " B ) ) $=
      ( vx vy crdg cvv cv c0 wceq cdm wlim crn cuni cfv cif cmpt eqid rdgfnon
      rdgval tz7.44-3 ) EFABDAGEHEIZJKAUCLZMUCNOUDOUCPDPQQRZDCUESADTFAEDUAUB $.
      $( [8-Sep-2013] $) $( [23-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x F $.
    $( The initial value of the recursive definition generator. $)
    rdg0g $p |- ( A e. C -> ( rec ( F , A ) ` (/) ) = A ) $=
      ( vx c0 cv crdg cfv wceq rdgeq2 fveq1d id eqeq12d visset rdg0 vtoclg ) EC
      DFZGZHZQIECAGZHZAIDABQAIZSUAQAUBERTQACJKUBLMQCDNOP $.
      $( [25-Apr-1995] $)
  $}

  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $.  $d x y z $.
    rdgsucopab.1 $e |- ( z e. A -> A. x z e. A ) $.
    rdgsucopab.2 $e |- ( z e. B -> A. x z e. B ) $.
    rdgsucopab.3 $e |- ( z e. D -> A. x z e. D ) $.
    rdgsucopab.4 $e |- F = rec ( { <. x , y >. | y = C } , A ) $.
    rdgsucopab.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The value of the recursive definition generator at a successor (special
       case where the characteristic function is an ordered pair
       abstraction). $)
    rdgsucopab $p |- ( ( B e. On /\ D e. R ) -> ( F ` suc B ) = D ) $=
      ( con0 wcel csuc cfv cv wceq copab crdg fveq1i rdgsuc syl5eq cvv fvex
      hbopab1 hbrdg hbfv eqeq2i sylbir fvopabgf mpan sylan9eq ) EOPZGHPZEQZIRZE
      BSFTZABUAZDUBZRZVARZGUPUSURVBRVDURIVBMUCDEVAUDUEVCUFPUQVDGTEVBUGABCVCFGUF
      HACEVBACDVAUTABCUHJUIKUJLASZVCTVEEIRZTFGTVFVCVEEIVBMUCUKNULUMUNUO $.
      $( [22-Oct-2003] $)

    $( The value of the recursive definition generator at a successor (special
       case where the characteristic function is an ordered-pair class
       abstraction and where the mapping class ` D ` is a proper class).  This
       is a technical lemma that can be used together with ~ rdgsucopab to help
       eliminate redundant sethood antecedents. $)
    rdgsucopabn $p |- ( -. D e. _V -> ( F ` suc B ) = (/) ) $=
      ( con0 wcel cvv wn csuc cfv c0 wceq wi cv copab crdg fveq1i rdgsuc
      syl5eq hbopab1 hbrdg hbfv eqeq2i sylbir fvopabnf sylan9eq ex cdm sucelon
      dmeqi wfn rdgfnon fndm ax-mp eqtri eleq2i bitr4i ndmfv sylnbi a1d
      pm2.61i ) ENOZGPOQZERZHSZTUAZUBVKVLVOVKVLVNEBUCFUAZABUDZDUEZSZVQSZTVKVNVM
      VRSVTVMHVRLUFDEVQUGUHABCVSFGACEVRACDVQVPABCUIIUJJUKKAUCZVSUAWAEHSZUAFGUAW
      BVSWAEHVRLUFULMUMUNUOUPVKQVOVLVKVMHUQZOZVOVKVMNOWDEURWCNVMWCVRUQZNHVRLUSV
      RNUTWENUADVQVANVRVBVCVDVEVFVMHVGVHVIVJ $.
      $( [22-Oct-2003] $)
  $}

  ${
    $d x B $.  $d x D $.  $d x F $.
    rdgsucmpt.1 $e |- F = rec ( ( x e. _V |-> C ) , A ) $.
    rdgsucmpt.2 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The value of the recursive definition generator at a successor (special
       case where the characteristic function uses the map operation).
       (Contributed by Mario Carneiro, 9-Sep-2013.) $)
    rdgsucmpt $p |- ( ( B e. On /\ D e. V ) -> ( F ` suc B ) = D ) $=
      ( con0 wcel wa csuc cfv cvv cmpt crdg fveq1i rdgsuc fveq2i wceq fvex
      eqid fvmptg mpan syl5eqr sylan9eq syl5eq ) CJKZEGKZLCMZFNUKAODPZBQZNZEUKF
      UMHRUIUJUNCUMNZULNZEBCULSUJUPCFNZULNZEUQUOULCFUMHRTUQOKUJUREUACFUBAUQDEOG
      ULIULUCUDUEUFUGUH $.
      $( [9-Sep-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( The value of the recursive definition generator at a limit ordinal, in
       terms of the union of all smaller values. $)
    rdglim2 $p |- ( ( B e. C /\ Lim B ) -> ( rec ( F , A ) ` B ) =
                  U. { y | E. x e. B y = ( rec ( F , A ) ` x ) } ) $=
      ( wcel wlim wa crdg cfv cima cuni cv wceq wrex cab rdglim cop wex dfima3
      df-rex con0 wb word wi limord ordelord ex visset elon syl6ibr syl eqcom
      wfn rdgfnon fnopfvb mpan syl5bb syl6 pm5.32d exbidv syl5rbb abbidv
      syl5eq unieqd adantl eqtrd ) DEGZDHZIDFCJZKVKDLZMZBNZANZVKKZOZADPZBQZMZCD
      EFRVJVMVTOVIVJVLVSVJVLVODGZVOVNSVKGZIZATZBQVSABVKDUAVJWDVRBVRWAVQIZATVJWD
      VQADUBVJWEWCAVJWAVQWBVJWAVOUCGZVQWBUDVJDUEZWAWFUFDUGWGWAVOUEZWFWGWAWHDVOU
      HUIVOAUJUKULUMVQVPVNOZWFWBVNVPUNVKUCUOWFWIWBUDCFUPUCVOVNVKBUJUQURUSUTVAVB
      VCVDVEVFVGVH $.
      $( [23-Apr-1995] $)

    $( The value of the recursive definition generator at a limit ordinal, in
       terms of indexed union of all smaller values. $)
    rdglim2a $p |- ( ( B e. C /\ Lim B ) -> ( rec ( F , A ) ` B ) =
                  U_ x e. B ( rec ( F , A ) ` x ) ) $=
      ( vy wcel wlim wa crdg cfv cv wceq wrex cab cuni ciun rdglim2 fvex
      dfiun2 syl6eqr ) CDGCHICEBJZKFLALZUBKZMACNFOPACUDQAFBCDERAFCUDUCUBSTUA $.
      $( [28-Jun-1998] $)
  $}

