$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Operations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include the value of an operation ` F ` (such as
     ` + ` ) for two arguments ` A ` and ` B ` .  Note that the syntax is
     simply three class symbols in a row surrounded by parentheses.  Since
     operation values are the only possible class expressions consisting of
     three class expressions in a row surrounded by parentheses, the syntax is
     unambiguous.  (For an example of how syntax could become ambiguous if we
     are not careful, see the comment in ~ cneg .) $)
  co $a class ( A F B ) $.

  $( Extend class notation to include class abstraction (class builder) of
     nested ordered pairs. $)
  copab2 $a class { <. <. x , y >. , z >. | ph } $.

  $( Define the value of an operation.  Definition of operation value in
     [Enderton] p. 79.  Note that the syntax is simply three class expressions
     in a row bracketed by parentheses.  There are no restrictions of any kind
     on what those class expressions may be, although only certain kinds of
     class expressions - a binary operation ` F ` and its arguments ` A ` and
     ` B ` - will be useful for proving meaningful theorems.  For example, if
     class ` F ` is the operation ` + ` and arguments ` A ` and ` B ` are ` 3 `
     and ` 2 ` , the expression ` ( 3 + 2 ) ` can be proved to equal ` 5 ` (see
     ~ 3p2e5 ).  This definition is well-defined, although not very meaningful,
     when classes ` A ` and/or ` B ` are proper classes (i.e. are not sets);
     see ~ oprprc1 and ~ oprprc2 .  On the other hand, we often find uses for
     this definition when ` F ` is a proper class, such as ` +o ` in ~ oav .
     ` F ` is normally equal to a class of nested ordered pairs of the form
     defined by ~ df-oprab . $)
  df-opr $a |- ( A F B ) = ( F ` <. A , B >. ) $.

  ${
    $d x w $.  $d y w $.  $d z w $.  $d w ph $.
    $( Define the class abstraction (class builder) of a collection of nested
       ordered pairs (for use in defining operations).  This is a special case
       of Definition 4.16 of [TakeutiZaring] p. 14.  Normally ` x ` , ` y ` ,
       and ` z ` are distinct, although the definition doesn't strictly require
       it.  See ~ df-opr for the value of an operation.  The brace notation is
       called "class abstraction" by Quine; it is also called a "class builder"
       in the literature.  The value of the most common operation class builder
       is given by ~ oprabval2 . $)
    df-oprab $a |- { <. <. x , y >. , z >. | ph } =
                  { w | E. x E. y E. z ( w = <. <. x , y >. , z >. /\ ph ) } $.
  $}

  $( Equality theorem for operation value. $)
  opreq $p |- ( F = G -> ( A F B ) = ( A G B ) ) $=
    ( wceq cop cfv co fveq1 df-opr 3eqtr4g ) CDEABFZCGLDGABCHABDHLCDIABCJABDJK
    $.
    $( [28-Feb-1995] $)

  $( Equality theorem for operation value. $)
  opreq1 $p |- ( A = B -> ( A F C ) = ( B F C ) ) $=
    ( wceq cop cfv co opeq1 fveq2d df-opr 3eqtr4g ) ABEZACFZDGBCFZDGACDHBCDHMNO
    DABCIJACDKBCDKL $.
    $( [28-Feb-1995] $)

  $( Equality theorem for operation value. $)
  opreq2 $p |- ( A = B -> ( C F A ) = ( C F B ) ) $=
    ( wceq cop cfv co opeq2 fveq2d df-opr 3eqtr4g ) ABEZCAFZDGCBFZDGCADHCBDHMNO
    DABCIJCADKCBDKL $.
    $( [28-Feb-1995] $)

  $( Equality theorem for operation value. $)
  opreq12 $p |- ( ( A = B /\ C = D ) -> ( A F C ) = ( B F D ) ) $=
    ( wceq co opreq1 opreq2 sylan9eq ) ABFCDFACEGBCEGBDEGABCEHCDBEIJ $.
    $( [16-Jul-1995] $)

  ${
    opreq1i.1 $e |- A = B $.
    $( Equality inference for operation value. $)
    opreq1i $p |- ( A F C ) = ( B F C ) $=
      ( wceq co opreq1 ax-mp ) ABFACDGBCDGFEABCDHI $.
      $( [28-Feb-1995] $)

    $( Equality inference for operation value. $)
    opreq2i $p |- ( C F A ) = ( C F B ) $=
      ( wceq co opreq2 ax-mp ) ABFCADGCBDGFEABCDHI $.
      $( [28-Feb-1995] $)

    ${
      opreq12i.2 $e |- C = D $.
      $( Equality inference for operation value.  (The proof was shortened by
         Andrew Salmon, 22-Oct-2011.) $)
      opreq12i $p |- ( A F C ) = ( B F D ) $=
        ( wceq co opreq12 mp2an ) ABHCDHACEIBDEIHFGABCDEJK $.
        $( [22-Oct-2011] $) $( [28-Feb-1995] $)
    $}

    $( Equality inference for operation value. $)
    opreqi $p |- ( C A D ) = ( C B D ) $=
      ( wceq co opreq ax-mp ) ABFCDAGCDBGFECDABHI $.
      $( [24-Nov-2007] $)
  $}

  ${
    opreq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for operation value. $)
    opreq1d $p |- ( ph -> ( A F C ) = ( B F C ) ) $=
      ( wceq co opreq1 syl ) ABCGBDEHCDEHGFBCDEIJ $.
      $( [13-Mar-1995] $)

    $( Equality deduction for operation value. $)
    opreq2d $p |- ( ph -> ( C F A ) = ( C F B ) ) $=
      ( wceq co opreq2 syl ) ABCGDBEHDCEHGFBCDEIJ $.
      $( [13-Mar-1995] $)

    $( Equality deduction for operation value. $)
    opreqd $p |- ( ph -> ( C A D ) = ( C B D ) ) $=
      ( wceq co opreq syl ) ABCGDEBHDECHGFDEBCIJ $.
      $( [9-Sep-2006] $)

    ${
      opreq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for operation value.  (The proof was shortened by
         Andrew Salmon, 22-Oct-2011.) $)
      opreq12d $p |- ( ph -> ( A F C ) = ( B F D ) ) $=
        ( wceq co opreq12 syl11anc ) ABCIDEIBDFJCEFJIGHBCDEFKL $.
        $( [22-Oct-2011] $) $( [13-Mar-1995] $)
    $}

    ${
      opreqan12i.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for operation value. $)
      opreqan12d $p |- ( ( ph /\ ps ) -> ( A F C ) = ( B F D ) ) $=
        ( wceq co opreq12 syl2an ) ACDJEFJCEGKDFGKJBHICDEFGLM $.
        $( [10-Aug-1995] $)

      $( Equality deduction for operation value. $)
      opreqan12rd $p |- ( ( ps /\ ph ) -> ( A F C ) = ( B F D ) ) $=
        ( co wceq opreqan12d ancoms ) ABCEGJDFGJKABCDEFGHILM $.
        $( [10-Aug-1995] $)
    $}
  $}

  ${
    opreq123d.1 $e |- ( ph -> F = G ) $.
    opreq123d.2 $e |- ( ph -> A = B ) $.
    opreq123d.3 $e |- ( ph -> C = D ) $.
    $( Equality deduction for operation value.  (Contributed by FL,
       22-Dec-2008.) $)
    opreq123d $p |- ( ph -> ( A F C ) = ( B G D ) ) $=
      ( co opreqd opreq1d opreq2d 3eqtrd ) ABDFKBDGKCDGKCEGKAFGBDHLABCDGIMADECG
      JNO $.
      $( [22-Dec-2008] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbopr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbopr.2 $e |- ( y e. F -> A. x y e. F ) $.
    hbopr.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for operation value. $)
    hbopr $p |- ( y e. ( A F B ) -> A. x y e. ( A F B ) ) $=
      ( co cop cfv df-opr hbop hbfv hbxfreq ) ABCDEICDJZEKCDELABPEGABCDFHMNO $.
      $( [4-May-2004] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z F $.  $d x y z $.  $d y ph $.
    hboprd.1 $e |- ( ph -> A. x ph ) $.
    hboprd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hboprd.3 $e |- ( ph -> ( y e. F -> A. x y e. F ) ) $.
    hboprd.4 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbopr .  (The
       proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
    hboprd $p |- ( ph -> ( y e. ( A F B ) -> A. x y e. ( A F B ) ) ) $=
      ( cv cop cfv wcel wal co hbopd hbfvd df-opr eleq2i albii 3imtr4g ) ACKZDE
      LZFMZNZUFBOUCDEFPZNZUHBOABCUDFGIABCDEGHJQRUGUEUCDEFSTZUHUFBUIUAUB $.
      $( [22-Oct-2011] $) $( [13-Dec-2005] $)
  $}

  ${
    $d a ph r s t w $.  $d a r s t w x $.  $d a r s t w y $.  $d a r s t w z $.
    $( The law of concretion.  Special case of Theorem 9.5 of [Quine] p. 61.
       (Contributed by Mario Carneiro, 20-Mar-2013.) $)
    oprabid $p |- ( <. <. x , y >. , z >. e.
        { <. <. x , y >. , z >. | ph } <-> ph ) $=
      ( vw va vt vr vs cv cop wceq wa wex wi visset weq cvv wal wn opex eqvinop
      copab2 biimpi eqeq1 opth1 syl6bi opeq1 eqeq2d w3a wcel otthg mp2an df-3an
      wb bitri anbi1i anass 3bitri 3exbii nd5 equcom albii exdistrf eximi excom
      3imtr3g 3imtr4i anim2i 3syl sylbi weu euequ1 eupick mpan syl6 3impd com12
      syl5bi eqcom syl6bb anbi1d 3exbidv imbi1d imbi12d mpbiri adantr 19.23aivv
      syl5 com3l mpdd mpcom 19.8a ex impbid df-oprab elab2 ) EJZBJZCJZKZDJZKZLZ
      AMZDNZCNZBNZAEXCABCDUCXAXBUAXDXHAWRFJZGJZKZLZXKXCLZMZGNFNZXDXHAOZXDXOFGWR
      XAXBWSWTUADPZUBUDXNXDXPOZFGXLXRXMXLXDXIXALZXPXLXDXMXSWRXKXCUEXIXJXAXBFPUF
      UGXSXLXDXPXSXIHJZIJZKZLZYBXALZMZINHNXLXROZHIXIWSWTBPZCPZUBYEYFHIYCYFYDYCX
      LWRYBXJKZLZXRYCXKYIWRXIYBXJUHUIYJXRXCYILZYKAMZDNCNBNZAOZOYMBHQZCIQZDGQZAM
      ZDNZMCNZMZBNZYKAYMYOYPYRMZMZDNZCNBNZUUBYLUUDBCDYLYOYPMZYQMZAMUUGYRMUUDYKU
      UHAYKYOYPYQUJZUUHYARUKXJRUKYKUUIUOIPGPWSWTXTYAXBXJRRYGYHXQULUMZYOYPYQUNUP
      UQUUGYQAURYOYPYRURUSUTUUFYOUUCDNZMZCNBNZYOUUKCNZMZBNUUBUUEBNZCNUULBNZCNUU
      FUUMUUPUUQCYOUUCBDBDQBSTHBQZUURDSYOYODSDBHVAHBVBZUURYODUUSVCVGVDVEUUEBCVF
      UULBCVFVHYOUUKBCBCQBSTUURUURCSYOYOCSCBHVAUUSUURYOCUUSVCVGVDUUOUUABUUNYTYO
      YPYRCDCDQCSTICQZUUTDSYPYPDSDCIVAICVBZUUTYPDUVAVCVGVDVIVEVJVKUUBYKAYKUUIUU
      BAUUJUUBYOYPYQAUUBYOYTYPYQAOZOYOBVLUUBYOYTOBHVMYOYTBVNVOYTYPYSUVBYPCVLYTY
      PYSOCIVMYPYSCVNVOYQDVLYSUVBDGVMYQADVNVOVPVPVQVSVRWIYJXDYKXPYNYJXDYIXCLYKW
      RYIXCUEYIXCVTWAZYJXHYMAYJXEYLBCDYJXDYKAUVCWBWCWDWEWFUGWGWHVKWJWKWGWHWLXDA
      XHXEXFXGXHXEDWMXFCWMXGBWMVJWNWOABCDEWPWQ $.
      $( [20-Mar-2013] $)
  $}

  $( The result of an operation is a set. $)
  oprex $p |- ( A F B ) e. _V $=
    ( co cop cfv cvv df-opr fvex eqeltri ) ABCDABEZCFGABCHKCIJ $.
    $( [13-Mar-1995] $)

  ${
    oprprc1.1 $e |- Rel dom F $.
    $( The value of an operation when the first argument is a proper class.
       Note: this theorem is dependent on our particular definitions of
       operation value, function value, and ordered pair. $)
    oprprc1 $p |- ( -. A e. _V -> ( A F B ) = (/) ) $=
      ( cvv wcel wn co cop cfv c0 df-opr wceq df-br brrelexi sylbir con3i ndmfv
      cdm wbr syl syl5eq ) AEFZGZABCHABIZCJZKABCLUDUECSZFZGUFKMUHUCUHABUGTUCABU
      GNABUGDOPQUECRUAUB $.
      $( [16-Jun-2004] $)
  $}

  $( The value of an operation when the second argument is a proper class.
     Note: this theorem is dependent on our particular definitions of operation
     value, function value, and ordered pair. $)
  oprprc2 $p |- ( -. B e. _V -> ( A F B ) = ( A F A ) ) $=
    ( cvv wcel wn cop cfv co opprc2 fveq2d df-opr 3eqtr4g ) BDEFZABGZCHAAGZCHAB
    CIAACINOPCABJKABCLAACLM $.
    $( [16-Jun-2004] $)

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z D $.  $d y z F $.
    $d x y z $.
    $( Move class substitution in and out of an operation.  (The proof was
       shortened by Andrew Salmon, 22-Oct-2011.) $)
    csboprg $p |- ( A e. D -> [_ A / x ]_ ( B F C ) =
           ( [_ A / x ]_ B [_ A / x ]_ F [_ A / x ]_ C ) ) $=
      ( vy vz wcel co csb cop cfv df-opr cv wceq csbeq1 opeq12d hbcsb1 csbeq1a
      csbeq2i csbfv12g eqeq12d visset ax-17 csbief vtoclg fveq2d syl6eqr 3eqtrd
      hbop ) BEIZABCDFJZKABCDLZFMZKABUNKZABFKZMZABCKZABDKZUQJZABUMUOECDFNUAABUN
      EFUBULURUSUTLZUQMVAULUPVBUQAGOZUNKZAVCCKZAVCDKZLZPUPVBPGBEVCBPZVDUPVGVBAV
      CBUNQVHVEUSVFUTAVCBCQAVCBDQRUCAHVCUNVGGUDZAHVEVFAHVCCVIHOVCIAUEZSAHVCDVIV
      JSUKAOVCPCVEDVFAVCCTAVCDTRUFUGUHUSUTUQNUIUJ $.
      $( [22-Oct-2011] $) $( [12-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y C $.  $d y D $.  $d x y F $.
    $( Move class substitution in and out of an operation. $)
    csbopr12g $p |- ( A e. D ->
                 [_ A / x ]_ ( B F C ) = ( [_ A / x ]_ B F [_ A / x ]_ C ) ) $=
      ( vy wcel co csb csboprg cv ax-17 csbconstgf opreqd eqtrd ) BEHZABCDFIJAB
      CJZABDJZABFJZIRSFIABCDEFKQTFRSAGBFEGLFHAMNOP $.
      $( [12-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y C $.  $d y D $.  $d x y F $.
    $( Move class substitution in and out of an operation. $)
    csbopr1g $p |- ( A e. D ->
                  [_ A / x ]_ ( B F C ) = ( [_ A / x ]_ B F C ) ) $=
      ( vy wcel co csb csbopr12g cv ax-17 csbconstgf opreq2d eqtrd ) BEHZABCDFI
      JABCJZABDJZFIRDFIABCDEFKQSDRFAGBDEGLDHAMNOP $.
      $( [12-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y D $.  $d x y F $.
    $( Move class substitution in and out of an operation. $)
    csbopr2g $p |- ( A e. D ->
                  [_ A / x ]_ ( B F C ) = ( B F [_ A / x ]_ C ) ) $=
      ( vy wcel co csb csbopr12g cv ax-17 csbconstgf opreq1d eqtrd ) BEHZABCDFI
      JABCJZABDJZFICSFIABCDEFKQRCSFAGBCEGLCHAMNOP $.
      $( [12-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y C $.  $d y D $.  $d x y F $.  $d x y S $.
    $( A frequently used special case of ~ rcla42ev for operation values. $)
    rcla4eopr $p |- ( ( C e. A /\ D e. B /\ S = ( C F D ) ) ->
                 E. x e. A E. y e. B S = ( x F y ) ) $=
      ( cv co wceq opreq1 eqeq2d opreq2 rcla42ev ) GAIZBIZHJZKGEFHJZKGEQHJZKABE
      FCDPEKRTGPEQHLMQFKTSGQFEHNMO $.
      $( [21-Mar-2007] $)
  $}

  ${
    fnotoprb.1 $e |- R e. _V $.
    $( Equivalence of operation value and ordered triple membership, analogous
       to ~ fnopfvb . $)
    fnotoprb $p |- ( ( F Fn ( A X. B ) /\ C e. A /\ D e. B ) ->
                   ( ( C F D ) = R <-> <. <. C , D >. , R >. e. F ) ) $=
      ( cxp wfn wcel co wceq cop wb wa opelxpi cfv df-opr eqeq1i fnopfvb syl5bb
      sylan2 3impb ) FABHZIZCAJZDBJZCDFKZELZCDMZEMFJZNZUFUGOUEUJUDJZULCDABPUIUJ
      FQZELUEUMOUKUHUNECDFRSUDUJEFGTUAUBUC $.
      $( [17-Dec-2008] $)
  $}

  ${
    $d x z w v $.  $d y z w v $.  $d w ph v $.
    $( Class abstraction for operations in terms of class abstraction of
       ordered pairs. $)
    dfoprab2 $p |- { <. <. x , y >. , z >. | ph } =
                   { <. w , z >. | E. x E. y ( w = <. x , y >. /\ ph ) } $=
      ( vv cv cop wceq wa wex cab copab2 copab excom exrot4 19.42v opeq1 eqeq2d
      3bitr3i pm5.32ri anbi1i anass an32 exbii opex isseti biantru 3exbii bitri
      3bitr4i 19.42vv 2exbii abbii df-oprab df-opab 3eqtr4i ) FGZBGZCGZHZDGZHZI
      ZAJZDKCKBKZFLUREGZVBHZIZVGVAIZAJZCKBKZJZDKEKZFLABCDMVLEDNVFVNFVIVKJZCKBKZ
      EKDKZVPDKEKVFVNVPDEOVQVOEKZDKCKBKVFVODEBCPVRVEBCDVEVJJZEKVEVJEKZJVRVEVEVJ
      EQVOVSEVIVJJZAJVDVJJZAJVOVSWAWBAVJVIVDVJVHVCURVGVAVBRSUAUBVIVJAUCVDVJAUDT
      UEVTVEEVAUSUTUFUGUHUKUIUJVPVMEDVIVKBCULUMTUNABCDFUOVLEDFUPUQ $.
      $( [12-Mar-1995] $)

    $( An operation class abstraction is a relation. $)
    reloprab $p |- Rel { <. <. x , y >. , z >. | ph } $=
      ( vw copab2 wrel cv cop wceq wa wex copab relopab dfoprab2 releqi mpbir )
      ABCDFZGEHBHCHIJAKCLBLZEDMZGSEDNRTABCDEOPQ $.
      $( [16-Jun-2004] $)
  $}

$(
  @{
    @d x y z w v @.  @d ph v @.
    dfoprab2f.1 @e |- ( ph -> A. w ph ) @.
    @( Class abstraction for operations in terms of class abstraction of
       ordered pairs.  This is a version of ~ dfoprab2 with bound-variable
       hypothesis instead of distinct variable requirement. @)
    dfoprab2f @p |- { <. <. x , y >. , z >. | ph } =
                   { <. w , z >. | E. x E. y ( w = <. x , y >. /\ ph ) } @=
      ( vv copab2 cv cop wceq wa wex copab dfoprab2 ax-17 hban hbex weq eqeq1
      anbi1d 2exbidv cbvopab1
      eqtri ) ABCDHGIZBICIJZKZALZCMZBMZGDNEIZUFKZALZCMBM
      ZEDNABCDGOUJUNGDEUIEBUHECUGAEUGEPFQRRUNGPGESZUHUMBCUOUGULAUEUKUFTUAUBUCUD
      @.
  @}
$)

  ${
    $d x w v $.  $d y v $.  $d z v $.  $d v ph $.
    $( The abstraction variables in an operation class abstraction are not
       free.  (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    hboprab1 $p |- ( w e. { <. <. x , y >. , z >. | ph } ->
                   A. x w e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv copab2 cv cop wceq wa wex cab df-oprab hbe1 hbab hbxfreq ) BEABCDGFH
      BHCHIDHIJAKDLCLZBLZFMABCDFNSBFERBOPQ $.
      $( [24-Jul-2012] $) $( [25-Apr-1995] $)
  $}

  ${
    $d x v $.  $d y w v $.  $d z v $.  $d v ph $.
    $( The abstraction variables in an operation class abstraction are not
       free.  (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 30-Jul-2012.) $)
    hboprab2 $p |- ( w e. { <. <. x , y >. , z >. | ph } ->
                   A. y w e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv copab2 cv cop wceq wa wex cab df-oprab hbe1 hbex hbab hbxfreq ) CEAB
      CDGFHBHCHIDHIJAKDLZCLZBLZFMABCDFNUACFETCBSCOPQR $.
      $( [31-Jul-2012] $)  $( [25-Apr-1995] $)
  $}

  ${
    $d v x $.  $d v y $.  $d v z $.  $d w z $.  $d v ph $.
    $( The abstraction variables in an operation class abstraction are not
       free. $)
    hboprab3 $p |- ( w e. { <. <. x , y >. , z >. | ph } ->
                   A. z w e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv copab2 cv cop wceq wa wex cab df-oprab hbe1 hbex hbab hbxfreq ) DEAB
      CDGFHBHCHIDHIJAKZDLZCLZBLZFMABCDFNUBDFEUADBTDCSDOPPQR $.
      $( [22-Aug-2013] $)
  $}

  ${
    $d u w $.  $d v w x $.  $d v w y $.  $d v w z $.  $d v ph $.
    hboprab.1 $e |- ( ph -> A. w ph ) $.
    $( Bound-variable hypothesis builder for an operation class abstraction. $)
    hboprab $p |- ( u e. { <. <. x , y >. , z >. | ph } ->
                   A. w u e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv copab2 cv cop wceq wa wex cab df-oprab ax-17 hban hbex hbab hbxfreq
      ) EFABCDIHJBJCJKDJKLZAMZDNZCNZBNZHOABCDHPUFEHFUEEBUDECUCEDUBAEUBEQGRSSSTU
      A $.
      $( [22-Aug-2013] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d w ph $.  $d w ps $.  $d w ch $.
    oprabbid.1 $e |- ( ph -> A. x ph ) $.
    oprabbid.2 $e |- ( ph -> A. y ph ) $.
    oprabbid.3 $e |- ( ph -> A. z ph ) $.
    oprabbid.4 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal operation class abstractions (deduction
       rule). $)
    oprabbid $p |- ( ph ->
           { <. <. x , y >. , z >. | ps } = { <. <. x , y >. , z >. | ch } ) $=
      ( vw cv cop wceq wa wex copab copab2 exbid dfoprab2 ax-17 opabbid 3eqtr4g
      anbi2d ) AKLDLELMNZBOZEPZDPZKFQUECOZEPZDPZKFQBDEFRCDEFRAUHUKKFAKUAIAUGUJD
      GAUFUIEHABCUEJUDSSUBBDEFKTCDEFKTUC $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x z w ph $.  $d y z w ph $.  $d w ps $.  $d w ch $.
    oprabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal operation class abstractions (deduction
       rule). $)
    oprabbidv $p |- ( ph ->
           { <. <. x , y >. , z >. | ps } = { <. <. x , y >. , z >. | ch } ) $=
      ( ax-17 oprabbid ) ABCDEFADHAEHAFHGI $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d w ph $.  $d w ps $.
    oprabbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal operation class abstractions.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       19-Jun-2012.) $)
    oprabbii $p |- { <. <. x , y >. , z >. | ph }
                 = { <. <. x , y >. , z >. | ps } $=
      ( vw cv wceq copab2 eqid wb a1i oprabbidv ax-mp ) GHZPIZACDEJBCDEJIPKQABC
      DEABLQFMNO $.
      $( [24-Jul-2012] $) $( [28-May-1995] $)
  $}

  ${
    $d x y z w v $.  $d v ph $.  $d v ps $.
    cbvoprab1.1 $e |- ( ph -> A. w ph ) $.
    cbvoprab1.2 $e |- ( ps -> A. x ps ) $.
    cbvoprab1.3 $e |- ( x = w -> ( ph <-> ps ) ) $.
    $( Rule used to change first bound variable in an operation abstraction,
       using implicit substitution.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    cbvoprab1 $p |- { <. <. x , y >. , z >. | ph }
                  = { <. <. w , y >. , z >. | ps } $=
      ( vv cv cop wceq wa wex copab copab2 ax-17 hban hbex opeq1 eqeq2d anbi12d
      exbidv cbvex opabbii dfoprab2 3eqtr4i ) JKZCKZDKZLZMZANZDOZCOZJEPUIFKZUKL
      ZMZBNZDOZFOZJEPACDEQBFDEQUPVBJEUOVACFUNFDUMAFUMFRGSTUTCDUSBCUSCRHSTUJUQMZ
      UNUTDVCUMUSABVCULURUIUJUQUKUAUBIUCUDUEUFACDEJUGBFDEJUGUH $.
      $( [22-Oct-2011] $) $( [20-Dec-2008] $)
  $}

  ${
    $d x y z w v u $.  $d u ph $.  $d u ps $.
    cbvoprab12.1 $e |- ( ph -> A. w ph ) $.
    cbvoprab12.2 $e |- ( ph -> A. v ph ) $.
    cbvoprab12.3 $e |- ( ps -> A. x ps ) $.
    cbvoprab12.4 $e |- ( ps -> A. y ps ) $.
    cbvoprab12.5 $e |- ( ( x = w /\ y = v ) -> ( ph <-> ps ) ) $.
    $( Rule used to change first two bound variables in an operation
       abstraction, using implicit substitution.  (The proof was shortened by
       Andrew Salmon, 22-Oct-2011.) $)
    cbvoprab12 $p |- { <. <. x , y >. , z >. | ph }
                   = { <. <. w , v >. , z >. | ps } $=
      ( vu cv cop wceq wa wex ax-17 hban copab2 opeq12 anbi12d opabbii dfoprab2
      copab eqeq2d cbvex2 3eqtr4i ) MNZCNZDNZOZPZAQZDRCRZMEUFUJFNZGNZOZPZBQZGRF
      RZMEUFACDEUABFGEUAUPVBMEUOVACDFGUNAFUNFSHTUNAGUNGSITUTBCUTCSJTUTBDUTDSKTU
      KUQPULURPQZUNUTABVCUMUSUJUKULUQURUBUGLUCUHUDACDEMUEBFGEMUEUI $.
      $( [22-Oct-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x y z w v u $.  $d u w v ph $.  $d u x y ps $.
    cbvoprab12v.1 $e |- ( ( x = w /\ y = v ) -> ( ph <-> ps ) ) $.
    $( Rule used to change first two bound variables in an operation
       abstraction, using implicit substitution. $)
    cbvoprab12v $p |- { <. <. x , y >. , z >. | ph }
                    = { <. <. w , v >. , z >. | ps } $=
      ( ax-17 cbvoprab12 ) ABCDEFGAFIAGIBCIBDIHJ $.
      $( [8-Oct-2004] $)
  $}

  ${
    $d x z w v $.  $d y z w v $.  $d v ph $.  $d v ps $.
    cbvoprab3.1 $e |- ( ph -> A. w ph ) $.
    cbvoprab3.2 $e |- ( ps -> A. z ps ) $.
    cbvoprab3.3 $e |- ( z = w -> ( ph <-> ps ) ) $.
    $( Rule used to change the third bound variable in an operation
       abstraction, using implicit substitution. $)
    cbvoprab3 $p |- { <. <. x , y >. , z >. | ph } =
                     { <. <. x , y >. , w >. | ps } $=
      ( vv cv wceq wa wex copab copab2 ax-17 hban hbex dfoprab2 anbi2d cbvopab2
      cop 2exbidv 3eqtr4i ) JKCKDKUCLZAMZDNZCNZJEOUFBMZDNZCNZJFOACDEPBCDFPUIULJ
      EFUHFCUGFDUFAFUFFQGRSSUKECUJEDUFBEUFEQHRSSEKFKLZUGUJCDUMABUFIUAUDUBACDEJT
      BCDFJTUE $.
      $( [22-Aug-2013] $)
  $}

  ${
    $d x z w v $.  $d y z w v $.  $d w v ph $.  $d z v ps $.
    cbvoprab3v.1 $e |- ( z = w -> ( ph <-> ps ) ) $.
    $( Rule used to change the third bound variable in an operation
       abstraction, using implicit substitution.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    cbvoprab3v $p |- { <. <. x , y >. , z >. | ph } =
                     { <. <. x , y >. , w >. | ps } $=
      ( ax-17 cbvoprab3 ) ABCDEFAFHBEHGI $.
      $( [24-Jul-2012] $) $( [8-Oct-2004] $)
  $}

  ${
    elimdeloprv.1 $e |- ( ph -> C e. ( A F B ) ) $.
    elimdeloprv.2 $e |- Z e. ( X F Y ) $.
    $( Eliminate a hypothesis which is a predicate expressing membership in the
       result of an operator (deduction version).  See ~ ghomgrplem for an
       example of its use.  (Contributed by Paul Chapman, 25-Mar-2008.) $)
    elimdeloprv $p |- if ( ph , C , Z ) e.
                     ( if ( ph , A , X ) F if ( ph , B , Y ) ) $=
      ( cif co wcel iftrue eqeltrd opreq12d eleqtrrd wn iffalse syl6eqel
      pm2.61i ) AADHKZABFKZACGKZELZMAUBBCELZUEAUBDUFADHNIOAUCBUDCEABFNACGNPQARZ
      UBFGELZUEUGUBHUHADHSJTUGUCFUDGEABFSACGSPQUA $.
      $( [25-Mar-2008] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d w ph $.
    $( The domain of an operation class abstraction.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    dmoprab $p |- dom { <. <. x , y >. , z >. | ph } =
                  { <. x , y >. | E. z ph } $=
      ( vw copab2 cdm cv cop wceq wa wex copab cab dfoprab2 dmeqi dmopab exrot3
      19.42v 2exbii bitri abbii df-opab eqtr4i 3eqtri ) ABCDFZGEHBHCHIJZAKZCLBL
      ZEDMZGUIDLZENZADLZBCMZUFUJABCDEOPUIEDQULUGUMKZCLBLZENUNUKUPEUKUHDLZCLBLUP
      UHDBCRUQUOBCUGADSTUAUBUMBCEUCUDUE $.
      $( [24-Jul-2012] $) $( [17-Mar-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( The domain of an operation class abstraction. $)
    dmoprabss $p |- dom { <. <. x , y >. , z >. |
           ( ( x e. A /\ y e. B ) /\ ph ) } C_ ( A X. B ) $=
      ( cv wcel wa copab2 cdm wex copab dmoprab 19.42v opabbii opabssxp eqsstri
      cxp ) BGEHCGFHIZAIZBCDJKUADLZBCMZEFSZUABCDNUCTADLZIZBCMUDUBUFBCTADOPUEBCE
      FQRR $.
      $( [24-Aug-1995] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d w ph $.
    $( The range of an operation class abstraction.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Apr-2013.) $)
    rnoprab $p |- ran { <. <. x , y >. , z >. | ph } =
                  { z | E. x E. y ph } $=
      ( vw copab2 crn cv cop wceq wa wex copab cab dfoprab2 rneqi rnopab exrot3
      19.41v opex isseti mpbiran 2exbii bitri abbii 3eqtri ) ABCDFZGEHBHZCHZIZJ
      ZAKZCLBLZEDMZGUMELZDNACLBLZDNUGUNABCDEOPUMEDQUOUPDUOULELZCLBLUPULEBCRUQAB
      CUQUKELAUKAESEUJUHUITUAUBUCUDUEUF $.
      $( [19-Apr-2013] $)  $( [30-Aug-2004] $)
  $}

  ${
    $d A y $.  $d x y z $.
    $( The range of a restricted operation class abstraction.  (Contributed by
       Scott Fenton, 21-Mar-2012.) $)
    rnoprab2 $p |- ran { <. <. x , y >. , z >. |
                          ( ( x e. A /\ y e. B ) /\ ph ) } =
                    { z | E. x e. A E. y e. B ph } $=
      ( cv wcel wa copab2 crn wex cab wrex rnoprab r2ex abbii eqtr4i ) BGEHCGFH
      IAIZBCDJKSCLBLZDMACFNBENZDMSBCDOUATDABCEFPQR $.
      $( [22-Mar-2012] $) $( [21-Mar-2012] $)
  $}

  ${
    $d x y z $.
    $( The domain of an operation class abstraction is a relation. $)
    reldmoprab $p |- Rel dom { <. <. x , y >. , z >. | ph } $=
      ( copab2 cdm wrel wex copab relopab dmoprab releqi mpbir ) ABCDEFZGADHZBC
      IZGOBCJNPABCDKLM $.
      $( [17-Mar-1995] $)

    $( Structure of an operation class abstraction. $)
    oprabss $p |- { <. <. x , y >. , z >. | ph } C_ ( ( _V X. _V ) X. _V ) $=
      ( copab2 cdm crn cxp wrel reloprab relssdmrn ax-mp reldmoprab df-rel mpbi
      cvv wss ssv xpss12 mp2an sstri ) ABCDEZUBFZUBGZHZPPHZPHZUBIUBUEQABCDJUBKL
      UCUFQZUDPQUEUGQUCIUHABCDMUCNOUDRUCUFUDPSTUA $.
      $( [28-Nov-2006] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d w ph $.
    $d x y z w ps $.
    eloprabga.1 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( The law of concretion for operation class abstraction.  Compare
       ~ elopab .  (Unnecessary distinct variable restrictions were removed by
       David Abernethy, 19-Jun-2012.)  (Revised by Mario Carneiro,
       19-Dec-2013.) $)
    eloprabga $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
       ( <. <. A , B >. , C >. e. { <. <. x , y >. , z >. | ph } <-> ps ) ) $=
      ( vw wcel cvv cop wb wceq wa wex copab2 elisset w3a wi eqeq1 eqcom syl6bb
      opex cv visset otthg 3adant1 sylan9bbr anbi1d pm5.32i cab df-oprab eleq2i
      3exbidv abid bitr2i eleq1 syl5bb adantl 3anim123i eeeanv sylibr biantrurd
      elex 19.41vvv syl6rbbr adantr 3bitr3d expcom vtocle syl3an ) FINFONZGJNGO
      NZHKNHONZFGPZHPZACDEUAZNZBQZFIUBGJUBHKUBVQVRVSUCZWDUDMWAVTHUHWEMUIZWARZWD
      WEWGSZWFCUIZDUIZPEUIZPZRZASZETDTCTZWIFRZWJGRZWKHRZUCZBSZETDTCTZWCBWHWNWTC
      DEWHWNWSASWTWHWMWSAWGWMWLWARZWEWSWGWMWAWLRXBWFWAWLUEWAWLUFUGVRVSXBWSQVQWI
      WJFGWKHOOCUJDUJEUJUKULUMUNWSABLUOUGUSWGWOWCQWEWOWFWBNZWGWCXCWFWOMUPZNWOWB
      XDWFACDEMUQURWOMUTVAWFWAWBVBVCVDWEXABQWGWEBWSETDTCTZBSXAWEXEBWEWPCTZWQDTZ
      WRETZUCXEVQXFVRXGVSXHCFOVIDGOVIEHOVIVEWPWQWRCDEVFVGVHWSBCDEVJVKVLVMVNVOVP
      $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d w ph $.
    $d x y z w th $.
    eloprabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    eloprabg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    eloprabg.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    $( The law of concretion for operation class abstraction.  Compare
       ~ elopab .  (Unnecessary distinct variable restrictions were removed by
       David Abernethy, 19-Jun-2012.) $)
    eloprabg $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
       ( <. <. A , B >. , C >. e. { <. <. x , y >. , z >. | ph } <-> th ) ) $=
      ( cv wceq syl3an9b eloprabga ) ADEFGHIJKLMEQHRABFQIRCGQJRDNOPST $.
      $( [19-Dec-2013] $) $( [14-Sep-1999] $)
  $}

  ${
    $d ph w $.  $d ps w $.  $d x z w $.  $d y z w $.
    ssoprab2i.1 $e |- ( ph -> ps ) $.
    $( Inference of operation class abstraction subclass from implication.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    ssoprab2i $p |- { <. <. x , y >. , z >. | ph } C_
                    { <. <. x , y >. , z >. | ps } $=
      ( vw cv cop wceq wex copab copab2 anim2i 2eximi ssopab2i dfoprab2 3sstr4i
      wa ) GHCHDHIJZASZDKCKZGELTBSZDKCKZGELACDEMBCDEMUBUDGEUAUCCDABTFNOPACDEGQB
      CDEGQR $.
      $( [24-Jul-2012] $) $( [11-Nov-1995] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w ph $.
    $( Restriction of an operation class abstraction. $)
    resoprab $p |- ( { <. <. x , y >. , z >. | ph } |` ( A X. B ) ) =
                  { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ ph ) } $=
      ( vw cv cop wceq wex copab cxp cres wcel copab2 resopab 19.42vv dfoprab2
      wa eleq1 visset opelxp syl6bb anbi1d pm5.32i 2exbii bitr3i opabbii reseq1
      an12 bitri eqtri ax-mp 3eqtr4i ) GHZBHZCHZIZJZATZCKBKZGDLZEFMZNZUTUQEOURF
      OTZATZTZCKBKZGDLZABCDPZVDNZVGBCDPVEUPVDOZVBTZGDLVJVBGDVDQVNVIGDVNVMVATZCK
      BKVIVMVABCRVOVHBCVOUTVMATZTVHVMUTAUKUTVPVGUTVMVFAUTVMUSVDOVFUPUSVDUAUQURE
      FCUBUCUDUEUFULUGUHUIUMVKVCJVLVEJABCDGSVKVCVDUJUNVGBCDGSUO $.
      $( [10-Feb-2007] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.  $d D x y z $.
    $( Restriction of an operator abstraction.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    resoprab2 $p |- ( ( C C_ A /\ D C_ B ) -> ( { <. <. x , y >. , z >. |
                  ( ( x e. A /\ y e. B ) /\ ph ) } |` ( C X. D ) ) =
              { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D ) /\ ph ) } ) $=
      ( wss wa cv wcel copab2 cxp wi wb ssel pm4.71 sylib bicomd resoprab anass
      cres an4 bi2anan9 syl5bb anbi1d syl5bbr oprabbidv syl5eq ) GEIZHFIZJZBKZE
      LZCKZFLZJZAJZBCDMGHNUCUNGLZUPHLZJZUSJZBCDMVBAJZBCDMUSBCDGHUAUMVCVDBCDVCVB
      URJZAJUMVDVBURAUBUMVEVBAVEUTUOJZVAUQJZJUMVBUTVAUOUQUDUKVFUTULVGVAUKUTVFUK
      UTUOOUTVFPGEUNQUTUORSTULVAVGULVAUQOVAVGPHFUPQVAUQRSTUEUFUGUHUIUJ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y z w $.  $d w ph $.
    $( "At most one" is a sufficient condition for an operation class
       abstraction to be a function. $)
    funoprabg $p |- ( A. x A. y E* z ph ->
                    Fun { <. <. x , y >. , z >. | ph } ) $=
      ( vw wmo wal cv cop wceq wex copab2 wfun mosubopt 19.21aiv copab dfoprab2
      wa wb funeq ax-mp funopab bitr2i sylib ) ADFCGBGZEHZBHCHIJARCKBKZDFZEGZAB
      CDLZMZUEUHEADBCUFNOUKUGEDPZMZUIUJULJUKUMSABCDEQUJULTUAUGEDUBUCUD $.
      $( [28-Aug-2007] $)
  $}

  ${
    $d x y z w $.  $d w ph $.
    funoprab.1 $e |- E* z ph $.
    $( "At most one" is a sufficient condition for an operation class
       abstraction to be a function. $)
    funoprab $p |- Fun { <. <. x , y >. , z >. | ph } $=
      ( wmo wal copab2 wfun gen2 funoprabg ax-mp ) ADFZCGBGABCDHIMBCEJABCDKL $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( Functionality and domain of an operation class abstraction. $)
    fnoprabg $p |- ( A. x A. y ( ph -> E! z ps ) ->
  { <. <. x , y >. , z >. | ( ph /\ ps ) } Fn { <. x , y >. | ph } ) $=
      ( weu wi wal wa copab2 wfun cdm copab wceq wfn wmo eumo imim2i wex a4s wb
      moanimv sylibr 2alimi funoprabg syl dmoprab hba1 hba2 simpl 19.23aiv euex
      ancld 19.42v syl6ibr impbid2 opabbid syl5eq df-fn sylanbrc ) ABEFZGZDHZCH
      ZABIZCDEJZKZVFLZACDMZNVFVIOVDVEEPZDHCHVGVBVJCDVBABEPZGVJVAVKABEQRABEUBUCU
      DVECDEUEUFVDVHVEESZCDMVIVECDEUGVDVLACDVCCUHVBDCUIVCVLAUAZCVBVMDVBVLAVEAEA
      BUJUKVBAABESZIVLVBAVNVAVNABEULRUMABEUNUOUPTTUQURVFVIUSUT $.
      $( [28-Aug-2007] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    fnoprab.1 $e |- ( ph -> E! z ps ) $.
    $( Functionality and domain of an operation class abstraction. $)
    fnoprab $p |- { <. <. x , y >. , z >. | ( ph /\ ps ) } Fn
                    { <. x , y >. | ph } $=
      ( weu wi wal wa copab2 copab wfn gen2 fnoprabg ax-mp ) ABEGHZDICIABJCDEKA
      CDLMQCDFNABCDEOP $.
      $( [15-May-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w F $.
    $( An operation maps to a class to which all values belong. $)
    ffnoprv $p |- ( F : ( A X. B ) --> C <-> ( F Fn ( A X. B ) /\
         A. x e. A A. y e. B ( x F y ) e. C ) ) $=
      ( vw cxp wf wfn cv cfv wcel wral wa co ffnfv cop wceq fveq2 df-opr eleq1d
      syl6eqr ralxp anbi2i bitri ) CDHZEFIFUGJZGKZFLZEMZGUGNZOUHAKZBKZFPZEMZBDN
      ACNZOGUGEFQULUQUHUKUPGABCDUIUMUNRZSZUJUOEUSUJURFLUOUIURFTUMUNFUAUCUBUDUEU
      F $.
      $( [7-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y F $.  $d x y R $.  $d x y S $.
    foprcl.1 $e |- F : ( R X. S ) --> C $.
    $( Closure law for an operation. $)
    foprcl $p |- ( ( A e. R /\ B e. S ) -> ( A F B ) e. C ) $=
      ( vx vy wcel wa cv co wral cxp wf wfn ffnoprv wceq eleq1d simprbi rcla42v
      ax-mp opreq1 opreq2 mpi ) ADJBEJKHLZILZFMZCJZIENHDNZABFMZCJZDEOZCFPZUKGUO
      FUNQUKHIDECFRUAUCUJUMAUHFMZCJHIABDEUGASUIUPCUGAUHFUDTUHBSUPULCUHBAFUETUBU
      F $.
      $( [19-Apr-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.  $d z D $.  $d x y z F $.
    $d x y z G $.
    $( Equality of two operations is determined by their values. $)
    eqfnoprv $p |- ( ( F Fn ( A X. B ) /\ G Fn ( C X. D ) ) -> ( F = G <->
( ( A X. B ) = ( C X. D ) /\ A. x e. A A. y e. B ( x F y ) = ( x G y ) ) ) ) $=
      ( vz cxp wfn wa wceq cv cfv wral co eqfnfv fveq2 df-opr cop eqeq12d ralxp
      eqeq12i syl6bbr anbi2i syl6bb ) GCDJZKHEFJZKLGHMUHUIMZINZGOZUKHOZMZIUHPZL
      UJANZBNZGQZUPUQHQZMZBDPACPZLIUHUIGHRUOVAUJUNUTIABCDUKUPUQUAZMZUNVBGOZVBHO
      ZMUTVCULVDUMVEUKVBGSUKVBHSUBURVDUSVEUPUQGTUPUQHTUDUEUCUFUG $.
      $( [1-Sep-2005] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d F x y $.  $d G x y $.
    $( Two operators with the same domain are equal iff their values at each
       point in the domain are equal.  (Contributed by Jeff Madsen,
       7-Jun-2010.) $)
    eqfnoprv2 $p |- ( ( F Fn ( A X. B ) /\ G Fn ( A X. B ) ) ->
                  ( F = G <-> A. x e. A A. y e. B ( x F y ) = ( x G y ) ) ) $=
      ( cxp wfn wa wceq cv co wral eqfnoprv simpr eqidd ancri impbii syl6bb ) E
      CDGZHFTHIEFJTTJZAKZBKZELUBUCFLJBDMACMZIZUDABCDCDEFNUEUDUAUDOUDUAUDTPQRS
      $.
      $( [7-Jun-2010] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w F $.
    $( Representation of an operation class abstraction in terms of its
       values. $)
    fnoprv $p |- ( F Fn ( A X. B ) <-> F = { <. <. x , y >. , z >. |
                    ( ( x e. A /\ y e. B ) /\ z = ( x F y ) ) } ) $=
      ( vw cxp wfn cv wcel cfv wceq wa copab co copab2 dffn5 wex bitri cop elxp
      anbi1i 19.41vv anass df-opr syl6eqr eqeq2d anbi2d pm5.32i 3bitr2i opabbii
      fveq2 2exbii dfoprab2 eqtr4i eqeq2i ) FDEHZIFGJZURKZCJZUSFLZMZNZGCOZMFAJZ
      DKBJZEKNZVAVFVGFPZMZNZABCQZMGCURFRVEVLFVEUSVFVGUAZMZVKNZBSASZGCOVLVDVPGCV
      DVNVHNZBSASZVCNVQVCNZBSASVPUTVRVCABUSDEUBUCVQVCABUDVSVOABVSVNVHVCNZNVOVNV
      HVCUEVNVTVKVNVCVJVHVNVBVIVAVNVBVMFLVIUSVMFUMVFVGFUFUGUHUIUJTUNUKULVKABCGU
      OUPUQT $.
      $( [7-Feb-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z F $.
    $( Representation of an operation class abstraction in terms of its
       values. $)
    foprv $p |- ( F : ( A X. B ) --> C <-> ( F = { <. <. x , y >. , z >. |
                  ( ( x e. A /\ y e. B ) /\ z = ( x F y ) ) }
                /\ A. x e. A A. y e. B ( x F y ) e. C ) ) $=
      ( cxp wf wfn cv co wcel wral wa wceq copab2 ffnoprv fnoprv anbi1i bitri )
      DEHZFGIGUBJZAKZBKZGLZFMBENADNZOGUDDMUEEMOCKUFPOABCQPZUGOABDEFGRUCUHUGABCD
      EGSTUA $.
      $( [7-Feb-2004] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d ph x y z $.
    oprabexd.1 $e |- ( ph -> A e. _V ) $.
    oprabexd.2 $e |- ( ph -> B e. _V ) $.
    oprabexd.3 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> E* z ps ) $.
    oprabexd.4 $e |- ( ph -> F = { <. <. x , y >. , z >. |
                                        ( ( x e. A /\ y e. B ) /\ ps ) } ) $.
    $( Existence of an operator abstraction.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    oprabexd $p |- ( ph -> F e. _V ) $=
      ( cv wcel wa copab2 cvv wmo wal syl11anc wfun cdm wi ex moanimv 19.21aivv
      sylibr funoprabg syl cxp wss dmoprabss xpexg ssexg sylancr funex eqeltrd
      ) AHCMFNDMGNOZBOZCDEPZQLAUTUAZUTUBZQNZUTQNAUSERZDSCSVAAVDCDAURBERZUCVDAUR
      VEKUDURBEUEUGUFUSCDEUHUIAVBFGUJZUKVFQNZVCBCDEFGULAFQNGQNVGIJFGQQUMTVBVFQU
      NUOQUTUPTUQ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    oprabex.1 $e |- A e. _V $.
    oprabex.2 $e |- B e. _V $.
    oprabex.3 $e |- ( ( x e. A /\ y e. B ) -> E* z ph ) $.
    oprabex.4 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ ph ) } $.
    $( Existence of an operation class abstraction. $)
    oprabex $p |- F e. _V $=
      ( cv wcel wa copab2 cvv wfun cdm wmo wi mpbir funoprab cxp xpex dmoprabss
      moanimv ssexi funex mp2an eqeltri ) GBLEMCLFMNZANZBCDOZPKUMQUMRZPMUMPMULB
      CDULDSUKADSTJUKADUFUAUBUNEFUCEFHIUDABCDEFUEUGPUMUHUIUJ $.
      $( [19-Oct-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    oprabex2g.1 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Existence of an operation class abstraction (special case). $)
    oprabex2g $p |- ( ( A e. R /\ B e. S ) -> F e. _V ) $=
      ( wcel wa cv wceq copab2 cvv wfun cdm moeq sylancr moani funoprab cxp wss
      dmoprabss xpexg ssexg funex syl5eqel ) DGKEHKLZIAMDKBMEKLZCMFNZLZABCOZPJU
      JUNQUNRZPKZUNPKUMABCULUKCCFSUAUBUJUODEUCZUDUQPKUPULABCDEUEDEGHUFUOUQPUGTP
      UNUHTUI $.
      $( [27-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    oprabex2.1 $e |- A e. _V $.
    oprabex2.2 $e |- B e. _V $.
    oprabex2.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Existence of an operation class abstraction (special case). $)
    oprabex2 $p |- F e. _V $=
      ( cvv wcel oprabex2g mp2an ) DKLEKLGKLHIABCDEFKKGJMN $.
      $( [11-Nov-1995] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d x y z w v u f C $.
    $d x y z w v u f D $.  $d x y z w v u f H $.  $d x y z R $.
    $d x y z w v u f S $.
    oprabex3.1 $e |- H e. _V $.
    oprabex3.2 $e |- F = { <. <. x , y >. , z >. | ( ( x e. ( H X. H ) /\
                      y e. ( H X. H ) ) /\
                      E. w E. v E. u E. f ( ( x = <. w , v >. /\
                      y = <. u , f >. ) /\ z = R ) ) } $.
    $( Existence of an operation class abstraction (special case). $)
    oprabex3 $p |- F e. _V $=
      ( cv cop wceq wa wex wmo wcel mosubop cxp xpex anass 2exbii 19.42vv bitri
      moeq mobii mpbir a1i oprabex ) AMZDMEMNOZBMZFMHMNOZPCMGOZPZHQFQZEQDQZABCJ
      JUAZUTIJJKKUBZVAUSCRZULUTSUNUTSPVBUMUOUPPZHQFQZPZEQDQZCRVDCDEULUPCFHUNCGU
      GTTUSVFCURVEDEURUMVCPZHQFQVEUQVGFHUMUOUPUCUDUMVCFHUEUFUDUHUIUJLUK $.
      $( [19-Oct-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x y z th $.
    oprabval.1 $e |- C e. _V $.
    oprabval.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabval.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabval.4 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabval.5 $e |- ( ( x e. R /\ y e. S ) -> E! z ph ) $.
    oprabval.6 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation class abstraction.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    oprabval $p |- ( ( A e. R /\ B e. S ) -> ( ( A F B ) = C <-> th ) ) $=
      ( wcel wa co wceq cop copab2 cfv df-opr fveq1i eqtri eqeq1i copab fnoprab
      cv wfn wb eleq1 anbi1d anbi2d opelopabg ibir fnopfvb sylancr cvv eloprabg
      anbi12d mp3an3 bitrd syl5bb bianabs ) HKTZILTZUAZHIMUBZJUCZDVNHIUDZEUMZKT
      ZFUMZLTZUAZAUAZEFGUEZUFZJUCZVLVLDUAZVMWCJVMVOMUFWCHIMUGVOMWBSUHUIUJVLWDVO
      JUDWBTZWEVLWBVTEFUKZUNVOWGTZWDWFUOVTAEFGRULVLWHVTVJVSUAZVLEFHIKLVPHUCZVQV
      JVSVPHKUPUQZVRIUCZVSVKVJVRILUPURZUSUTWGVOJWBNVAVBVJVKJVCTWFWEUONWAWIBUAVL
      CUAWEEFGHIJKLVCWJVTWIABWKOVEWLWIVLBCWMPVEGUMJUCCDVLQURVDVFVGVHVI $.
      $( [24-Jul-2012] $) $( [16-May-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    oprabvaligg.1 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    oprabvaligg.4 $e |- E* z ph $.
    oprabvaligg.5 $e |- F = { <. <. x , y >. , z >. | ph } $.
    $( The value of an operation class abstraction.  Compare ~ oprabvalig .
       The condition ` ( x e. R /\ y e. S ) ` is been removed.  (Contributed by
       FL, 24-Mar-2007.) $)
    oprabvaligg $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
                         ( ps -> ( A F B ) = C ) ) $=
      ( wcel w3a cop cfv wceq copab2 co eloprabga wi funoprab funopfvg 3ad2ant3
      wfun mpan2 sylbird df-opr fveq1i eqtri eqeq1i syl6ibr ) FJPZGKPZHLPZQZBFG
      RZACDEUAZSZHTZFGIUBZHTUSBUTHRVAPZVCABCDEFGHJKLMUCURUPVEVCUDZUQURVAUHVFACD
      ENUEUTHLVAUFUIUGUJVDVBHVDUTISVBFGIUKUTIVAOULUMUNUO $.
      $( [19-Dec-2013] $) $( [24-Mar-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x y z ps $.
    oprabvalig.1 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    oprabvalig.2 $e |- ( ( x e. R /\ y e. S ) -> E* z ph ) $.
    oprabvalig.3 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation class abstraction (weak version).
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.)  (Revised by Mario Carneiro, 19-Dec-2013.) $)
    oprabvalig $p |- ( ( A e. R /\ B e. S /\ C e. D ) ->
                         ( ps -> ( A F B ) = C ) ) $=
      ( wcel w3a wa wceq cv co 3simpa wb eleq1 bi2anan9 3adant3 anbi12d moanimv
      wmo wi mpbir oprabvaligg mpand ) FJPZGKPZHIPZQUNUORZBFGLUAHSUNUOUPUBCTZJP
      ZDTZKPZRZARZUQBRCDEFGHLJKIURFSZUTGSZETHSZQVBUQABVDVEVBUQUCVFVDUSUNVEVAUOU
      RFJUDUTGKUDUEUFMUGVCEUIVBAEUIUJNVBAEUHUKOULUM $.
      $( [19-Dec-2013] $) $( [14-Sep-1999] $)
  $}

  ${
    $d t u v w A $.  $d t u v w B $.  $d t u v x y z C $.  $d t u v x y z D $.
    $d w G $.  $d t u v w z R $.  $d t u v w S $.  $d x y w $.
    oprabval2gf.a $e |- ( w e. A -> A. x w e. A ) $.
    oprabval2gf.c $e |- ( w e. A -> A. y w e. A ) $.
    oprabval2gf.cz $e |- ( w e. A -> A. z w e. A ) $.
    oprabval2gf.d $e |- ( w e. B -> A. y w e. B ) $.
    oprabval2gf.dz $e |- ( w e. B -> A. z w e. B ) $.
    oprabval2gf.1 $e |- ( w e. G -> A. x w e. G ) $.
    oprabval2gf.2 $e |- ( w e. S -> A. y w e. S ) $.
    oprabval2gf.3 $e |- ( x = A -> R = G ) $.
    oprabval2gf.4 $e |- ( y = B -> G = S ) $.
    oprabval2gf.5 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  A version of ~ oprabval2g
       using bound-variable hypotheses. $)
    oprabval2gf $p |- ( ( A e. C /\ B e. D /\ S e. H ) -> ( A F B ) = S ) $=
      ( vt vu vv wcel w3a co cv wa csb wceq copab2 ax-17 eqeq1 anbi2d cbvoprab3
      cvv wal visset hbcsb1 hbcsbg ax-mp hbeq hban eleq1 anbi1d csbeq1a anbi12d
      eqeq2d sylan9bb cbvoprab12 3eqtri opreqi eqid simp3 hblem csbhypf csbeq2d
      hbeleq mpan2 sylan9eq 3adant3 eqeq12d wmo moeq a1i oprabvalig mpi syl5eq
      wi ) EGUGFHUGJMUGUHZEFKUIEFUDUJZGUGZUEUJZHUGZUKZUFUJZBWPAWNIULZULZUMZUKZU
      DUEUFUNZUIZJKXDEFKAUJZGUGZBUJZHUGZUKZCUJZIUMZUKZABCUNXJWSIUMZUKZABUFUNXDU
      CXMXOABCUFXMUFUOXOCUOXKWSUMXLXNXJXKWSIUPUQURXOXCABUFUDUEXOUDUOXOUEUOWRXBA
      WRAUOADDWSXADUJZWSUGZAUOWPUSUGZXPXAUGZXSAUTWLUEVAZABDWPWTUSXPWPUGZAUOADWN
      IUDVAXPWNUGAUOVBVCVDVEVFWRXBBWRBUOBDDWSXAXQBUOBDWPWTXTYABUOVBVEVFXFWNUMZX
      OWOXIUKZWSWTUMZUKXHWPUMZXCYBXJYCXNYDYBXGWOXIXFWNGVGVHYBIWTWSAWNIVIVKVJYEY
      CWRYDXBYEXIWQWOXHWPHVGUQYEWTXAWSBWPWTVIVKVJVLVMVNVOWMJJUMZXEJUMJVPXBYFUDU
      EUFEFJMGHXDWNEUMZWPFUMZWSJUMZUHWSJXAJYGYHYIVQYGYHXAJUMYIYGYHXABWPLULZJYGX
      RXAYJUMXTYGBWPWTLUSBUDEBDUDEOVRWAAUDDEILNSUAVSVTWBBUEDFLJQTUBVSWCWDWEXBUF
      WFWRUFXAWGWHXDVPWIWJWK $.
      $( [19-Dec-2013] $) $( [17-Aug-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.  $d z R $.
    $d x y z S $.
    oprabval2ag.1 $e |- ( ( x = A /\ y = B ) -> R = S ) $.
    oprabval2ag.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  Special case.
       (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    oprabval2ag $p |- ( ( A e. C /\ B e. D /\ S e. H ) -> ( A F B ) = S ) $=
      ( wcel w3a wceq co eqid cv simp3 3adant3 eqeq12d wmo moeq a1i oprabvalig
      wa mpi ) DFNEGNIKNOIIPZDEJQIPIRCSZHPZUIABCDEIKFGJASZDPZBSZEPZUJIPZOUJIHIU
      MUOUPTUMUOHIPUPLUAUBUKCUCULFNUNGNUGCHUDUEMUFUH $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d w x y z A $.  $d w y z B $.  $d x y z C $.  $d x y z D $.  $d x w G $.
    $d w z R $.  $d w y S $.
    oprabval2g.1 $e |- ( x = A -> R = G ) $.
    oprabval2g.2 $e |- ( y = B -> G = S ) $.
    oprabval2g.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  Special case.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabval2g $p |- ( ( A e. C /\ B e. D /\ S e. H ) -> ( A F B ) = S ) $=
      ( vw cv wcel ax-17 oprabval2gf ) ABCPDEFGHIJKLPQZDRZASUBBSUBCSUAERZBSUCCS
      UAKRASUAIRBSMNOT $.
      $( [19-Dec-2013] $) $( [14-Sep-1999] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x y z C $.  $d x y z D $.  $d x G $.
    $d z R $.  $d y z S $.
    oprabval2.1 $e |- S e. _V $.
    oprabval2.2 $e |- ( x = A -> R = G ) $.
    oprabval2.3 $e |- ( y = B -> G = S ) $.
    oprabval2.4 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  Special case.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabval2 $p |- ( ( A e. C /\ B e. D ) -> ( A F B ) = S ) $=
      ( wcel cvv co wceq oprabval2g mp3an3 ) DFPEGPIQPDEJRISLABCDEFGHIJKQMNOTUA
      $.
      $( [24-Jul-2012] $) $( [16-May-1995] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x G $.  $d z R $.  $d y z S $.
    oprabval5.1 $e |- S e. _V $.
    oprabval5.2 $e |- ( x = A -> R = G ) $.
    oprabval5.3 $e |- ( y = B -> G = S ) $.
    oprabval5.4 $e |- F = { <. <. x , y >. , z >. | z = R } $.
    $( The value of an operation class abstraction.  Special case.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabval5 $p |- ( ( A e. C /\ B e. D ) -> ( A F B ) = S ) $=
      ( wcel cvv wceq elisset cv co copab2 wa biantrur oprabbii eqtri oprabval2
      visset pm3.2i syl2an ) DFPDQPEQPDEJUAIREGPDFSEGSABCDEQQHIJKLMNJCTHRZABCUB
      ATQPZBTQPZUCZUKUCZABCUBOUKUOABCUNUKULUMAUHBUHUIUDUEUFUGUJ $.
      $( [24-Jul-2012] $) $( [19-Jul-2005] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d x y z w v u f C $.
    $d x y z w v u f D $.  $d x y z w v u f H $.  $d x y z R $.
    $d x y z w v u f S $.
    oprabval3.1 $e |- S e. _V $.
    oprabval3.2 $e |- ( ( ( w = A /\ v = B ) /\ ( u = C /\ f = D ) ) ->
         R = S ) $.
    oprabval3.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. ( H X. H ) /\
                      y e. ( H X. H ) ) /\
                      E. w E. v E. u E. f ( ( x = <. w , v >. /\
                      y = <. u , f >. ) /\ z = R ) ) } $.
    $( The value of an operation class abstraction.  Special case. $)
    oprabval3 $p |- ( ( ( A e. H /\ B e. H ) /\ ( C e. H /\ D e. H ) ) ->
        ( <. A , B >. F <. C , D >. ) = S ) $=
      ( wa wceq wcel cop cxp cv wex opelxpi anim12i eqid eqeq2d copsex4g mpbiri
      co cvv wi w3a eqeq1 bi2anan9 3impa 4exbidv wmo moeq mosubop anass 19.42vv
      wb 2exbii bitri mobii mpbir a1i oprabvalig mp3an3 sylc ) GOUAHOUASZIOUAJO
      UASZSZGHUBZOOUCZUAZIJUBZVRUAZSVQDUDZEUDZUBZTZVTFUDZMUDZUBZTZSZLKTZSZMUEFU
      EEUEDUEZVQVTNULLTZVNVSVOWAGHOOUFIJOOUFUGVPWMLLTZLUHWKWODEFMGHIJOOWBGTWCHT
      SWFITWGJTSSKLLQUIUJUKVSWALUMUAWMWNUNPAUDZWDTZBUDZWHTZSZCUDZKTZSZMUEFUEZEU
      EDUEZWMABCVQVTLUMVRVRNWPVQTZWRVTTZXALTZUOXCWLDEFMXFXGXHXCWLVEXFXGSWTWJXHX
      BWKXFWQWEXGWSWIWPVQWDUPWRVTWHUPUQXALKUPUQURUSXECUTZWPVRUAWRVRUASXIWQWSXBS
      ZMUEFUEZSZEUEDUEZCUTXKCDEWPXBCFMWRCKVAVBVBXEXMCXDXLDEXDWQXJSZMUEFUEXLXCXN
      FMWQWSXBVCVFWQXJFMVDVGVFVHVIVJRVKVLVM $.
      $( [19-Dec-2013] $) $( [28-May-1995] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d z w v u f C $.
    $d w v D $.
    oprabval4g.1 $e |- F =
          { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ z = C ) } $.
    $( Value of an operation given by an ordered-pair class abstraction.  (This
       is the operation analog of ~ fvopab2 .) $)
    oprabval4g $p |- ( ( x e. A /\ y e. B /\ C e. D ) -> ( x F y ) = C ) $=
      ( vw vv vf vu wcel cv cvv wceq wa ax-17 hbab elisset wsbc cab sbab eqcomd
      co equcoms copab2 hbs1 hbeleq hban eleq1 bi2anan9 sylan9eq eqeq2d anbi12d
      hbsb cbvoprab12 eqtr4i oprabval2g syl3an3 ) FGNAOZDNZBOZENZFPNVBVDHUFFQFG
      UAJKCVBVDDELOMOFNZBKOZUBZMUCZNZAJOZUBZLUCZFHVIPVMVIQAJVBVKQVIVMAJLVIUDUEU
      GZVIFQBKVDVGQFVIBKMFUDUEUGZHVCVERZCOZFQZRZABCUHVKDNZVGENZRZVQVMQZRZJKCUHI
      WDVSJKCABWBWCAWBASACVMVLALCVJAJUITUJUKWBWCBWBBSBCVMVLBLCVJAJBVHBMLVFBKUIT
      UQTUJUKVSJSVSKSVKVBQZVGVDQZRZWBVPWCVRWEVTVCWFWAVEVKVBDULVGVDEULUMWGVMFVQW
      EWFVMVIFVNVOUNUOUPURUSUTVA $.
      $( [21-Feb-2004] $)

    $( MAY BE REVISED - this proof eliminates sbab with csb* stuff, but
       the proof ends up longer. $)
    $( Value of an operation given by an ordered-pair class abstraction.  (This
       is the operation analog of ~ fvopab2 .) $)
    oprabval4gALT $p |- ( ( x e. A /\ y e. B /\ C e. D ) -> ( x F y ) = C ) $=
      ( vw vv wcel cv cvv wceq csb csbeq1a eqcomd wa ax-17 copab2 visset hbcsb1
      co elisset equcoms hbeleq wal hbcsbg ax-mp eleq1 bi2anan9 sylan9eq eqeq2d
      hban wi anbi12d cbvoprab12 eqtr4i oprabval2g syl3an3 ) FGLAMZDLZBMZELZFNL
      VBVDHUDFOFGUEJKCVBVDDEAJMZBKMZFPZPZFHVHNVIVHOAJVBVFOVHVIAVFVHQRUFZVHFOBKV
      DVGOFVHBVGFQRUFZHVCVESZCMZFOZSZABCUAVFDLZVGELZSZVMVIOZSZJKCUAIVTVOJKCABVR
      VSAVRATACVIACVFVHJUBZVMVFLZATUCUGUOVRVSBVRBTBCVIVFNLVMVILZWCBUHUPWABACVFV
      HNWBBTBCVGFKUBVMVGLBTUCUIUJUGUOVOJTVOKTVFVBOZVGVDOZSZVRVLVSVNWDVPVCWEVQVE
      VFVBDUKVGVDEUKULWFVIFVMWDWEVIVHFVJVKUMUNUQURUSUTVA $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z C $.  $d w z R $.
    $d w x y z S $.
    oprabval6g.1 $e |- ( <. x , y >. = <. A , B >. -> R = S ) $.
    oprabval6g.2 $e |- F = { <. <. x , y >. , z >. | ( <. x , y >. e. C
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  Special case. $)
    oprabval6g $p |- ( ( ( A e. G /\ B e. H /\ <. A , B >. e. C ) /\ S e. J )
                     -> ( A F B ) = S ) $=
      ( vw wcel wa cv wceq wex cop w3a co cfv df-opr eqid biidd copsex2g mpbiri
      3adant3 adantr wi eqeq1 anbi1d wb eqeq2d eqcoms pm5.32i syl6bb anbi2d wmo
      2exbidv moeq mosubop a1i copab2 copab dfoprab2 an12 bitr3i 2exbii 19.42vv
      eleq1 bitri opabbii 3eqtri fvopab3ig 3ad2antl3 mpd syl5eq ) DJPZEKPZDEUAZ
      FPZUBZHLPZQZDEIUCWCIUDZHDEIUEWGWCARZBRZUAZSZHHSZQZBTATZWHHSZWEWOWFWAWBWOW
      DWAWBQWOWMHUFWMWMABDEJKWIDSWJESQWMUGUHUIUJUKWDWAWFWOWPULWBORZWKSZCRZGSZQZ
      BTATZWLWSHSZQZBTATWOOCWCHFLIWQWCSZXAXDABXEXAWLWTQXDXEWRWLWTWQWCWKUMUNWLWT
      XCWTXCUOWKWCWKWCSGHWSMUPUQURUSVBXCXDWNABXCXCWMWLWSHHUMUTVBXBCVAWQFPZWTCAB
      WQCGVCVDVEIWKFPZWTQZABCVFWRXHQZBTATZOCVGXFXBQZOCVGNXHABCOVHXJXKOCXJXFXAQZ
      BTATXKXIXLABXIWRXFWTQZQXLWRXMXHWRXFXGWTWQWKFVMUNURWRXFWTVIVJVKXFXAABVLVNV
      OVPVQVRVSVT $.
      $( [13-Nov-2006] $)
  $}

  $( The value of a restricted operation.  (Contributed by FL, 10-Nov-2006.) $)
  oprvres $p |- ( ( A e. C /\ B e. D ) -> ( A ( F |` ( C X. D ) ) B )
    = ( A F B ) ) $=
    ( wcel wa cop cxp cres cfv co wceq opelxpi fvres syl df-opr 3eqtr4g ) ACFBD
    FGZABHZECDIZJZKZTEKZABUBLABELSTUAFUCUDMABCDNTUAEOPABUBQABEQR $.
    $( [3-Nov-2006] $)

  $( The value of a member of the domain of a subclass of an operation. $)
  oprssoprv $p |- ( ( ( Fun F /\ G Fn ( C X. D ) /\ G C_ F ) /\
        ( A e. C /\ B e. D ) ) -> ( A F B ) = ( A G B ) ) $=
    ( wfun cxp wfn wss w3a wcel wa cres co wceq oprvres adantl cdm eqtr3d fndm
    reseq2d 3ad2ant2 funssres 3adant2 opreqd adantr ) EGZFCDHZIZFEJZKZACLBDLMZM
    ABEUINZOZABEOZABFOZUMUOUPPULABCDEQRULUOUQPUMULUNFABULEFSZNZUNFUJUHUSUNPUKUJ
    URUIEUIFUAUBUCUHUKUSFPUJEFUDUETUFUGT $.
    $( [23-Aug-2007] $)

  $( A operations's value belongs to its codomain. $)
  foprrn $p |- ( ( F : ( R X. S ) --> C /\ A e. R /\ B e. S ) ->
               ( A F B ) e. C ) $=
    ( cxp wf wcel co wa cop opelxpi cfv df-opr ffvelrn syl5eqel sylan2 3impb )
    DEGZCFHZADIZBEIZABFJZCIZUBUCKUAABLZTIZUEABDEMUAUGKUDUFFNCABFOTCUFFPQRS $.
    $( [27-Aug-2006] $)

  ${
    $d w x y z A $.  $d w x y z B $.  $d w z C $.  $d w x y z F $.
    $( The range of an operation expressed as a collection of the operation's
       values. $)
    fnrnoprv $p |- ( F Fn ( A X. B ) -> ran F = { z | E. x e. A E. y e. B
                     z = ( x F y ) } ) $=
      ( vw cxp wfn crn cv cfv wceq wrex cab co fnrnfv cop fveq2 df-opr syl6eqr
      eqeq2d rexxp abbii syl6eq ) FDEHZIFJCKZGKZFLZMZGUFNZCOUGAKZBKZFPZMZBENADN
      ZCOGCUFFQUKUPCUJUOGABDEUHULUMRZMZUIUNUGURUIUQFLUNUHUQFSULUMFTUAUBUCUDUE
      $.
      $( [29-Oct-2006] $)

    $( An onto mapping of an operation expressed in terms of operation
       values. $)
    fooprv $p |- ( F : ( A X. B ) -onto-> C <-> ( F : ( A X. B ) --> C /\
                  A. z e. C E. x e. A E. y e. B z = ( x F y ) ) ) $=
      ( vw cxp wfo wf cv cfv wceq wrex wral wa co dffo3 cop fveq2 df-opr eqeq2d
      syl6eqr rexxp ralbii anbi2i bitri ) DEIZFGJUIFGKZCLZHLZGMZNZHUIOZCFPZQUJU
      KALZBLZGRZNZBEOADOZCFPZQHCUIFGSUPVBUJUOVACFUNUTHABDEULUQURTZNZUMUSUKVDUMV
      CGMUSULVCGUAUQURGUBUDUCUEUFUGUH $.
      $( [29-Oct-2006] $)
  $}

  $( An operation's value belongs to its range. $)
  fnoprvrn $p |- ( ( F Fn ( A X. B ) /\ C e. A /\ D e. B ) ->
                   ( C F D ) e. ran F ) $=
    ( cxp wfn wcel co crn cop opelxpi cfv df-opr fnfvelrn syl5eqel sylan2 3impb
    wa ) EABFZGZCAHZDBHZCDEIZEJZHZUBUCSUACDKZTHZUFCDABLUAUHSUDUGEMUECDENTUGEOPQ
    R $.
    $( [10-Feb-2007] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.  $d x y z F $.
    $( A member of an operation's range is a value of the operation. $)
    oprvelrn $p |- ( F Fn ( A X. B ) -> ( C e. ran F <->
                  E. x e. A E. y e. B ( x F y ) = C ) ) $=
      ( vz cxp wfn crn wcel cv co wceq wrex cab fnrnoprv cvv r19.23aivw syl6bb
      eleq2d oprex eleq1 mpbii eqeq1 eqcom 2rexbidv elab3 ) FCDHIZEFJZKEGLZALZB
      LZFMZNZBDOACOZGPZKUNENZBDOZACOZUIUJUQEABGCDFQUAUPUTGEUSERKZACURVABDURUNRK
      VAULUMFUBUNERUCUDSSUKENZUOURABCDVBUOEUNNURUKEUNUEEUNUFTUGUHT $.
      $( [7-Feb-2007] $)

    $( Membership relation for the values of a function whose image is a
       subclass.  (Contributed by Mario Carneiro, 23-Dec-2013.) $)
    funimass4b $p |- ( ( Fun F /\ ( A X. B ) C_ dom F ) ->
        ( ( F " ( A X. B ) ) C_ C <-> A. x e. A A. y e. B ( x F y ) e. C ) ) $=
      ( vz wfun cxp cdm wss wa cima cv cfv wcel wral co funimass4 cop syl6eqr
      wceq fveq2 df-opr eleq1d ralxp syl6bb ) FHCDIZFJKLFUHMEKGNZFOZEPZGUHQANZB
      NZFRZEPZBDQACQGUHEFSUKUOGABCDUIULUMTZUBZUJUNEUQUJUPFOUNUIUPFUCULUMFUDUAUE
      UFUG $.
      $( [23-Dec-2013] $)

    $( Operation value in an image.  (Contributed by Mario Carneiro,
       23-Dec-2013.) $)
    oprelimab $p |- ( ( F Fn A /\ ( B X. C ) C_ A ) ->
        ( D e. ( F " ( B X. C ) ) <-> E. x e. B E. y e. C ( x F y ) = D ) ) $=
      ( vz wfn cxp wss wa cima wcel cv cfv wceq wrex co fvelimab df-opr syl6eqr
      cop fveq2 eqeq1d rexxp syl6bb ) GCIDEJZCKLFGUHMNHOZGPZFQZHUHRAOZBOZGSZFQZ
      BERADRHCUHFGTUKUOHABDEUIULUMUCZQZUJUNFUQUJUPGPUNUIUPGUDULUMGUAUBUEUFUG $.
      $( [23-Dec-2013] $)
  $}

  ${
    oprvalconst2.1 $e |- C e. _V $.
    $( The value of a constant operation. $)
    oprvconst2 $p |- ( ( R e. A /\ S e. B ) ->
                       ( R ( ( A X. B ) X. { C } ) S ) = C ) $=
      ( wcel wa cxp csn co cop cfv df-opr wceq opelxpi fvconst2 syl syl5eq ) DA
      GEBGHZDEABIZCJIZKDELZUBMZCDEUBNTUCUAGUDCODEABPUACUCFQRS $.
      $( [5-Nov-2006] $)
  $}

  ${
    $d x z A $.  $d y z B $.  $d z C $.
    ab2rexex.1 $e |- A e. _V $.
    ab2rexex.2 $e |- B e. _V $.
    $( Existence of a class abstraction of existentially restricted sets.
       Variables ` x ` and ` y ` are normally free-variable parameters in the
       class expression substituted for ` C ` , which can be thought of as
       ` C ( x , y ) ` .  See comments for ~ abrexex . $)
    ab2rexex $p |- { z | E. x e. A E. y e. B z = C } e. _V $=
      ( cv wceq wrex abrexex abrexex2 ) CIFJBEKACDGBCEFHLM $.
      $( [20-Sep-2011] $)
  $}

  ${
    $d x z A $.  $d y z B $.
    ab2rexex2.1 $e |- A e. _V $.
    ab2rexex2.2 $e |- B e. _V $.
    ab2rexex2.3 $e |- { z | ph } e. _V $.
    $( Existence of an existentially restricted class abstraction. ` ph ` is
       normally has free-variable parameters ` x ` , ` y ` , and ` z ` .
       Compare ~ abrexex2 . $)
    ab2rexex2 $p |- { z | E. x e. A E. y e. B ph } e. _V $=
      ( wrex abrexex2 ) ACFJBDEGACDFHIKK $.
      $( [20-Sep-2011] $)
  $}

  ${
    $d z F $.  $d x z A $.  $d y z B $.
    oprvalex.1 $e |- A e. _V $.
    oprvalex.2 $e |- B e. _V $.
    $( Existence of a class of operation values. $)
    oprvexOLD $p |- { z | E. x e. A E. y e. B z = ( x F y ) } e. _V $=
      ( cv co ab2rexex ) ABCDEAIBIFJGHK $.
      $( [15-Nov-1995] $)
  $}

  ${
    $d x y S $.  $d x y F $.
    oprssdm.1 $e |- -. (/) e. S $.
    oprssdm.2 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
    $( Domain of closure of an operation. $)
    oprssdm $p |- ( S X. S ) C_ dom F $=
      ( cxp cdm relxp cv cop wcel wa visset opelxp wn cfv c0 wceq ndmfv co nsyl
      df-opr eqeq1i eleq1 mtbiri sylbir syl con4i sylbi relssi ) ABCCGZDHZCCIAJ
      ZBJZKZULLUNCLUOCLMZUPUMLZUNUOCCBNOURUQURPUPDQZRSZUQPZUPDTUTUNUODUAZRSZVAV
      BUSRUNUODUCUDVCVBCLZUQVCVDRCLEVBRCUEUFFUBUGUHUIUJUK $.
      $( [24-Aug-1995] $)
  $}

  $( The value of an operation outside its domain. $)
  ndmoprg $p |- ( ( dom F = ( R X. S ) /\ B e. C /\ -. ( A e. R /\ B e. S ) )
              -> ( A F B ) = (/) ) $=
    ( cdm cxp wceq wcel wa wn co c0 cop eleq2 opelxpg sylan9bb notbid cfv ndmfv
    df-opr syl5eq syl6bir 3impia ) FGZDEHZIZBCJZADJBEJKZLZABFMZNIZUHUIKZUKABOZU
    FJZLZUMUNUPUJUHUPUOUGJUIUJUFUGUOPABDECQRSUQULUOFTNABFUBUOFUAUCUDUE $.
    $( [28-Mar-2008] $)

  ${
    $d x A $.  $d x B $.  $d x F $.  $d x S $.
    ndmoprcl.1 $e |- dom F = ( S X. S ) $.
    ndmoprcl.2 $e |- ( ( A e. S /\ x e. S ) -> ( A F x ) e. S ) $.
    ndmoprcl.3 $e |- (/) e. S $.
    $( The closure of an operation outside its domain, when the domain includes
       the empty set.  This technical lemma can make the operation more
       convenient to work in some cases.  It is is dependent on our particular
       definitions of operation value, function value, and ordered pair. $)
    ndmoprcl $p |- ( A F B ) e. S $=
      ( cvv wcel co wn wa c0 wceq ndmoprg syl6eqel wi eleq1d pm2.61d2 mp3an1 ex
      cdm cxp cv opreq2 imbi2d expcom vtoclga imp oprprc2 syl5ibrcom wrel relxp
      impcom releqi mpbir oprprc1 pm2.61i ) BIJZBCEKZDJZUTCIJZVBUTVBVCLZBBEKZDJ
      ZUTBDJZVGMZVFUTVHLZVFUTVIMVENDEUCZDDUDZOZUTVIVENOFBBIDDEPUAHQUBVGVGVFVGBA
      UEZEKZDJZRZVGVFRABDVMBOZVOVFVGVQVNVEDVMBBEUFSUGVGVMDJVOGUHZUIUJTVDVAVEDBC
      EUKSULVCVGCDJZMZVBVCVTLZVBVCWAMVANDVLVCWAVANOFBCIDDEPUAHQUBVSVGVBVPVGVBRA
      CDVMCOZVOVBVGWBVNVADVMCBEUFSUGVRUIUOTTUTLVANDBCEVJUMVKUMDDUNVJVKFUPUQURHQ
      US $.
      $( [24-Sep-2004] $)
  $}

  ${
    ndmopr.1 $e |- B e. _V $.
    ndmopr.2 $e |- dom F = ( S X. S ) $.
    $( The value of an operation outside its domain. $)
    ndmopr $p |- ( -. ( A e. S /\ B e. S ) -> ( A F B ) = (/) ) $=
      ( cdm cxp wceq cvv wcel wa wn co c0 ndmoprg mp3an12 ) DGCCHIBJKACKBCKLMAB
      DNOIFEABJCCDPQ $.
      $( [24-Aug-1995] $)

    ${
      ndmoprrcl.3 $e |- -. (/) e. S $.
      $( Reverse closure law, when an operation's domain doesn't contain the
         empty set. $)
      ndmoprrcl $p |- ( ( A F B ) e. S -> ( A e. S /\ B e. S ) ) $=
        ( wcel wa co wn c0 ndmopr eleq1d mtbiri con4i ) ACHBCHIZABDJZCHZQKZSLCH
        GTRLCABCDEFMNOP $.
        $( [3-Feb-1996] $)
    $}

    ${
      ndmopr.3 $e |- A e. _V $.
      $( Any operation is commutative outside its domain. $)
      ndmoprcom $p |- ( -. ( A e. S /\ B e. S ) -> ( A F B ) = ( B F A ) ) $=
        ( wcel wa wn co c0 ndmopr wceq ancom sylnbi eqtr4d ) ACHZBCHZIZJABDKLBA
        DKZABCDEFMTSRIUALNRSOBACDGFMPQ $.
        $( [24-Aug-1995] $)
    $}

    ${
      ndmopr.4 $e |- C e. _V $.
      ndmopr.5 $e |- -. (/) e. S $.
      $( Any operation is associative outside its domain, if the domain doesn't
         contain the empty set. $)
      ndmoprass $p |- ( -. ( A e. S /\ B e. S /\ C e. S ) ->
              ( ( A F B ) F C ) = ( A F ( B F C ) ) ) $=
        ( wcel wn co c0 wa wceq ndmoprrcl sylibr con3i ndmopr syl anim1i df-3an
        w3a anim2i 3anass oprex eqtr4d ) ADJZBDJZCDJZUCZKZABELZCELZMABCELZELZUL
        UMDJZUJNZKUNMOURUKURUHUINZUJNUKUQUSUJABDEFGIPUAUHUIUJUBQRUMCDEHGSTULUHU
        ODJZNZKUPMOVAUKVAUHUIUJNZNUKUTVBUHBCDEHGIPUDUHUIUJUEQRAUODEBCEUFGSTUG
        $.
        $( [24-Aug-1995] $)

      ${
        ndmopr.6 $e |- dom G = ( S X. S ) $.
        $( Any operation is distributive outside its domain, if the domain
           doesn't contain the empty set. $)
        ndmoprdistr $p |- ( -. ( A e. S /\ B e. S /\ C e. S ) ->
            ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) ) $=
          ( wcel wn co c0 wa wceq ndmoprrcl sylibr con3i w3a anim2i syl anim12i
          3anass oprex ndmopr anandi bitri eqtr4d ) ADLZBDLZCDLZUAZMZABCENZFNZO
          ABFNZACFNZENZUOUKUPDLZPZMUQOQVBUNVBUKULUMPZPZUNVAVCUKBCDEIHJRUBUKULUM
          UEZSTAUPDFBCEUFKUGUCUOURDLZUSDLZPZMUTOQVHUNVHUKULPZUKUMPZPZUNVFVIVGVJ
          ABDFGKJRACDFIKJRUDUNVDVKVEUKULUMUHUISTURUSDEACFUFHUGUCUJ $.
          $( [24-Aug-1995] $)
      $}
    $}

    ${
      ndmord.3 $e |- A e. _V $.
      ndmord.4 $e |- R C_ ( S X. S ) $.
      ndmord.5 $e |- -. (/) e. S $.
      ndmord.6 $e |- ( ( A e. S /\ B e. S /\ C e. S ) ->
                     ( A R B <-> ( C F A ) R ( C F B ) ) ) $.
      $( Elimination of redundant antecedents in an ordering law. $)
      ndmord $p |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $=
        ( wcel wa wbr co wb brel ndmoprrcl simprd wi 3expia wn anim12i pm5.21ni
        oprex syl a1d pm2.61i ) AEMZBEMZNZCEMZABDOZCAFPZCBFPZDOZQZUAUJUKUMURLUB
        ULUCURUMUNULUQABEEDGJRUQUOEMZUPEMZNULUOUPEEDCBFUFJRUSUJUTUKUSUMUJCAEFIH
        KSTUTUMUKCBEFGHKSTUDUGUEUHUI $.
        $( [7-Mar-1996] $)
    $}
  $}

  ${
    ndmordi.3 $e |- A e. _V $.
    ndmordi.2 $e |- dom F = ( S X. S ) $.
    ndmordi.4 $e |- R C_ ( S X. S ) $.
    ndmordi.5 $e |- -. (/) e. S $.
    ndmordi.6 $e |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $.
    $( Elimination of redundant antecedent in an ordering law. $)
    ndmordi $p |- ( ( C F A ) R ( C F B ) -> A R B ) $=
      ( wcel co wbr oprex brel simpld ndmoprrcl syl biimprd mpcom ) CELZCAFMZCB
      FMZDNZABDNZUEUCELZUBUEUGUDELUCUDEEDCBFOIPQUGUBAELCAEFGHJRQSUBUFUEKTUA $.
      $( [25-Jun-1998] $)
  $}

  ${
    $d w z A $.  $d w B $.  $d w x y z F $.  $d w x y z S $.
    caoprcl.1 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
    $( Convert an operation closure law to class notation. $)
    caoprcl $p |- ( ( A e. S /\ B e. S ) -> ( A F B ) e. S ) $=
      ( vz vw cv co wcel wceq opreq1 eleq1d opreq2 vtocl2ga ) HJZIJZFKZELZCSFKZ
      ELCDFKZELHICDEERCMTUBERCSFNOSDMUBUCESDCFPOAJZBJZFKZELRUEFKZELUAABRSEEUDRM
      UFUGEUDRUEFNOUESMUGTEUESRFPOGQQ $.
      $( [4-Aug-1995] $)
  $}

  ${
    $( General laws for commutative, associative, distributive operations. $)
    $d x y z F $.  $d x y z S $.  $d x y z A $.  $d x y z B $.  $d x y z C $.
    $d x y z D $.  $d x y z G $.  $d x y z R $.
    ${
      caoprcomg.1 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) = ( y F x ) ) $.
      $( Convert an operation commutative law to class notation.  (Revised by
         Mario Carneiro, 1-Jun-2013.) $)
      caoprcomg $p |- ( ( A e. S /\ B e. S ) -> ( A F B ) = ( B F A ) ) $=
        ( cv co wceq opreq1 opreq2 eqeq12d vtocl2ga ) AHZBHZFIZPOFIZJCPFIZPCFIZ
        JCDFIZDCFIZJABCDEEOCJQSRTOCPFKOCPFLMPDJSUATUBPDCFLPDCFKMGN $.
        $( [1-Jun-2013] $)
    $}

    ${
      caoprcom.1 $e |- A e. _V $.
      caoprcom.2 $e |- B e. _V $.
      caoprcom.3 $e |- ( x F y ) = ( y F x ) $.
      $( Convert an operation commutative law to class notation.  (Revised by
         Mario Carneiro, 1-Jun-2013.) $)
      caoprcom $p |- ( A F B ) = ( B F A ) $=
        ( cvv wcel co wceq cv wa a1i caoprcomg mp2an ) CIJDIJCDEKDCEKLFGABCDIEA
        MZBMZEKSREKLRIJSIJNHOPQ $.
        $( [1-Jun-2013] $) $( [26-Aug-1995] $)
    $}

    ${
      caoprassg.1 $e |- ( ( x e. S /\ y e. S /\ z e. S ) ->
        ( ( x F y ) F z ) = ( x F ( y F z ) ) ) $.
      $( Convert an operation associative law to class notation.  (Revised by
         Mario Carneiro, 1-Jun-2013.) $)
      caoprassg $p |- ( ( A e. S /\ B e. S /\ C e. S ) ->
          ( ( A F B ) F C ) = ( A F ( B F C ) ) ) $=
        ( cv co wceq opreq1 opreq1d eqeq12d opreq2 opreq2d vtocl3ga ) AJZBJZHKZ
        CJZHKZSTUBHKZHKZLDTHKZUBHKZDUDHKZLDEHKZUBHKZDEUBHKZHKZLUIFHKZDEFHKZHKZL
        ABCDEFGGGSDLZUCUGUEUHUPUAUFUBHSDTHMNSDUDHMOTELZUGUJUHULUQUFUIUBHTEDHPNU
        QUDUKDHTEUBHMQOUBFLZUJUMULUOUBFUIHPURUKUNDHUBFEHPQOIR $.
        $( [1-Jun-2013] $)
    $}

    ${
      caoprass.1 $e |- A e. _V $.
      caoprass.2 $e |- B e. _V $.
      caoprass.3 $e |- C e. _V $.
      caoprass.4 $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      $( Convert an operation associative law to class notation.  (Revised by
         Mario Carneiro, 1-Jun-2013.) $)
      caoprass $p |- ( ( A F B ) F C ) = ( A F ( B F C ) ) $=
        ( cvv wcel co wceq cv w3a a1i caoprassg mp3an ) DLMELMFLMDEGNFGNDEFGNGN
        OHIJABCDEFLGAPZBPZGNCPZGNUAUBUCGNGNOUALMUBLMUCLMQKRST $.
        $( [1-Jun-2013] $) $( [26-Aug-1995] $)
    $}

    ${
      caoprcan.1 $e |- C e. _V $.
      caoprcan.2 $e |- ( ( x e. S /\ y e. S ) ->
                   ( ( x F y ) = ( x F z ) -> y = z ) ) $.
      $( Convert an operation cancellation law to class notation. $)
      caoprcan $p |- ( ( A e. S /\ B e. S ) ->
                   ( ( A F B ) = ( A F C ) -> B = C ) ) $=
        ( cv co wceq wi opreq1 eqeq12d imbi1d opreq2 imbi12d wcel eqeq1d eqeq2d
        eqeq1 wa eqeq2 imbi2d vtocl vtocl2ga ) AKZBKZHLZUIFHLZMZUJFMZNZDUJHLZDF
        HLZMZUNNDEHLZUQMZEFMZNABDEGGUIDMZUMURUNVBUKUPULUQUIDUJHOUIDFHOPQUJEMZUR
        UTUNVAVCUPUSUQUJEDHRUAUJEFUCSUIGTUJGTUDZUKUICKZHLZMZUJVEMZNZNVDUONCFIVE
        FMZVIUOVDVJVGUMVHUNVJVFULUKVEFUIHRUBVEFUJUESUFJUGUH $.
        $( [20-Aug-1995] $)
    $}

    ${
      caoprord.1 $e |- A e. _V $.
      caoprord.2 $e |- B e. _V $.
      caoprord.3 $e |- ( z e. S -> ( x R y <-> ( z F x ) R ( z F y ) ) ) $.
      $( Convert an operation ordering law to class notation. $)
      caoprord $p |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $=
        ( wbr cv co wb wceq opreq1 wi opreq2 breq12d bibi2d wcel breq1d bibi12d
        wa breq1 breq2 breq2d sylan9bb imbi2d vtocl2 vtoclga ) DEGMZCNZDIOZUOEI
        OZGMZPZUNFDIOZFEIOZGMZPCFHUOFQZURVBUNVCUPUTUQVAGUOFDIRUOFEIRUAUBUOHUCZA
        NZBNZGMZUOVEIOZUOVFIOZGMZPZSVDUSSABDEJKVEDQZVFEQZUFVKUSVDVLVKDVFGMZUPVI
        GMZPVMUSVLVGVNVJVOVEDVFGUGVLVHUPVIGVEDUOITUDUEVMVNUNVOURVFEDGUHVMVIUQUP
        GVFEUOITUIUEUJUKLULUM $.
        $( [19-Feb-1996] $)

      ${
        $( (We don't bother to eliminate this redundant hypothesis.) $)
        caoprord2.3 $e |- C e. _V $.
        caoprord2.com $e |- ( x F y ) = ( y F x ) $.
        $( Operation ordering law with commuted arguments. $)
        caoprord2 $p |- ( C e. S -> ( A R B <-> ( A F C ) R ( B F C ) ) ) $=
          ( wcel wbr co caoprord caoprcom breq12i syl6bb ) FHODEGPFDIQZFEIQZGPD
          FIQZEFIQZGPABCDEFGHIJKLRUBUDUCUEGABFDIMJNSABFEIMKNSTUA $.
          $( [27-Feb-1996] $)

        ${
          $( (We don't bother to eliminate redundant hypotheses.) $)
          caoprord3.4 $e |- D e. _V $.
          $( Ordering law. $)
          caoprord3 $p |- ( ( ( B e. S /\ C e. S ) /\
                    ( A F B ) = ( C F D ) ) -> ( A R C <-> D R B ) ) $=
            ( wcel wa co wbr wceq wb caoprord2 breq1 sylan9bb caoprord ad2antlr
            adantr bitr4d ) EIQZFIQZRZDEJSZFGJSZUAZRDFHTZUNFEJSZHTZGEHTZULUPUMU
            QHTZUOURUJUPUTUBUKABCDFEHIJKNMLOUCUHUMUNUQHUDUEUKUSURUBUJUOABCGEFHI
            JPLMUFUGUI $.
            $( [29-Feb-1996] $)
        $}
      $}
    $}

    ${
      caoprdistrg.1 $e |- ( ( x e. S /\ y e. S /\ z e. S ) ->
        ( x G ( y F z ) ) = ( ( x G y ) F ( x G z ) ) ) $.
      $( Convert an operation distributive law to class notation.  (Revised by
         Mario Carneiro, 28-Jun-2013.) $)
      caoprdistrg $p |- ( ( A e. S /\ B e. S /\ C e. S ) ->
        ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) ) $=
        ( cv co wceq opreq1 opreq12d eqeq12d opreq2d opreq2 opreq1d vtocl3ga )
        AKZBKZCKZHLZILZUAUBILZUAUCILZHLZMDUDILZDUBILZDUCILZHLZMDEUCHLZILZDEILZU
        KHLZMDEFHLZILZUODFILZHLZMABCDEFGGGUADMZUEUIUHULUADUDINVAUFUJUGUKHUADUBI
        NUADUCINOPUBEMZUIUNULUPVBUDUMDIUBEUCHNQVBUJUOUKHUBEDIRSPUCFMZUNURUPUTVC
        UMUQDIUCFEHRQVCUKUSUOHUCFDIRQPJT $.
        $( [28-Jun-2013] $) $( [25-Aug-1995] $)
    $}

    ${
      caoprdistr.1 $e |- A e. _V $.
      caoprdistr.2 $e |- B e. _V $.
      caoprdistr.3 $e |- C e. _V $.
      caoprdistr.4 $e |- ( x G ( y F z ) ) = ( ( x G y ) F ( x G z ) ) $.
      $( Convert an operation distributive law to class notation.  (Revised by
         Mario Carneiro, 28-Jun-2013.) $)
      caoprdistr $p |- ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) $=
        ( cvv wcel co wceq cv w3a a1i caoprdistrg mp3an ) DMNEMNFMNDEFGOHODEHOD
        FHOGOPIJKABCDEFMGHAQZBQZCQZGOHOUBUCHOUBUDHOGOPUBMNUCMNUDMNRLSTUA $.
        $( [28-Jun-2013] $) $( [25-Aug-1995] $)
    $}

    ${
      caopr.1 $e |- A e. _V $.
      caopr.2 $e |- B e. _V $.
      caopr.3 $e |- C e. _V $.
      caopr.com $e |- ( x F y ) = ( y F x ) $.
      caopr.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      $( Rearrange arguments in a commutative, associative operation. $)
      caopr32 $p |- ( ( A F B ) F C ) = ( ( A F C ) F B ) $=
        ( co caoprcom opreq2i caoprass 3eqtr4i ) DEFGMZGMDFEGMZGMDEGMFGMDFGMEGM
        RSDGABEFGIJKNOABCDEFGHIJLPABCDFEGHJILPQ $.
        $( [26-Aug-1995] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr12 $p |- ( A F ( B F C ) ) = ( B F ( A F C ) ) $=
        ( co caoprcom opreq1i caoprass 3eqtr3i ) DEGMZFGMEDGMZFGMDEFGMGMEDFGMGM
        RSFGABDEGHIKNOABCDEFGHIJLPABCEDFGIHJLPQ $.
        $( [26-Aug-1995] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr31 $p |- ( ( A F B ) F C ) = ( ( C F B ) F A ) $=
        ( co caoprass caopr12 eqtri caopr32 eqtr3i 3eqtr4i ) DFGMEGMZFDEGMZGMZU
        AFGMFEGMZDGMZTDUCGMUBABCDFEGHJILNABCDFEGHJIKLOPABCDEFGHIJKLQFDGMEGMUDUB
        ABCFDEGJHIKLQABCFDEGJHILNRS $.
        $( [26-Aug-1995] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr13 $p |- ( A F ( B F C ) ) = ( C F ( B F A ) ) $=
        ( co caopr31 caoprass 3eqtr3i ) DEGMFGMFEGMDGMDEFGMGMFEDGMGMABCDEFGHIJK
        LNABCDEFGHIJLOABCFEDGJIHLOP $.
        $( [26-Aug-1995] $)

      ${
        caopr.4 $e |- D e. _V $.
        $( Rearrange arguments in a commutative, associative operation. $)
        caopr4 $p |- ( ( A F B ) F ( C F D ) ) = ( ( A F C ) F ( B F D ) ) $=
          ( co caopr12 opreq2i oprex caoprass 3eqtr4i ) DEFGHOZHOZHODFEGHOZHOZH
          ODEHOUAHODFHOUCHOUBUDDHABCEFGHJKNLMPQABCDEUAHIJFGHRMSABCDFUCHIKEGHRMS
          T $.
          $( [26-Aug-1995] $)

        $( Rearrange arguments in a commutative, associative operation. $)
        caopr411 $p |- ( ( A F B ) F ( C F D ) ) = ( ( C F B ) F ( A F D ) ) $=
          ( co caopr31 opreq1i oprex caoprass 3eqtr3i ) DEHOZFHOZGHOFEHOZDHOZGH
          OUAFGHOHOUCDGHOHOUBUDGHABCDEFHIJKLMPQABCUAFGHDEHRKNMSABCUCDGHFEHRINMS
          T $.
          $( [26-Aug-1995] $)

        $( Rearrange arguments in a commutative, associative operation. $)
        caopr42 $p |- ( ( A F B ) F ( C F D ) ) =
                        ( ( A F C ) F ( D F B ) ) $=
          ( co caopr4 caoprcom opreq2i eqtri ) DEHOFGHOHODFHOZEGHOZHOTGEHOZHOAB
          CDEFGHIJKLMNPUAUBTHABEGHJNLQRS $.
          $( [26-Aug-1995] $)
      $}
    $}

    ${
      caoprd.1 $e |- A e. _V $.
      caoprd.2 $e |- B e. _V $.
      caoprd.3 $e |- C e. _V $.
      caoprd.com $e |- ( x G y ) = ( y G x ) $.
      caoprd.distr $e |- ( x G ( y F z ) ) = ( ( x G y ) F ( x G z ) ) $.
      $( Reverse distributive law. $)
      caoprdistrr $p |- ( ( A F B ) G C ) = ( ( A G C ) F ( B G C ) ) $=
        ( co caoprdistr oprex caoprcom opreq12i 3eqtr3i ) FDEGNZHNFDHNZFEHNZGNT
        FHNDFHNZEFHNZGNABCFDEGHKIJMOABFTHKDEGPLQUAUCUBUDGABFDHKILQABFEHKJLQRS
        $.
        $( [26-Aug-1995] $)

      ${
        $d x y z H $.  $d x y z R $.
        caoprdl.4 $e |- D e. _V $.
        caoprdl.5 $e |- H e. _V $.
        caoprdl.ass $e |- ( ( x G y ) G z ) = ( x G ( y G z ) ) $.
        $( Lemma used by real number construction. $)
        caoprdilem $p |- ( ( ( A G C ) F ( B G D ) ) G H ) =
                         ( ( A G ( C G H ) ) F ( B G ( D G H ) ) ) $=
          ( co oprex caoprdistrr caoprass opreq12i eqtri ) DFISZEGISZHSJISUEJIS
          ZUFJISZHSDFJISISZEGJISISZHSABCUEUFJHIDFITEGITQNOUAUGUIUHUJHABCDFJIKMQ
          RUBABCEGJILPQRUBUCUD $.
          $( [26-Aug-1995] $)

        ${
          caoprdl2.6 $e |- R e. _V $.
          caoprdl2.com $e |- ( x F y ) = ( y F x ) $.
          caoprdl2.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
          $( Lemma used in real number construction. $)
          caoprlem2 $p |- ( ( ( ( A G C ) F ( B G D ) ) G H ) F
                            ( ( ( A G D ) F ( B G C ) ) G R ) ) =
   ( ( A G ( ( C G H ) F ( D G R ) ) ) F ( B G ( ( C G R ) F ( D G H ) ) ) ) $=
            ( co oprex caopr42 caoprdilem opreq12i caoprdistr 3eqtr4i ) DFKJUCZ
            JUCZEGKJUCZJUCZIUCZDGHJUCZJUCZEFHJUCZJUCZIUCZIUCUKUPIUCZURUMIUCZIUC
            DFJUCEGJUCIUCKJUCZDGJUCEFJUCIUCHJUCZIUCDUJUOIUCJUCZEUQULIUCJUCZIUCA
            BCUKUMUPURIDUJJUDEULJUDDUOJUDUAUBEUQJUDUEVBUNVCUSIABCDEFGIJKLMNOPQR
            SUFABCDEGFIJHLMQOPNTSUFUGVDUTVEVAIABCDUJUOIJLFKJUDGHJUDPUHABCEUQULI
            JMFHJUDGKJUDPUHUGUI $.
            $( [26-Aug-1995] $)
        $}
      $}
    $}

    ${
      $d x y z w v $.  $d w v S $.  $d w v A $.  $d w v B $.  $d w v F $.
      caoprmo.1 $e |- A e. _V $.
      $( Identity element. $)
      caoprmo.2 $e |- B e. S $.
      caoprmo.dom $e |- dom F = ( S X. S ) $.
      caoprmo.3 $e |- -. (/) e. S $.
      caoprmo.com $e |- ( x F y ) = ( y F x ) $.
      caoprmo.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      caoprmo.id $e |- ( x e. S -> ( x F B ) = x ) $.
      $( Uniqueness of inverse element in commutative, associative operation
         with identity.  Remark in proof of Proposition 9-2.4 of [Gleason]
         p. 119. $)
      caoprmo $p |- E* w ( A F w ) = B $=
        ( vv wcel co wceq wa cv wmo wi wal eleq1 opreq2 eqeq1d anbi12d caoprass
        mo4 visset caopr12 opreq1 id eqeq12d vtoclga sylan9eqr syl5eq ad2ant2rl
        eqtri elisseti caoprcom ad2ant2lr eqtr3d ax-gen mpgbir mpbiri ndmoprrcl
        sylan9eq simprd syl ancri immoi ax-mp ) DUAZGQZEVOHRZFSZTZDUBZVRDUBVTVS
        PUAZGQZEWAHRZFSZTZTZVOWASZUCZPUDDVSWEDPWGVPWBVRWDVOWAGUEWGVQWCFVOWAEHUF
        UGUHUJWHPWFVQWAHRZVOWAVPWDWIVOSVRWBVPWDTWIVOWCHRZVOWIEVOWAHRHRWJABCEVOW
        AHIDUKZPUKZNUIABCEVOWAHIWKWLMNULUTWDVPWJVOFHRZVOWCFVOHUFAUAZFHRZWNSZWMV
        OSAVOGWNVOSZWOWMWNVOWNVOFHUMWQUNUOOUPUQURUSVRWBWIWASVPWDVRWBWIFWAHRZWAV
        QFWAHUMWBWRWAFHRZWAABFWAHFGJVAWLMVBWPWSWASAWAGWNWASZWOWSWNWAWNWAFHUMWTU
        NUOOUPURVIVCVDVEVFVRVSDVRVPVRVQGQZVPVRXAFGQJVQFGUEVGXAEGQVPEVOGHWKKLVHV
        JVKVLVMVN $.
        $( [4-Mar-1996] $)
    $}
  $}

  ${
    $d v w x y z B $.  $d v w y z N $.  $d v w x O $.  $d v w x y z P $.
    $d v x y z ph $.  $d w x y z v $.
    grplinvlem1.c $e |- ( ( ph /\ x e. B /\ y e. B ) -> ( x P y ) e. B ) $.
    grplinvlem1.o $e |- ( ph -> O e. B ) $.
    grplinvlem1.i $e |- ( ( ph /\ x e. B ) -> ( x P O ) = x ) $.
    grplinvlem1.a $e |- ( ( ph /\ ( x e. B /\ y e. B /\ z e. B ) )
          -> ( ( x P y ) P z ) = ( x P ( y P z ) ) ) $.
    grplinvlem1.n $e |- ( ( ph /\ x e. B ) -> N e. B ) $.
    grplinvlem1.j $e |- ( ( ph /\ x e. B ) -> ( x P N ) = O ) $.
    ${
      $d w y z C $.
      grplinvlem1.w $e |- ( w e. C -> A. x w e. C ) $.
      grplinvlem1.v $e |- C e. _V $.
      $( Lemma for ~ grplinvd . $)
      grplinvlem1 $p |- ( ( ph /\ C e. B /\ ( C P C ) = C ) -> C = O ) $=
        ( wcel co wceq w3a wa simpr wi ax-17 hbcsb1 cv hbel hbim csbeq1a eleq1d
        imbi2d expcom vtoclgaf impcom simpl hbopr opreq1 opreq1d eqeq12d opreq2
        csb hbeq opreq2d vtocl3gaf imp syl31anc opreq12d eqeq1d 3eqtrrd 3adant3
        id 3ad2ant3 3eqtrd ) AGFSZGGHTZGUAZUBGVQBGIVCZHTZGVSHTZJAVPGVTUAVRAVPUC
        ZVTGWAHTZGJHTZGWBVPVPVSFSZAVTWCUAZAVPUDZWGVPAWEAIFSZUEAWEUEBEGFQAWEBABU
        FZBEEVSFBEGIRQUGZEUHZFSBUFUIUJBUHZGUAZWHWEAWMIVSFBGIUKZULUMAWLFSZWHOUNU
        OUPAVPUQVPVPWEUBAWFAWLCUHZHTZDUHZHTZWLWPWRHTZHTZUAZUEAGWPHTZWRHTZGWTHTZ
        UAZUEAVQWRHTZGGWRHTZHTZUAZUEZAWFUEZBCDEGGVSFFFQWKGSZCUFZXMDUFZXNXOWKVSS
        DUFAXFBWIBEEXDXEBEXCWRHBEGWPHQWKHSBUFZWKWPSBUFURXPWKWRSBUFURBEGWTHQXPWK
        WTSBUFURVDUJXKCUFXLDUFWMXBXFAWMWSXDXAXEWMWQXCWRHWLGWPHUSUTWLGWTHUSVAUMW
        PGUAZXFXJAXQXDXGXEXIXQXCVQWRHWPGGHVBUTXQWTXHGHWPGWRHUSVEVAUMWRVSUAZXJWF
        AXRXGVTXIWCWRVSVQHVBXRXHWAGHWRVSGHVBVEVAUMAWOWPFSWRFSUBXBNUNVFVGVHWBWAJ
        GHVPAWAJUAZAWLIHTZJUAZUEAXSUEBEGFQAXSBWIBEEWAJBEGVSHQXPWJURWKJSBUFZVDUJ
        WMYAXSAWMXTWAJWMWLGIVSHWMVMZWNVIVJUMAWOYAPUNUOUPZVEVPAWDGUAZAWLJHTZWLUA
        ZUEAYEUEBEGFQAYEBWIBEEWDGBEGJHQXPYBURQVDUJWMYGYEAWMYFWDWLGWLGJHUSYCVAUM
        AWOYGMUNUOUPVKVLVRAVTWAUAVPVQGVSHUSVNAVPXSVRYDVLVO $.
        $( [9-Aug-2013] $)
    $}

    $( Lemma for ~ grplinvd . $)
    grplinvlem2 $p |- ( ( ph /\ v e. B ) -> ( [_ v / x ]_ N P v ) = O ) $=
      ( vw wcel co wceq ax-17 cv wa csb simpl wi visset hbcsb1 hbel hbim eleq1d
      csbeq1a imbi2d expcom vtoclgaf impcom simpr hbopr opreq1 opreq2 vtocl2gaf
      3expb imp syl21anc w3a hbeq opreq1d eqeq12d opreq2d vtocl3gaf syl31anc id
      opreq12d eqeq1d eqcomd syldan 3eqtr2d eqtr3d oprex grplinvlem1 syl111anc
      ) AEUAZFQZUBZABWAHUCZWAGRZFQZWEWEGRZWESWEISAWBUDZWCWDFQZWBAWFWBAWIAHFQZUE
      AWIUEBPWAFPUAZWAQZBTZAWIBABTZBPPWDFBPWAHEUFWMUGZWKFQBTZUHUIBUAZWASZWJWIAW
      RHWDFBWAHUKZUJULAWQFQZWJNUMUNUOZAWBUPZWHWIWBUBAWFAWQCUAZGRZFQZUEAWDXCGRZF
      QZUEAWFUEZBCPWDWAFFWOWKWDQZCTZWLCTZAXGBWNBPPXFFBPWDXCGWOWKGQBTZWKXCQBTZUQ
      ZWPUHUIXHCTWQWDSZXEXGAXOXDXFFWQWDXCGURZUJULXCWASZXGWFAXQXFWEFXCWAWDGUSZUJ
      ULAWTXCFQZUBXEAWTXSXEJVAUMUTVBVCZWCWEWDGRZWAGRZWGWEWCWFWIWBAYBWGSZXTXAXBW
      HWFWIWBVDAYCAXDDUAZGRZWQXCYDGRZGRZSZUEZAWEXCGRZYDGRZWEYFGRZSZUEAYAYDGRZWE
      WDYDGRZGRZSZUEZAYCUEZBCDPWEWDWAFFFBPWDWAGWOXLWMUQZWKWEQZCTUUADTXJXIDTZWLD
      TZAYMBWNBPPYKYLBPYJYDGBPWEXCGYTXLXMUQXLWKYDQBTZUQBPWEYFGYTXLWKYFQBTZUQVEU
      IYRCTYSDTWQWESZYHYMAUUFYEYKYGYLUUFXDYJYDGWQWEXCGURVFWQWEYFGURVGULXCWDSZYM
      YQAUUGYKYNYLYPUUGYJYAYDGXCWDWEGUSVFUUGYFYOWEGXCWDYDGURVHVGULYDWASZYQYCAUU
      HYNYBYPWGYDWAYAGUSUUHYOWEWEGYDWAWDGUSVHVGULAWTXSYDFQVDYHMUMZVIVBVJWCYAWDW
      AGWCYAWDWAWDGRZGRZWDIGRZWDWCWIWBWIAYAUUKSZXAXBXAWHWIWBWIVDAUUMYIAXFYDGRZW
      DYFGRZSZUEAWEYDGRZWDWAYDGRZGRZSZUEZAUUMUEZBCDPWDWAWDFFFWOXJUUBXKUUCUUBAUU
      PBWNBPPUUNUUOBPXFYDGXNXLUUDUQBPWDYFGWOXLUUEUQVEUIUVACTUVBDTXOYHUUPAXOYEUU
      NYGUUOXOXDXFYDGXPVFWQWDYFGURVGULXQUUPUUTAXQUUNUUQUUOUUSXQXFWEYDGXRVFXQYFU
      URWDGXCWAYDGURVHVGULYDWDSZUUTUUMAUVCUUQYAUUSUUKYDWDWEGUSUVCUURUUJWDGYDWDW
      AGUSVHVGULUUIVIVBVJWCIUUJWDGWCUUJIWBAUUJISZAWQHGRZISZUEAUVDUEBPWAFWMAUVDB
      WNBPPUUJIBPWAWDGWMXLWOUQWKIQBTZVEUIWRUVFUVDAWRUVEUUJIWRWQWAHWDGWRVKWSVLVM
      ULAWTUVFOUMUNUOVNVHAWBWIUULWDSZXAWIAUVHAWQIGRZWQSZUEAUVHUEBPWDFWOAUVHBWNB
      PPUULWDBPWDIGWOXLUVGUQWOVEUIXOUVJUVHAXOUVIUULWQWDWQWDIGURXOVKVGULAWTUVJLU
      MUNUOVOVPVFVQABCDPFWEGHIJKLMNOYTWDWAGVRVSVT $.
      $( [10-Aug-2013] $)

    $( Deduce left inverse from right inverse and right identity in an
       associative structure (such as a group). $)
    grplinvd $p |- ( ( ph /\ x e. B ) -> ( N P x ) = O ) $=
      ( vv cv wcel co wceq wi csb csbeq1a eqcomd eqcoms id opreq12d grplinvlem2
      eqeq1d imbi2d expcom vtoclga impcom ) BPZEQAGUMFRZHSZABOPZGUAZUPFRZHSZTAU
      OTOUMEUPUMSZUSUOAUTURUNHUTUQGUPUMFUQGSUMUPUMUPSGUQBUPGUBUCUDUTUEUFUHUIAUP
      EQUSABCDOEFGHIJKLMNUGUJUKUL $.
      $( [10-Aug-2013] $)

    $( Deduce left identity from right inverse and right identity in an
       associative structure (such as a group). $)
    grplidd $p |- ( ( ph /\ x e. B ) -> ( O P x ) = x ) $=
      ( vw wcel co wceq wi imbi2d vv cv opreq2 id eqeq12d wa grplinvlem2 eqcomd
      csb opreq2d simpr ax-17 visset hbcsb1 hbel csbeq1a eleq1d expcom vtoclgaf
      hbim impcom simpl w3a opreq1 opreq1d vtocl3ga imp syl31anc eqtrd opreq12d
      hbopr hbeq eqeq1d vtoclga ) BUBZEPZAHVOFQZVORZAHUAUBZFQZVSRZSAVRSUAVOEVSV
      ORZWAVRAWBVTVQVSVOVSVOHFUCWBUDUETAVSEPZWAAWCUFZVTVSHFQZVSWDWEVTWDWEVSBVSG
      UIZFQZVSFQZVTWDWEVSWFVSFQZFQZWHWDWJWEWDWIHVSFABCDUAEFGHIJKLMNUGUJUHWDWHWJ
      WDWCWFEPZWCAWHWJRZAWCUKZWCAWKAGEPZSAWKSBOVSEOUBZVSPBULZAWKBABULZBOOWFEBOV
      SGUAUMWPUNZWOEPBULUOUTVOVSRZWNWKAWSGWFEBVSGUPZUQTAVPWNMURUSVAWMAWCVBWCWKW
      CVCAWLAVOCUBZFQZDUBZFQZVOXAXCFQZFQZRZSAVSXAFQZXCFQZVSXEFQZRZSAWGXCFQZVSWF
      XCFQZFQZRZSAWLSBCDVSWFVSEEEWSXGXKAWSXDXIXFXJWSXBXHXCFVOVSXAFVDVEVOVSXEFVD
      UETXAWFRZXKXOAXPXIXLXJXNXPXHWGXCFXAWFVSFUCVEXPXEXMVSFXAWFXCFVDUJUETXCVSRZ
      XOWLAXQXLWHXNWJXCVSWGFUCXQXMWIVSFXCVSWFFUCUJUETAVPXAEPXCEPVCXGLURVFVGVHUH
      VIWDWGHVSFWCAWGHRZAVOGFQZHRZSAXRSBOVSEWPAXRBWQBOOWGHBOVSWFFWPWOFPBULWRVKW
      OHPBULVLUTWSXTXRAWSXSWGHWSVOVSGWFFWSUDZWTVJVMTAVPXTNURUSVAVEVIUHWCAWEVSRZ
      AVOHFQZVORZSAYBSBVSEWSYDYBAWSYCWEVOVSVOVSHFVDYAUETAVPYDKURVNVAVIURVNVA $.
      $( [10-Aug-2013] $)
  $}

