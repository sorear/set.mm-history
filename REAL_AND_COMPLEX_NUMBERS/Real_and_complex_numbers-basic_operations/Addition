$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Addition
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare symbols needed for some defined terms. $)
  $c - $. $( Subtraction (binary minus. $)
  $c -u $. $( Unary minus sign. $)
  $c NN $. $( The set of positive integers (blackboard bold N). $)
  $c NN0 $. $( The set of nonnegative integers (blackboard bold N_0). $)
  $c ZZ $. $( The set of integers (blackboard bold Z). $)
  $c QQ $. $( The set of rational numbers (blackboard bold Q). $)
  $c RR+ $. $( The set of positive reals (blackboard bold R^+). $)

  $( Introduce some defined terms for our axiom system. $)

  $( Extend class notation to include subtraction. $)
  cmin $a class - $.
  $( Extend class notation to include unary minus.  The symbol ` -u ` is not a
     class by itself but part of a compound class definition.  We do this
     rather than making it a formal function since it is so commonly used.
     Note:  We use different symbols for unary minus ( ` -u ` ) and subtraction
     ~ cmin ( ` - ` ) to prevent syntax ambiguity.  For example, looking at the
     syntax definition ~ co , if we used the same symbol
     then " ` ( - A - B ) ` " could mean either " ` - A ` " minus " ` B ` ", or
     it could represent the (meaningless) operation of
     classes " ` - ` " and " ` - B ` " connected with "operation" " ` A ` ".
     On the other hand, " ` ( -u A - B ) ` " is unambiguous. $)
  cneg $a class -u A $.
  $( Extend class notation to include division. $)
  cdiv $a class / $.

  $( Extend class notation to include the class of positive integers. $)
  cn $a class NN $.
  $( Extend class notation to include the class of nonnegative integers. $)
  cn0 $a class NN0 $.
  $( Extend class notation to include the class of integers. $)
  cz $a class ZZ $.
  $( Extend class notation to include the class of rationals. $)
  cq $a class QQ $.
  $( Extend class notation to include the class of positive reals. $)
  crp $a class RR+ $.

  $( Commutative/associative law that swaps the first two terms in a triple
     sum. $)
  add12 $p |- ( ( A e. CC /\ B e. CC /\ C e. CC ) ->
               ( A + ( B + C ) ) = ( B + ( A + C ) ) ) $=
    ( cc wcel w3a caddc co wceq wa addcom oveq1d 3adant3 addass 3com12 3eqtr3d
    ) ADEZBDEZCDEZFABGHZCGHZBAGHZCGHZABCGHGHBACGHGHZQRUAUCISQRJTUBCGABKLMABCNRQ
    SUCUDIBACNOP $.
    $( [11-May-2004] $)

  $( Commutative/associative law that swaps the last two terms in a triple
     sum. $)
  add32 $p |- ( ( A e. CC /\ B e. CC /\ C e. CC ) ->
               ( ( A + B ) + C ) = ( ( A + C ) + B ) ) $=
    ( cc wcel w3a caddc co wceq wa addcom oveq2d 3adant1 addass 3com23 3eqtr4d
    ) ADEZBDEZCDEZFABCGHZGHZACBGHZGHZABGHCGHACGHBGHZRSUAUCIQRSJTUBAGBCKLMABCNQS
    RUDUCIACBNOP $.
    $( [13-Nov-1999] $)

  $( Rearrangement of 4 terms in a sum.  (The proof was shortened by Andrew
     Salmon, 22-Oct-2011.) $)
  add4 $p |- ( ( ( A e. CC /\ B e. CC ) /\ ( C e. CC /\ D e. CC ) ) ->
              ( ( A + B ) + ( C + D ) ) = ( ( A + C ) + ( B + D ) ) ) $=
    ( cc wcel wa caddc wceq add12 3expb oveq2d adantll addcl addass sylan2 an4s
    co 3expa 3eqtr4d ) AEFZBEFZGZCEFZDEFZGZGABCDHRZHRZHRZACBDHRZHRZHRZABHRUGHRZ
    ACHRUJHRZUBUFUIULIUAUBUFGUHUKAHUBUDUEUHUKIBCDJKLMUFUCUGEFZUMUIIZCDNUAUBUOUP
    ABUGOSPUAUDUBUEUNULIZUBUEGUAUDGUJEFZUQBDNUAUDURUQACUJOSPQT $.
    $( [22-Oct-2011] $) $( [13-Nov-1999] $)

  $( Rearrangement of 4 terms in a sum. $)
  add42 $p |- ( ( ( A e. CC /\ B e. CC ) /\ ( C e. CC /\ D e. CC ) ) ->
              ( ( A + B ) + ( C + D ) ) = ( ( A + C ) + ( D + B ) ) ) $=
    ( cc wcel wa caddc co add4 wceq addcom ad2ant2l oveq2d eqtrd ) AEFZBEFZGCEF
    ZDEFZGGZABHICDHIHIACHIZBDHIZHIUADBHIZHIABCDJTUBUCUAHQSUBUCKPRBDLMNO $.
    $( [12-May-2005] $)

  ${
    add.1 $e |- A e. CC $.
    add.2 $e |- B e. CC $.
    add.3 $e |- C e. CC $.
    $( Commutative/associative law that swaps the first two terms in a triple
       sum. $)
    add12i $p |- ( A + ( B + C ) ) = ( B + ( A + C ) ) $=
      ( cc wcel caddc co wceq add12 mp3an ) AGHBGHCGHABCIJIJBACIJIJKDEFABCLM $.
      $( [21-Jan-1997] $)

    $( Commutative/associative law that swaps the last two terms in a triple
       sum. $)
    add32i $p |- ( ( A + B ) + C ) = ( ( A + C ) + B ) $=
      ( cc wcel caddc co wceq add32 mp3an ) AGHBGHCGHABIJCIJACIJBIJKDEFABCLM $.
      $( [21-Jan-1997] $)
  $}

  ${
    add4.1 $e |- A e. CC $.
    add4.2 $e |- B e. CC $.
    add4.3 $e |- C e. CC $.
    add4.4 $e |- D e. CC $.
    $( Rearrangement of 4 terms in a sum. $)
    add4i $p |- ( ( A + B ) + ( C + D ) ) = ( ( A + C ) + ( B + D ) ) $=
      ( cc wcel caddc co wceq add4 mp4an ) AIJBIJCIJDIJABKLCDKLKLACKLBDKLKLMEFG
      HABCDNO $.
      $( [9-May-1999] $)

    $( Rearrangement of 4 terms in a sum. $)
    add42i $p |- ( ( A + B ) + ( C + D ) ) = ( ( A + C ) + ( D + B ) ) $=
      ( caddc co add4i addcomi oveq2i eqtri ) ABIJCDIJIJACIJZBDIJZIJODBIJZIJABC
      DEFGHKPQOIBDFHLMN $.
      $( [22-Aug-1999] $)
  $}

  $( A theorem for complex numbers analogous the second Peano postulate
     ~ peano2nn . $)
  peano2cn $p |- ( A e. CC -> ( A + 1 ) e. CC ) $=
    ( cc wcel c1 caddc co ax-1cn addcl mpan2 ) ABCDBCADEFBCGADHI $.
    $( [17-Aug-2005] $)

