$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                                Product topology
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c tP $.

  $( Extend class notation with a function whose value is a product
     topology. $)
  cpt $a class tP $.

  ${
    $d f u x y z $.
    $( Define the product topology on a collection of topologies.  For
       convenience, it is defined on arbitrary collections of sets, expressed
       as a function from some index set to the subbases of each factor
       space. $)
    df-pt $a |- tP = ( f e. { f | Fun f } |-> ( topGen ` ( fi ` { x |
                       E. y e. dom f E. u e. ( f ` y ) x = X_ z e. dom f
                         if ( z = y , u , U. ( f ` z ) ) } ) ) ) $.
  $}

  $(
  @{
    ptval.1 @e |- J = ( tP ` F ) @.
    @( The value of the product topology function. @)
    ptval @p |- ( ( A e. V /\ F Fn A ) -> J = ( topGen ` ( fi ` { x |
                  E. y e. A E. u e. ( F ` y ) x = X_ z e. A
                    if ( z = y , u , U. ( F ` z ) ) } ) ) ) @=
      ? @.

    @( The product topology is a topology.   @)
    pttop @p |- ( ( F e. V /\ Fun F ) -> J e. Top ) @=
      ? @.

    ptuni.2 @e |- X = X_ i e. A U. ( F ` i ) @.
    @( The base set for the topology. @)
    ptuni @p |- ( ( A e. V /\ F Fn A ) -> X = U. J ) @=
      ? @.
  @}

  @{
    pttg.1 @e |- G = ( x e. A |-> ( topGen ` ( fi ` ( F ` x ) ) ) ) @.
    @( It is sufficient to consider functions into topologies, rather than
       functions into subbases, since the result is the same. @)
    pttg @p |- ( F Fn A -> ( tP ` F ) = ( tP ` G ) ) @=
      ? @.
  @}

  @{
    ptopn.1 @e |- J = ( tP ` F ) @.
    @( Describe the general basis element of the product topology. @)
    ptopn @p |- ( ( ( A e. V /\ F Fn A ) /\ A. x e. A U e. F /\
        { x e. A | U =/= ( F ` x ) } e. Fin ) -> X_ x e. A U e. J ) @=
      ? @.
  @}
  $)

