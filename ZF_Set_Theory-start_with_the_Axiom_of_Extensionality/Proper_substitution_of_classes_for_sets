$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff notation to include the proper substitution of a class for a
     set.  This definition "overloads" the previously defined variable
     substitution ~ wsb (where the first argument is a set variable rather
     than a class variable).  We take care to ensure that this new definition
     is a conservative extension.  Read this notation as "the proper
     substitution of class ` A ` for set variable ` x ` in wff ` ph ` ." @)
  wsbc @a wff [ A / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define the proper substitution of a class for a set.

     When ` A ` is a proper class, our definition evaluates to false.  This is
     somewhat arbitrary: we could have, instead, chosen the conclusion of
     ~ sbc6 for our definition, which always evaluates to true for proper
     classes.

     Our definition also does not produce the same results as discussed in the
     proof of Theorem 6.6 of [Quine] p. 42 (although Theorem 6.6 itself does
     hold, as shown by ~ dfsbcq below).  For example, if ` A ` is a proper
     class, Quine's substitution of ` A ` for ` y ` in ` 0 e. y ` evaluates to
     ` 0 e. A ` rather than our falsehood.  (This can be seen by substituting
     ` A ` , ` y ` , and ` 0 ` for for alpha, beta, and gamma in Subcase 1 of
     Quine's discussion on p. 42.)  Unfortunately, Quine's definition requires
     a recursive structural breakdown of ` ph ` , and it does not seem possible
     to express it with a single closed formula.

     In order to allow for a possible alternate but conflicting definition in
     the future, we will not commit to any specific proper class behavior.
     Instead, we will use this definition _only_ to prove theorem ~ dfsbcq ,
     which holds for both our definition and Quine's, and from which we can
     derive a weaker version of ~ df-sbc in the form of ~ sbc8g .

     Note: this definition extends or "overloads" ~ df-sb which (via
     ~ df-clab ) becomes a special case of it, so a careful metalogical
     soundness justification, outside of Metamath, is needed for complete
     rigor; alternately, we could treat this definition as a new axiom.

     The related definition ~ df-csb defines proper substitution into a class
     variable (as opposed to a wff variable). $)
  df-sbc $a |- ( [ A / x ] ph <-> A e. { x | ph } ) $.

  $( This theorem, which is similar to Theorem 6.7 of [Quine] p. 42 and holds
     under both our definition and Quine's, provides us with a weak definition
     of the proper substitution of a class for a set, which we will use in
     place of ~ df-sbc above.  We will derive all our results from starting
     from here instead of ~ df-sbc .  As a consequence, we can derive ~ sbc8g ,
     which is a weaker version of ~ df-sbc that leaves substitution undefined
     when ` A ` is a proper class.  We thus leave unspecified the "official"
     behavior for proper classes.

     While in principle we could have made this theorem the official
     definition, we use ~ df-sbc because it is more obviously eliminable and
     thus easier to justify metalogically.  But to avoid conflict with Quine,
     we never use ~ df-sbc except indirectly via this theorem. $)
  dfsbcq $p |- ( A = B -> ( [ A / x ] ph <-> [ B / x ] ph ) ) $=
    ( wceq cab wcel wsbc eleq1 df-sbc 3bitr4g ) CDECABFZGDLGABCHABDHCDLIABCJABD
    JK $.
    $( [14-Apr-1995] $)

  $( Equality theorem for class substitution. $)
  sbceq1a $p |- ( x = A -> ( ph <-> [ A / x ] ph ) ) $=
    ( cv wsbc wceq sbid dfsbcq syl5bbr ) AABBDZEJCFABCEABGABJCHI $.
    $( [26-Sep-2003] $)

  ${
    $d ph y $.  $d A y $.  $d x y $.
    $( Specialization: if a formula is true for all sets, it is true for any
       class which is a set.  Similar to Theorem 6.11 of [Quine] p. 44.  See
       also ~ stdpc4 and ~ ra4sbc . $)
    a4sbc $p |- ( A e. V -> ( A. x ph -> [ A / x ] ph ) ) $=
      ( vy wal wsbc wi cv wceq stdpc4 dfsbcq syl5ib vtocleg ) ABFZABCGZHECDOABE
      IZGQCJPABEKABQCLMN $.
      $( [16-Jan-2004] $)
  $}

  ${
    sbcth.1 $e |- ph $.
    $( A substitution into a theorem remains true (when ` A ` is a set). $)
    sbcth $p |- ( A e. V -> [ A / x ] ph ) $=
      ( wcel wal wsbc ax-gen a4sbc mpi ) CDFABGABCHABEIABCDJK $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcthdv.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ sbcth .  (The proof was shortened by Andrew
       Salmon, 8-Jun-2011.) $)
    sbcthdv $p |- ( ( ph /\ A e. V ) -> [ A / x ] ps ) $=
      ( wcel wsbc wal 19.21aiv a4sbc syl5 impcom ) DEGZABCDHZABCINOABCFJBCDEKLM
      $.
      $( [8-Jun-2011] $) $( [30-Nov-2005] $)
  $}

  ${
    $d x z $.  $d y A z $.  $d ph z $.
    hbsbc1g.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for class substitution.  (The
       antecedent ensures that ` A ` is a set, which is necessary if we
       restrict ourselves to using only the "weak" class substitution
       definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbc1g $p |- ( A e. V -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) $=
      ( vz wsbc wal wi cv wceq dfsbcq hbs1 hblem hbeleq albid syl5ib sylbird
      vtocleg ) ABDHZUABIZJGDEGKZDLZUAABUCHZUBABUCDMZUEUEBIUDUBABGNUDUEUABBGDBC
      GDFOPUFQRST $.
      $( [11-Jul-2011] $) $( [11-Oct-2004] $)

    ${
      $d x V $.  $d V z $.
      $( Bound-variable hypothesis builder for class substitution.  (The
         antecedent ensures that ` A ` is a set, which is necessary if we
         restrict ourselves to using only the "weak" class substitution
         definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions
         were removed by Andrew Salmon, 8-Jun-2011.) $)
      hbsbc1 $p |- ( ( A e. V -> [ A / x ] ph ) ->
                        A. x ( A e. V -> [ A / x ] ph ) ) $=
        ( vz wcel wsbc cv ax-17 hbel hbsbc1g hbim1 ) DEHABDIBBCGDEFGJEHBKLABCDE
        FMN $.
        $( [11-Jul-2011] $) $( [23-Aug-1993] $)
    $}
  $}

  ${
    $d x A y $.
    hbsbcv.1 $e |- A e. _V $.
    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Andrew Salmon, 8-Jun-2011.) $)
    hbsbc1v $p |- ( [ A / x ] ph -> A. x [ A / x ] ph ) $=
      ( vy cvv wcel wsbc wal wi cv ax-17 hbsbc1g ax-mp ) CFGABCHZOBIJDABECFEKCG
      BLMN $.
      $( [8-Jun-2011] $) $( [18-Aug-1993] $)
  $}

  ${
    $d w z A $.  $d w y $.  $d w x $.  $d w ph $.
    hbsbcg.1 $e |- ( z e. A -> A. x z e. A ) $.
    hbsbcg.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Eric Schmidt, 17-Jan-2007.)  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbcg $p |- ( A e. V -> ( [ A / y ] ph -> A. x [ A / y ] ph ) ) $=
      ( vw cv wsbc wal wi wceq dfsbcq hblem hbeleq albid imbi12d hbsb vtoclg )
      ACIJZKZUCBLZMACEKZUEBLZMIEFUBENZUCUEUDUFACUBEOZUGUCUEBBIEBDIEGPQUHRSACIBH
      TUA $.
      $( [11-Jul-2011] $) $( [17-Nov-2005] $)
  $}

  ${
    $d x z $.  $d z A $.  $d y z ph $.
    $( A composition law for class substitution. $)
    sbccog $p |- ( A e. V -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) $=
      ( vz cv wsbc dfsbcq ax-17 sbco2 vtoclbg ) ABCGHZCFGZHABNHMCDHABDHFDEMCNDI
      ABNDIABFCACJKL $.
      $( [26-Sep-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d A y $.
    sbcco2.1 $e |- ( x = y -> A = B ) $.
    $( A composition law for class substitution.  Importantly, ` x ` may occur
       free in the class expression substituted for ` A ` .  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    sbcco2 $p |- ( [ x / y ] [ B / x ] ph <-> [ A / x ] ph ) $=
      ( wsbc ax-17 cv wceq wb equcoms dfsbcq bicomd syl sbie ) ABEGZABDGZCBRCHC
      IBIJDEJZQRKSBCFLSRQABDEMNOP $.
      $( [8-Jun-2011] $) $( [5-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    sbc5g $p |- ( A e. V -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cv wsbc wceq wa wex dfsbcq eqeq2 anbi1d exbidv sb5 vtoclbg ) ABEFZGB
      FZQHZAIZBJABCGRCHZAIZBJECDABQCKQCHZTUBBUCSUAAQCRLMNABEOP $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x A $.
    $( The disjunction of two equivalences for class substitution does not
       require a class existence hypothesis.  This theorem tells us that there
       are only 2 possibilities for defining ` [ A / x ] ph ` behavior at
       proper classes (given a specific ` A ` ), which is interesting since
       ~ dfsbcq (from which it is derived) does not say anything obvious about
       that. $)
    sbc2or $p |- ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/
                  ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb wi wal wo sbc5g orcd wn pm5.15 visset
      eleq1 mpbii adantr con3i nexdv pm2.21d 19.21aiv 2thd bibi2d orbi2d
      pm2.61i ) CDEZABCFZBGZCHZAIZBJZKZULUNALZBMZKZNZUKUQUTABCDOPUKQZUQULUPQZKZ
      NVAULUPRVBVDUTUQVBVCUSULVBVCUSVBUOBUOUKUNUKAUNUMDEUKBSUMCDTUAZUBUCUDVBURB
      VBUNAUNUKVEUCUEUFUGUHUIUAUJ $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 8-Jun-2011.) $)
    sbc6g $p |- ( A e. V -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( wcel wsbc cv wceq wa wex wi wal sbc5g hbe1 ceqex ceqsalg bitr4d ) CDEAB
      CFBGCHZAIZBJZRAKBLABCDMATBCDSBNABCOPQ $.
      $( [8-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x A $.
    sbc5.1 $e |- A e. _V $.
    $( An equivalence for class substitution. $)
    sbc5 $p |- ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb sbc5g ax-mp ) CEFABCGBHCIAJBKLDABCEMN
      $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x A $.
    sbc6.1 $e |- A e. _V $.
    $( An equivalence for class substitution.  (The proof was shortened by Eric
       Schmidt, 17-Jan-2007.) $)
    sbc6 $p |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) $=
      ( cvv wcel wsbc cv wceq wi wal wb sbc6g ax-mp ) CEFABCGBHCIAJBKLDABCEMN
      $.
      $( [18-Jan-2007] $) $( [23-Aug-1993] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( An equivalence for class substitution in the spirit of ~df-clab .  Note
       that ` x ` and ` A ` don't have to be distinct. $)
    sbc7g $p |- ( A e. V -> ( [ A / x ] ph
                     <-> E. y ( y = A /\ [ y / x ] ph ) ) ) $=
      ( wcel wsb wsbc cv wceq wa wex sbccog sbc5g bitr3d ) DEFABCGZCDHABDHCIDJP
      KCLABCDEMPCDENO $.
      $( [18-Nov-2008] $)

    $( This is the closest we can get to ~ df-sbc if we start from ~ dfsbcq
       (see its comments).  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbc8g $p |- ( A e. V -> ( [ A / x ] ph <-> A e. { x | ph } ) ) $=
      ( vy cv wsbc cab wcel dfsbcq eleq1 df-clab bicomi vtoclbg ) ABEFZGZOABHZI
      ZABCGCQIECDABOCJOCQKRPAEBLMN $.
      $( [29-Jun-2011] $) $( [18-Nov-2008] $)
  $}

  ${
    cbvsbc.1 $e |- ( ph -> A. y ph ) $.
    cbvsbc.2 $e |- ( ps -> A. x ps ) $.
    cbvsbc.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change bound variables in a wff substitution.  (Contributed by Jeff
       Hankins, 19-Sep-2009.)  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    cbvsbc $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( wcel cab wsbc wb cbvab eleq2i a1i sbc8g 3bitr4d ) EFJZEACKZJZEBDKZJZACE
      LBDELUAUCMSTUBEABCDGHINOPACEFQBDEFQR $.
      $( [25-Aug-2011] $) $( [19-Sep-2009] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvsbcv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a class substitution using implicit
       substitution. $)
    cbvsbcv $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( ax-17 cbvsbc ) ABCDEFADHBCHGI $.
      $( [25-Aug-2011] $) $( [30-Sep-2008] $)
  $}

  ${
    $d x y A $.  $d y ps $.
    $( Conversion of implicit substitution to explicit class substitution,
       using a bound-variable hypothesis instead of distinct variables.
       (Closed theorem version of ~ sbciegf .) $)
    sbciegft $p |- ( ( A e. V /\ A. x ( ps -> A. x ps ) /\
              A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi cv wceq wb w3a wsbc wa wex sbc5g 3ad2ant1 bi1 imim2i imp3a
      alimi 19.23t biimpa sylan2 3adant1 sylbid bi2 com23 19.21t sbc6g sylibrd
      impbid ) DEFZBBCGHCGZCIDJZABKZHZCGZLZACDMZBUSUTUOANZCOZBUMUNUTVBKURACDEPQ
      UNURVBBHZUMURUNVABHZCGZVCUQVDCUQUOABUPABHUOABRSTUAUNVEVCVABCUBUCUDUEUFUSB
      UOAHZCGZUTUNURBVGHZUMURUNBVFHZCGZVHUQVICUQUOBAUPBAHUOABUGSUHUAUNVJVHBVFCU
      IUCUDUEUMUNUTVGKURACDEUJQUKUL $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x V $.
    sbciegf.1 $e |- ( A e. V -> ( ps -> A. x ps ) ) $.
    sbciegf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbciegf $p |- ( A e. V -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi wsbc wb 19.21aiv cv wceq ax-gen sbciegft 3exp mpii mpd ) DE
      HZBBCIJZCIZACDKBLZUAUBCFMUAUCCNDOABLJZCIZUDUECGPUAUCUFUDABCDEQRST $.
      $( [14-Dec-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcieg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcieg $p |- ( A e. V -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel cvv wsbc wb elisset wal wi ax-17 a1i sbciegf syl ) DEGDHGZACDIBJDE
      KABCDHBBCLMRBCNOFPQ $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcie.1 $e |- A e. _V $.
    sbcie.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcie $p |- ( [ A / x ] ph <-> ps ) $=
      ( cvv wcel wsbc wb sbcieg ax-mp ) DGHACDIBJEABCDGFKL $.
      $( [4-Sep-2004] $)
  $}

  ${
    $d z w A $.  $d y z w B $.  $d z ph $.  $d x z w $.
    elrabsf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Membership in a restricted class abstraction, expressed with explicit
       class substitution.  (The variation ~ elrabf has implicit
       substitution).  The hypothesis specifies that ` x ` must not be a free
       variable in ` B ` . $)
    elrabsf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ [ A / x ] ph ) ) $=
      ( vz vw crab wcel cv wsbc wa ax-17 hbs1 sbequ12 cbvrab eleq2i cvv wi
      hbsbc1 wceq sbceq1a wb wex 19.8a isset sylibr biimt syl bitrd elrabf
      elisset pm5.32i bitr4i sbccog 3bitri ) DABEIZJDABGKZLZGEIZJZDEJZUTGDLZMZV
      CABDLZMURVADAUTBGCEFCKEJGNAGNABGOABGPQRVBVCDSJZVDTZMVEUTVHGHDEHKZDJGNZVIE
      JGNUTGHDSVJUAUSDUBZUTVDVHUTGDUCVKVGVDVHUDZVKVKGUEVGVKGUFGDUGUHVGVDUIZUJUK
      ULVCVDVHVCVGVLDEUMVMUJUNUOVCVDVFABGDEUPUNUQ $.
      $( [30-Sep-2003] $)
  $}

  ${
    $d x y $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution.  Theorem 6.13 of [Quine] p. 44. $)
    elabs2 $p |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) $=
      ( vy cab wcel cvv crab wsbc wa rabab eleq2i cv ax-17 elrabsf bitr3i ) CAB
      EZFCABGHZFCGFABCIJRQCABKLABDCGDMGFBNOP $.
      $( [7-Mar-2004] $)
  $}

  $( Membership in a class abstraction, expressed in terms of class
     substitution.  Conveniently, this theorem has no distinct variable
     restrictions.  Except for the antecedent, this theorem is "almost" like
     ~ df-sbc but was proved using only ~ dfsbcq as its starting point (making
     no other reference to ~ df-sbc ).  We prefer not to make direct reference
     to ~ df-sbc (i.e. commit to it) since its behavior at proper classes is at
     odds with Quine, whereas ~ dfsbcq is not.  (Quine's class substitution
     cannot be expressed in closed form.)  This theorem serves as a weaker
     Quine-compatible substitute for ~ df-sbc . $)
  elabsg $p |- ( A e. V -> ( A e. { x | ph } <-> [ A / x ] ph ) ) $=
    ( wcel cvv cab wsbc wb elisset elabs2 baib syl ) CDECFEZCABGEZABCHZICDJONPA
    BCKLM $.
    $( [4-Nov-2005] $)

  ${
    elabs.1 $e |- A e. _V $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution. $)
    elabs $p |- ( A e. { x | ph } <-> [ A / x ] ph ) $=
      ( cab wcel cvv wsbc elabs2 mpbiran ) CABEFCGFABCHABCIDJ $.
      $( [7-Mar-2004] $)
  $}

  ${
    $d x y B $.  $d y A $.
    $( Substitution applied to an atomic wff.  Set theory version of ~ eqsb3 .
       (Contributed by Andrew Salmon, 29-Jun-2011.) $)
    eqsbc3 $p |- ( A e. V -> ( [ A / x ] x = B <-> A = B ) ) $=
      ( vy cv wceq wsbc dfsbcq eqeq1 eqsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDMAN
      BINBCJEACKL $.
      $( [29-Jun-2011] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.  $d y ps $.
    $( Move negation in and out of class substitution. $)
    sbcng $p |- ( A e. V -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) $=
      ( vy wn cv wsbc dfsbcq wceq notbid sbn vtoclbg ) AFZBEGZHABOHZFNBCHABCHZF
      ECDNBOCIOCJPQABOCIKABELM $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over implication. $)
    sbcimg $p |- ( A e. V ->
           ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) $=
      ( vy wi cv wsbc dfsbcq wceq imbi12d sbim vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over conjunction. $)
    sbcang $p |- ( A e. V ->
           ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) $=
      ( vy wa cv wsbc dfsbcq wceq anbi12d sban vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over disjunction. $)
    sbcorg $p |- ( A e. V ->
           ( [ A / x ] ( ph \/ ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) $=
      ( vy wo cv wsbc dfsbcq wceq orbi12d sbor vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over biconditional.  (Contributed by
       Raph Levien, 10-Apr-2004.) $)
    sbcbig $p |- ( A e. V ->
         ( [ A / x ] ( ph <-> ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) $=
      ( vy wb cv wsbc dfsbcq wceq bibi12d sbbi vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [19-Apr-2004] $)
  $}

  ${
    $d x z A $.  $d x y z $.  $d z ph $.
    $( Move universal quantifier in and out of class substitution. $)
    sbcalg $p |- ( A e. V -> ( [ A / y ] A. x ph <-> A. x [ A / y ] ph ) ) $=
      ( vz wal cv wsbc dfsbcq wceq albidv sbal vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Move existential quantifier in and out of class substitution. $)
    sbcexg $p |- ( A e. V -> ( [ A / y ] E. x ph <-> E. x [ A / y ] ph ) ) $=
      ( vz wex cv wsbc dfsbcq wceq exbidv sbex vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [21-May-2004] $)
  $}

  ${
    $d x B $.  $d x A $.
    $( Set theory version of ~ sbeqal1 .  (Contributed by Andrew Salmon,
       28-Jun-2011.) $)
    sbceqal $p |- ( A e. V -> ( A. x ( x = A -> x = B ) -> A = B ) ) $=
      ( wcel cv wceq wi wal wsbc a4sbc sbcimg wb eqid eqeq1 sbcieg mpbiri
      pm5.5 syl eqsbc3 3bitrd sylibd ) BDEZAFZBGZUDCGZHZAIUGABJZBCGZUGABDKUCUHU
      EABJZUFABJZHZUKUIUEUFABDLUCUJULUKMUCUJBBGZBNUEUMABDUDBBOPQUJUKRSABCDTUAUB
      $.
      $( [28-Jun-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Theorem *14.121 in [WhiteheadRussell] p. 185.  (Contributed by Andrew
       Salmon, 28-Jun-2011.)  (The proof was shortened by Wolf Lammen,
       9-May-2013. $)
    sbeqalb $p |- ( A e. V -> ( ( A. x ( ph <-> x = A ) /\ A. x ( ph <->
      x = B ) ) -> A = B ) ) $=
      ( cv wceq wb wal wa wi wcel bibi1 biimpa biimpd alanimi sbceqal syl5 ) AB
      FZCGZHZBIASDGZHZBIJTUBKZBICELCDGUAUCUDBUAUCJTUBUAUCTUBHATUBMNOPBCDEQR $.
      $( [9-May-2013] $) $( [9-Jun-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Obsolete proof of ~ sbeqalb .) $)
    sbeqalbOLD $p |- ( A e. V -> ( ( A. x ( ph <-> x = A ) /\ A. x ( ph <->
      x = B ) ) -> A = B ) ) $=
      ( cv wceq wb wal wa wi wcel bibi1 biimpa bi1 syl alanimi sbceqal syl5 )
      ABFZCGZHZBIATDGZHZBIJUAUCKZBICELCDGUBUDUEBUBUDJUAUCHZUEUBUDUFAUAUCMNUAUCO
      PQBCDERS $.
      $( [28-Jun-2011] $) $( [9-Jun-2011] $)
  $}

  ${
    sbcbid.1 $e |- ( ph -> A. x ph ) $.
    sbcbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution. $)
    sbcbid $p |- ( ( ph /\ A e. V ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( wcel wsbc wb wal 19.21ai a4sbc syl5 sbcbig sylibd impcom ) EFIZABDEJCDE
      JKZSABCKZDEJZTAUADLSUBAUADGHMUADEFNOBCDEFPQR $.
      $( [26-Feb-2005] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution.  (The proof was
       shortened by Eric Schmidt, 17-Jan-2007.) $)
    sbcbidv $p |- ( ( ph /\ A e. V ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( ax-17 sbcbid ) ABCDEFADHGI $.
      $( [18-Jan-2007] $) $( [11-Oct-2004] $)
  $}

  ${
    sbcbii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building inference rule for class substitution. $)
    sbcbii $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / x ] ps ) ) $=
      ( cvv wceq wcel wsbc wb eqid a1i sbcbidv mpan ) GGHZDEIACDJBCDJKGLPABCDEA
      BKPFMNO $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x C $.  $d x A $.
    $( ~ eqsbc3 with set variable on right side of equals sign.  This proof was
       automatically generated from the virtual deduction proof ~ eqsbc3rVD
       using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    eqsbc3r $p |- ( A e. B -> ( [ A / x ] C = x <-> C = A ) ) $=
      ( wcel cv wceq wsbc eqcom sbcbii biimpd eqsbc3 sylibd syl6ib idd syl6ibr
      sylibrd impbid ) BCEZDAFZGZABHZDBGZSUBBDGZUCSUBTDGZABHZUDSUBUFUAUEABCDTIJ
      ZKABDCLZMBDIZNSUCUFUBSUCUDUFSUCUCUDSUCOUIPUHQUGQR $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d y ch $.  $d y ps $.  $d y ph $.  $d y A $.  $d x y $.
    $( Distribution of class substitution over triple conjunction.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbc3ang $p |- ( A e. V -> ( [ A / x ] ( ph /\ ps /\ ch ) <->
                ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) ) ) $=
      ( vy w3a cv wsbc dfsbcq wceq 3anbi123d sb3an vtoclbg ) ABCHZDGIZJADQJZBDQ
      JZCDQJZHPDEJADEJZBDEJZCDEJZHGEFPDQEKQELRUASUBTUCADQEKBDQEKCDQEKMABCDGNO
      $.
      $( [29-Jun-2011] $) $( [14-Dec-2006] $)
  $}

  ${
    $d y z A $.  $d x y B $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel1gv $p |- ( A e. V -> ( [ A / x ] x e. B <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq1 clelsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDM
      ANBINBCJEACKL $.
      $( [29-Jun-2006] $) $( [17-Nov-2006] $)
  $}

  ${
    $d y z B $.  $d x y A $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel2gv $p |- ( B e. V -> ( [ B / x ] A e. x <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq2 ax-17 sbie vtoclbg ) BAFZGZAEFZHBPGZOACHBC
      GECDOAPCIPCBJOQAEQAKNPBJLM $.
      $( [29-Jun-2011] $) $( [17-Nov-2006] $)
  $}

  ${
    $d x B $.
    sbcth2.1 $e |- ( x e. B -> ph ) $.
    $( A substitution into a theorem. $)
    sbcth2 $p |- ( A e. B -> [ A / x ] ph ) $=
      ( wcel wsbc cv wi sbcth sbcimg sbcel1gv imbi1d bitrd mpbid pm2.43i ) CDFZ
      ABCGZQBHDFZAIZBCGZQRIZTBCDEJQUASBCGZRIUBSABCDKQUCQRBCDDLMNOP $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d y ph $.  $d x y z $.
    hbsbc1gd.1 $e |- ( ph -> A. x ph ) $.
    hbsbc1gd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbsbc1g .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbc1gd $p |- ( ( ph /\ A e. V ) ->
                   ( [ A / x ] ps -> A. x [ A / x ] ps ) ) $=
      ( vz wcel cvv wsbc wal wi elisset wa cv cab wceq wb 19.21aiv abidhb
      eleq1 3syl biimpar hba1 hbab hbsbc1g syl dfsbcq adantr a1d a17d hbeld
      hband anabsi5 albid 3imtr3d sylan2 ) EFJAEKJZBCELZVACMZNEFOAUTPZBCIQEJZCM
      ZIRZLZVGCMZVAVBVCVFKJZVGVHNAVIUTADQZEJZVKCMNZDMZVFESZVIUTTAVLDHUAZCDIEUBZ
      VFEKUCUDUEBCDVFKVECIDVDCUFUGUHUIAVGVATZUTAVMVNVQVOVPBCVFEUJUDUKZVCVGVACAU
      TVCCMAAUTCAACMAGULACDEKGHAVJKJCUMUNUOUPVRUQURUS $.
      $( [26-Jun-2011] $) $( [23-May-2006] $)
  $}

  ${
    $d w z A $.  $d z ph $.  $d w x z $.
    hbsbcgd.1 $e |- ( ph -> A. x ph ) $.
    hbsbcgd.2 $e |- ( ph -> A. y ph ) $.
    hbsbcgd.3 $e |- ( ph -> ( z e. A -> A. x z e. A ) ) $.
    hbsbcgd.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbsbcg .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbcgd $p |- ( ( ph /\ A e. V ) ->
                 ( [ A / y ] ps -> A. x [ A / y ] ps ) ) $=
      ( vw wcel cvv wsbc wal wi elisset wa cv cab wceq wb 19.21aiv abidhb
      eleq1 3syl biimpar hba1 hbab hbsbcg syl dfsbcq adantr ax-4 impbid2
      sbcbid bitrd a1d a17d hbeld hband anabsi5 albid 3imtr3d sylan2 ) FGMAFNMZ
      BDFOZVHCPZQFGRAVGSZBCPZDLTFMZCPZLUAZOZVOCPZVHVIVJVNNMZVOVPQAVQVGAETZFMZVS
      CPQZEPZVNFUBZVQVGUCAVTEJUDZCELFUEZVNFNUFUGUHVKCDEVNNVMCLEVLCUIUJBCUIUKULV
      JVOVKDFOZVHAVOWEUCZVGAWAWBWFWCWDVKDVNFUMUGUNAVKBDFNIAVKBBCUOKUPUQURZVJVOV
      HCAVGVJCPAAVGCAACPAHUSACEFNHJAVRNMCUTVAVBVCWGVDVEVF $.
      $( [21-Jun-2011] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Substitution analog of Theorem 19.20 of [Margaris] p. 90. $)
    sbcimdv $p |- ( ( ph /\ A e. V ) ->
                     ( [ A / x ] ps -> [ A / x ] ch ) ) $=
      ( wcel wsbc wi wal 19.21aiv a4sbc syl5 sbcimg sylibd impcom ) EFHZABDEICD
      EIJZRABCJZDEIZSATDKRUAATDGLTDEFMNBCDEFOPQ $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    sbcgf.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in a wff does not affect it.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcgf $p |- ( A e. V -> ( [ A / x ] ph <-> ph ) ) $=
      ( vy cv wsbc dfsbcq wceq biidd sbf vtoclbg ) ABFGZHAABCHAFCDABNCINCJAKABF
      ELM $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x ph $.
    $( Substitution for a variable not occurring in a wff does not affect it.
       Distinct variable form of ~ sbcgf .  (Contributed by Alan Sare,
       10-Nov-2012.) $)
    sbcg $p |- ( A e. V -> ( [ A / x ] ph <-> ph ) ) $=
      ( ax-17 sbcgf ) ABCDABEF $.
      $( [10-Nov-2012] $)
  $}

  ${
    sbc19.21g.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in antecedent affects only the
       consequent. $)
    sbc19.21g $p |- ( A e. V ->
                    ( [ A / x ] ( ph -> ps ) <-> ( ph -> [ A / x ] ps ) ) ) $=
      ( wcel wi wsbc sbcimg sbcgf imbi1d bitrd ) DEGZABHCDIACDIZBCDIZHAPHABCDEJ
      NOAPACDEFKLM $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ps $.
    sbc2ie.1 $e |- A e. _V $.
    sbc2ie.2 $e |- B e. _V $.
    sbc2ie.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2ie $p |- ( [ A / x ] [ B / y ] ph <-> ps ) $=
      ( wsbc cv wceq wi cvv wcel wb sbcimg ax-mp expcom pm5.74d sbcie ax-17
      sbcgf imbi1i 3bitr3ri pm5.74ri ) ADFJZBCEGCKELZUGBUHAMZDFJZUHDFJZUGMZUHBM
      ZUHUGMFNOZUJULPHUHADFNQRUIUMDFHDKFLZUHABUHUOABPISTUAUKUHUGUNUKUHPHUHDFNUH
      DUBUCRUDUEUFUA $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ph $.  $d x y ch $.
    sbc2iedv.1 $e |- A e. _V $.
    sbc2iedv.2 $e |- B e. _V $.
    sbc2iedv.3 $e |- ( ph -> ( ( x = A /\ y = B ) -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2iedv $p |- ( ph -> ( [ A / x ] [ B / y ] ps <-> ch ) ) $=
      ( wsbc wi cvv wcel wb ax-17 sbc19.21g ax-mp sbcbii cv wceq wa impcom
      pm5.74da sbc2ie 3bitr3ri pm5.74ri ) ABEGKZDFKZCABLZEGKZDFKZAUHLZDFKZACLZA
      UILZFMNZULUNOHUKUMDFMGMNUKUMOIABEGMAEPQRSRUJUODEFGHIDTFUAETGUAUBZABCAURBC
      OJUCUDUEUQUNUPOHAUHDFMADPQRUFUG $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y V $.  $d x W $.
    $( Lemma for ~ sbccomg . $)
    sbccomglem $p |- ( ( A e. V /\ B e. W ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( wcel wa wsbc cv wceq wex wb sbc5g sbcbidv ancoms adantr excom exdistr
      an12 exbii 19.42v bitri 3bitr3i adantl bitr2d syl5bb 3bitrd ) DFHZEGHZIZA
      CEJZBDJZCKELZAIZCMZBDJZBKDLZUQIBMZABDJZCEJZUKUJUNURNUKUMUQBDFACEGOPQUJURU
      TNUKUQBDFORUTUOUSAIZBMZIZCMZULVBUSUPIZCMBMVGBMZCMUTVFVGBCSUSUPBCTVHVECVHU
      OVCIZBMVEVGVIBUSUOAUAUBUOVCBUCUDUBUEULVBVDCEJZVFUJVAVDCEGABDFOPUKVJVFNUJV
      DCEGOUFUGUHUI $.
      $( [14-Nov-2005] $)
  $}

  ${
    $d w y z A $.  $d w x z B $.  $d w z ph $.  $d x y $.
    $( Commutative law for double class substitution.  (The proof was shortened
       by Eric Schmidt, 17-Jan-2007.) $)
    sbccomg $p |- ( ( A e. V /\ B e. W ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( vw vz wcel cvv wsbc wb elisset wa cv sbccog adantr visset sbccomglem
      mpan2 mp2an sbcbii bitr3d sbcbidv ancoms 3bitrd adantl 3bitr3rd syl2an )
      DFJDKJZEKJZACELZBDLZABDLZCELZMEGJDFNEGNUKULOZACHPZLZHELZBIPZLZIDLZUTBDLZU
      PUNUKVCVDMULUTBIDKQRUQVCABVALZIDLZCURLZHELZVFCELZUPUQVCVECURLZHELZIDLZVJI
      DLZHELVHULUKVCVLMULVBVKIDKULUSBVALZHELZVBVKULVAKJZVOVBMISZUSHBEVAKKTUAVNV
      JHEKVPURKJZVNVJMVQHSZABCVAURKKTUBUCUDUEUFVJIHDEKKTUKVMVGHEKUKVRVMVGMVSVEI
      CDURKKTUAUEUGULVHVIMUKVFCHEKQUHUKVFUOCEKABIDKQUEUGULUKVDUNMULUTUMBDKACHEK
      QUEUFUIUJ $.
      $( [18-Jan-2007] $) $( [15-Nov-2005] $)
  $}

  ${
    $d w z A $.  $d w x B $.  $d w V $.  $d w ph $.  $d x y $.  $d w y z $.
    $( Interchange class substitution and restricted quantifier.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       22-Feb-2010.) $)
    sbcralt $p |- ( A. y ( A e. V /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw wcel cv wal wi wa wral wsbc wceq wb sbc6g adantr a4s ralcom4 hba1
      eleq1 albidv imbi12d a4v adantl hbeleqd a5i r19.21t syl syl5rbb bitrd
      cvv visset r19.21v albii bitr2i syl6bb ralbidv bitr4d ax-mp sbcbii
      ralbid 3bitr4d sbccog 3bitr3d ) EGIZDJZEIZVJCKZLZDKZMZCKZACFNZBHJZOZHEOZA
      BVQOZHEOZCFNZVPBEOZABEOZCFNVOVTCFNZHEOZVQEPZVTLZHKZCFNZVSWBVOWFWGWELZHKZW
      JVNWFWLQZCVHWMVMWEHEGRSTWJWHCFNZHKVOWLWHCHFUAVOWNWKHVOWGWGCKLZCKWNWKQVNWO
      CVOCHEVNCUBZVNVQEIZWQCKZLZCVMWSVHVLWSDHVIVQPZVJWQVKWRVIVQEUCZWTVJWQCXAUDU
      EUFUGTUHUIWGVTCFUJUKUDULUMVNVSWFQZCVHXBVMVRWEHEGVQUNIZVRWEQHUOXCVRBJVQPZA
      LZBKZCFNZWEXCVRXDVPLZBKZXGVPBVQUNRXGXECFNZBKXIXECBFUAXJXHBXDACFUPUQURUSXC
      VTXFCFABVQUNRUTVAVBVCSTVOWAWICFWPVNWAWIQZCVHXKVMVTHEGRSTVDVEVNVSWCQZCVHXL
      VMVPBHEGVFSTVOWAWDCFWPVNWAWDQZCVHXMVMABHEGVFSTVDVG $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 22-Feb-2010.) $)
    sbcrext $p |- ( A. y ( A e. V /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel cv wal wi wa wrex wsbc wn wral wb dfrex2 sbcbii sbcng bitrd
      adantr a4s sbcralt hba1 ralbid notbid syl6bbr ) EGHZDIEHZUJCJKDJZLZCJZACF
      MZBENZABENZOZCFPZOZUPCFMUMUOAOZCFPZBENZOZUSULUOVCQZCUIVDUKUIUOVAOZBENVCUN
      VEBEGACFRSVABEGTUAUBUCUMVBURUMVBUTBENZCFPURUTBCDEFGUDUMVFUQCFULCUEULVFUQQ
      ZCUIVGUKABEGTUBUCUFUAUGUAUPCFRUH $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)
  $}

  $( MAY BE REVISED - may be deleted $)
  ${
    $d w z A $.  $d x w B $.  $d w z V $.  $d w ph $.  $d x y z w $.
    sbcralgf.1 $e |- ( A. y A e. V -> ( z e. A -> A. y z e. A ) ) $.
    $( Interchange class substitution and restricted quantifier. $)
    sbcralgf $p |- ( A. y A e. V ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw wcel wal wral cv wsbc wceq wi wb sbc6g a4s ralcom4 hba1 ax-17
      hblemd hbeleqd a5i r19.21t syl albidv syl5rbb bitrd cvv visset r19.21v
      albii bitr2i syl6bb ralbidv bitr4d ax-mp sbcbii ralbid 3bitr4d sbccog
      3bitr3d ) EGJZCKZACFLZBIMZNZIENZABVHNZIENZCFLZVGBENZABENZCFLVFVKCFLZIENZV
      HEOZVKPZIKZCFLZVJVMVFVQVRVPPZIKZWAVEVQWCQCVPIEGRSWAVSCFLZIKVFWCVSCIFTVFWD
      WBIVFVRVRCKPZCKWDWBQVEWECVFCIEVECUAZVFCDIEWFVFDUBHUCUDUEVRVKCFUFUGUHUIUJV
      EVJVQQCVIVPIEGVHUKJZVIVPQIULWGVIBMVHOZAPZBKZCFLZVPWGVIWHVGPZBKZWKVGBVHUKR
      WKWICFLZBKWMWICBFTWNWLBWHACFUMUNUOUPWGVKWJCFABVHUKRUQURUSUTSVFVLVTCFWFVEV
      LVTQCVKIEGRSVAVBVEVJVNQCVGBIEGVCSVFVLVOCFWFVEVLVOQCABIEGVCSVAVD $.
      $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier. $)
    sbcrexgf $p |- ( A. y A e. V ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel wal wrex wsbc wn wral wb dfrex2 sbcbii sbcng bitrd a4s sbcralgf
      hba1 ralbid notbid syl6bbr ) EGIZCJZACFKZBELZABELZMZCFNZMZUJCFKUGUIAMZCFN
      ZBELZMZUMUFUIUQOCUFUIUOMZBELUQUHURBEGACFPQUOBEGRSTUGUPULUGUPUNBELZCFNULUN
      BCDEFGHUAUGUSUKCFUFCUBUFUSUKOCABEGRTUCSUDSUJCFPUE $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d x B $.  $d x y z $.  $d ph z $.  $d B z $.
    $( Interchange class substitution and restricted quantifier.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcralg $p |- ( A e. V ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vz wral cv wsbc dfsbcq wceq ralbidv wcel ax-17 hbs1 hbral sbequ12 sbie
      vtoclbg ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDKUBDLUCUECEABUBDKMUAU
      DBGUCBCECIENBOABGPQBIUBLAUCCEABGRMST $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)

    $( Interchange class substitution and restricted existential quantifier.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcrexg $p |- ( A e. V ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( vz wrex cv wsbc dfsbcq wceq rexbidv wcel ax-17 hbs1 hbrex sbequ12 sbie
      vtoclbg ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDKUBDLUCUECEABUBDKMUAU
      DBGUCBCECIENBOABGPQBIUBLAUCCEABGRMST $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)

    $( Interchange class substitution and restricted uniqueness quantifier. $)
    sbcreug $p |- ( A e. V ->
                 ( [ A / x ] E! y e. B ph <-> E! y e. B [ A / x ] ph ) ) $=
      ( vz wreu cv wsbc dfsbcq wceq reubidv wcel ax-17 hbs1 hbreu sbequ12 sbie
      vtoclbg ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDKUBDLUCUECEABUBDKMUAU
      DBGUCBCECIENBOABGPQBIUBLAUCCEABGRMST $.
      $( [24-Feb-2013] $)
  $}

  ${
    $d y w A $.  $d w z B $.  $d w ph $.  $d x y $.  $d w x z $.
    sbcabel.1 $e |- ( z e. B -> A. x z e. B ) $.
    $( Interchange class substitution and class abstraction. $)
    sbcabel $p |- ( A e. V -> ( [ A / x ] { y | ph } e. B <->
                  { y | [ A / x ] ph } e. B ) ) $=
      ( vw wcel cvv cab wsbc wb elisset cv wceq wa wex df-clel sbcbii sbcexg
      sbcang wal abeq2 sbcalg sbcbig ax-17 sbcgf bibi1d bitrd albidv 3bitrd
      syl6bbr hbel anbi12d exbidv syl ) EGJEKJZACLZFJZBEMZABEMZCLZFJZNEGOUSVBIP
      ZVDQZVFFJZRZISZVEUSVBVFUTQZVHRZISZBEMVLBEMZISVJVAVMBEKIUTFTUAVLIBEKUBUSVN
      VIIUSVNVKBEMZVHBEMZRVIVKVHBEKUCUSVOVGVPVHUSVOCPVFJZVCNZCUDZVGUSVOVQANZCUD
      ZBEMVTBEMZCUDVSVKWABEKACVFUEUAVTCBEKUFUSWBVRCUSWBVQBEMZVCNVRVQABEKUGUSWCV
      QVCVQBEKVQBUHUIUJUKULUMVCCVFUEUNVHBEKBDDVFFDPVFJBUHHUOUIUPUKUQUMIVDFTUNUR
      $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y ph $.
    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69.  This
       provides an axiom for a predicate calculus for a restricted domain.
       This theorem generalizes the unrestricted ~ stdpc4 and ~ a4sbc .  See
       also ~ ra4sbca and ~ ra4csbela . $)
    ra4sbc $p |- ( A e. B -> ( A. x e. B ph -> [ A / x ] ph ) ) $=
      ( vy wral wcel wsbc wi cv wceq wal df-ral stdpc4 sylbi dfsbcq sbcimg
      sbcel1gv imbi1d bitrd biimpd pm2.43b syl6bi syl5 vtocleg pm2.43a ) ABDFZC
      DGZABCHZUGUHUIIZIECDUGBJDGZAIZBEJZHZUMCKZUJUGULBLUNABDMULBENOUOUNULBCHZUJ
      ULBUMCPUPUHUIUHUPUJUHUPUKBCHZUIIUJUKABCDQUHUQUHUIBCDDRSTUAUBUCUDUEUF $.
      $( [17-Nov-2006] $)

    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69. $)
    ra4sbca $p |- ( ( A e. B /\ A. x e. B ph ) -> [ A / x ] ph ) $=
      ( wcel wral wsbc ra4sbc imp ) CDEABDFABCGABCDHI $.
      $( [18-Nov-2006] $) $( [14-Dec-2005] $)

    $( Existence form of ~ ra4sbca . $)
    ra4esbca $p |- ( ( A e. B /\ [ A / x ] ph ) -> E. x e. B ph ) $=
      ( wcel wsbc wrex wn wral ralnex ra4sbc sbcng sylibd syl5bir con4d imp )
      CDEZABCFZABDGZQSRSHAHZBDIZQRHZABDJQUATBCFUBTBCDKABCDLMNOP $.
      $( [29-Feb-2008] $)
  $}

  ${
    ra5.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantifier version of Axiom 5 of [Mendelson] p. 69.  This is
       an axiom of a predicate calculus for a restricted domain.  Compare the
       unrestricted ~ stdpc5 . $)
    ra5 $p |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) $=
      ( wi wral cv wcel wal df-ral bi2.04 albii bitri stdpc5 sylbi syl6ibr ) AB
      FZCDGZACHDIZBFZCJZBCDGSAUAFZCJZAUBFSTRFZCJUDRCDKUEUCCTABLMNAUACEOPBCDKQ
      $.
      $( [16-Jan-2004] $)
  $}

  ${
    $d x y A $.
    rmo3.1 $e |- ( ph -> A. y ph ) $.
    $( Restricted "at most one" using explicit substitution. $)
    rmo3 $p |- ( E* x ( x e. A /\ ph ) <->
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( cv wcel wa wsbc wceq wi wal wral wmo sban cvv wb visset sbcel1gv ax-mp
      anbi1i bitri anbi2i an4 ancom imbi1i impexp 3bitri albii df-ral r19.21v
      3bitr2i ax-17 hban mo3 3bitr4i ) BFZDGZAHZUSBCFZIZHZUQUTJZKZCLZBLURAABUTI
      ZHZVCKZCDMZKZBLUSBNVIBDMVEVJBVEUTDGZURVHKZKZCLVLCDMVJVDVMCVDVKURHZVGHZVCK
      VNVHKVMVBVOVCVBUSVKVFHZHZVOVAVPUSVAURBUTIZVFHVPURABCOVRVKVFUTPGVRVKQCRBUT
      DPSTUAUBUCVQURVKHZVGHVOURAVKVFUDVSVNVGURVKUEUAUBUBUFVNVGVCUGVKURVHUGUHUIV
      LCDUJURVHCDUKULUIUSBCURACURCUMEUNUOVIBDUJUP $.
      $( [4-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d y ph $.  $d x y ps $.  $d x ch $.
    rmoi.b $e |- ( x = B -> ( ph <-> ps ) ) $.
    rmoi.c $e |- ( x = C -> ( ph <-> ch ) ) $.
    $( Consequence of "at most one", using implicit substitution. $)
    rmoi $p |- ( ( E* x ( x e. A /\ ph )
          /\ ( B e. A /\ ps ) /\ ( C e. A /\ ch ) ) -> B = C ) $=
      ( vy cv wcel wa wmo w3a wsbc wceq wi wral 3anass ax-17 rmo3 an4 anbi12i
      bitri wb sbcieg anbi2d ad2antlr hbs1 hban hbim anbi1d eqeq1 imbi12d
      dfsbcq eqeq2 rcla42 imp sylbird expcom imp32 sylbi ) DKZELAMDNZFELZBMZGEL
      ZCMZOZAADJKZPZMZVDVKQZRZJESDESZVFVHMZBCMZMZMZFGQZVJVEVGVIMZMVTVEVGVITVEVP
      WBVSADJEAJUAUBVFBVHCUCUDUEVPVQVRWAVQVPVRWARVQVPMVRBADGPZMZWAVHWDVRUFVFVPV
      HWCCBACDGEIUGUHUIVQVPWDWARZVOWEBVLMZFVKQZRDJFGEEWFWGDBVLDBDUAADJUJUKWGDUA
      ULWEJUAVDFQZVMWFVNWGWHABVLHUMVDFVKUNUOVKGQZWFWDWGWAWIVLWCBADVKGUPUHVKGFUQ
      UOURUSUTVAVBVC $.
      $( [4-Nov-2012] $)
  $}

