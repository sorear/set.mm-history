$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           "Weak deduction theorem" for set theory
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( These lemmas are used to convert hypotheses into antecedents,
     when there is at least one class making the hypothesis true. $)

$(
The Weak Deduction Theorem in set theory
----------------------------------------

In a Hilbert system of logic (which consists of a set of axioms, modus
ponens, and the generalization rule), converting a deduction to a proof using
the Deduction Theorem (taught in introductory logic books) involves an
exponential increase of the number of steps as hypotheses are successively
eliminated.  Here is a trick that is not as general as the Deduction Theorem
but requires only a linear increase in the number of steps.

The general problem:  We want to convert a deduction
  P |- Q
into a proof of the theorem
  |- P -> Q
i.e. we want to eliminate the hypothesis P.  Normally this is done using the
Deduction (meta)Theorem, which looks at the microscopic steps of the
deduction and usually doubles or triples the number of these microscopic
steps for each hypothesis that is eliminated.  We will look at a special case
of this problem, without appealing to the Deduction Theorem.

We assume ZF with class notation.  A and B are arbitrary (possibly
proper) classes.  P, Q, R, S and T are wffs.

We define the conditional operator, if(P,A,B), as follows:
  if(P,A,B) =def= { x | (x \in A & P) v (x \in B & ~P) }
(where x does not occur in A, B, or P).

Lemma 1.
  A = if(P,A,B) -> (P <-> R), B = if(P,A,B) -> (S <-> R), S |- R
Proof:  Logic and Axiom of Extensionality.

Lemma 2.
  A = if(P,A,B) -> (Q <-> T), T |- P -> Q
Proof:  Logic and Axiom of Extensionality.

Here's a simple example that illustrates how it works.  Suppose we have
a deduction
  Ord A |- Tr A
which means, "Assume A is an ordinal class. Then A is a transitive class."
Note that A is a class variable that may be substituted with any class
expression, so this is really a deduction scheme.

We want to convert this to a proof of the theorem (scheme)
  |- Ord A -> Tr A.

The catch is that we must be able to prove "Ord A" for at least one
object A (and this is what makes it weaker than the ordinary Deduction
Theorem).  However it is easy to prove |- Ord 0 (the empty set is
ordinal).  (For a typical textbook "theorem", i.e. deduction, there is
usually at least one object satisfying each hypothesis, otherwise the
theorem would not be very useful.  We can always go back to the standard
Deduction Theorem for those hypotheses where this is not the case.)
Continuing with the example:

Equality axioms (and Extensionality) yield
  |- A = if(Ord A, A, 0) -> (Ord A <-> Ord if(Ord A, A, 0))  (1)
  |- 0 = if(Ord A, A, 0) -> (Ord 0 <-> Ord if(Ord A, A, 0))  (2)
From (1), (2) and |- Ord 0, Lemma 1 yields
  |- Ord if(Ord A, A, 0)                                       (3)
From (3) and substituting if(Ord A, A, 0) for
A in the original deduction,
  |- Tr if(Ord A, A, 0)                                        (4)
Equality axioms (and Extensionality) yield
  |- A = if(Ord A, A, 0) -> (Tr A <-> Tr if(Ord A, A, 0))    (5)
From (4) and (5), Lemma 2 yields
  |- Ord A -> Tr A                                               (Q.E.D.)
$)


  $( Declare new constant symbols. $)
  $c if $.  $( Conditional operator (was "ded" for "deduction class"). $)
  $c , $.  $( Comma (also used for unordered pair notation later) $)

  $( Extend class notation to include the conditional operator.  See ~ df-if
     for a description.  (In older databases this was denoted "ded".) $)
  cif $a class if ( ph , A , B ) $.

  ${
    $d x ph $.  $d x A $.  $d x B $.
    $( Define the conditional operator.  Read ` if ( ph , A , B ) ` as "if
       ` ph ` then ` A ` else ` B ` ." See ~ iftrue and ~ iffalse for its
       values.  In mathematical literature, this operator is rarely defined
       formally but is implicit in informal definitions such as "let f(x)=0 if
       x=0 and 1/x otherwise."  (In older versions of this database, this
       operator was denoted "ded" and called the "deduction class.")

       An important use for us is in conjunction with the weak deduction
       theorem, which converts a hypothesis into an antecedent.  In that role,
       ` A ` is a class variable in the hypothesis and ` B ` is a class
       (usually a constant) that makes the hypothesis true when it is
       substituted for ` A ` .  See ~ dedth for the main part of the weak
       deduction theorem, ~ elimhyp to eliminate a hypothesis, and ~ keephyp to
       keep a hypothesis.  See the Deduction Theorem link on the Metamath Proof
       Explorer Home Page for a description of the weak deduction theorem.  $)
    df-if $a |- if ( ph , A , B ) =
                 { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } $.
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.  $d x C $.
    $( An alternate definition of the conditional operator ~ df-if with one
       fewer connective (but probably less intuitive to understand). $)
    dfif2 $p |- if ( ph , A , B ) =
                 { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } $=
      ( cif cv wcel wa wn wo cab wi df-if df-or orcom iman imbi1i 3bitr4 abbii
      eqtr ) ACDEBFZCGAHZUADGZAIHZJZBKUCALZUBLZBKABCDMUEUGBUDUBJUDIZUBLUEUGUDUB
      NUBUDOUFUHUBUCAPQRST $.
      $( [6-Mar-2006] $) $( [30-Jan-2006] $)

    $( Equality theorem for conditional operator. $)
    ifeq1 $p |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) $=
      ( vx wceq cv wcel wa wn wo cab cif eleq2 anbi1d orbi1d abbidv df-if
      3eqtr4g ) BCFZEGZBHZAIZUADHAJIZKZELUACHZAIZUDKZELABDMACDMTUEUHETUCUGUDTUB
      UFABCUANOPQAEBDRAECDRS $.
      $( [30-Sep-2004] $) $( [1-Sep-2004] $)

    $( Equality theorem for conditional operator. $)
    ifeq2 $p |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) $=
      ( vx wceq cv wcel wa wn wo cab cif eleq2 anbi1d orbi2d abbidv df-if
      3eqtr4g ) BCFZEGZDHAIZUABHZAJZIZKZELUBUACHZUDIZKZELADBMADCMTUFUIETUEUHUBT
      UCUGUDBCUANOPQAEDBRAEDCRS $.
      $( [30-Sep-2004] $) $( [1-Sep-2004] $)

    $( Value of the conditional operator when its first argument is true. $)
    iftrue $p |- ( ph -> if ( ph , A , B ) = A ) $=
      ( vx cv wcel wa wn wo cab cif dedlema abbi2dv df-if syl6reqr ) ABDEZBFZAG
      PCFZAHGIZDJABCKASDBAQRLMADBCNO $.
      $( [2-Sep-2004] $) $( [15-May-1999] $)

    $( Value of the conditional operator when its first argument is false. $)
    iffalse $p |- ( -. ph -> if ( ph , A , B ) = B ) $=
      ( vx wn cv wcel wa wo cab cif dedlemb abbi2dv df-if syl6reqr ) AEZCDFZBGZ
      AHQCGZPHIZDJABCKPTDCARSLMADBCNO $.
      $( [2-Sep-2004] $) $( [14-Aug-1999] $)
  $}

  $( Equality theorem for conditional operators. $)
  ifeq12 $p |- ( ( A = B /\ C = D ) ->
                if ( ph , A , C ) = if ( ph , B , D ) ) $=
    ( wceq cif ifeq1 ifeq2 sylan9eq ) BCFDEFABDGACDGACEGABCDHADECIJ $.
    $( [30-Sep-2004] $) $( [1-Sep-2004] $)

  ${
    ifeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for conditional operator. $)
    ifeq1d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( wceq cif ifeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
      $( [16-Feb-2005] $) $( [16-Feb-2005] $)

    $( Equality deduction for conditional operator. $)
    ifeq2d $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( wceq cif ifeq2 syl ) ACDGBECHBEDHGFBCDEIJ $.
      $( [16-Feb-2005] $) $( [16-Feb-2005] $)
  $}

  $( Equivalence theorem for conditional operators.  (Contributed by Raph
     Levien, 15-Jan-04.) $)
  ifbi $p |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) $=
    ( wb wa wn wo cif wceq dfbi iftrue eqcomd sylan9eq iffalse jaoi sylbi ) ABE
    ABFZAGZBGZFZHACDIZBCDIZJZABKRUDUAABUBCUCACDLBUCCBCDLMNSTUBDUCACDOTUCDBCDOMN
    PQ $.
    $( [18-Jan-2004] $) $( [18-Jan-2004] $)

  ${
    ifbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalence deduction for conditional operators. $)
    ifbid $p |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) $=
      ( wb cif wceq ifbi syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [20-Apr-2005] $) $( [18-Apr-2005] $)
  $}

  ${
    $d x y z $.  $d y z A $.  $d y z B $.  $d z ph $.
    hbif.1 $e |- ( ph -> A. x ph ) $.
    hbif.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbif.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a conditional operator. $)
    hbif $p |- ( y e. if ( ph , A , B ) -> A. x y e. if ( ph , A , B ) ) $=
      ( vz cv wcel wa wn wo cab wal cif ax-17 hbel hban hbne hbor hbab df-if
      eleq2i albii 3imtr4 ) CJZIJZDKZALZUIEKZAMZLZNZIOZKZUQBPUHADEQZKZUSBPUOBIC
      UKUNBUJABBCCUIDUHUIKBRZGSFTULUMBBCCUIEUTHSABFUATUBUCURUPUHAIDEUDUEZUSUQBV
      AUFUG $.
      $( [16-Feb-2005] $) $( [16-Feb-2005] $)
  $}

  ${
    sbif.1 $e |- ( if ( ph , A , B ) = A -> ( ps <-> ch ) ) $.
    sbif.2 $e |- ( if ( ph , A , B ) = B -> ( ps <-> th ) ) $.
    $( Elimination of a conditional operator contained in a wff ` ps ` . $)
    elimif $p |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) $=
      ( wn wo wa exmid biantrur andir cif wceq wb iftrue syl pm5.32i iffalse
      orbi12i 3bitr ) BAAIZJZBKABKZUDBKZJACKZUDDKZJUEBALMAUDBNUFUHUGUIABCAAEFOZ
      EPBCQAEFRGSTUDBDUDUJFPBDQAEFUAHSTUBUC $.
      $( [15-Feb-2005] $) $( [15-Feb-2005] $)
  $}

  ${
    ifboth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    ifboth.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    $( A wff ` th ` containing a conditional operator is true when both of its
       cases are true. $)
    ifboth $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa cif wceq wb iftrue eqcomd syl biimpa adantrr wn iffalse bicomd
      biimpar adantrl pm2.61ian ) ABCIDABDCABDAEAEFJZKBDLAUDEAEFMNGOPQARZCDBUED
      CUEFUDKZDCLUEUDFAEFSNUFCDHTOUAUBUC $.
      $( [4-Sep-2006] $) $( [3-Sep-2006] $)
  $}

  $( Identical true and false arguments in the conditional operator. $)
  ifid $p |- if ( ph , A , A ) = A $=
    ( cif wceq iftrue iffalse pm2.61i ) AABBCBDABBEABBFG $.
    $( [25-Apr-2005] $) $( [18-Apr-2005] $)

  $( Expansion of an equality with a conditional operator. $)
  eqif $p |- ( A = if ( ph , B , C ) <->
             ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) $=
    ( cif wceq eqeq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [15-Feb-2005] $) $( [14-Feb-2005] $)

  $( Membership in a conditional operator. $)
  elif $p |- ( A e. if ( ph , B , C ) <->
             ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) $=
    ( cif wcel eleq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [9-Mar-2005] $) $( [14-Feb-2005] $)

  $( Membership of a conditional operator. $)
  ifel $p |- ( if ( ph , A , B ) e. C <->
             ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) $=
    ( cif wcel eleq1 elimif ) AABCEZDFBDFCDFBCIBDGICDGH $.
    $( [30-Sep-2005] $) $( [10-Sep-2005] $)

  $( Membership (closure) of a conditional operator. $)
  ifcl $p |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) $=
    ( wcel cif eleq1 ifboth ) ABDECDEABCFZDEBCBIDGCIDGH $.
    $( [12-Apr-2005] $) $( [4-Apr-2005] $)

  ${
    $d x A $.  $d x B $.  $d x ph $.
    dedth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    dedth.2 $e |- ch $.
    $( Weak deduction theorem that eliminates a hypothesis ` ph ` , making it
       become an antecedent.  We assume that a proof exists for ` ph ` when
       the class variable ` A ` is replaced with a specific class ` B ` .
       The hypothesis ` ch ` should be assigned to the inference, and the
       inference's hypothesis eliminated with ~ elimhyp .  If the inference
       has other hypotheses with class variable ` A ` , these can be
       kept by assigning ~ keephyp to them.  For more information, see the
       Deduction Theorem ~ http://us.metamath.org/mpegif/mmdeduction.html . $)
    dedth $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl mpbiri ) ABCGADADEHZIBCJAODADEKLFMN $.
      $( [15-May-1999] $)
  $}

  ${
    dedth2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    dedth2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    dedth2v.3 $e |- th $.
    $( Weak deduction theorem for eliminating hypotheses with 2 class
       variables.  See comments in ~ dedth . $)
    dedth2v $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl bitrd mpbiri ) ABDKABCDAEAEGLZMBCNATEAEGO
      PIQAFAFHLZMCDNAUAFAFHOPJQRS $.
      $( [13-Aug-1999] $)
  $}

  ${
    dedth3v.1 $e |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) $.
    dedth3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    dedth3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    dedth3v.4 $e |- ta $.
    $( Weak deduction theorem for eliminating hypothesis with 3 class
       variables.  See comments in ~ dedth . $)
    dedth3v $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd mpbiri ) ABEOABCDEAFAFIPZQBCRAUDFA
      FISTLUAAGAGJPZQCDRAUEGAGJSTMUAAHAHKPZQDERAUFHAHKSTNUAUBUC $.
      $( [13-Aug-1999] $)
  $}

  ${
    $v et $. $( Greek eta $)
    dedth4v.we $f wff et $.
    dedth4v.1 $e |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) $.
    dedth4v.2 $e |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) $.
    dedth4v.3 $e |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) $.
    dedth4v.4 $e |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) $.
    dedth4v.5 $e |- et $.
    $( Weak deduction theorem for eliminating a hypothesis with 4 class
       variables.  See comments in ~ dedth . $)
    dedth4v $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl bitrd 3bitrd mpbiri ) ABNSABDENABCDAFAFJT
      ZUABCUBAUIFAFJUCUDOUEAGAGKTZUACDUBAUJGAGKUCUDPUEUFAHAHLTZUADEUBAUKHAHLUCU
      DQUEAIAIMTZUAENUBAULIAIMUCUDRUEUGUH $.
      $( [27-Apr-2007] $) $( [21-Apr-2007] $)
  $}

  ${
    dedth2h.1 $e |- ( A = if ( ph , A , C ) -> ( ch <-> th ) ) $.
    dedth2h.2 $e |- ( B = if ( ps , B , D ) -> ( th <-> ta ) ) $.
    dedth2h.3 $e |- ta $.
    $( Weak deduction theorem eliminating two hypotheses.  See comments in
       ~ dedth . $)
    dedth2h $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wi cif wceq imbi2d dedth imp ) ABCABCMBDMFHFAFHNOCDBJPBDEGIKLQQR $.
      $( [15-May-1999] $)
  $}

  ${
    $v et $. $( Greek eta $)
    $v ze $. $( Greek zeta $)
    dedth3h.we $f wff et $.
    dedth3h.wz $f wff ze $.
    dedth3h.1 $e |- ( A = if ( ph , A , D ) -> ( th <-> ta ) ) $.
    dedth3h.2 $e |- ( B = if ( ps , B , R ) -> ( ta <-> et ) ) $.
    dedth3h.3 $e |- ( C = if ( ch , C , S ) -> ( et <-> ze ) ) $.
    dedth3h.4 $e |- ze $.
    $( Weak deduction theorem eliminating three hypotheses.  See comments in
       ~ dedth . $)
    dedth3h $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa wi cif wceq imbi2d dedth2h dedth 3impib ) ABCDABCRZDSUFESFIFAFITUADE
      UFNUBBCELMGHJKOPQUCUDUE $.
      $( [15-May-1999] $)
  $}

  ${
    $v et $. $( Greek eta $)
    $v ze $. $( Greek zeta $)
    $v si $. $( Greek sigma $)
    $v rh $. $( Greek rho $)
    $v F $.
    $v G $.
    dedth4h.we $f wff et $.
    dedth4h.wz $f wff ze $.
    dedth4h.ws $f wff si $.
    dedth4h.wr $f wff rh $.
    dedth4h.F $f class F $.
    dedth4h.G $f class G $.
    dedth4h.1 $e |- ( A = if ( ph , A , R ) -> ( ta <-> et ) ) $.
    dedth4h.2 $e |- ( B = if ( ps , B , S ) -> ( et <-> ze ) ) $.
    dedth4h.3 $e |- ( C = if ( ch , C , F ) -> ( ze <-> si ) ) $.
    dedth4h.4 $e |- ( D = if ( th , D , G ) -> ( si <-> rh ) ) $.
    dedth4h.5 $e |- rh $.
    $( Weak deduction theorem eliminating four hypotheses.  See comments in
       ~ dedth . $)
    dedth4h $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa wi cif wceq imbi2d dedth2h imp ) ABUCCDUCZEABUJEUDUJLUDUJMUDFGJKFAFJ
      UEUFELUJRUGGBGKUEUFLMUJSUGCDMNOHIPQTUAUBUHUHUI $.
      $( [16-May-1999] $)
  $}

  ${
    elimhyp.1 $e |- ( A = if ( ph , A , B ) -> ( ph <-> ps ) ) $.
    elimhyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> ps ) ) $.
    elimhyp.3 $e |- ch $.
    $( Eliminate a hypothesis containing class variable ` A ` when it is known
       for a specific class ` B ` .  For more information, see comments in
       ~ dedth . $)
    elimhyp $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl ibi wn iffalse mpbii pm2.61i ) ABABADADEI
      ZJABKATDADELMFNOAPZCBHUAETJCBKUATEADEQMGNRS $.
      $( [15-May-1999] $)
  $}

  ${
    $v et $. $( Greek eta $)
    elimhyp2v.we $f wff et $.
    elimhyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ph <-> ch ) ) $.
    elimhyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    elimhyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    elimhyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    elimhyp2v.5 $e |- ta $.
    $( Eliminate a hypothesis containing 2 class variables. $)
    elimhyp2v $p |- th $=
      ( cif wceq wb iftrue eqcomd syl bitrd ibi wn iffalse mpbii pm2.61i ) ACAC
      AABCAEAEGOZPABQAUGEAEGRSJTAFAFHOZPBCQAUHFAFHRSKTUAUBAUCZDCNUIDICUIGUGPDIQ
      UIUGGAEGUDSLTUIHUHPICQUIUHHAFHUDSMTUAUEUF $.
      $( [14-Aug-1999] $)
  $}

  ${
    $v et $. $( Greek eta $)
    $v ze $. $( Greek zeta $)
    $v si $. $( Greek sigma $)
    elimhyp3v.we $f wff et $.
    elimhyp3v.wz $f wff ze $.
    elimhyp3v.ws $f wff si $.
    elimhyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    elimhyp3v.7 $e |- et $.
    $( Eliminate a hypothesis containing 3 class variables. $)
    elimhyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd ibi wn iffalse mpbii pm2.61i ) ADA
      DAABCDAEAEHUAZUBABUCAUMEAEHUDUENUFAFAFIUAZUBBCUCAUNFAFIUDUEOUFAGAGJUAZUBC
      DUCAUOGAGJUDUEPUFUGUHAUIZKDTUPKLMDUPHUMUBKLUCUPUMHAEHUJUEQUFUPIUNUBLMUCUP
      UNIAFIUJUERUFUPJUOUBMDUCUPUOJAGJUJUESUFUGUKUL $.
      $( [14-Aug-1999] $)
  $}

  ${
    $v et $. $( Greek eta $)
    $v ze $. $( Greek zeta $)
    $v si $. $( Greek sigma $)
    $v rh $. $( Greek rho $)
    $v F $.
    $v G $.
    elimhyp4v.we $f wff et $.
    elimhyp4v.wz $f wff ze $.
    elimhyp4v.ws $f wff si $.
    elimhyp4v.wr $f wff rh $.
    elimhyp4v.cF $f class F $.
    elimhyp4v.cG $f class G $.
    elimhyp4v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp4v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp4v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp4v.4 $e |- ( F = if ( ph , F , G ) -> ( ta <-> ps ) ) $.

    elimhyp4v.5 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp4v.6 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp4v.7 $e |- ( S = if ( ph , C , S ) -> ( si <-> rh ) ) $.
    elimhyp4v.8 $e |- ( G = if ( ph , F , G ) -> ( rh <-> ps ) ) $.
    elimhyp4v.9 $e |- et $.
    $( Eliminate a hypothesis containing 4 class variables (for use with the
       weak deduction theorem ~ dedth ). $)
    elimhyp4v $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl bitrd 3bitrd ibi wn iffalse mpbii
      pm2.61i ) ABABAADEBAACDAFAFIUGZUHACUIAUTFAFIUJUKRULAGAGJUGZUHCDUIAVAGAGJU
      JUKSULUMAHAHKUGZUHDEUIAVBHAHKUJUKTULAPAPQUGZUHEBUIAVCPAPQUJUKUAULUNUOAUPZ
      LBUFVDLNOBVDLMNVDIUTUHLMUIVDUTIAFIUQUKUBULVDJVAUHMNUIVDVAJAGJUQUKUCULUMVD
      KVBUHNOUIVDVBKAHKUQUKUDULVDQVCUHOBUIVDVCQAPQUQUKUEULUNURUS $.
      $( [9-May-2005] $) $( [16-Apr-2005] $)
  $}

  ${
    elimel.1 $e |- B e. C $.
    $( Eliminate a membership hypothesis for weak deduction theorem, when
       special case ` B e. C ` is provable. $)
    elimel $p |- if ( A e. C , A , B ) e. C $=
      ( wcel cif eleq1 elimhyp ) ACEZIABFZCEBCEABAJCGBJCGDH $.
      $( [15-May-1999] $)
  $}

  ${
    keephyp.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    keephyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    keephyp.3 $e |- ps $.
    keephyp.4 $e |- ch $.
    $( Transform a hypothesis ` ps ` that we want to keep (but contains the
       same class variable ` A ` used in the eliminated hypothesis) for use
       with the weak deduction theorem. $)
    keephyp $p |- th $=
      ( ifboth mp2an ) BCDIJABCDEFGHKL $.
      $( [15-May-1999] $)
  $}

  ${
    $v et $. $( Greek eta $)
    keephyp2v.we $f wff et $.
    keephyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    keephyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    keephyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    keephyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    keephyp2v.5 $e |- ps $.
    keephyp2v.6 $e |- ta $.
    $( Keep a hypothesis containing 2 class variables (for use with the weak
       deduction theorem ~ dedth ). $)
    keephyp2v $p |- th $=
      ( cif wceq wb iftrue eqcomd syl bitrd mpbii wn iffalse pm2.61i ) ADABDOAB
      CDAFAFHQZRBCSAUHFAFHTUAKUBAGAGIQZRCDSAUIGAGITUALUBUCUDAUEZEDPUJEJDUJHUHRE
      JSUJUHHAFHUFUAMUBUJIUIRJDSUJUIIAGIUFUANUBUCUDUG $.
      $( [15-May-2005] $) $( [16-Apr-2005] $)
  $}

  ${
    $v et $. $( Greek eta $)
    $v ze $. $( Greek zeta $)
    $v si $. $( Greek sigma $)
    $v rh $. $( Greek rho $)
    keephyp3v.we $f wff et $.
    keephyp3v.wz $f wff ze $.
    keephyp3v.ws $f wff si $.
    keephyp3v.wr $f wff rh $.
    keephyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( rh <-> ch ) ) $.
    keephyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    keephyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    keephyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    keephyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    keephyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    keephyp3v.7 $e |- rh $.
    keephyp3v.8 $e |- et $.
    $( Keep a hypothesis containing 3 class variables. $)
    keephyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd mpbii wn iffalse pm2.61i ) ADANDUA
      ANBCDAEAEHUCZUDNBUEAUNEAEHUFUGOUHAFAFIUCZUDBCUEAUOFAFIUFUGPUHAGAGJUCZUDCD
      UEAUPGAGJUFUGQUHUIUJAUKZKDUBUQKLMDUQHUNUDKLUEUQUNHAEHULUGRUHUQIUOUDLMUEUQ
      UOIAFIULUGSUHUQJUPUDMDUEUQUPJAGJULUGTUHUIUJUM $.
      $( [27-Sep-1999] $)
  $}

  ${
    keepel.1 $e |- A e. C $.
    keepel.2 $e |- B e. C $.
    $( Keep a membership hypothesis for weak deduction theorem, when
       special case ` B e. C ` is provable. $)
    keepel $p |- if ( ph , A , B ) e. C $=
      ( wcel cif eleq1 keephyp ) ABDGCDGABCHZDGBCBKDICKDIEFJ $.
      $( [14-Aug-1999] $)
  $}

  ${
    dedex.1 $e |- A e. V $.
    dedex.2 $e |- B e. V $.
    $( Conditional operator existence. $)
    ifex $p |- if ( ph , A , B ) e. V $=
      ( cvv keepel ) ABCFDEG $.
      $( [30-Sep-2004] $) $( [2-Sep-2004] $)
  $}

