$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Transfinite Recursion
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z w F $.  $d x y z w G $.
    $( A technical lemma for transfinite recursion.  Compare Lemma 1 of
       [TakeutiZaring] p. 47. $)
    tfrlem1 $p |- ( A e. On -> ( ( F Fn A /\ G Fn A ) ->
                  ( A. x e. A ( ( F ` x ) = ( B ` ( F |` x ) ) /\
                                        ( G ` x ) = ( B ` ( G |` x ) ) ) ->
                  A. x e. A ( F ` x ) = ( G ` x ) ) ) ) $=
      ( vy vz vw con0 wcel wfn wa wss cv cfv cres wceq wral wi ssid sseq1
      raleq bi2imd bilimd weq biland bi2and wel onelsst sstr imland ax-17
      hbra1 ssel ra4 syl9 r19.21ad im2and syl6 com23 r19.21adv cleq12 fvreseq
      biimpar fveq2d syl5bir exp4c com4l imp4a imp31 r19.20dva r19.20 fveq2
      cleq12d cbvralv syl5bb cbvral syl5ib exp syl34d pm2.43 syl5 tfis2
      vtoclga mpii ) BIJDBKEBKLZBBMZANZDOZDWHPZCOZQWHEOZEWHPZCOZQLZABRZWIWLQZAB
      RZSZBTWFFNZBMZWOAWTRZWQAWTRZSZSZSWFWGWSSZSFBIWTBQZXEXFWFXGXAWGXDWSWTBBUAX
      GXBWPXCWRWOAWTBUBWQAWTBUBUCUCUDWTIJZWFXAXBXCWFXALZXBLZXCSZWFGNZBMZLZWOAXL
      RZLZWQAXLRZSZFGFGUEZXJXPXCXQXSXIXNXBXOXSXAXMWFWTXLBUAUFWOAWTXLUBUGWQAWTXL
      UBUCXHXPGWTRZXQGWTRZSZXKXRGWTRXHYBXJXKSXKXHXJXTYAXKXHXJXPGWTXHGFUHZXJXPXH
      YCXLWTMZXJXPSWTXLUIYDXIXNXBXOYDXAXMWFXLWTBUJUKYDXBWOAXLYDAULWOAWTUMYDAGUH
      AFUHZXBWOXLWTWHUNWOAWTUOUPUQURUSUTVAXHYAXIXBXCXHXIYAXDXHXIYAXDSXHXILZHNZD
      OZYGEOZQZHWHRZAWTRZXDYAYFYLWOWQSZAWTRXDYFYKYMAWTXHXIYEYKYMSZXHYEXIYNXHYEW
      FXAYNXHYEWHWTMZWFXAYNSSWTWHUIYOXAWHBMZWFYNWHWTBUJWOWFYPYKWQWOWFYPYKWQWOWQ
      WKWNQWFYPLZYKLZWIWKWLWNVBYRWJWMCYQWJWMQYKHBWHDEVCVDVEVFVGVHUPUSVIUTVJVKWO
      WQAWTVLUSXQYKGAWTWQAXLUMYKGULGAUEYJHXLRYKXQYJHXLWHUBWQYJAHXLAHUEWIYHWLYIW
      HYGDVMWHYGEVMVNVOVPVQVRVSUTVIVTXJXCWAUSXPXQGWTVLWBWCVGWDWE $.
      $( [2-May-04] $) $( [23-Mar-95] $)
  $}

  ${
    $d w A $.  $d w B $.  $d w F $.  $d w G $.  $d w x $.  $d w y $.
    $( Lemma for transfinite recursion.  This provides some messy details
       needed to link ~ tfrlem1 into the main proof. $)
    tfrlem2 $p |- ( ( F Fn A /\ G Fn A ) ->
       ( ( <. x , y >. e. F /\ <. x , z >. e. G ) ->
       ( A e. On -> ( A. w ( A e. On -> ( w e. A ->
          ( ( F ` w ) = ( B ` ( F |` w ) ) /\
            ( G ` w ) = ( B ` ( G |` w ) ) ) ) ) ->
       y = z ) ) ) ) $=
      ( wfn wa cv cop wcel con0 cfv cres wceq wi wal weq wral visset fnop
      adantr an4s tfrlem1 fveq2 cleq12d rcla4v syl8 com4r syl exp pm2.43i
      imp43 df-ral bilan sylan5br wb wfun funopfv imp im2an fnfun sylan cleq12
      mpbid abai bial 19.28v 3bitr3r sylan5b exp43 ) GEIZHEIZJZAKZBKZLGMZVQCKZL
      HMZJZENMZWCDKZEMWDGOZGWDPFOQWDHOZHWDPFOQJZRZRZDSZBCTZVPWBJZWCWHDSZJZWKWCW
      JJZWLWNJVQGOZVQHOZQZWKWLWCWGDEUAZJWRWNVPWBWCWSWRVPWBWCWSWRRZRRVPWBWCVPWTV
      PWBWCVPWTRRZWLVQEMZXAVNVSVOWAXBVNVSJXBVOWAJEVQVRGAUBBUBZUCUDUEWCVPWSXBWRW
      CVPWSWEWFQZDEUAXBWRRDEFGHUFXDWRDVQEDATWEWPWFWQWDVQGUGWDVQHUGUHUIUJUKULUMU
      KUNUOWSWMWCWGDEUPUQURWLWRWKUSZWNWLWPVRQZWQVTQZJZXEGUTZHUTZJWBXHVPXIVSXJWA
      XHXIVSJXFXJWAJXGXIVSXFVQVRGXCVAVBXJWAXGVQVTHCUBVAVBVCUEVNXIVOXJEGVDEHVDVC
      VEWPVRWQVTVFULUDVGWCWHJZDSWCWIJZDSWNWOXKXLDWCWHVHVIWCWHDVJWCWIDVJVKVLVM
      $.
      $( [23-Mar-95] $)
  $}

  ${
    $d x y f g $.  $d x y z $.  $d g z $.  $d f g G $.  $d x z G $.
    tfrlem3.1 $e |- A = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.
    $( Lemma for transfinite recursion.  Let ` A ` be the class of "acceptable"
       functions.  The final thing we're interested in is the union of all
       these acceptable functions.  This lemma just changes the bound variables
       in ` A ` for later use. $)
    tfrlem3 $p |- A = { g | E. z e. On ( g Fn z /\
                A. y e. z ( g ` y ) = ( G ` ( g |` y ) ) ) } $=
      ( cv wfn cfv cres wceq wral wa con0 wrex cab wcel visset weq fneq1 fveq1
      reseq1 fveq2d cleq12d biraldv bi2and birexdv elab fneq2 raleq cbvrexv
      bitr biabri eqtr ) DEIZAIZJZBIZUQKZUQUTLZGKZMZBURNZOZAPQZERZFIZCIZJZUTVIK
      ZVIUTLZGKZMZBVJNZOZCPQZFRHVRFVHVIVHSVIURJZVOBURNZOZAPQZVRVGWBEVIFTEFUAZVF
      WAAPWCUSVSVEVTURUQVIUBWCVDVOBURWCVAVLVCVNUTUQVIUCWCVBVMGUQVIUTUDUEUFUGUHU
      IUJWAVQACPACUAVSVKVTVPURVJVIUKVOBURVJULUHUMUNUOUP $.
      $( [3-May-04] $) $( [9-Apr-95] $)
  $}

  ${
    $d x y f g h A $.  $d x y z w v u f F $.
    $d x y z w f g h G $.  $d x y B $.  $d z w v u g h $.
    tfrlem.1 $e |- A = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.

    $( Let ` F ` be the union of all acceptable functions. $)
    tfrlem.2 $e |- F = U. A $.

    $( Lemma for transfinite recursion. ` A ` is the class of all "acceptable"
       functions, and ` F ` is their union.  First we show that an acceptable
       function is in fact a function. $)
    tfrlem4 $p |- ( g e. A -> Fun g ) $=
      ( vz cv wcel wfn cfv cres wceq wral wa con0 wrex wfun tfrlem3 cleqabi wi
      fnfun adantr a1i r19.23aiv sylbi ) EKZCLUJJKZMZBKZUJNUJUMOGNPBUKQZRZJSTZU
      JUAZUPECABJCDEGHUBUCUOUQJSUOUQUDUKSLULUQUNUKUJUEUFUGUHUI $.
      $( [3-May-04] $) $( [9-Apr-95] $)

    $( Lemma for transfinite recursion.  The values of two acceptable
       functions are the same within their domains. $)
    tfrlem5 $p |- ( ( g e. A /\ h e. A ) ->
                  ( ( <. x , u >. e. g /\ <. x , v >. e. h ) -> u = v ) ) $=
      ( vz vw cv wcel wa wfn cfv cres wceq wral con0 wrex cop weq wi tfrlem3
      cleqabi bi2an reeanv bitr4 cin wal 2elresin tfrlem2 fnresin1 fnresin2
      syl2an sylbid com24 com3r imp32 onin wel r19.26m prth pm3.27 elin sylib
      syl5 wss wb onelsst impac fvres resabs1 fveq2d cleqan12rd bi2and syl
      bicomd mpbidi exp3a 19.20i sylbir imlan an4s exp r19.23aivv sylbi ) GOZEP
      ZHOZEPZQZWLMOZRZBOZWLSZWLWSTZJSZUAZBWQUBZQZWNNOZRZWSWNSZWNWSTZJSZUAZBXFUB
      ZQZQZNUCUDMUCUDZAOZDOUEZWLPXPCOUEZWNPQZDCUFZUGZWPXEMUCUDZXMNUCUDZQXOWMYBW
      OYCYBGEABMEFGJKUHUIYCHEABNEFHJKUHUIUJXEXMMNUCUCUKULXNYAMNUCUCWQUCPXFUCPQZ
      XNYAWQXFUMZUCPZWRXGQZYFWSYEPZWSWLYETZSZYIWSTZJSZUAZWSWNYETZSZYNWSTZJSZUAZ
      QZUGUGZBUNZQZYAYDXNYFYGUVAYAYGUVAYFYAYGXSYFUVAXTYGXSXQYIPXRYNPQZYFUVAXTUG
      UGZADCWQXFWLWNUOYIYERYNYERUVCUVDUGWRXGADCBYEJYIYNUPWQXFWLUQXFWQWNURUSUTVA
      VBVCWQXFVDWRXGXDXLUVBXDXLQZUVAYGUVEBMVEZXCUGBNVEZXKUGQZBUNUVAXCXKBWQXFVFU
      VHYTBUVHYFYHYSYFYHQZXCXKQZYSUVHUVHUVFUVGQZUVJUVIUVFXCUVGXKVGUVIYHUVKYFYHV
      HWSWQXFVIVJVKUVIYSUVJUVIWSYEVLZYHQZYSUVJVMYFYHUVLYEWSVNVOUVMYMXCYRXKYHUVL
      YJWTYLXBWSYEWLVPUVLYKXAJWLWSYEVQVRVSYHUVLYOXHYQXJWSYEWNVPUVLYPXIJWNWSYEVQ
      VRVSVTWAWBWCWDWEWFWGWHUSWIWJWK $.
      $( [3-May-04] $) $( [9-Apr-95] $)

    $( Lemma for transfinite recursion.  The union of all acceptable functions
       is a relation. $)
    tfrlem6 $p |- Rel F $=
      ( vg cuni wceq wrel cv reluni wcel wfun tfrlem4 funrel syl mprgbir releq
      mpbiri ax-mp ) ECJZKZELZHUEUFUDLZUGIMZLZICICNUHCOUHPUIABCDIEFGHQUHRSTEUDU
      AUBUC $.
      $( [3-May-04] $) $( [8-Aug-94] $)

    $( Lemma for transfinite recursion.  The union of all acceptable functions
       is a function. $)
    tfrlem7 $p |- Fun F $=
      ( vu vv vg vh wfun wrel cv cop wcel wa weq wi wal tfrlem6 wex cuni
      eleq2i eluni bitr bi2an eeanv bitr4 an4 ancom tfrlem5 imp sylbi
      19.23aivv ax-gen gen2 pm3.2i dffun4 mpbir ) EMENZAOZIOPZEQZVCJOPZEQZRZIJS
      ZTZJUAZIUAAUAZRVBVLABCDEFGHUBVKAIVJJVHVDKOZQZVMCQZRZVFLOZQZVQCQZRZRZLUCKU
      CZVIVHVPKUCZVTLUCZRWBVEWCVGWDVEVDCUDZQWCEWEVDHUEKVDCUFUGVGVFWEQWDEWEVFHUE
      LVFCUFUGUHVPVTKLUIUJWAVIKLWAVOVSRZVNVRRZRZVIWAWGWFRWHVNVOVRVSUKWGWFULUGWF
      WGVIABJICDKLEFGHUMUNUOUPUOUQURUSAIJEUTVA $.
      $( [4-May-04] $) $( [9-Aug-94] $)

    $( Lemma for transfinite recursion.  The domain of ` F ` is ordinal. $)
    tfrlem8 $p |- Ord dom F $=
      ( vv vw vz cdm wtr con0 wss word wel cv wcel wa wi wal dftr2 wrex cop
      wfn cfv cres wceq wral wex visset eldm2 cab cuni unieqi eqtr eleq2i
      eluniab bitr biex r19.42v fnop ancoms adantrr adantl ra4e cleqabi
      elssuni sseq2i dmss sylbir syl wb fndm sseq1d ad2antrl mpbid adantrl jca
      exp r19.22i 19.23aivv sylbi imlan sylibr ontr ssel sylan9r exp4b com4l
      imp4d r19.23aiv ax-gen mpgbir onelon sylan5 exp32 com12 adantr com13
      r19.23adv imp 19.23aiv ssriv ordon trssord mp3an ) ELZMZXINONPXIPXJIJQZJR
      ZXISZTZIRZXISZUAZJUBIIJXIUCXQJXNXKJAQZARZXIOZTZTZANUDZXPXNXKYAANUDZTYCXMY
      DXKXMXLKRZUEZDRZSZYGXSUFZBRZYGUGYGYJUHFUGUIBXSUJZTZANUDZTZDUKZKUKZYDXMYFE
      SZKUKZYPKXLEJULZUMZYQYOKYQYFYMDUNZUOZSYOEUVBYFECUOZUVBHCUVAGUPUQURYMDYFUS
      UTZVAUTYNYDKDYNYHYLTZANUDYDYHYLANVBUVEYAANXSNSZUVEYAUVFUVETXRXTUVEXRUVFYH
      YIXRYKYIYHXRXSXLYEYGYSKULVCZVDVEVFUVFYLXTYHUVFYLTZYGLZXIOZXTUVHYMUVJYLANV
      GYMYGCSZUVJYMDCGVHUVKYGUVCOZUVJYGCVIUVLYGEOUVJEUVCYGHVJYGEVKVLVMVLVMYIUVJ
      XTVNUVFYKYIUVIXSXIXSYGVOVPVQVRVSVTWAWBVLWCWDWEXKYAANVBWFYBXPANUVFXKXRXTXP
      XTUVFXKXRXPXTUVFXKXRXPUVFXKXRTIAQXTXPXOXLXSWGXSXIXOWHWIWJWKWLWMVMWNWOJXIN
      XMYRXLNSZYTYQUVMKYQYOUVMUVDYNUVMDYHYMUVMYHYLUVMANYLUVFYHUVMYIUVFYHUVMUAZU
      AYKUVFYIUVNUVFYIYHUVMUVFXRUVMYIYHTXSXLWPUVGWQWRWSWTXAXBXCXDWDXDWDXEXFXINX
      GXH $.
      $( [4-May-04] $) $( [14-Aug-94] $)

    $( Lemma for transfinite recursion.  Here we compute the value of
       ` F ` (the union of all acceptable functions). $)
    tfrlem9 $p |- ( y e. dom F -> ( F ` y ) = ( G ` ( F |` y ) ) ) $=
      ( vz cv cdm wcel cop wex cfv cres wceq visset eldm2 wfn wral wa con0
      wrex cab cuni unieqi eqtr eleq2i eluniab bitr wi wel fnop wss ra4e
      cleqabi elssuni syl6ssr sylbir syl ra4 com12 fndm eleq2d wfun wb tfrlem7
      funssfv adantrl fun2ssres fveq2d eleq1d onelsst syl6bir imp31 sylan5
      cleq12d mpan11 biimprd exp com3l exp31 com34 com24 sylbird syld imp4d
      com13 mpcom exp4d com4r pm2.43i imp4a r19.23adv imp 19.23aiv sylbi ) BJZE
      KLWSIJZMZELZINWSEOZEWSPZFOZQZIWSEBRZSXBXFIXBXADJZLZXHAJZTZWSXHOZXHWSPZFOZ
      QZBXJUAZUBZAUCUDZUBZDNZXFXBXAXRDUEZUFZLXTEYBXAECUFZYBHCYAGUGUHUIXRDXAUJUK
      XSXFDXIXRXFXIXQXFAUCXIXJUCLZXKXPXFXKXIYDXPXFULZXKXIYDYEULULXKXIYDXKYEXKXI
      YDXKYEULULXKXIUBZYDXKXPXFYFBAUMZYDXQUBZXFULXJWSWTXHXGIRUNYHYGXFXHEUOZYHYG
      XFULYHXRYIXQAUCUPXRXHCLZYIXRDCGUQYJXHYCEXHCURHUSUTVAYGYHYIXFYGYDXKXPYIXFU
      LZYGXPXKYDYKYGXPXOXKYDYKULZULXPYGXOXOBXJVBVCXKYGXOYLXKYGWSXHKZLZXOYLULXKY
      MXJWSXJXHVDZVEXKYDXOYNYKXKYDYNXOYKXKYDYNXOYKULYIXKYDUBZYNUBZXOXFYIYQXOXFU
      LYIYQUBXFXOEVFZYIYQXFXOVGABCDEFGHVHYRYIUBZYQUBXCXLXEXNYSYNXCXLQYPWSEXHVIV
      JYSWSYMUOZXEXNQYQYSYTUBXDXMFWSEXHVKVLXKYDYNYTXKYDYMUCLYNYTULXKYMXJUCYOVMY
      MWSVNVOVPVQVRVSVTWAWBWCWDWEWFWBWGWEWHWIWJVCVAWKWAWLWMWBWNWOWPWQWRWQWR $.
      $( [4-May-04] $) $( [17-Aug-94] $)

    ${
      $d x y f C $.
      tfrlem.3 $e |- C = ( F u. { <. dom F , ( G ` ( F |` dom F ) ) >. } ) $.

      $( Lemma for transfinite recursion. We define class ` C ` by extending
         ` F ` with one ordered pair.  We will assume, falsely, that
         domain of ` F ` is a member of, and thus not equal to, ` On ` .
         Using this assumption we will prove facts about ` C ` that will
         lead to a contradiction in ~ tfrlem13 , thus showing the domain
         of ` F ` does in fact equal ` On ` .  Here we show (under the
         false assumption) that ` C ` is a function extending the domain of
         ` F ` by one. $)
      tfrlem10 $p |- ( dom F e. On -> C Fn suc dom F ) $=
        ( cdm con0 wcel wfun csuc wceq wa wfn cres cfv cop csn cv wb opeq1
        sneq funeq 3syl visset fvex funsn vtoclg wi tfrlem7 cin c0 cun funun
        ax-mp sylibr wn wral sneqd dmeqd cleq12d dmsnop eleq2d eleq1 binegd word
        eloni ordeirr syl syl5bir com12 elsni syl5 sylbid con2d r19.21aiv disj
        sylan5 exp mpan mpcom dmeq uneq2d dmeqi dmun eqtr df-suc 3eqtr4g jca
        df-fn ) FKZLMZDNZDKZWOOZPZQDWSRWPWQWTWOFWOSZGTZUAZUBZNZWPWQAUCZXBUAZUBZ
        NZXEAWOLXFWOPZXGXCPZXHXDPZXIXEUDXFWOXBUEZXGXCUFZXHXDUGUHXFXBAUIXAGUJUKU
        LFNZXEWPWQUMABCEFGHIUNXOXEQZWPWQXPWOXDKZUOUPPZWQWPXPXRQFXDUQZNZWQFXDURD
        XSPWQXTUDJDXSUGUSUTWPXFXQMZVAZAWOVBXRWPYBAWOWPYAXFWOMZWPYAXFWOUBZMZYCVA
        ZWPXQYDXFXHKZXFUBZPZXQYDPZAWOLXJYGXQYHYDXJXHXDXJXGXCXMVCVDXFWOUFZVEXFXB
        VFZULVGWPXJYFYEXJWPYFXJYFWOWOMZVAZWPXJYCYMXFWOWOVHVIWPWOVJYNWOVKWOVLVMV
        NVOXFWOVPVQVRVSVTAWOXQWAUTWBWCWDWEWPWOXQUQZWOYDUQWRWSWPXQYDWOYIYJAWOLXJ
        YGXQYHYDXJXKXLYGXQPXMXNXHXDWFUHYKVEYLULWGWRXSKYODXSJWHFXDWIWJWOWKWLWMDW
        SWNUT $.
        $( [4-May-04] $) $( [14-Aug-94] $)

      $( Lemma for transfinite recursion.  Compute the value of ` C ` . $)
      tfrlem11 $p |- ( dom F e. On ->
                     ( y e. suc dom F -> ( C ` y ) = ( G ` ( C |` y ) ) ) ) $=
        ( cdm con0 wcel cv wceq wo cfv cres csuc wi wfun wa wss cop csn cun
        ssun1 sseqtr4 funssfv adantrl fun2ssres fveq2d onelsst imp sylan5
        cleq12d tfrlem9 syl5bir mpan12 wfn tfrlem10 fnfun syl sylan exp32
        pm2.43i pm2.43d opex snid opeq1 adantl eqimss syl2an reseq2 eqtrd
        fveq2 opeq2 3syl sneqd eleq2d mpbii elun2 eleq2i sylibr wb fvex fnfvop
        visset eqelsuc mpbird exp jaod elsuci syl5 ) FKZLMZBNZWOMZWQWOOZPWQDQZD
        WQRZGQZOZWQWOSZMZWPWRXCWSWPWRXCWPWRWRXCTZTWPWPWRXFDUAZWPWRUBZXFWPXGFDUC
        ZXHXFFFWOFWORZGQZUDZUEZUFZDFXMUGJUHZXGXIUBZXHUBZXCWQFQZFWQRZGQZOWRXQWTX
        RXBXTXPWRWTXROWPWQDFUIUJXPWQWOUCZXBXTOXHXPYAUBXAXSGWQDFUKZULWPWRYAWOWQU
        MUNUOUPABCEFGHIUQURUSWPDXDUTZXGABCDEFGHIJVAZXDDVBVCZVDVEVFVGWPWSXCWPWSU
        BZXCWQXBUDZDMZYFYGXNMZYHYFYGXMMZYIYFYGYGUEZMYJYGWQXBVHVIYFYKXMYGYFYGXLY
        FYGWOXBUDZXLWSYGYLOWPWQWOXBVJVKYFXAXJOXBXKOYLXLOYFXAXSXJXGYAXAXSOZWPWSX
        GXIYAYMXOYBUSYEWQWOVLVMWSXSXJOWPWQWOFVNVKVOXAXJGVPXBXKWOVQVRVOVSVTWAYGX
        MFWBVCDXNYGJWCWDYCXEXCYHWEWPWSXDWQXBDXAGWFWGYDWQWOBWHWIVMWJWKWLWQWOWMWN
        $.
        $( [4-May-04] $) $( [18-Aug-94] $)

      $( Lemma for transfinite recursion.  Show ` C ` is an acceptable
         function. $)
      tfrlem12 $p |- ( dom F e. On -> C e. A ) $=
        ( cdm con0 wcel cv wfn cfv cres wceq wral wa wrex csuc fneq2 raleq
        bi2and rcla4ev suceloni tfrlem10 tfrlem11 r19.21aiv jca sylan13 cvv wb
        fnex syl13 fneq1 fveq1 reseq1 fveq2d cleq12d biraldv birexdv elab2g
        syl mpbird ) FKZLMZDCMZDANZOZBNZDPZDVLQZGPZRZBVJSZTZALUAZVGUBZLMZDVTOZV
        PBVTSZTZVSVHVRWDAVTLVJVTRVKWBVQWCVJVTDUCVPBVJVTUDUEUFVGUGZVHWBWCABCDEFG
        HIJUHZVHVPBVTABCDEFGHIJUIUJUKULVHDUMMZVIVSUNWAWBWGVHVTLDUOWEWFUPENZVJOZ
        VLWHPZWHVLQZGPZRZBVJSZTZALUAVSEDCUMWHDRZWOVRALWPWIVKWNVQVJWHDUQWPWMVPBV
        JWPWJVMWLVOVLWHDURWPWKVNGWHDVLUSUTVAVBUEVCHVDVEVF $.
        $( [4-May-04] $) $( [15-Aug-94] $)

      $( Lemma for transfinite recursion.  If ` dom F ` is in ` On ` , then
         ` C ` is acceptable, and thus a subset of ` F ` , but ` dom C ` is
         bigger than ` dom F ` .  This is a contradiction, so ` dom F ` must be
         ` On ` . $)
      tfrlem13 $p |- dom F = On $=
        ( cdm con0 wcel wn wceq wo word tfrlem8 ordeirr wss wi cuni elssuni
        syl6ssr dmss ssel 3syl tfrlem12 csuc sucidg wfn tfrlem10 fndm syl
        eleq2d mpbird syl13 nsyl ax-mp ordeleqon mpbi orel1 mp2 ) FKZLMZNZVEVDL
        OZPZVGVDQZVFABCEFGHIRZVIVDVDMZVEVDSDCMZVDDKZMZVKVEVLDFTVMVDTVNVKUAVLDCU
        BFDCUCIUDDFUEVMVDVDUFUGABCDEFGHIJUHVEVNVDVDUIZMVDLUJVEVMVOVDVEDVOUKVMVO
        OABCDEFGHIJULVODUMUNUOUPUQURUSVIVHVJVDUTVAVEVGVBVC $.
        $( [4-May-04] $) $( [14-Aug-94] $)

    $}
  $}

  ${
    $d x y f A $.  $d x y f F $.
    $d x y f G $.  $d x y B $.  $d y z $.
    tfr.1 $e |- A = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.

    $( Let ` F ` be the union of all acceptable functions. $)
    tfr.2 $e |- F = U. A $.

    $( Principle of Transfinite Recursion, part 1 of 3.  Theorem 7.41(1) of
       [TakeutiZaring] p. 47.  We start with an arbitrary class ` G ` ,
       normally a function, and define a class ` A ` of all "acceptable"
       functions.  The final function we're interested in is the union
       ` F ` of them.  ` F ` is then said to be defined by transfinite
       recursion.  The purpose of the 3 parts of this theorem is to
       demonstrate properties of ` F ` .  In this first part we
       show that ` F ` is a function whose domain is all ordinal numbers. $)
    tfr1 $p |- F Fn On $=
      ( con0 wfn wfun cdm wceq wa tfrlem7 cres cfv cop csn cun cleqid tfrlem13
      pm3.2i df-fn mpbir ) EIJEKZELZIMZNUFUHABCDEFGHOABCEUGEUGPFQRSTZDEFGHUIUAU
      BUCEIUDUE $.
      $( [5-May-04] $) $( [17-Aug-94] $)

    $( Principle of Transfinite Recursion, part 2 of 3.  Theorem 7.41(2) of
       [TakeutiZaring] p. 47.  Here we show that the function ` F ` has the
       property that for any function ` G ` whatsoever, the "next" value
       of ` F ` is ` G ` recursively applied to all "previous" values of
       ` F ` . $)
    tfr2 $p |- ( z e. On -> ( F ` z ) = ( G ` ( F |` z ) ) ) $=
      ( cv cfv cres wceq con0 weq fveq2 reseq2 fveq2d cleq12d wcel cdm cop csn
      cun cleqid tfrlem13 eleq2i tfrlem9 sylbir vtoclga ) BJZFKZFUKLZGKZMZCJZFK
      ZFUPLZGKZMBUPNBCOZULUQUNUSUKUPFPUTUMURGUKUPFQRSUKNTUKFUAZTUOVANUKABDFVAFV
      ALGKUBUCUDZEFGHIVBUEUFUGABDEFGHIUHUIUJ $.
      $( [5-May-04] $) $( [9-Apr-95] $)

    $( Principle of Transfinite Recursion, part 3 of 3.  Theorem 7.41(3) of
       [TakeutiZaring] p. 47.  Finally we show that ` F ` is unique.  We do
       this by showing that any class ` B ` with the same properties of ` F `
       that we showed in parts 1 and 2 is identical to ` F ` . $)
    tfr3 $p |- ( ( B Fn On /\
               A. x e. On ( B ` x ) = ( G ` ( B |` x ) ) ) -> B = F ) $=
      ( con0 wfn cv cfv cres wceq wral wa cleqid wb tfr1 cleqfv mpan2 biimpar
      mpan21 ax-17 hbra1 hban wcel wi hbim weq fveq2 cleq12d bilimd ra4 wss
      fvreseq mpan12 syl6bir onsst sylan5 ancoms imp adantr tfr2 jctr jcab
      sylibr cleq12 syl6 adantl mpbird exp43 com4t exp4a pm2.43d syl com3l
      imp3a a2d r19.21v syl5ib tfis2f com12 r19.21ai anabss5 ) DJKZALZDMZDWHNZG
      MZOZAJPZDFOZWGWIWHFMZOZAJPZWNWGWMQZWGJJOZWQWNJRWGWNWSWQQZWGFJKZWNWTSABCEF
      GHITZAJJDFUAUBUCUDWRWPAJWGWMAWGAUEWLAJUFUGZWHJUHZWRWPWRWPUIZWRBLZDMZXFFMZ
      OZUIZABWRXIAXCXIAUEUJABUKZWPXIWRXKWIXGWOXHWHXFDULWHXFFULUMUNXDWRXIBWHPZUI
      XEXJBWHPXDWRXLWPXDWGWMXLWPUIZWMXDWGXMWMXDWLUIZXDWGXMUIZUIWLAJUOXNXDXOXNXD
      XDWGXMXDWGQZXLXNXDWPXPXLXNXDWPXPXLQZXNXDQZQWPWKFWHNZGMZOZXQYAXRXPXLYAWGXD
      XLYAUIZWGWHJUPZYBXDWGYCQXLWJXSOZYAWGXAYCYDXLSXBBJWHDFUQURWJXSGULUSWHUTVAV
      BVCVDXRWPYASZXQXNXDYEXNXDWLWOXTOZQZYEXNXNXDYFUIZQXDYGUIXNYHABACEFGHIVEVFX
      DWLYFVGVHWIWKWOXTVIVJVCVKVLVMVNVOVPVQVRVSVTWRXIBWHWAWBWCWDWEVAWF $.
      $( [5-May-04] $) $( [18-Aug-94] $)
  $}

  ${
    $d x y A $.  $d x F $.  $d x G $.  $d y H $.
    tz7.44lem1.1 $e |- G = { <. x , y >. | ( ( x = (/) /\ y = A ) \/
            ( -. ( x = (/) \/ Lim dom x ) /\ y = ( H ` ( x ` U. dom x ) ) )
                \/ ( Lim dom x /\ y = U. ran x ) ) } $.
    $( ` G ` is a function.  Lemma for ~ tz7.44-1 , ~ tz7.44-2 , and
       ~ tz7.44-3 . $)
    tz7.44lem1 $p |- Fun G $=
      ( wfun cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab wmo funopab
      fvex cvv wcel visset rnexg uniexg syl ax-mp nlim0 wb dm0 limeq mtbir
      dmeq biimpa mto moeq3 mpgbir funeq mpbir ) DGZAHZIJZBHZCJKVEVDLZMZNOVFVGP
      VDQZEQZJKVHVFVDRZPZJKSZABTZGZVOVMBUAAVMABUBVEVHBCVJVLVIEUCVDUDUEZVLUDUEZA
      UFVPVKUDUEVQVDUDUGVKUDUHUIUJVEVHKILZMZVSIMZUKVRIJVSVTULUMVRIUNUJUOVEVHVSV
      EVGVRJVHVSULVDIUPVGVRUNUIUQURUSUTDVNJVCVOULFDVNVAUJVB $.
      $( [23-Apr-95] $)
  $}

  ${
    $d x y A $.  $d x F $.  $d x G $.  $d y H $.
    tz7.44.1 $e |- G = { <. x , y >. | ( ( x = (/) /\ y = A ) \/
            ( -. ( x = (/) \/ Lim dom x ) /\ y = ( H ` ( x ` U. dom x ) ) )
                \/ ( Lim dom x /\ y = U. ran x ) ) } $.
    tz7.44.2 $e |- F Fn On $.
    tz7.44.3 $e |- ( x e. On -> ( F ` x ) = ( G ` ( F |` x ) ) ) $.
    ${
      tz7.44.4 $e |- A e. V $.
      $( The value of ` F ` at ` (/) ` .  Part 1 of Theorem 7.44 of
         [TakeutiZaring] p. 49. $)
      tz7.44-1 $p |- ( F ` (/) ) = A $=
        ( c0 cfv cres con0 wcel wceq 0elon cv fveq2 reseq2 fveq2d cleq12d
        vtoclga ax-mp res0 fveq2i wfun cop tz7.44lem1 wa copab cdm wlim wo wn
        cuni crn w3o 3mix1 ssopab2i sseqtr4 cleqid pm3.2i 0ex cleq1 birand
        biland opelopab mpbir ssii funopfv mp2 3eqtr ) KDLZDKMZELZKELZCKNOVNVPP
        ZQARZDLZDVSMZELZPVRAKNVSKPZVTVNWBVPVSKDSWCWAVOEVSKDTUAUBIUCUDVOKEDUEUFE
        UGKCUHZEOVQCPABCEFGUIWCBRZCPZUJZABUKZEWDWHWGWCVSULZUMZUNUOWEWIUPVSLFLPU
        JZWJWEVSUQUPPUJZURZABUKEWGWMABWGWKWLUSUTGVAWDWHOKKPZCCPZUJZWNWOKVBCVBVC
        WGWNWFUJWPABKCVDJWCWCWNWFVSKKVEVFWFWFWOWNWECCVEVGVHVIVJKCEJVKVLVM $.
        $( [23-Apr-95] $)
    $}

    ${
      $d x y B $.  $d y F $.  $d x H $.
      tz7.44.5 $e |- B e. On $.
      $( The value of ` F ` at a successor ordinal.  Part 2 of Theorem 7.44
         of [TakeutiZaring] p. 49. $)
      tz7.44-2 $p |- ( F ` suc B ) = ( H ` ( F ` B ) ) $=
        ( csuc cfv cres con0 wcel wceq onsuc cv fveq2 reseq2 fveq2d cleq12d
        vtoclga ax-mp wfun cop tz7.44lem1 c0 cdm wlim wo wn cuni wa copab crn
        w3o 3mix2 ssopab2i sseqtr4 nsuceq0 cin wfn fndm ineq2i dmres wss onss
        dfss mpbi 3eqtr4 cleq1i mtbir dmeq dm0 syl6eq mto elisseti nlimsuc wb
        limeq pm3.2ni sucid fvres unieqi onunisuc eqtr2 fveq2i eqtr3 pm3.2i
        cvv fnfun resfunexg mp2 fvex cleq1 syl bi2ord binegd unieq 3syl fveq1
        eqtrd cleq2d bi2and biland opelopab mpbir ssii funopfv eqtr ) DLZEMZEXM
        NZFMZDEMZGMZXMOPZXNXPQZDKRZASZEMZEYBNZFMZQXTAXMOYBXMQZYCXNYEXPYBXMETYFY
        DXOFYBXMEUAUBUCJUDUEFUFXOXRUGZFPXPXRQABCFGHUHYBUIQZYBUJZUKZULZUMZBSZYIU
        NZYBMZGMZQZUOZABUPZFYGYSYHYMCQUOZYRYJYMYBUQUNQUOZURZABUPFYRUVBABYRYTUVA
        USUTHVAYGYSPXOUIQZXOUJZUKZULZUMZXRUVDUNZXOMZGMZQZUOZUVGUVKUVCUVEUVCUVDU
        IQZUVMXMUIQDVBUVDXMUIXMEUJZVCXMOVCZUVDXMUVNOXMEOVDZUVNOQIOEVEUEVFEXMVGX
        MOVHXMUVOQXMYAVIXMOVJVKVLZVMVNUVCUVDUIUJUIXOUIVOVPVQVRUVEXMUKZDDOKVSZVT
        UVDXMQUVEUVRWAUVQUVDXMWBUEVNWCXQUVIGDXOMZXQUVIDXMPUVTXQQDUVSWDDXMEWEUED
        UVHXOUVHXMUNDUVDXMUVQWFDKWGWHWIWJWIWKYRUVGYMUVJQZUOUVLABXOXRXSEUFZXOWLP
        YAUVPUWBIOEWMUEEXMOWNWOXQGWPZYBXOQZYLUVGYQUWAUWDYKUVFUWDYHUVCYJUVEYBXOU
        IWQUWDYIUVDQZYJUVEWAYBXOVOZYIUVDWBWRWSWTUWDYPUVJYMUWDYOUVIGUWDYOUVHYBMZ
        UVIUWDUWEYNUVHQYOUWGQUWFYIUVDXAYNUVHYBTXBUVHYBXOXCXDUBXEXFYMXRQUWAUVKUV
        GYMXRUVJWQXGXHXIXJXOXRFUWCXKWOXL $.
        $( [23-Apr-95] $)

      $( The value of ` F ` at a limit ordinal.  Part 3 of Theorem 7.44 of
         [TakeutiZaring] p. 49.  $)
      tz7.44-3 $p |- ( Lim B -> ( F ` B ) = U. ( F " B ) ) $=
        ( wlim cres cfv cima cuni cop cv cdm crn wceq wa copab wcel wb cin
        con0 wfn fndm ax-mp ineq2i dmres wss onss dfss mpbi 3eqtr4 limeq
        biimpr df-ima unieqi jctir wfun cvv fnfun resfunexg mp2 elisseti
        funimaex uniex dmeq syl rneq unieqd cleq2d bi2and cleq1 biland
        opelopab sylibr c0 wo wn w3o 3mix3 ssopab2i sseqtr4 sseli wi
        tz7.44lem1 funopfv 3syl fveq2 reseq2 fveq2d cleq12d vtoclga syl5eq ) DL
        ZEDMZFNZEDOZPZDENZWSWTXCQZARZSZLZBRZXFTZPZUAZUBZABUCZUDZXEFUDZXAXCUAZWS
        WTSZLZXCWTTZPZUAZUBZXOWSXSYBXSWSXRDUAXSWSUEDESZUFDUGUFZXRDYDUGDEUGUHZYD
        UGUAIUGEUIUJUKEDULDUGUMDYEUADKUNDUGUOUPUQXRDURUJUSXBXTEDUTVAVBXMXSXIYAU
        AZUBYCABWTXCDUGUDZEVCZWTVDUDKYFYIIUGEVEUJZEDUGVFVGXBYIXBVDUDYJEDDUGKVHV
        IUJVJZXFWTUAZXHXSXLYGYLXGXRUAXHXSUEXFWTVKXGXRURVLYLXKYAXIYLXJXTXFWTVMVN
        VOVPXIXCUAYGYBXSXIXCYAVQVRVSVTXNFXEXNXFWAUAZXICUAUBZYMXHWBWCXIXGPXFNGNU
        AUBZXMWDZABUCFXMYPABXMYNYOWEWFHWGWHFVCXPXQWIABCFGHWJWTXCFYKWKUJWLYHXDXA
        UAZKXFENZEXFMZFNZUAYQADUGXFDUAZYRXDYTXAXFDEWMUVAYSWTFXFDEWNWOWPJWQUJWR
        $.
        $( [23-Apr-95] $)
    $}
  $}

  $( Define a constant for the recursive definition generator. $)
  $c rec $.

  $( Extend class notation with the recursive definition generator. $)
  crdg $a class rec ( A , B ) $.

  ${
    $d x y z f g F $.  $d x y z f g A $.
    $( Define a recursive definition generator on ` On ` (the class of ordinal
       numbers) with characteristic function ` F ` and initial value ` A ` .
       This combines functions ` F ` in ~ tfr1 and ` G ` in ~ tz7.44-1 into one
       definition.  This rather amazing operation allows us to define, with
       compact direct definitions, functions that are usually defined in
       textbooks only with indirect self-referencing recursive definitions.  A
       recursive definition requires advanced metalogic to justify - in
       particular, eliminating a recursive definition is very difficult and
       often not even shown in textbooks.  On the other hand, the elimination
       of a direct definition is a matter of simple mechanical substitution.
       The price paid is the mind-boggling complexity of our ` rec ` operation.
       But once we get past this hurdle, otherwise recursive definitions become
       relatively simple, as in, for example, ~ df-aleph .  From the direct
       definition we can prove textbook recursive definitions as theorems using
       ~ rdgzer , ~rdgsuc , and ~ rdglim . We can also restrict the ` rec `
       operation to define otherwise recursive functions on the natural numbers
       ` om ` ; see ~ frzer and ~ frsuc .  Our ` rec ` operation apparently
       does not appear in published literature, although closely related is
       Definition 25.2 of [Quine] p. 177, which he uses to "turn...a recursion
       into a genuine or direct definition" (p. 174).  $)
    df-rdg $a |- rec ( F , A ) = U. { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = (
                    { <. g , z >. | ( ( g = (/) /\ z = A ) \/
                    ( -. ( g = (/) \/ Lim dom g ) /\
                        z = ( F ` ( g ` U. dom g ) ) )
                    \/ ( Lim dom g /\ z = U. ran g ) ) }
                ` ( f |` y ) ) ) } $.
  $}

  ${
    $d x y z f g F $.  $d x y z f g A $.
    $( Define a recursive definition generator on ` On ` (the class of ordinal
       numbers) with characteristic function ` F ` and initial value ` A ` .
       This combines functions ` F ` in ~ tfr1 and ` G ` in ~ tz7.44-1 into one
       definition.  This rather amazing operation allows us to define, with
       compact direct definitions, functions that are usually defined in
       textbooks only with indirect self-referencing recursive definitions.  A
       recursive definition requires advanced metalogic to justify - in
       particular, eliminating a recursive definition is very difficult and
       often not even shown in textbooks.  On the other hand, the elimination
       of a direct definition is a matter of simple mechanical substitution.
       The price paid is the mind-boggling complexity of our ` rec ` operation.
       But once we get past this hurdle, otherwise recursive definitions become
       relatively simple, as in, for example, ~ df-aleph .  From the direct
       definition we can prove textbook recursive definitions as theorems using
       ~ rdgzer , ~rdgsuc , and ~ rdglim . We can also restrict the ` rec `
       operation to define otherwise recursive functions on the natural numbers
       ` om ` ; see ~ frzer and ~ frsuc .  Our ` rec ` operation apparently
       does not appear in published literature, although closely related is
       Definition 25.2 of [Quine] p. 177, which he uses to "turn...a recursion
       into a genuine or direct definition" (p. 174).  Note that the ` ded `
       function (see ~ df-ded ) selects cases based on whether ` g ` is zero,
       has a limit ordinal domain, or has a successor domain. $)
    df-rdgNEW $a |- rec ( F , A ) = U. { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( { <. g , z >. | z = ded ( g = (/) , A ,
                ded ( Lim dom g , U. ran g , ( F ` ( g ` U. dom g ) ) ) ) }
                ` ( f |` y ) ) ) } $.
  $}

  ${
    $d x y z f g F $.   $d x y z f g G $.  $d x y z f g A $.  $d x y z f g B $.
    $( ` x y z f g ` are dummy. $)

    $( Equality theorem for the recursive definition generator. $)
    rdgeq1 $p |- ( F = G -> rec ( F , A ) = rec ( G , A ) ) $=
      ( vf vx vy vg vz wceq cv wfn cfv cres c0 wa cdm wlim wo wn cuni crn w3o
      copab wral con0 wrex cab crdg pm4.2i fveq1 cleq2d biland bi3ord biopabdv
      fveq1d biraldv birexdv biabdv unieqd df-rdg 3eqtr4g ) BCIZDJZEJZKZFJZVCLZ
      VCVFMZGJZNIZHJZAIOZVJVIPZQZRSZVKVMTVILZBLZIZOZVNVKVIUATIOZUBZGHUCZLZIZFVD
      UDZOZEUEUFZDUGZTVEVGVHVLVOVKVPCLZIZOZVTUBZGHUCZLZIZFVDUDZOZEUEUFZDUGZTBAU
      HCAUHVBWHWSVBWGWRDVBWFWQEUEVBWEWPVEVBWDWOFVDVBWCWNVGVBVHWBWMVBWAWLGHVBVLV
      LVSWKVTVTVBVLUIVBVRWJVOVBVQWIVKVPBCUJUKULVBVTUIUMUNUOUKUPULUQURUSEFHADGBU
      TEFHADGCUTVA $.
      $( [9-Apr-95] $)


    $( Equality theorem for the recursive definition generator. $)
    rdgeq2 $p |- ( A = B -> rec ( F , A ) = rec ( F , B ) ) $=
      ( vf vx vy vg vz wceq cv wfn cfv cres c0 wa cdm wlim wo wn cuni crn w3o
      copab wral con0 wrex cab crdg cleq2 biland pm4.2i bi3ord biopabdv fveq1d
      cleq2d biraldv birexdv biabdv unieqd df-rdg 3eqtr4g ) ABIZDJZEJZKZFJZVCLZ
      VCVFMZGJZNIZHJZAIZOZVJVIPZQZRSVKVNTVILCLIOZVOVKVIUATIOZUBZGHUCZLZIZFVDUDZ
      OZEUEUFZDUGZTVEVGVHVJVKBIZOZVPVQUBZGHUCZLZIZFVDUDZOZEUEUFZDUGZTCAUHCBUHVB
      WEWOVBWDWNDVBWCWMEUEVBWBWLVEVBWAWKFVDVBVTWJVGVBVHVSWIVBVRWHGHVBVMWGVPVPVQ
      VQVBVLWFVJABVKUIUJVBVPUKVBVQUKULUMUNUOUPUJUQURUSEFHADGCUTEFHBDGCUTVA $.
      $( [9-Apr-95] $)
  $}

  ${
    $d y z w v f g F $.  $d y z w v f g A $.  $d x y z w v f g $.
    hbrdg.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbrdg.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for the recursive definition
       generator. $)
    hbrdg $p |- ( y e. rec ( F , A ) -> A. x y e. rec ( F , A ) ) $=
      ( vf vw vv vg vz cv wfn cfv cres c0 wceq wa cdm wlim wo wn cuni crn w3o
      copab wral con0 wrex cab wcel wal crdg ax-17 wel hbeq hban hbfv hb3or
      hbopab hbral hbrex hbab hbuni df-rdg eleq2i bial 3imtr4 ) BLZGLZHLZMZILZV
      JNZVJVMOZJLZPQZKLZCQZRZVQVPSZTZUAUBZVRWAUCVPNZDNZQZRZWBVRVPUDUCQRZUEZJKUF
      ZNZQZIVKUGZRZHUHUIZGUJZUCZUKZWRAULVIDCUMZUKZWTAULABWPWOAGBWNAHUHVKUHUKAUN
      VLWMAVLAUNWLAIVKIHUOAUNABBVNWKVIVNUKAUNABVOWJWIJKABVTWGWHAVQVSAVQAUNABBVR
      CBKUOAUNZFUPUQWCWFAWCAUNABBVRWEXAABWDDEVIWDUKAUNURUPUQWHAUNUSUTVIVOUKAUNU
      RUPVAUQVBVCVDWSWQVIHIKCGJDVEVFZWTWRAXBVGVH $.
      $( [14-Sep-03] $)
  $}

  ${
    $d x y f g $.  $d x y z g $.  $d f g G $.  $d x z G $.  $d y z w g G $.
    $( Lemma used with the recursive definition generator.  This is a trivial
       lemma that just changes bound variables for later use. $)
    rdglem1 $p |- { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) }
                = { g | E. z e. On ( g Fn z /\
                A. w e. z ( g ` w ) = ( G ` ( g |` w ) ) ) } $=
      ( cv wfn cfv cres wceq wral wa con0 wrex cab cleqid tfrlem3 weq fveq2
      reseq2 fveq2d cleq12d cbvralv bilan birex biabi eqtr ) EHZAHZIBHZUJJUJULK
      GJLBUKMNAOPEQZFHZCHZIZULUNJZUNULKZGJZLZBUOMZNZCOPZFQUPDHZUNJZUNVDKZGJZLZD
      UOMZNZCOPZFQABCUMEFGUMRSVCVKFVBVJCOVAVIUPUTVHBDUOBDTZUQVEUSVGULVDUNUAVLUR
      VFGULVDUNUBUCUDUEUFUGUHUI $.
      $( [7-May-04] $) $( [9-Apr-95] $)
  $}

  ${
    $d x y z w $.  $d x z w A $.  $d x z w H $.  $( ` w ` is dummy. $)
    $( Lemma used with the recursive definition generator.  This is a trivial
       lemma that just changes bound variables for later use. $)
    rdglem2 $p |- { <. x , y >. | ( ( x = (/) /\ y = A ) \/
            ( -. ( x = (/) \/ Lim dom x ) /\ y = ( H ` ( x ` U. dom x ) ) )
                \/ ( Lim dom x /\ y = U. ran x ) ) }
                = { <. z , y >. | ( ( z = (/) /\ y = A ) \/
            ( -. ( z = (/) \/ Lim dom z ) /\ y = ( H ` ( z ` U. dom z ) ) )
                \/ ( Lim dom z /\ y = U. ran z ) ) } $=
      ( vw cv cop wceq c0 wa cdm wlim wo wn cuni cfv crn w3o wex cab copab weq
      opeq1 cleq2d cleq1 birand wb dmeq limeq syl bi2ord binegd unieq fveq2
      3syl fveq1 eqtrd fveq2d bi2and rneq unieqd bi3ord biexdv cbvexv biabi
      df-opab 3eqtr4 ) FGZAGZBGZHZIZVJJIZVKDIZKZVNVJLZMZNZOZVKVQPZVJQZEQZIZKZVR
      VKVJRZPZIZKZSZKZBTZATZFUAVICGZVKHZIZWNJIZVOKZWQWNLZMZNZOZVKWSPZWNQZEQZIZK
      ZWTVKWNRZPZIZKZSZKZBTZCTZFUAWJABUBXLCBUBWMXOFWLXNACACUCZWKXMBXPVMWPWJXLXP
      VLWOVIVJWNVKUDUEXPVPWRWEXGWIXKXPVNWQVOVJWNJUFZUGXPVTXBWDXFXPVSXAXPVNWQVRW
      TXQXPVQWSIZVRWTUHVJWNUIZVQWSUJUKZULUMXPWCXEVKXPWBXDEXPWBXCVJQZXDXPXRWAXCI
      WBYAIXSVQWSUNWAXCVJUOUPXCVJWNUQURUSUEUTXPVRWTWHXJXTXPWGXIVKXPWFXHVJWNVAVB
      UEUTVCUTVDVEVFWJABFVGXLCBFVGVH $.
      $( [9-Apr-95] $)
  $}

  ${
    $d x y z f g u v w F $.  $d x y z f g u v w A $.
    $( ` x y z f g u v w ` are dummy. $)
    $( The recursive definition generator is a function on ordinal numbers. $)
    rdgfnon $p |- rec ( F , A ) Fn On $=
      ( vx vy vw vu vv vg vz vf cv wfn cfv cres c0 wceq wa cdm wlim wo wn cuni
      crn w3o copab wral con0 wrex cab crdg rdglem1 df-rdg tfr1 ) CDEKZFKZLGKZU
      NMUNUPNHKZOPZIKZAPQURUQRZSZTUAUSUTUBUQMBMPQVAUSUQUCUBPQUDHIUEZMPGUOUFQFUG
      UHEUIJBAUJVBFGCDEJVBUKFGIAEHBULUM $.
      $( [9-Apr-95] $)
  $}

  ${
    $d x y z f g u v w F $.  $d x y z f g u v w A $.
    $( ` x y f u v ` are dummy. $)
    $( Value of the recursive definition generator. $)
    rdgval $p |- ( g e. On -> ( rec ( F , A ) ` g ) = (
                       { <. w , z >. | ( ( w = (/) /\ z = A ) \/
                       ( -. ( w = (/) \/ Lim dom w ) /\
                               z = ( F ` ( w ` U. dom w ) ) )
                       \/ ( Lim dom w /\ z = U. ran w ) ) }
                   ` ( rec ( F , A ) |` g ) ) ) $=
      ( vx vy vu vv vf cv con0 wcel crdg cfv cres c0 wceq wa cdm wlim wo wn
      cuni crn w3o copab wfn wral wrex cab rdglem1 df-rdg tfr2 rdglem2 fveq1i
      syl6eq ) DKZLMURECNZOUSURPZURQRZAKZCRZSVAURTZUAZUBUCVBVDUDUROEORSVEVBURUE
      UDRSUFDAUGZOUTBKZQRZVCSVHVGTZUAZUBUCVBVIUDVGOEORSVJVBVGUEUDRSUFBAUGZOFGDV
      GHKZUHIKZVGOVGVMPVFORIVLUISHLUJBUKJUSVFHIFGBJVFULHIACBDEUMUNUTVFVKDABCEUO
      UPUQ $.
      $( [9-Apr-95] $)
  $}

  ${
    $d z g w F $.  $d z g w A $.
    $( ` z g w ` are dummy. $)

    ${
      rdg.1 $e |- A e. V $.

      $( The initial value of the recursive definition generator. $)
      rdgzer $p |- ( rec ( F , A ) ` (/) ) = A $=
        ( vg vz vw crdg cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab
        rdglem2 rdgfnon rdgval tz7.44-1 ) DEABAGFHZIJZEHZAJKUFUELZMZNOUGUHPUEQB
        QJKUIUGUERPJKSFETBFEDABUAABUBEFADBUCCUD $.
        $( [23-Apr-95] $)
    $}

    ${
      $d z g B $.  $( ` z g ` are dummy. $)
      rdg.2 $e |- B e. On $.

      $( The value of the recursive definition generator at a successor. $)
      rdgsuc $p |- ( rec ( F , A ) ` suc B ) = ( F ` ( rec ( F , A ) ` B ) ) $=
        ( vg vz vw crdg cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab
        rdglem2 rdgfnon rdgval tz7.44-2 ) EFABCAHGIZJKZFIZAKLUGUFMZNZOPUHUIQUFR
        CRKLUJUHUFSQKLTGFUACGFEACUBACUCFGAECUDDUE $.
        $( [23-Apr-95] $)

      $( The value of the recursive definition generator at a limit ordinal. $)
      rdglim $p |- ( Lim B ->
                   ( rec ( F , A ) ` B ) = U. ( rec ( F , A ) " B ) ) $=
        ( vg vz vw crdg cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab
        rdglem2 rdgfnon rdgval tz7.44-3 ) EFABCAHGIZJKZFIZAKLUGUFMZNZOPUHUIQUFR
        CRKLUJUHUFSQKLTGFUACGFEACUBACUCFGAECUDDUE $.
        $( [23-Apr-95] $)
    $}
  $}

  ${
    $d x A $.  $d x F $.  $( ` x ` is dummy. $)

    $( The initial value of the recursive definition generator. $)
    rdgzert $p |- ( A e. C -> ( rec ( F , A ) ` (/) ) = A ) $=
      ( vx c0 cv crdg cfv wceq rdgeq2 fveq1d id cleq12d visset rdgzer vtoclg )
      ECDFZGZHZQIECAGZHZAIDABQAIZSUAQAUBERTQACJKUBLMQCDNOP $.
      $( [25-Apr-95] $)
  $}

  $( The value of the recursive definition generator at a successor. $)
  rdgsuct $p |- ( B e. On ->
               ( rec ( F , A ) ` suc B ) = ( F ` ( rec ( F , A ) ` B ) ) ) $=
    ( con0 wcel csuc crdg cfv wceq c0 cded suceq fveq2d fveq2 cleq12d 0elon
    elimel rdgsuc dedth ) BDEZBFZCAGZHZBUBHZCHZITBJKZFZUBHZUFUBHZCHZIBJBUFIZUCU
    HUEUJUKUAUGUBBUFLMUKUDUICBUFUBNMOAUFCBJDPQRS $.
    $( [23-Apr-95] $)

  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $. $d x y z $.
    rdgsucopab.1 $e |- ( z e. A -> A. x z e. A ) $.
    rdgsucopab.2 $e |- ( z e. B -> A. x z e. B ) $.
    rdgsucopab.3 $e |- ( z e. D -> A. x z e. D ) $.
    rdgsucopab.4 $e |- F = rec ( { <. x , y >. | y = C } , A ) $.
    rdgsucopab.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The value of the recursive definition generator at a successor (special
       case where the characteristic function is an ordered pair
       abstraction). $)
    rdgsucopab $p |- ( ( B e. On /\ D e. R ) ->  ( F ` suc B ) = D ) $=
      ( con0 wcel csuc cfv cv wceq copab crdg rdgsuct fveq1i syl5eq cvv fvex
      hbopab1 hbrdg hbfv cleq2i sylbir fvopabgf mpan sylan9eq ) EOPZGHPZEQZIRZE
      BSFTZABUAZDUBZRZVARZGUPURVBRVDUSDEVAUCURIVBMUDUEVCUFPUQVDGTEVBUGABCVCFGUF
      HACEVBACDVAUTABCUHJUIKUJLASZVCTVEEIRZTFGTVFVCVEEIVBMUDUKNULUMUNUO $.
      $( [30-Oct-03] $) $( [22-Oct-03] $)

    $( The value of the recursive definition generator at a successor (special
       case where the characteristic function is an ordered pair abstraction
       and where the mapping class ` D ` is a proper class).  This is a
       technical lemma that can be used together with ~ rdgsucopab to help
       eliminate redundant sethood antecedents. $)
    rdgsucopabn $p |- ( -. D e. V ->  ( F ` suc B ) = (/) ) $=
      ( con0 wcel cvv wn csuc cfv c0 wceq wi cv copab crdg rdgsuct fveq1i
      syl5eq hbopab1 hbrdg hbfv cleq2i sylbir fvopabnf sylan9eq exp cdm
      sucelon dmeqi wfn rdgfnon fndm ax-mp eqtr eleq2i bitr4 bineg ndmfv sylbi
      a1d pm2.61i ) ENOZGPOQZERZHSZTUAZUBVLVMVPVLVMVOEBUCFUAZABUDZDUEZSZVRSZTVL
      VNVSSWAVODEVRUFVNHVSLUGUHABCVTFGACEVSACDVRVQABCUIIUJJUKKAUCZVTUAWBEHSZUAF
      GUAWCVTWBEHVSLUGULMUMUNUOUPVLQZVPVMWDVNHUQZOZQVPVLWFVLVNNOWFEURWENVNWEVSU
      QZNHVSLUSVSNUTWGNUADVRVANVSVBVCVDVEVFVGVNHVHVIVJVK $.
      $( [8-Nov-03] $) $( [22-Oct-03] $)
  $}

  $( The value of the recursive definition generator at a limit ordinal. $)
  rdglimt $p |- ( ( B e. C /\ Lim B ) ->
                 ( rec ( F , A ) ` B ) = U. ( rec ( F , A ) " B ) ) $=
    ( wcel wlim crdg cfv cima cuni wceq con0 wa wi c0 cded limeq fveq2 imaeq2
    unieqd cleq12d bi2imd 0elon elimel rdglim dedth imp limelon sylan anabss3
    ) BCEZBFZBDAGZHZUMBIZJZKZBLEZULUQUKULMURULUQURULUQNURBOPZFZUSUMHZUMUSIZJZKZ
    NBOBUSKZULUTUQVDBUSQVEUNVAUPVCBUSUMRVEUOVBBUSUMSTUAUBAUSDBOLUCUDUEUFUGBCUHU
    IUJ $.
    $( [23-Apr-95] $)

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( The value of the recursive definition generator at a limit ordinal,
       in terms of the union of all smaller values. $)
    rdglim2 $p |- ( ( B e. C /\ Lim B ) -> ( rec ( F , A ) ` B ) =
                  U. { y | E. x e. B y = ( rec ( F , A ) ` x ) } ) $=
      ( wcel wlim wa crdg cfv cima cuni cv wceq wrex cab rdglimt cop wex con0
      wb word wi limord ordelord exp visset elon syl6ibr syl wfn rdgfnon
      fnfvop mpan cleqcom syl5bb syl6 pm5.32d biexdv df-rex syl5rbb biabdv
      dfima3 syl5eq unieqd adantl eqtrd ) DEGZDHZIDFCJZKVKDLZMZBNZANZVKKZOZADPZ
      BQZMZCDEFRVJVMVTOVIVJVLVSVJVODGZVOVNSVKGZIZATZBQVSVLVJWDVRBVJWAVQIZATWDVR
      VJWEWCAVJWAVQWBVJWAVOUAGZVQWBUBVJDUCZWAWFUDDUEWGWAVOUCZWFWGWAWHDVOUFUGVOA
      UHUIUJUKWFVPVNOZWBVQVKUAULWFWIWBUBCFUMUAVOVNVKBUHUNUOVNVPUPUQURUSUTVQADVA
      VBVCABVKDVDVEVFVGVH $.
      $( [23-Apr-95] $)

    $( The value of the recursive definition generator at a limit ordinal,
       in terms of indexed union of all smaller values. $)
    rdglim2a $p |- ( ( B e. C /\ Lim B ) -> ( rec ( F , A ) ` B ) =
                  U. x e. B ( rec ( F , A ) ` x ) ) $=
      ( vy wcel wlim wa crdg cfv cv wceq wrex cab cuni ciun rdglim2 fvex
      dfiun2 syl6eqr ) CDGCHICEBJZKFLALZUBKZMACNFOPACUDQAFBCDERAFCUDUCUBSTUA $.
      $( [28-Jun-98] $)
  $}

  $( We use the next 3 theorems for finite recursion.  Note that we take
     advantage of what we have done for transfinite recursion, which allows
     us to explicitly specify the function and moreover not require the
     existence of omega. $)

  $( The fucntion generated by finite recursive definition generation is a
     function on omega. $)
  frfnom $p |- ( rec ( F , A ) |` om ) Fn om $=
    ( crdg com cres wfn wfun cdm wceq wa con0 rdgfnon fnfun ax-mp funres cin
    fndm ineq2i dmres wss omsson dfss mpbi 3eqtr4 pm3.2i df-fn mpbir ) BACZDEZD
    FUIGZUIHZDIZJUJULUHGZUJUHKFZUMABLZKUHMNDUHONDUHHZPDKPZUKDUPKDUNUPKIUOKUHQNR
    UHDSDKTDUQIUADKUBUCUDUEUIDUFUG $.
    $( [15-Oct-96] $)

  $( The initial value resulting from finite recursive definition
     generation. $)
  frzer $p |- ( A e. B -> ( ( rec ( F , A ) |` om ) ` (/) ) = A ) $=
    ( wcel c0 crdg cfv com cres rdgzert wceq peano1 fvres ax-mp syl5eq ) ABDECA
    FZGZAEPHIGZABCJEHDRQKLEHPMNO $.
    $( [15-Oct-96] $)

  $( The successor value resulting from finite recursive definition
     generation.  $)
  frsuc $p |- ( B e. om -> ( ( rec ( F , A ) |` om ) ` suc B ) =
              ( F ` ( ( rec ( F , A ) |` om ) ` B ) ) ) $=
    ( com wcel csuc crdg cfv cres con0 wceq nnont rdgsuct syl peano2b fvres
    sylbi fveq2d 3eqtr4d ) BDEZBFZCAGZHZBUBHZCHZUAUBDIZHZBUFHZCHTBJEUCUEKBLABCM
    NTUADEUGUCKBOUADUBPQTUHUDCBDUBPRS $.
    $( [15-Oct-96] $)

  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $. $d x y z $.
    frsucopab.1 $e |- ( z e. A -> A. x z e. A ) $.
    frsucopab.2 $e |- ( z e. B -> A. x z e. B ) $.
    frsucopab.3 $e |- ( z e. D -> A. x z e. D ) $.
    frsucopab.4 $e |- F = ( rec ( { <. x , y >. | y = C } , A ) |` om ) $.
    frsucopab.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The successor value resulting from finite recursive definition
       generation (special case where the generation function is an ordered
       pair abstraction). $)
    frsucopab $p |- ( ( B e. om /\ D e. R ) ->  ( F ` suc B ) = D ) $=
      ( com wcel csuc cfv cv wceq copab crdg cres frsuc fveq1i syl5eq cvv fvex
      hbopab1 hbrdg ax-17 hbres hbfv cleq2i sylbir fvopabgf mpan sylan9eq ) EOP
      ZGHPZEQZIRZEBSFTZABUAZDUBZOUCZRZVDRZGUSVAVFRVHVBDEVDUDVAIVFMUEUFVGUGPUTVH
      GTEVFUHABCVGFGUGHACEVFACVEOACDVDVCABCUIJUJCSOPAUKULKUMLASZVGTVIEIRZTFGTVJ
      VGVIEIVFMUEUNNUOUPUQUR $.
      $( [14-Sep-03] $)
  $}

  ${
    $d x y z w F $.  $d x y z w A $.  $( ` z w ` are dummy. $)
    tz7.48.1 $e |- F Fn On $.
    $( A way of showing an ordinal function is one-to-one. $)
    tz7.48lem $p |- ( ( A (_ On /\ A. x e. A A. y e. x
                    -. ( F ` x ) = ( F ` y ) ) -> Fun `' ( F |` A ) ) $=
      ( vw vz con0 wss cv cfv wceq wn wral wa cres weq wi ccnv wfun wel wcel
      wal wb fvres cleqan12d ad2antrl ssel im2and wo pm3.48 oridm cleqcom
      bineg biror bitr3 syl6ibr con2d word ordtri3 biimprd eloni syl2an syl9r
      syl6 imp32 sylbid exp32 a2d 19.20dv r2al 3imtr4g pm3.26 imran syl4 exp3a
      19.20i 3imtr4 eleq1 fveq2 cleq2d binegd bi2imd cbvralv biral eleq2
      cleq1d biraldv bitr 3bitr ralcom2 sylbi ancri r19.26 sylibr syl syl5
      imdistani wfn cvv wf wf1 f1fv df-f1 pm3.27bd fnf sylanb fnssres mpan
      sylan ) CHIZAJZDKZBJZDKZLZMZBXLNACNZOXKXLDCPZKZXNXSKZLZABQZRZBCNACNZOXSST
      ZXKXRYEXKABUAZXOXMLZMZRZBAUAZXQRZOZBCNZACNZYEXRXKXLCUBZXNCUBZOZYMRZBUCZAU
      CYRYDRZBUCZAUCYOYEXKYTUVBAXKYSUVABXKYRYMYDXKYRYMYDXKYRYMOOYBXPYCYRYBXPUDX
      KYMYPYQXTXMYAXOXLCDUEXNCDUEUFUGXKYRYMXPYCRZXKYRXLHUBZXNHUBZOZYMUVCRXKYPUV
      DYQUVECHXLUHCHXNUHUIYMXPYGYKUJZMZUVFYCYMUVGXPYMUVGYIXQUJZXQYGYIYKXQUKXQXQ
      XQUJUVIXQULXQYIXQXPYHXMXOUMUNUOUPUQURXLUSZXNUSZUVHYCRUVDUVEUVJUVKOYCUVHXL
      XNUTVAXLVBXNVBVCVDVEVFVGVHVIVJVJYMABCCVKYDABCCVKVLXRYLBCNZACNZYOYPYKOZXQR
      ZBUCZAUCYRYLRZBUCZAUCXRUVMUVPUVRAUVOUVQBUVOYRYKXQYRYKOUVNXQYRYPYKYPYQVMVN
      VOVPVQVQXQABCXLVKYLABCCVKVRUVMYJBCNZACNZUVMOZYOUVMUVTUVMYJACNZBCNZUVTUVMF
      AUAZXMFJZDKZLZMZRZFCNZACNFGUAZGJZDKZUWFLZMZRZFCNZGCNZUWCUVLUWJACYLUWIBFCB
      FQZYKUWDXQUWHXNUWEXLVSUWSXPUWGUWSXOUWFXMXNUWEDVTWAWBWCWDWEUWJUWQAGCAGQZUW
      IUWPFCUWTUWDUWKUWHUWOXLUWLUWEWFUWTUWGUWNUWTXMUWMUWFXLUWLDVTWGWBWCWHWDUWRA
      GUAZUWMXMLZMZRZACNZGCNUWCUWQUXEGCUWPUXDFACFAQZUWKUXAUWOUXCUWEXLUWLVSUXFUW
      NUXBUXFUWFXMUWMUWEXLDVTWAWBWCWDWEUXEUWBGBCGBQZUXDYJACUXGUXAYGUXCYIUWLXNXL
      WFUXGUXBYHUXGUWMXOXMUWLXNDVTWGWBWCWHWDWIWJYJBACWKWLWMYOUVSUVLOZACNUWAYNUX
      HACYJYLBCWNWEUVSUVLACWNWIWOWPWQWRXSCWSZYEYFXKCWTXSXAZYEYFUXIUXJYEOZUXJYFU
      XKCWTXSXBUXJYFOABCWTXSXCCWTXSXDUPXECXSXFXGDHWSXKUXIEHCDXHXIXJWP $.
      $( [9-Feb-97] $)

    $( Proposition 7.48(1) of [TakeutiZaring] p. 51. $)
    tz7.48-1 $p |- ( A. x e. On ( F ` x ) e. ( A \ ( F " x ) ) ->
                   ran F (_ A ) $=
      ( vy cv cfv cima cdif wcel con0 wral crn wceq wa wex hbra1 ax-17 wi ra4
      eleq1 eldifi syl5bi com12 syl3 imp3a syl 19.23ad cop visset elrn cdm
      opeldm wfn fndm ax-mp eleq2i sylib ancri wb fnfvop mpan pm5.32i sylibr
      19.22i sylbi syl5 ssrdv ) AFZCGZBCVIHZIJZAKLZECMZBVMVIKJZVJEFZNZOZAPZVPBJ
      ZVPVNJZVMVRVTAVLAKQVTARVMVOVLSZVRVTSVLAKTWBVOVQVTVLVQVTSVOVQVLVTVQVJBJVTV
      LVJVPBUAVJBVKUBUCUDUEUFUGUHWAVIVPUICJZAPVSAVPCEUJZUKWCVRAWCVOWCOVRWCVOWCV
      ICULZJVOVIVPCAUJUMWEKVICKUNZWEKNDKCUOUPUQURUSVOVQWCWFVOVQWCUTDKVIVPCWDVAV
      BVCVDVEVFVGVH $.
      $( [9-Feb-97] $)

    $( Proposition 7.48(2) of [TakeutiZaring] p. 51. $)
    tz7.48-2 $p |- ( A. x e. On ( F ` x ) e. ( A \ ( F " x ) ) -> Fun `' F ) $=
      ( vy cv cfv cima cdif wcel con0 wral cres ccnv wfun wceq wn wa wel wi
      cdm crn cin dmres eleq2i elin bitr wfn fnfun ax-mp funres fvrn mpan
      sylbir wb fvres eleq1d df-ima syl6rbbr adantr mpbird eleq1a eldifn nsyli
      syl fndm sylan5br pm3.26 onelon ancoms sylan13 exp imp3a com12 r19.21aiv
      r19.20i wss ssid tz7.48lem wrel fnrel eqsstr relssres mp2an cnveq funeq
      sylib ) AFZCGZBCWHHZIJZAKLZCKMZNZOZCNZOZWLWIEFZCGZPZQZEWHLZAKLZWOWKXBAKWH
      KJZWKXBXDWKRZXAEWHEASZXEXAXFXDWKXAXFXDWKXATZXFWRKJZXGXFXDRXFWRCUAZJZXGXHX
      FXJRZWSWJJZXGXKXLWRCWHMZGZXMUBZJZXKWRXMUAZJZXPXRWRWHXIUCZJXKXQXSWRCWHUDUE
      WRWHXIUFUGXMOZXRXPCOZXTCKUHZYADKCUIUJWHCUKUJWRXMULUMUNXFXLXPUOXJXFXPWSXOJ
      XLXFXNWSXOWRWHCUPUQWJXOWSCWHURUEUSUTVAXLWTWIWJJWKWSWJWIVBWIBWJVCVDVEXIKWR
      YBXIKPDKCVFUJZUEVGXFXDVHXDXFXHWHWRVIVJVKVLVMVNVOVLVPKKVQXCWOKVRZAEKCDVSUM
      VEWNWPPZWOWQUOWMCPZYECVTZXIKVQYFYBYGDKCWAUJXIKKYCYDWBCKWCWDWMCWEUJWNWPWFU
      JWG $.
      $( [9-Feb-97] $)

    $( Proposition 7.48(3) of [TakeutiZaring] p. 51. $)
    tz7.48-3 $p |- ( A. x e. On ( F ` x ) e. ( A \ ( F " x ) ) -> -. A e. V ) $=
      ( cv cfv cima cdif wcel con0 wral cvv crn cdm onprc wfn wceq fndm ax-mp
      eleq1i mtbir ccnv wfun wi tz7.48-2 funrnex com12 df-rn dfdm4 3imtr4g syl
      mtoi wss tz7.48-1 ssexg mtod ) AEZCFBCUQGHIAJKZBLIZCMZLIZURVACNZLIZVCJLIO
      VBJLCJPVBJQDJCRSTUAURCUBZUCZVAVCUDABCDUEVEVDNZLIZVDMZLIZVAVCVGVEVILVDUFUG
      UTVFLCUHTVBVHLCUITUJUKULURUTBUMZUSVAUDABCDUNUSVJVAUTBLUOUGUKUP $.
      $( [9-Feb-97] $)

    ${
      tz7.49.2 $e |- A e. V $.
      $( Proposition 7.49 of [TakeutiZaring] p. 51. $)
      tz7.49 $p |- ( A. x e. On ( -. ( A \ ( F " x ) ) = (/) ->
                   ( F ` x ) e. ( A \ ( F " x ) ) ) ->
                   E. x e. On ( A. y e. x -. ( A \ ( F " y ) ) = (/) /\
                   ( F " x ) = A /\ Fun `' ( F |` x ) ) ) $=
        ( vz cv cima cdif c0 wceq wn cfv wcel wi con0 wral wa wrex cres ccnv
        wfun w3a cvv tz7.48-3 mt2 r19.20 mtoi dfrex2 sylibr weq imaeq2 difeq2d
        cleq1d onminex syl hbra1 pm3.27 ad2antll wss ax-17 hban wel binegd
        fveq2 eleq12d bi2imd rcla4v eleq1 eldifi syl5bi com12 syl8 onelon
        ancoms syl5 ra4 imp syl7 com23 exp4a exp3a pm2.43d com34 r19.23ad wfn
        fnfun ax-mp fvelima mpan ssrdv ssdif0 biimpr im2an eqss wal ssel cdm
        onsst fndm syl6ssr funfvima2 eldifn imp3a im2and eleq1a con3d syl6
        exp4d com24 imp4a com3r 19.21adv 19.21ad r2al syl6ibr ancld tz7.48lem
        adantr 3jca exp41 r19.22d mpd ) CDAHZIZJZKLZMZYEDNZYGOZPZAQRZYHCDBHZIZJ
        ZKLZMZBYERZSZAQTZYSYFCLZDYEUAUBUCZUDZAQTYMYHAQTZUVAYMYIAQRZMUVEYMUVFYKA
        QRZUVGCUEOFACDEUFUGYIYKAQUHUIYHAQUJUKYHYQABABULZYGYPKUVHYFYOCYEYNDUMUNZ
        UOZUPUQYMYTUVDAQYLAQURYMYEQOZYHYSUVDYMUVKYSYHUVDYMYSUVKYHUVDPYMYSUVKYHU
        VDYMYSSZUVKSZYHSZYSUVBUVCUVLYSUVKYHYMYSUSUTUVNYFCVAZCYFVAZSUVBUVMUVOYHU
        VPUVMGYFCUVLUVKGHZYFOZUVQCOZPUVLUVRUVKUVSUVLYNDNZUVQLZBYETZUVKUVSPZUVRU
        VLUWAUWCBYEYMYSBYMBVBZYRBYEURZVCUWCBVBUVLBAVDZUVKUWAUVSUVLUWFUVKUWAUVSP
        ZPZYMYSUWFUWFUWHPZPYMYSUWFUWIYMYSUWFSZUWFUVKUWGYMUWFUVKSZUWJUWGYMUWKYRU
        WGUWJYMYNQOZYRUWGPUWKYMUWLYRUVTYPOZUWGYLYRUWMPAYNQUVHYIYRYKUWMUVHYHYQUV
        JVEUVHYJUVTYGYPYEYNDVFUVIVGVHVIZUWAUWMUVSUWAUVTCOUVSUWMUVTUVQCVJUVTCYOV
        KVLVMVNUVKUWFUWLYEYNVOVPVQYSUWFYRYRBYEVRVSZVTWAWBWCVSWDWEWFDUCZUVRUWBDQ
        WGZUWPEQDWHWIZBUVQYEDWJWKVQWAVSWLUVPYHCYFWMWNWOYFCWPUKUVMUVCYHUVLUVKUVC
        YSYMUVKUVCPYSYMSZYEQVAZUVCUVKUWSUWTUWTUVTUVQDNZLZMZGYNRBYERZSUVCUWSUWTU
        XDUWSUWTUWFGBVDZSUXCPZGWQZBWQUXDUWSUWTUXGBYSYMBUWEUWDVCUWTBVBUWSUWTUXFG
        UWSUWTUWFUXEUXCUWTUWFUWSUXEUXCPZUWTUWFYSYMUXHUWTUWFYSYMUXHPZPUWTUWFYSUW
        FUXIUWTUWFYSUWFUXIUWTUWFUWLUWJUXIPYEQYNWRUWLUXEYMUWJUXCUWLUXEYMUWJUXCUW
        LUXEYMUWJSZSUXAYOOZUVTYOOZMZSUXCUWLUXEUXKUXJUXMUWLYNDWSZVAZUXEUXKPZUWLY
        NQUXNYNWTUWQUXNQLEQDXAWIXBUWPUXOUXPUWRYNUVQDXCWKUQUWLYMUWJUXMYMUWLUWJUX
        MPYMUWLYRUXMUWJYMUWLYRUWMUXMUWNUVTCYOXDVNUWOVTVMXEXFUXKUXMUXCUXKUXBUXLU
        XAYOUVTXGXHVSXIXJXKXIWBWEWDXLXMXLXNXOUXCBGYEYNXPXQXRBGYEDEXSXIYEWTVQVPV
        SXTYAYBWAWEXLYCYD $.
        $( [10-Feb-97] $)

      $( Corollary of Proposition 7.49 of [TakeutiZaring] p. 51. $)
      tz7.49c $p |- ( A. x e. On ( -. ( A \ ( F " x ) ) = (/) ->
                   ( F ` x ) e. ( A \ ( F " x ) ) ) ->
                   E. x e. On ( F |` x ) : x -1-1-onto-> A ) $=
        ( vy cv cima cdif c0 wceq wn cfv wcel wi con0 wral cres ccnv wfun w3a
        wrex wf1o tz7.49 wa wfn crn wss onsst fnssres mpan syl df-ima cleq1i
        biimp im2an imran f1o2 df-3an an23 3bitr sylibr exp31 imp3a 3simpc
        syl5 r19.22i ) BCAGZHZIZJKLVHCMVJNOAPQBCFGHIJKLFVHQZVIBKZCVHRZSTZUAZAPU
        BVHBVMUCZAPUBAFBCDEUDVOVPAPVHPNZVLVNUEVPVOVQVLVNVPVQVLVNVPVQVLUEZVNUEVM
        VHUFZVMUGZBKZUEZVNUEZVPVRWBVNVQVSVLWAVQVHPUHZVSVHUICPUFWDVSDPVHCUJUKULV
        LWAVIVTBCVHUMUNUOUPUQVPVSVNWAUAVSVNUEWAUEWCVHBVMURVSVNWAUSVSVNWAUTVAVBV
        CVDVKVLVNVEVFVGUL $.
        $( [10-Feb-97] $)
    $}
  $}

  ${
    $d x y v A $.  $d x y z w v u F $.  $d y v u G $.
    abianfp.1 $e |- A e. V $.
    abianfp.2 $e |- G = rec ( { <. z , w >. | w = ( F ` z ) } , x ) $.
    $( Lemma for ~ abianfp .  We prove by transfinite induction that if ` F `
       has a fixed point ` x ` , then its iterates also equal ` x ` .  This
       lemma is used for the "trivial" direction of the main theorem. $)
    abianfplem $p |- ( v e. On -> ( ( F ` x ) = x -> ( G ` v ) = x ) ) $=
      ( vy vu cv cfv wceq c0 csuc fveq2 cleq1d weq copab crdg fveq1i visset
      rdgzer eqtr a1i con0 wcel wa cvv fvex wel ax-17 wal hbopab1 hbrdg eleq2i
      bial 3imtr4 hbfv rdgsucopab mpan2 id sylan9eqr sylan9eq exp32 wlim wral
      wi ciun rdglim2a mpan iuneq2i 3eqtr4g adantr iuneq2 wn word cuni w3a
      df-lim 3simp2 sylbi iunconst syl eqtrd exp a1d tfinds2 ) DLZGMZALZNZOGMZW
      LNZJLZGMZWLNZWPPZGMZWLNZWLFMZWLNZDJWJONZWKWNWLWJOGQRDJSWKWQWLWJWPGQRWJWSN
      WKWTWLWJWSGQRWOXCWNOCLBLZFMZNZBCTZWLUAZMWLOGXIIUBWLXHAUCUDUEUFWPUGUHZXCWR
      XAXJXCWRUIWTWQFMZWLXJXKUJUHWTXKNWQFUKBCKWLWPXFXKUJGKAULBUMZKJULBUMZBKWQFK
      LZFUHBUMBKWPGXNXIUHZXOBUNXNGUHZXPBUNBKWLXHXGBCKUOXLUPGXIXNIUQZXPXOBXQURUS
      XMUTUTIXEWQFQVAVBWRXCXKXBWLWQWLFQXCVCVDVEVFWJVGZWRJWJVHZWMVIXCXRXSWMXRXSU
      IWKJWJWQVJZWLXRWKXTNXSXRWJXIMZJWJWPXIMZVJZWKXTWJUJUHXRYAYCNDUCJWLWJUJXHVK
      VLWJGXIIUBJWJWQYBWQYBNJDULWPGXIIUBUFVMVNVOXSXRXTJWJWLVJZWLJWJWQWLVPXRXDVQ
      ZYDWLNXRWJVRZYEWJWJVSNZVTYEWJWAYFYEYGWBWCJWJWLWDWEVDWFWGWHWI $.
      $( [7-Sep-04] $) $( [4-Sep-04] $)

    $( "A most fundamental fixed point theorem" of Alexander Abian (1923-1999),
       apparently proved in 1998.  "Let ` F ` be a mapping from a set ` A `
       into itself.  Then ` F ` has a fixed point if and only if:  There exists
       an element ` x ` of ` A ` such that for every ordinal ` v ` , ` G `` v `
       is an element of ` A ` , and if ` G `` v ` is not a fixed point of ` F `
       then the ` G `` u ` 's are all distinct for every ordinal ` u e. v ` ."
       Note that ` G `` 0 = x ` , ` G `` 1 = F `` x ` ,
       ` G `` 2 = F `` ( F `` x ) ` ,... are the iterates of ` F ` .  See
       ~ df-rdg for the ` rec ` operation.  The proof's key idea is to assume
       that ` F ` does not have a fixed point, then use the Axiom of
       Replacement in the form of ~ f1dmex to derive that the class of all
       ordinals exists, contradicting ~ onprc .  Our version of this theorem
       does not require the hypothesis that ` F ` be a mapping.  Reference:
       ~ http://www.math.ucdavis.edu/~~suh/abian/abian-themostfixed.html . $)
    abianfp $p |- ( E. x e. A ( F ` x ) = x <-> E. x e. A
           A. v e. On ( ( G ` v ) e. A /\ ( -. ( F ` ( G ` v ) ) = ( G ` v ) ->
                    A. u e. v -. ( G ` v ) = ( G ` u ) ) ) ) $=
      ( vy cv cfv wceq wrex wcel wn wral wi wa con0 abianfplem imp eleq1d
      biimprd fveq2 id cleq12d biimprcd sylcom negb syl pm2.21d a1d jcad exp
      com13 r19.21adv r19.22i cvv onprc r19.26 binegd rcla4v syl4d r19.20sdv
      r19.20 syl6 com12 wf1 wf ccnv wfun wfn copab crdg rdgfnon wb fneq1 ax-mp
      mpbir ffnfv biimpr mpan cres wss ssid tz7.48lem fnresdm cnveq funeq
      sylib im2an df-f1 sylibr f1dmex syld exp3a com23 sylbi mtoi a1i
      r19.23aiv weq cbvrexv dfrex2 bitr2 impbi ) ALZGMZXINZAFOZDLZHMZFPZXNGMZXN
      NZQZXNELHMNQEXMRZSZTZDUARZAFOZXKYBAFXIFPZXKYADUAXMUAPZXKYDYAYEXKYDYASYEXK
      TZYDXOXTYFXOYDYFXNXIFYEXKXNXINZABCDFGHIJUBZUCUDUEYFXTYDYFXRXSYFXQXRQYEXKX
      QYEXKYGXQYHYGXQXKYGXPXJXNXIXNXIGUFYGUGUHUIUJUCXQUKULUMUNUOUPUQURUSYCKLZGM
      ZYINZQZKFRZQZXLYBYNAFYBYNSYDYBYMUAUTPZVAYBXODUARZXTDUARZTYMYOSZXOXTDUAVBY
      PYQYRYPYMYQYOYPYMYQYOYPYMYQTZXSDUARZYOYSYPYTYMYQYPYTSZYMYQXOXSSZDUARUVAYM
      XTUVBDUAYMXOXRXSYLXRKXNFYIXNNZYKXQUVCYJXPYIXNYIXNGUFUVCUGUHVCVDVEVFXOXSDU
      AVGVHUCVIYPYTYOYPYTTZUAFHVJZYOUVDUAFHVKZHVLZVMZTUVEYPUVFYTUVHHUAVNZYPUVFU
      VICLBLGMNBCVOZXIVPZUAVNZXIUVJVQHUVKNUVIUVLVRJUAHUVKVSVTWAZUVFUVIYPTDUAFHW
      BWCWDYTHUAWEZVLZVMZUVHUAUAWFYTUVPUAWGDEUAHUVMWHWDUVOUVGNZUVPUVHVRUVNHNZUV
      QUVIUVRUVMUAHWIVTUVNHWJVTUVOUVGWKVTWLWMUAFHWNWOFUTPUVEYOSIUAFUTHWPVTULUPW
      QWRWSUCWTXAXBXCXLYKKFOYNXKYKAKFAKXDZXJYJXIYIXIYIGUFUVSUGUHXEYKKFXFXGWLXH
      $.
      $( [7-Sep-04] $) $( [5-Sep-04] $)
  $}


