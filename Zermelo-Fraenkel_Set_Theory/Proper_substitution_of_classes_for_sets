$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d ps x y $. $d A x $.
    vsbcint.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Change variable of an implicit substitution hypothesis, introducing an
       explicit substitution.  (Contributed by Raph Levien, 10-Apr-04.) $)
    vsbcint $p |- ( y = A -> ( [ y / x ] ph <-> ps ) ) $=
      ( cv wceq weq wa wex wsb wb visset cleq1 ceqsexv hbs1 ax-17 hbbi sbequ12
      bicomd sylan9bb 19.23ai sylbir ) DGZEHZCDIZCGZEHZJZCKACDLZBMZUIUFCUEDNUHU
      EEOPUJULCUKBCACDQBCRSUGUKAUIBUGAUKACDTUAFUBUCUD $.
      $( [25-May-04] $) $( [25-May-04] $)
  $}

  ${
    $d x y z $.  $d y z ph $.  $d x z ps $.
    sbralie.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Implicit to explicit substitution that swaps variables in a quantified
       expression. $)
    sbralie $p |- ( [ x / y ] A. x e. y ph <-> A. y e. x ps ) $=
      ( vz cv wral wsb ax-17 hbs1 sbequ12 cbvral bisb raleq sbie bitr sbco2
      biral 3bitr ) ACDGZHZDCIZACFIZFCGZHZUDFDIZDUEHBDUEHUCUDFUAHZDCIUFUBUHDCAU
      DCFUAAFJZACFKACFLMNUHUFDCUFDJUDFUAUEOPQUDUGFDUEUDDJUDFDKUDFDLMUGBDUEUGACD
      IBACDFUIRABCDBCJEPQST $.
      $( [6-Sep-04] $) $( [5-Sep-04] $)
  $}

  $( Extend wff notation to include the proper substitution of a class for a
     set.  This definition "overloads" the previously defined variable
     substitution ~ wsb (where the first argument is a set variable rather
     than a class variable).  We take care to ensure that this new definition
     is a conservative extension.  Read this notation as "the proper
     substitution of class ` A ` for set variable ` x ` in wff ` ph ` ". $)
  wsbc $a wff [ A / x ] ph $.

  $( Define the proper substitution of a class for a set.  This definition
     applies to proper classes but is not meaningful in that case (and does not
     produce the same results as Definition 6.6 of [Quine] p. 42).  This
     definition is somewhat arbitrary - e.g., we could have used ~ sbc6 which
     yields a different result for proper classes.  In order to allow for
     a possible alternate but conflicting definition in the future, we will use
     this definition only to prove ~ dfsbcq , which will then in turn serve as
     our "real" definition.  Note: this definition extends or "overloads"
     ~ df-sb which ( via ~ df-clab ) becomes a special case of it. $)
  df-sbc $a |- ( [ A / x ] ph <-> A e. { x | ph } ) $.

  $( This theorem, which is similar to Theorem 6.7 of [Quine] p. 42, provides
     us a weak definition of the proper substitution of a class for a set
     that we will use in place of ~ df-sbc above.  We derive all our results
     from starting from here instead of ~ df-sbc ; in particular,
     substitution will become undefined when ` A ` or ` B ` is a proper
     class.  This will leave unspecified the "official" behavior for proper
     classes, which could be as in the ~ sbc5 assertion (always false) or as
     in ~ sbc6 (always true) or some more meaningful possibility in the
     future, that some clever person may discover, that is closer to Quine's
     definition.  (Quine's actual definition cannot be expressed simply in
     our formal system.)  $)
  dfsbcq $p |- ( A = B -> ( [ A / x ] ph <-> [ B / x ] ph ) ) $=
    ( wceq cab wcel wsbc eleq1 df-sbc 3bitr4g ) CDECABFZGDLGABCHABDHCDLIABCJABD
    JK $.
    $( [14-Apr-95] $)

  $( Equality theorem for class substitution. $)
  sbceq1 $p |- ( x = A -> ( ph <-> [ A / x ] ph ) ) $=
    ( cv wceq wsb wsbc dfsbcq sbid syl5bbr ) BDZCEABBFABCGAABKCHABIJ $.
    $( [26-Sep-03] $)

  ${
    $d ph y $.  $d A y $.  $d x y $.  $( ` y ` is dummy. $)
    $( Specialization:  if a formula is true for all sets, it is true for
       any class which is a set.  Similar to Theorem 6.11 of [Quine] p. 44. $)
    a4sbc $p |- ( A e. B -> ( A. x ph -> [ A / x ] ph ) ) $=
      ( vy wal wsbc wi cv wceq wsb dfsbcq stdpc4 syl5bi vtocleg ) ABFZABCGZHECD
      EIZCJABEKQPABRCLABEMNO $.
      $( [17-Jan-04] $) $( [16-Jan-04] $)
  $}

  ${
    $d x y z $.  $d y A z $.  $d ph z $.  $d x y B $.
    hbsbc.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( If ` x ` is not free in ` A ` , it is not free in
       ` A e. B -> [ A / x ] ph ` .  (The antecedent ensures that ` A ` is a
       set, which is necessary if we restrict ourselves to using only the
       "weak" class substitution definition ~ dfsbcq .) $)
    hbsbc $p |- ( ( A e. B -> [ A / x ] ph ) ->
                      A. x ( A e. B -> [ A / x ] ph ) ) $=
      ( vz wcel wsbc cv ax-17 hbel wal wi wceq wsb dfsbcq wel hbeq biald hbs1
      syl5bi sylbird vtocleg hbim1 ) DEHABDIZBBCCDEFCJEHBKLUFUFBMZNGDEGJZDOZUFA
      BGPZUGABUHDQZUIUJBMUGUJUIUJUFBBCCUHDCGRBKFSUKTABGUAUBUCUDUE $.
      $( [23-Aug-93] $)
  $}

  ${
    $d x A y $.  $( ` y ` is dummy. $)
    hbsbcv.1 $e |- A e. V $.
    $( If ` x ` does not occur in ` A ` , it is not free in
       ` [ A / x ] ph ` . $)
    hbsbcv $p |- ( [ A / x ] ph -> A. x [ A / x ] ph ) $=
      ( vy cvv wcel wsbc wi wal cv ax-17 hbsbc a1bi bial 3imtr4 ) CFGZABCHZIZSB
      JRRBJABECFEKCGBLMQRDNZRSBTOP $.
      $( [18-Aug-93] $)
  $}

  ${
    $d x z $.  $d z A $.  $d y z ph $.
    $( A composition law for class substitution. $)
    sbcco $p |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) $=
      ( vz wsb wsbc cv dfsbcq ax-17 sbco2 vtoclbg ) ABCGZCFGABFGNCDHABDHFDENCFI
      ZDJABODJABFCACKLM $.
      $( [11-Jan-04] $) $( [26-Sep-03] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d A y $.
    sbcco2.1 $e |- ( x = y -> A = B ) $.
    $( A composition law for class substitution.  Importantly, ` x ` may occur
       free in the class expression substituted for ` A ` . $)
    sbcco2 $p |- ( [ x / y ] [ B / x ] ph <-> [ A / x ] ph ) $=
      ( wsbc ax-17 weq wceq wb cv cleqcom 3imtr4 dfsbcq syl sbie ) ABEGZABDGZCB
      SCHCBIZEDJZRSKBCIDEJTUAFCLBLMEDMNABEDOPQ $.
      $( [6-Sep-04] $) $( [5-Sep-04] $)
  $}

  ${
    $d x A $.
    sbc5.1 $e |- A e. V $.
    $( An equivalence for class substitution. $)
    sbc5 $p |- ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) $=
      ( cv wceq wa wex wsbc hbsbcv sbceq1 ceqsex bicom ) BECFAGBHABCIZANBCABCDJ
      DABCKLM $.
      $( [23-Aug-93] $)
  $}

  ${
    $d x A $.
    sbc6.1 $e |- A e. V $.
    $( An equivalence for class substitution. $)
    sbc6 $p |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) $=
      ( cv wceq wi wal wsbc hbsbcv sbceq1 ceqsal bicom ) BECFAGBHABCIZANBCABCDJ
      DABCKLM $.
      $( [23-Aug-93] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcie.1 $e |- A e. V $.
    sbcie.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcie $p |- ( [ A / x ] ph <-> ps ) $=
      ( wsbc cv wceq wa wex sbc5 biimpa 19.23aiv sylbi wi wal biimprcd
      19.21aiv sbc6 sylibr impbi ) ACDGZBUCCHDIZAJZCKBACDELUEBCUDABFMNOBUDAPZCQ
      UCBUFCUDABFRSACDETUAUB $.
      $( [6-Sep-04] $) $( [4-Sep-04] $)
  $}

  ${
    $d z w A $. $d y z w B $.  $d z ph $.  $d x y z w $.
    elrabsf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Membership in a restricted class abstraction, expressed with explicit
       class substitution. (The variation ~ elrabf has implicit
       substitution).  The hypothesis specifies that ` x ` must not be a free
       variable in ` B ` . $)
    elrabsf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ [ A / x ] ph ) ) $=
      ( vz vw crab wcel wsb wsbc wa cv ax-17 hbs1 sbequ12 cbvrab eleq2i cvv wi
      hbsbc wceq sbceq1 wb wex 19.8a isset sylibr biimt syl bitrd elrabf
      elisset pm5.32i bitr4 sbcco 3bitr ) DABEIZJDABGKZGEIZJZDEJZUTGDLZMZVCABDL
      ZMUSVADAUTBGCEFCNEJGOAGOABGPABGQRSVBVCDTJZVDUAZMVEUTVHGHDEHNZDJGOZVIEJGOU
      TGHDTVJUBGNDUCZUTVDVHUTGDUDVKVGVDVHUEZVKVKGUFVGVKGUGGDUHUIVGVDUJZUKULUMVC
      VDVHVCVGVLDEUNVMUKUOUPVCVDVFABGDEUQUOUR $.
      $( [30-Sep-03] $)
  $}

  ${
    $d x y $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution.  Theorem 6.13 of [Quine] p. 44. $)
    elabs2 $p |- ( A e. { x | ph } <-> ( A e. V /\ [ A / x ] ph ) ) $=
      ( vy cab wcel cvv crab wsbc wa cv df-rab visset biantrur biabi eqtr4
      eleq2i ax-17 elrabsf bitr3 ) CABEZFCABGHZFCGFABCIJUBUACUBBKGFZAJZBEUAABGL
      AUDBUCABMNOPQABDCGDKGFBRST $.
      $( [9-Mar-04] $) $( [7-Mar-04] $)
  $}

  ${
    $d x y $.
    elabs.1 $e |- A e. V $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution.  Conveniently, this theorem has no distinct variable
       restrictions.  Except for the existence hypothesis, this theorem is
       "almost" like ~ df-sbc but was proved using only ~ dfsbcq as its
       starting point (making no other reference to ~ df-sbc ).  We prefer not
       to make direct reference to ~ df-sbc since its behavior at proper
       classes is at odds with Quine, whereas ~ dfsbcq is not.  (Quine's class
       substitution cannot be expressed in closed form.)  This theorem
       serves as a Quine-compatible substitute for ~ df-sbc . $)
    elabs $p |- ( A e. { x | ph } <-> [ A / x ] ph ) $=
      ( cab wcel cvv wsbc wa elabs2 biantrur bicom bitr ) CABEFCGFZABCHZIZOABCJ
      OPNODKLM $.
      $( [9-Mar-04] $) $( [7-Mar-04] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.  $d y ps $.
    $( Move negation in and out of class substitution. $)
    sbcn $p |- ( A e. B -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) $=
      ( vy wn wsb wsbc cv dfsbcq wceq binegd sbn vtoclbg ) AFZBEGABEGZFOBCHABCH
      ZFECDOBEIZCJRCKPQABRCJLABEMN $.
      $( [3-Feb-04] $) $( [16-Jan-04] $)

    $( Distribution of class substitution over implication. $)
    sbcim $p |- ( A e. B ->
           ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) $=
      ( vy wi wsb wsbc cv dfsbcq wceq bi2imd sbim vtoclbg ) ABGZCFHACFHZBCFHZGP
      CDIACDIZBCDIZGFDEPCFJZDKUADLQSRTACUADKBCUADKMABCFNO $.
      $( [16-Jan-04] $) $( [16-Jan-04] $)

    $( Distribution of class substitution over conjunction. $)
    sbcan $p |- ( A e. B ->
           ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) $=
      ( vy wa wsb wsbc cv dfsbcq wceq bi2and sban vtoclbg ) ABGZCFHACFHZBCFHZGP
      CDIACDIZBCDIZGFDEPCFJZDKUADLQSRTACUADKBCUADKMABCFNO $.
      $( [22-May-04] $) $( [21-May-04] $)

    $( Distribution of class substitution over disjunction. $)
    sbcor $p |- ( A e. B ->
           ( [ A / x ] ( ph \/ ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) $=
      ( vy wo wsb wsbc cv dfsbcq wceq bi2ord sbor vtoclbg ) ABGZCFHACFHZBCFHZGP
      CDIACDIZBCDIZGFDEPCFJZDKUADLQSRTACUADKBCUADKMABCFNO $.
      $( [22-May-04] $) $( [21-May-04] $)

    $( Distribution of class substitution over biconditional.  (Contributed
       by Raph Levien, 10-Apr-04.) $)
    sbcbi $p |- ( A e. B ->
         ( [ A / x ] ( ph <-> ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) $=
      ( vy wb wsb wsbc cv dfsbcq wceq bi2bid sbbi vtoclbg ) ABGZCFHACFHZBCFHZGP
      CDIACDIZBCDIZGFDEPCFJZDKUADLQSRTACUADKBCUADKMABCFNO $.
      $( [22-May-04] $) $( [21-May-04] $)
  $}

  ${
    $d x z A $.  $d x y z $.  $d z ph $.
    $( Move universal quantifier in and out of class substitution. $)
    sbcal $p |- ( A e. B -> ( [ A / y ] A. x ph <-> A. x [ A / y ] ph ) ) $=
      ( vz wal wsb wsbc cv dfsbcq wceq bialdv sbal vtoclbg ) ABGZCFHACFHZBGPCDI
      ACDIZBGFDEPCFJZDKSDLQRBACSDKMABCFNO $.
      $( [4-Feb-04] $) $( [16-Jan-04] $)

    $( Move existential quantifier in and out of class substitution. $)
    sbcex $p |- ( A e. B -> ( [ A / y ] E. x ph <-> E. x [ A / y ] ph ) ) $=
      ( vz wex wsb wsbc cv dfsbcq wceq biexdv sbex vtoclbg ) ABGZCFHACFHZBGPCDI
      ACDIZBGFDEPCFJZDKSDLQRBACSDKMABCFNO $.
      $( [22-May-04] $) $( [21-May-04] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Class substitution into a membership relation. $)
    sbcel1 $p |- ( A e. C -> ( [ A / x ] x e. B <-> A e. B ) ) $=
      ( vy wcel cvv cv wsbc wb elisset wceq wex elex wi ax-17 hbsbc hbbi
      sbceq1 eleq1 bitr3d bilimd 19.23ai pm5.74rd mpcom syl ) BDFBGFZAHZCFZABIZ
      BCFZJZBDKUHBLZAMZUGULABGNUNUGUJUKUMUGUJOZUGUKOZJAUOUPAUIAEBGEHBFAPQUPAPRU
      MUJUKUGUMUIUJUKUIABSUHBCTUAUBUCUDUEUF $.
      $( [16-Jan-04] $) $( [16-Jan-04] $)

    $( Class substitution into a membership relation. $)
    sbcel2 $p |- ( B e. C -> ( [ B / x ] A e. x <-> A e. B ) ) $=
      ( vy wcel cvv cv wsbc wb elisset wceq wex elex wi ax-17 hbsbc hbbi
      sbceq1 eleq2 bitr3d bilimd 19.23ai pm5.74rd mpcom syl ) CDFCGFZBAHZFZACIZ
      BCFZJZCDKUHCLZAMZUGULACGNUNUGUJUKUMUGUJOZUGUKOZJAUOUPAUIAECGEHCFAPQUPAPRU
      MUJUKUGUMUIUJUKUIACSUHCBTUAUBUCUDUEUF $.
      $( [5-Feb-04] $) $( [16-Jan-04] $)
  $}


  ${
    $d x A $.  $d x B $.
    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 59.  This
       is an axiom of a predicate calculus for a restricted domain.
       Compare the unrestricted ~ stdpc4 . $)
    rax4 $p |- ( B e. A -> ( A. x e. A ph -> [ B / x ] ph ) ) $=
      ( wral wcel wsbc cv wi wal a4sbc df-ral syl5ib sbcim sylibd sbcel1
      birimd pm2.43a ) ABCEZDCFZABDGZTSBHCFZBDGZUAIZTUAITSUBAIZBDGZUDTUEBJUFSUE
      BDCKABCLMUBABDCNOTUCTUABDCCPQOR $.
      $( [17-Jan-04] $) $( [16-Jan-04] $)
  $}

  ${
    rax5.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantifier version of Axiom 5 of [Mendelson] p. 59.  This
       is an axiom of a predicate calculus for a restricted domain.
       Compare the unrestricted ~ stdpc5 . $)
    rax5 $p |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) $=
      ( wi wral cv wcel wal df-ral bi2.04 bial bitr stdpc5 sylbi syl6ibr ) ABFZ
      CDGZACHDIZBFZCJZBCDGSAUAFZCJZAUBFSTRFZCJUDRCDKUEUCCTABLMNAUACEOPBCDKQ $.
      $( [17-Jan-04] $) $( [16-Jan-04] $)
  $}


