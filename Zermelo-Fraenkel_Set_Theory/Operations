$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Operations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include operations.  Note that the syntax is
     simply three class symbols in a row surrounded by parentheses. $)
  co $a class ( A F B ) $.

  $( Extend class notation to include abstraction classes of nested
     ordered pairs. $)
  copab2 $a class { <. <. x , y >. , z >. | ph } $.


  $( Define the result of an operation.  Note that the syntax is simply three
     class symbols in a row bracketed by parentheses.  Definition of
     [Enderton] p. 79.  Class ` F ` normally denotes an operation such as ` + `
     that operates on two classes ` A ` and ` B ` , which might be numbers
     such as ` 1 ` and ` 2 ` . This definition is well-defined, although not
     very meaningful, when classes ` A ` and/or ` B ` are proper classes
     (i.e. are not sets).  On the other hand we often find uses for this
     definition when ` F ` is a proper class. $)
  df-opr $a |- ( A F B ) = ( F ` <. A , B >. ) $.

  ${
    $d x w $.  $d y w $.  $d z w $.  $d w ph $.
    $( Define abstraction class of nested ordered pairs (for use in defining
       operations).  A special case of Definition 4.16 of [TakeutiZaring]
       p. 14.  Normally ` x ` , ` y ` , and ` z ` are distinct, although the
       definition doesn't strictly require it. $)
    df-oprab $a |- { <. <. x , y >. , z >. | ph } =
                  { w | E. x E. y E. z ( w = <. <. x , y >. , z >. /\ ph ) } $.
  $}

  $( Equality theorem for operations. $)
  opreq $p |- ( F = G -> ( A F B ) = ( A G B ) ) $=
    ( wceq cop cfv co fveq1 df-opr 3eqtr4g ) CDEABFZCGLDGABCHABDHLCDIABCJABDJK
    $.
    $( [28-Feb-95] $)

  $( Equality theorem for operations. $)
  opreq1 $p |- ( A = B -> ( A F C ) = ( B F C ) ) $=
    ( wceq cop cfv co opeq1 fveq2d df-opr 3eqtr4g ) ABEZACFZDGBCFZDGACDHBCDHMNO
    DABCIJACDKBCDKL $.
    $( [28-Feb-95] $)

  $( Equality theorem for operations. $)
  opreq2 $p |- ( A = B -> ( C F A ) = ( C F B ) ) $=
    ( wceq cop cfv co opeq2 fveq2d df-opr 3eqtr4g ) ABEZCAFZDGCBFZDGCADHCBDHMNO
    DABCIJCADKCBDKL $.
    $( [28-Feb-95] $)

  $( Equality theorem for operations. $)
  opreq12 $p |- ( ( A = B /\ C = D ) -> ( A F C ) = ( B F D ) ) $=
    ( wceq co opreq1 opreq2 sylan9eq ) ABFCDFACEGBCEGBDEGABCEHCDBEIJ $.
    $( [16-Jul-95] $)

  ${
    opreq1i.1 $e |- A = B $.
    $( Equality inference for operations. $)
    opreq1i $p |- ( A F C ) = ( B F C ) $=
      ( wceq co opreq1 ax-mp ) ABFACDGBCDGFEABCDHI $.
      $( [28-Feb-95] $)

    $( Equality inference for operations. $)
    opreq2i $p |- ( C F A ) = ( C F B ) $=
      ( wceq co opreq2 ax-mp ) ABFCADGCBDGFEABCDHI $.
      $( [28-Feb-95] $)

    ${
      opreq12i.2 $e |- C = D $.
      $( Equality inference for operations. $)
      opreq12i $p |- ( A F C ) = ( B F D ) $=
        ( co opreq1i opreq2i eqtr ) ACEHBCEHBDEHABCEFICDBEGJK $.
        $( [28-Feb-95] $)
    $}
  $}

  ${
    opreq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for operations. $)
    opreq1d $p |- ( ph -> ( A F C ) = ( B F C ) ) $=
      ( wceq co opreq1 syl ) ABCGBDEHCDEHGFBCDEIJ $.
      $( [13-Mar-95] $)

    $( Equality deduction for operations. $)
    opreq2d $p |- ( ph -> ( C F A ) = ( C F B ) ) $=
      ( wceq co opreq2 syl ) ABCGDBEHDCEHGFBCDEIJ $.
      $( [13-Mar-95] $)

    ${
      opreq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for operations. $)
      opreq12d $p |- ( ph -> ( A F C ) = ( B F D ) ) $=
        ( co opreq1d opreq2d eqtrd ) ABDFICDFICEFIABCDFGJADECFHKL $.
        $( [13-Mar-95] $)
    $}

    ${
      opreqan12i.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for operations. $)
      opreqan12d $p |- ( ( ph /\ ps ) -> ( A F C ) = ( B F D ) ) $=
        ( wceq co opreq12 syl2an ) CDJEFJCEGKDFGKJABCDEFGLHIM $.
        $( [10-Aug-95] $)

      $( Equality deduction for operations. $)
      opreqan12rd $p |- ( ( ps /\ ph ) -> ( A F C ) = ( B F D ) ) $=
        ( co wceq opreqan12d ancoms ) ABCEGJDFGJKABCDEFGHILM $.
        $( [10-Aug-95] $)
    $}

  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbopr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbopr.2 $e |- ( y e. F -> A. x y e. F ) $.
    hbopr.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for operation value. $)
    hbopr $p |- ( y e. ( A F B ) -> A. x y e. ( A F B ) ) $=
      ( cv cop cfv wcel wal co hbop hbfv df-opr eleq2i bial 3imtr4 ) BIZCDJZEKZ
      LZUDAMUACDENZLZUFAMABUBEGABCDFHOPUEUCUACDEQRZUFUDAUGST $.
      $( [5-May-04] $) $( [4-May-04] $)
  $}

  $( The result of an operation is a set. $)
  oprex $p |- ( A F B ) e. V $=
    ( co cop cfv cvv df-opr fvex eqeltr ) ABCDABEZCFGABCHKCIJ $.
    $( [13-Mar-95] $)

  ${
    oprprc1.1 $e |- Rel dom F $.
    $( The value of an operation when the first argument is a proper class.
       Note: this theorem is dependent on our particular definitions of
       operation value, function value, and ordered pair. $)
    oprprc1 $p |- ( -. A e. V -> ( A F B ) = (/) ) $=
      ( cvv wcel wn cop cfv c0 co cdm wceq wbr df-br brrelexi sylbir con3i
      ndmfv syl df-opr syl5eq ) AEFZGZABHZCIZJABCKUDUECLZFZGUFJMUHUCUHABUGNUCAB
      UGOABUGDPQRUECSTABCUAUB $.
      $( [17-Jun-04] $) $( [16-Jun-04] $)
  $}

  $( The value of an operation when the second argument is a proper class.
     Note: this theorem is dependent on our particular definitions of operation
     value, function value, and ordered pair. $)
  oprprc2 $p |- ( -. B e. V -> ( A F B ) = ( A F A ) ) $=
    ( cvv wcel wn cop cfv co opprc2 fveq2d df-opr 3eqtr4g ) BDEFZABGZCHAAGZCHAB
    CIAACINOPCABJKABCLAACLM $.
    $( [22-Jun-04] $) $( [16-Jun-04] $)

  ${
    $d x z w v $.  $d y z w v $.  $d w ph v $.
    $( Abstraction class for operations in terms of abstraction class of
       ordered pairs. $)
    dfoprab2 $p |- { <. <. x , y >. , z >. | ph } =
                   { <. w , z >. | E. x E. y ( w = <. x , y >. /\ ph ) } $=
      ( vv cv cop wceq wa wex cab copab2 copab excom exrot4 19.42v opeq1
      cleq2d pm5.32ri biran anass an23 3bitr3 biex opex isseti biantru 3bitr4
      bi3ex bitr 19.42vv bi2ex biabi df-oprab df-opab 3eqtr4 ) FGZBGZCGZHZDGZHZ
      IZAJZDKCKBKZFLUREGZVBHZIZVGVAIZAJZCKBKZJZDKEKZFLABCDMVLEDNVFVNFVIVKJZCKBK
      ZEKDKZVPDKEKVFVNVPDEOVQVOEKZDKCKBKVFVODEBCPVRVEBCDVEVJJZEKVEVJEKZJVRVEVEV
      JEQVOVSEVIVJJZAJVDVJJZAJVOVSWAWBAVJVIVDVJVHVCURVGVAVBRSTUAVIVJAUBVDVJAUCU
      DUEVTVEEVAUSUTUFUGUHUIUJUKVPVMEDVIVKBCULUMUDUNABCDFUOVLEDFUPUQ $.
      $( [12-Mar-95] $)

    $( The operation abstraction class is a relation. $)
    reloprab $p |- Rel { <. <. x , y >. , z >. | ph } $=
      ( vw copab2 wrel cv cop wceq wa wex copab relopab wb dfoprab2 releq
      ax-mp mpbir ) ABCDFZGZEHBHCHIJAKCLBLZEDMZGZUBEDNTUCJUAUDOABCDEPTUCQRS $.
      $( [22-Jun-04] $) $( [16-Jun-04] $)
  $}

$(
  @{
    @d x y z w v @.  @d ph v @.
    dfoprab2f.1 @e |- ( ph -> A. w ph ) @.
    @( Abstraction class for operations in terms of abstraction class of
       ordered pairs.  This is a version of ~ dfoprab2 with bound variable
       hypothesis instead of distinct variable requirement. @)
    dfoprab2f @p |- { <. <. x , y >. , z >. | ph } =
                   { <. w , z >. | E. x E. y ( w = <. x , y >. /\ ph ) } @=
      ( vv copab2 cv cop wceq wa wex copab dfoprab2 ax-17 hban hbex weq cleq1
      birand bi2exdv cbvopab1 eqtr ) ABCDHGIZBICIJZKZALZCMZBMZGDNEIZUFKZALZCMBM
      ZEDNABCDGOUJUNGDEUIEBUHECUGAEUGEPFQRRUNGPGESZUHUMBCUOUGULAUEUKUFTUAUBUCUD
      @.
  @}
$)

  ${
    $d x y z v $.  $d x w $.  $d ph v $.  $( ` v ` is dummy. $)
    $( The abstraction variables in an operation abstraction are not free. $)
    hboprab1 $p |- ( w e. { <. <. x , y >. , z >. | ph } ->
                   A. x w e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv cv cop wceq wa wex cab wcel wal copab2 hbe1 hbab df-oprab eleq2i
      bial 3imtr4 ) EGZFGBGCGHDGHIAJDKCKZBKZFLZMZUFBNUBABCDOZMZUHBNUDBFEUCBPQUG
      UEUBABCDFRSZUHUFBUITUA $.
      $( [25-Apr-95] $)
  $}

  ${
    $d x y z v $.  $d y w $.  $d ph v $.  $( ` v ` is dummy. $)
    $( The abstraction variables in an operation abstraction are not free. $)
    hboprab2 $p |- ( w e. { <. <. x , y >. , z >. | ph } ->
                   A. y w e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv cv cop wceq wa wex cab wcel wal copab2 hbe1 hbex hbab df-oprab
      eleq2i bial 3imtr4 ) EGZFGBGCGHDGHIAJDKZCKZBKZFLZMZUHCNUCABCDOZMZUJCNUFCF
      EUECBUDCPQRUIUGUCABCDFSTZUJUHCUKUAUB $.
      $( [25-Apr-95] $)
  $}

$(
  @{
    @d x y z w v @.  @d x y w v A @.  @d x y w v B @.  @d x y C @.
    @d x y v ph @.
    @( An operation abstraction class expressed in terms of an ordered pair
       abstraction class. @)
    oprab3 @p |- { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
                   /\ [ <. x , y >. / w ] ph ) } =
                  { <. w , z >. | ( w e. ( A X. B ) /\ ph ) } @=
      ( vv cv wcel wa cop wsbc copab2 wceq wex copab cxp dfoprab2 ax-17 opex
      hbsbcv hban hbex weq cleq1 birand bi2exdv cbvopab1 eqtr elxp biran
      19.41vv anass sbceq1 biland pm5.32i bitr bi2ex bitr3 biopab eqtr4 ) BIZFJ
      CIZGJKZAEVCVDLZMZKZBCDNZEIZVFOZVHKZCPBPZEDQZVJFGRJZAKZEDQVIHIZVFOZVHKZCPZ
      BPZHDQVNVHBCDHSWAVMHDEVTEBVSECVRVHEVRETVEVGEVEETAEVFVCVDUAUBUCUCUDUDVMHTH
      EUEZVSVLBCWBVRVKVHVQVJVFUFUGUHUIUJVPVMEDVPVKVEKZCPBPZAKZVMVOWDABCVJFGUKUL
      WEWCAKZCPBPVMWCABCUMWFVLBCWFVKVEAKZKVLVKVEAUNVKWGVHVKAVGVEAEVFUOUPUQURUSU
      TURVAVB @.
  @}
$)

  ${
    $d x z w $.  $d y z w $.  $d w ph $.  $d w ps $.  $d w ch $.
    bioprabd.1 $e |- ( ph -> A. x ph ) $.
    bioprabd.2 $e |- ( ph -> A. y ph ) $.
    bioprabd.3 $e |- ( ph -> A. z ph ) $.
    bioprabd.4 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal operation abstraction classes (deduction
       rule). $)
    bioprabd $p |- ( ph ->
           { <. <. x , y >. , z >. | ps } = { <. <. x , y >. , z >. | ch } ) $=
      ( vw cv cop wceq wa wex copab copab2 ax-17 biland biexd biopabd dfoprab2
      3eqtr4g ) AKLDLELMNZBOZEPZDPZKFQUECOZEPZDPZKFQBDEFRCDEFRAUHUKKFAKSIAUGUJD
      GAUFUIEHABCUEJTUAUAUBBDEFKUCCDEFKUCUD $.
      $( [24-Feb-04] $) $( [21-Feb-04] $)
  $}

  ${
    $d x z w ph $.  $d y z w ph $.  $d w ps $.  $d w ch $.
    bioprabdv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal operation abstraction classes (deduction
       rule). $)
    bioprabdv $p |- ( ph ->
           { <. <. x , y >. , z >. | ps } = { <. <. x , y >. , z >. | ch } ) $=
      ( ax-17 bioprabd ) ABCDEFADHAEHAFHGI $.
      $( [24-Feb-04] $) $( [21-Feb-04] $)
  $}

  ${
    $d x y z w $.  $d w ph $.  $d w ps $.  $( ` w ` is dummy. $)
    bioprab.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal operation abstraction classes. $)
    bioprab $p |- { <. <. x , y >. , z >. | ph } =
                    { <. <. x , y >. , z >. | ps } $=
      ( vw weq copab2 wceq cv cleqid wb a1i bioprabdv ax-mp ) GGHZACDEIBCDEIJGK
      LQABCDEABMQFNOP $.
      $( [28-May-95] $)
  $}

  ${
    $d x y z w v u $.  $d u ph $.  $d u ps $.
    cbvoprab12.1 $e |- ( ph -> A. w ph ) $.
    cbvoprab12.2 $e |- ( ph -> A. v ph ) $.
    cbvoprab12.3 $e |- ( ps -> A. x ps ) $.
    cbvoprab12.4 $e |- ( ps -> A. y ps ) $.
    cbvoprab12.5 $e |- ( ( x = w /\ y = v ) -> ( ph <-> ps ) ) $.
    $( Rule used to change first two bound variables in an operation
       abstraction, using implicit substitution. $)
    cbvoprab12 $p |- { <. <. x , y >. , z >. | ph } =
                     { <. <. w , v >. , z >. | ps } $=
      ( vu cv cop wceq wa wex cab copab2 ax-17 hban hbex weq opeq12 opeq1 syl
      cleq2d bi2and biexdv cbvex2 biabi df-oprab 3eqtr4 ) MNZCNZDNZOZENZOZPZAQZ
      ERZDRCRZMSUOFNZGNZOZUSOZPZBQZERZGRFRZMSACDETBFGETVDVLMVCVKCDFGVBFEVAAFVAF
      UAHUBUCVBGEVAAGVAGUAIUBUCVJCEVIBCVICUAJUBUCVJDEVIBDVIDUAKUBUCCFUDDGUDQZVB
      VJEVMVAVIABVMUTVHUOVMURVGPUTVHPUPUQVEVFUEURVGUSUFUGUHLUIUJUKULACDEMUMBFGE
      MUMUN $.
      $( [23-Jun-04] $) $( [21-Feb-04] $)
  $}

  ${
    $d x y z w $.  $d w ph $.  $( ` w ` is dummy. $)
    $( The domain of an operation abstraction. $)
    dmoprab $p |- dom { <. <. x , y >. , z >. | ph } =
                  { <. x , y >. | E. z ph } $=
      ( vw copab2 cdm cv cop wceq wa wex copab cab dfoprab2 dmeqi dmopab
      exrot3 19.42v bi2ex bitr biabi df-opab eqtr4 3eqtr ) ABCDFZGEHBHCHIJZAKZC
      LBLZEDMZGUIDLZENZADLZBCMZUFUJABCDEOPUIEDQULUGUMKZCLBLZENUNUKUPEUKUHDLZCLB
      LUPUHDBCRUQUOBCUGADSTUAUBUMBCEUCUDUE $.
      $( [17-Mar-95] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( The domain of an operation abstraction. $)
    dmoprabss $p |- dom { <. <. x , y >. , z >. |
           ( ( x e. A /\ y e. B ) /\ ph ) } (_ ( A X. B ) $=
      ( cv wcel wa copab2 cdm wex copab cxp dmoprab 19.42v biopab opabssxp
      eqsstr ) BGEHCGFHIZAIZBCDJKUADLZBCMZEFNZUABCDOUCTADLZIZBCMUDUBUFBCTADPQUE
      BCEFRSS $.
      $( [24-Aug-95] $)
  $}

  ${
    $d x y z w $.  $d w ph $.
    $( The range of an operation abstraction. $)
    rnoprab $p |- ran { <. <. x , y >. , z >. | ph } =
                  { z | E. x E. y ph } $=
      ( vw copab2 crn cv cop wceq wa wex copab cab dfoprab2 rneqi rnopab
      exrot3 19.41v opex isseti mpbiran bi2ex bitr biabi 3eqtr ) ABCDFZGEHBHZCH
      ZIZJZAKZCLBLZEDMZGUMELZDNACLBLZDNUGUNABCDEOPUMEDQUOUPDUOULELZCLBLUPULEBCR
      UQABCUQUKELAUKAESEUJUHUITUAUBUCUDUEUF $.
      $( [19-Sep-04] $) $( [30-Aug-04] $)
  $}

  ${
    $d x y z $.
    $( The domain of an operation abstraction class is a relation. $)
    reldmoprab $p |- Rel dom { <. <. x , y >. , z >. | ph } $=
      ( copab2 cdm wrel wex copab relopab wceq wb dmoprab releq ax-mp mpbir )
      ABCDEFZGZADHZBCIZGZSBCJQTKRUALABCDMQTNOP $.
      $( [17-Mar-95] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.
    $d w x y z D $.  $d x y z w R $.  $d x y z w S $.
    $d w ph $.  $d x ps $.  $d x y ch $.  $d x y z w th $.  $( ` w ` is dummy. $)
    eloprabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    eloprabg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    eloprabg.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    $( The law of concretion for operation abstraction.  Compare ~ elopab . $)
    eloprabg $p |- ( ( A e. D /\ B e. R /\ C e. S ) ->
       ( <. <. A , B >. , C >. e. { <. <. x , y >. , z >. | ph } <-> th ) ) $=
      ( vw wcel w3a cop copab2 wb wi opex cv wceq wa wex cleq1 cleqcom syl6bb
      visset otthg 3adant1 sylan9bbr birand syl3an9b pm5.32i bi3exdv eleq1 cab
      df-oprab eleq2i abid bitr2 syl5bb adantl elex im3an eeeanv sylibr
      biantrurd 19.41vvv syl6rbbr adantr 3bitr3d exp com12 vtocle ) HKRZILRZJMR
      ZSZHITZJTZAEFGUAZRZDUBZUCQWEWDJUDWCQUEZWEUFZWHWCWJWHWCWJUGZWIEUEZFUEZTGUE
      ZTZUFZAUGZGUHFUHEUHZWLHUFZWMIUFZWNJUFZSZDUGZGUHFUHEUHZWGDWKWQXCEFGWKWQXBA
      UGXCWKWPXBAWJWPWOWEUFZWCXBWJWPWEWOUFXEWIWEWOUIWEWOUJUKWAWBXEXBUBVTWLWMHIW
      NJLMEULFULGULUMUNUOUPXBADWSABWTCXADNOPUQURUKUSWJWRWGUBWCWJWIWFRZWGWRWIWEW
      FUTXFWIWRQVAZRWRWFXGWIAEFGQVBVCWRQVDVEVFVGWCXDDUBWJWCDXBGUHFUHEUHZDUGXDWC
      XHDWCWSEUHZWTFUHZXAGUHZSXHVTXIWAXJWBXKEHKVHFILVHGJMVHVIWSWTXAEFGVJVKVLXBD
      EFGVMVNVOVPVQVRVS $.
      $( [14-Sep-99] $)
  $}

  ${
    $d ph w $.  $d ps w $.  $d x y z w $.  $( ` w ` is dummy. $)
    ssoprab2i.1 $e |- ( ph -> ps ) $.
    $( Inference of operation abstraction subclass from implication. $)
    ssoprab2i $p |- { <. <. x , y >. , z >. | ph } (_
                    { <. <. x , y >. , z >. | ps } $=
      ( vw cv cop wceq wa wex copab copab2 imlan 19.22i ssopab2i dfoprab2
      3sstr4 ) GHCHDHIJZAKZDLZCLZGEMTBKZDLZCLZGEMACDENBCDENUCUFGEUBUECUAUDDABTF
      OPPQACDEGRBCDEGRS $.
      $( [11-Nov-95] $)
  $}

  ${
    $d x y z w $.  $d w ph $.  $( ` w ` is dummy. $)
    funoprab.1 $e |- E* z ph $.
    $( "At most one" is sufficient condition for an operation abstraction to be
       a function. $)
    funoprab $p |- Fun { <. <. x , y >. , z >. | ph } $=
      ( vw copab2 wfun cv cop wceq wa wex copab wmo funopab mosubop mpgbir wb
      dfoprab2 funeq ax-mp mpbir ) ABCDGZHZFIZBICIJKALCMBMZFDNZHZUIUGDOFUGFDPAD
      BCUFEQRUDUHKUEUISABCDFTUDUHUAUBUC $.
      $( [17-Mar-95] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    fnoprab.1 $e |- ( ph -> E! z ps ) $.
    $( Functionality and domain of an operation abstraction. $)
    fnoprab $p |- { <. <. x , y >. , z >. | ( ph /\ ps ) } Fn
                    { <. x , y >. | ph } $=
      ( wa copab2 copab wfn wfun cdm wceq wmo wi weu eumo syl moanimv mpbir
      funoprab wex dmoprab pm3.26 19.23aiv euex ancli 19.42v sylibr impbi
      biopab eqtr pm3.2i df-fn ) ABGZCDEHZACDIZJUPKZUPLZUQMZGURUTUOCDEUOENABENZ
      OABEPZVAFBEQRABESTUAUSUOEUBZCDIUQUOCDEUCVCACDVCAUOAEABUDUEAABEUBZGVCAVDAV
      BVDFBEUFRUGABEUHUIUJUKULUMUPUQUNT $.
      $( [15-May-95] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    fnoprab2.1 $e |- C e. V $.
    fnoprab2.2 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Functionality and domain of an operation abstraction. $)
    fnoprab2 $p |- F Fn ( A X. B ) $=
      ( cxp wfn cv wcel wa wceq copab2 copab weu eueq1 a1i fnoprab wb fneq1
      ax-mp df-xp fneq2 bitr mpbir ) GDEJZKZALDMBLEMNZCLFOZNABCPZUKABQZKZUKULAB
      CULCRUKCFHSTUAUJUMUIKZUOGUMOUJUPUBIUIGUMUCUDUIUNOUPUOUBABDEUEUIUNUMUFUDUG
      UH $.
      $( [26-Aug-95] $)

    $( Domain of an operation abstraction. $)
    dmoprab2 $p |- dom F = ( A X. B ) $=
      ( cxp wfn cdm wceq fnoprab2 fndm ax-mp ) GDEJZKGLQMABCDEFGHINQGOP $.
      $( [?] $) $( [23-Sep-04] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w F $.
    $( An operation maps to a class to which all values belong. $)
    ffnoprval $p |- ( F : ( A X. B ) --> C <-> ( F Fn ( A X. B ) /\
         A. x e. A A. y e. B ( x F y ) e. C ) ) $=
      ( vw cxp wf wfn cv cfv wcel wral wa co ffnfv cop wceq fveq2 df-opr
      syl6eqr eleq1d ralxp bilan bitr ) CDHZEFIFUGJZGKZFLZEMZGUGNZOUHAKZBKZFPZE
      MZBDNACNZOGUGEFQULUQUHUKUPGABCDUIUMUNRZSZUJUOEUSUJURFLUOUIURFTUMUNFUAUBUC
      UDUEUF $.
      $( [23-Jun-04] $) $( [7-Feb-04] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w F $.
    $( Representation of an operation abstraction in terms of its values. $)
    fnoprval $p |- ( F Fn ( A X. B ) <->  F = { <. <. x , y >. , z >. |
                    ( ( x e. A /\ y e. B ) /\ z = ( x F y ) ) } ) $=
      ( vw cxp wfn cv wcel cfv wceq wa copab co copab2 fnopabfv cop wex elxp
      biran 19.41vv anass fveq2 df-opr syl6eqr cleq2d biland pm5.32i bitr
      bi2ex bitr3 biopab dfoprab2 eqtr4 cleq2i ) FDEHZIFGJZURKZCJZUSFLZMZNZGCOZ
      MFAJZDKBJZEKNZVAVFVGFPZMZNZABCQZMGCURFRVEVLFVEUSVFVGSZMZVKNZBTATZGCOVLVDV
      PGCVDVNVHNZBTATZVCNZVPUTVRVCABUSDEUAUBVSVQVCNZBTATVPVQVCABUCVTVOABVTVNVHV
      CNZNVOVNVHVCUDVNWAVKVNVCVJVHVNVBVIVAVNVBVMFLVIUSVMFUEVFVGFUFUGUHUIUJUKULU
      MUKUNVKABCGUOUPUQUK $.
      $( [23-Jun-04] $) $( [7-Feb-04] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z F $.
    $( Representation of an operation abstraction in terms of its values. $)
    foprval $p |- ( F : ( A X. B ) --> C <-> ( F = { <. <. x , y >. , z >. |
                  ( ( x e. A /\ y e. B ) /\ z = ( x F y ) ) }
                /\ A. x e. A A. y e. B ( x F y ) e. C ) ) $=
      ( cxp wf wfn cv co wcel wral wa wceq copab2 ffnoprval fnoprval biran
      bitr ) DEHZFGIGUBJZAKZBKZGLZFMBENADNZOGUDDMUEEMOCKUFPOABCQPZUGOABDEFGRUCU
      HUGABCDEGSTUA $.
      $( [25-Jun-04] $) $( [7-Feb-04] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    oprabex.1 $e |- A e. V $.
    oprabex.2 $e |- B e. V $.
    oprabex.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Existence of an operation abstraction. $)
    oprabex $p |- F e. V $=
      ( cv wcel wa wceq copab2 cvv cdm wfun cxp xpex dmoprabss ssexi moeq
      moani funoprab funex mp2 eqeltr ) GAKDLBKELMZCKFNZMZABCOZPJULQZPLULRULPLU
      MDESDEHITUJABCDEUAUBUKABCUJUICCFUCUDUEPULUFUGUH $.
      $( [11-Nov-95] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x ps $.  $d x y ch $.  $d x y z th $.
    oprabval.1 $e |- C e. V $.
    oprabval.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabval.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabval.4 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabval.5 $e |- ( ( x e. R /\ y e. S ) -> E! z ph ) $.
    oprabval.6 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation abstraction. $)
    oprabval $p |- ( ( A e. R /\ B e. S ) -> ( ( A F B ) = C <-> th ) ) $=
      ( wcel wa co wceq cop cv copab2 cfv copab wb eleq1 birand biland
      opelopabg biimprd pm2.43i wfn fnoprab fnfvop mpan syl cvv bi2and
      eloprabg mp3an3 bitrd df-opr fveq1i eqtr cleq1i syl5bb ibar bitr4d ) HKTZ
      ILTZUAZHIMUBZJUCZVODUAZDVOHIUDZEUEZKTZFUEZLTZUAZAUAZEFGUFZUGZJUCZVRVQVOWH
      VSJUDWFTZVRVOVSWDEFUHZTZWHWIUIZVOWKVOWKVOWDVMWCUAZVOEFHIKLVTHUCZWAVMWCVTH
      KUJUKZWBIUCZWCVNVMWBILUJULZUMUNUOWFWJUPWKWLWDAEFGRUQWJVSJWFNURUSUTVMVNJVA
      TWIVRUINWEWMBUAVOCUAVREFGHIJKLVAWNWDWMABWOOVBWPWMVOBCWQPVBGUEJUCCDVOQULVC
      VDVEVPWGJVPVSMUGWGHIMVFVSMWFSVGVHVIVJVODVKVL $.
      $( [16-May-95] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x y z D $.  $d x ps $.  $d x y ch $.  $d x y z th $.
    oprabvalig.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabvalig.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabvalig.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabvalig.4 $e |- ( ( x e. R /\ y e. S ) -> E* z ph ) $.
    oprabvalig.5 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation abstraction (weak version). $)
    oprabvalig $p |- ( ( A e. R /\ B e. S /\ C e. D ) ->
                         ( th -> ( A F B ) = C ) ) $=
      ( wcel w3a cop cv wa copab2 cfv wceq co wi eleq1 birand bi2and biland
      eloprabg biimpar exp32 com12 3adant3 pm2.43i wfun wmo moanimv mpbir
      funoprab funopfvg mpan2 adantl 3adant1 syld df-opr fveq1i eqtr cleq1i
      syl6ibr ) HLTZIMTZJKTZUAZDHIUBZEUCZLTZFUCZMTZUDZAUDZEFGUEZUFZJUGZHINUHZJU
      GVRDVSJUBWFTZWHVRDWJUIZVOVPVRWKUIVQVRVOVPUDZWKVRWLDWJVRWJWLDUDZWEVOWCUDZB
      UDWLCUDWMEFGHIJLMKVTHUGZWDWNABWOWAVOWCVTHLUJUKOULWBIUGZWNWLBCWPWCVPVOWBIM
      UJUMPULGUCJUGCDWLQUMUNUOUPUQURUSVPVQWJWHUIZVOVQWQVPVQWFUTWQWEEFGWEGVAWDAG
      VAUIRWDAGVBVCVDVSJKWFVEVFVGVHVIWIWGJWIVSNUFWGHINVJVSNWFSVKVLVMVN $.
      $( [14-Sep-99] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x ps $.  $d x y ch $.  $d x y z th $.
    oprabvali.1 $e |- C e. V $.
    oprabvali.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabvali.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabvali.4 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabvali.5 $e |- ( ( x e. R /\ y e. S ) -> E* z ph ) $.
    oprabvali.6 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation abstraction (weak version). $)
    oprabvali $p |- ( ( A e. R /\ B e. S ) -> ( th -> ( A F B ) = C ) ) $=
      ( wcel cvv co wceq wi oprabvalig mp3an3 ) HKTILTJUATDHIMUBJUCUDNABCDEFGHI
      JUAKLMOPQRSUEUF $.
      $( [16-May-95] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.  $d x y z H $.
    $d x G $.  $d z R $.  $d x y z S $.
    oprabval2g.1 $e |- ( x = A -> R = G ) $.
    oprabval2g.2 $e |- ( y = B -> G = S ) $.
    oprabval2g.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation abstraction. Special case. $)
    oprabval2g $p |- ( ( A e. C /\ B e. D /\ S e. H ) -> ( A F B ) = S ) $=
      ( wcel w3a wceq co cleqid cv cleq2d cleq1 wmo wa moeq a1i oprabvalig mpi
      ) DFPEGPILPQIIRZDEJSIRITCUAZHRZUKKRUKIRUJABCDEILFGJAUAZDRHKUKMUBBUAZERKIU
      KNUBUKIIUCULCUDUMFPUNGPUECHUFUGOUHUI $.
      $( [14-Sep-99] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $d x G $.  $d z R $.  $d x y z S $.
    oprabval2.1 $e |- S e. V $.
    oprabval2.2 $e |- ( x = A -> R = G ) $.
    oprabval2.3 $e |- ( y = B -> G = S ) $.
    oprabval2.4 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation abstraction. Special case. $)
    oprabval2 $p |- ( ( A e. C /\ B e. D ) -> ( A F B ) = S ) $=
      ( wcel cvv co wceq oprabval2g mp3an3 ) DFPEGPIQPDEJRISLABCDEFGHIJKQMNOTUA
      $.
      $( [16-May-95] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d x y z w v u f C $.
    $d x y z w v u f D $.  $d x y z w v u f H $.  $d x y z R $.
    $d x y z w v u f S $.
    oprabval3.1 $e |- S e. V $.
    oprabval3.2 $e |- ( ( ( w = A /\ v = B ) /\ ( u = C /\ f = D ) ) ->
         R = S ) $.
    oprabval3.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. ( H X. H ) /\
                      y e. ( H X. H ) ) /\
                      E. w E. v E. u E. f ( ( x = <. w , v >. /\
                      y = <. u , f >. ) /\ z = R ) ) } $.
    $( The value of an operation abstraction.  Special case. $)
    oprabval3 $p |- ( ( ( A e. H /\ B e. H ) /\ ( C e. H /\ D e. H ) ) ->
        ( <. A , B >. F <. C , D >. ) = S ) $=
      ( cop cxp wcel wa cv wceq wex co cleq1 birand bi4exdv biland wmo moeq
      mosubop anass bi2ex 19.42vv bitr bimo mpbir a1i oprabvali opelxpi im2an
      cleqid cleq2d copsex4g mpbiri syl13 ) GHSZOOTZUAZIJSZVJUAZUBVIDUCZEUCZSZU
      DZVLFUCZMUCZSZUDZUBZLKUDZUBZMUEFUEEUEDUEZVIVLNUFLUDGOUAHOUAUBZIOUAJOUAUBZ
      UBZAUCZVPUDZBUCZVTUDZUBZCUCZKUDZUBZMUEFUEZEUEDUEZVQWLUBZWOUBZMUEFUEEUEDUE
      WBWOUBZMUEFUEEUEDUEWEABCVIVLLVJVJNPWIVIUDZWPWTDEFMXBWMWSWOXBWJVQWLWIVIVPU
      GUHUHUIWKVLUDZWTXADEFMXCWSWBWOXCWLWAVQWKVLVTUGUJUHUIWNLUDZXAWDDEFMXDWOWCW
      BWNLKUGUJUIWRCUKZWIVJUAWKVJUAUBXEWJWLWOUBZMUEFUEZUBZEUEDUEZCUKXGCDEWIWOCF
      MWKCKULUMUMWRXICWQXHDEWQWJXFUBZMUEFUEXHWPXJFMWJWLWOUNUOWJXFFMUPUQUOURUSUT
      RVAWFVKWGVMGHOOVBIJOOVBVCWHWELLUDZLVDWCXKDEFMGHIJOOVNGUDVOHUDUBVRIUDVSJUD
      UBUBKLLQVEVFVGVH $.
      $( [28-May-95] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d z w v u f C $.
    $d w v D $.
    oprabval4g.1 $e |- F =
          { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ z = C ) } $.
    $( Value of an operation given by an ordered pair abstraction.  ( This is
       the operation analog of ~ fvopab2 .) $)
    oprabval4g $p |- ( ( x e. A /\ y e. B /\ C e. D ) -> ( x F y ) = C ) $=
      ( vw vv vf vu cv wcel cvv co wceq wsb cab weq sbab cleqcomd cleqcoms wa
      copab2 ax-17 hbs1 hbab hbeleq hban hbsb eleq1 bi2anan9 sylan9eq cleq2d
      bi2and cbvoprab12 eqtr4 oprabval2g elisset syl3an3 ) ANZDOZBNZEOZFPOVCVEH
      QFRFGOJKCVCVEDELNMNFOZBKSZMTZOZAJSZLTZFHVIPVLVIRVCJNZAJUAVIVLAJLVIUBUCUDZ
      VIFRVEKNZBKUAFVIBKMFUBUCUDZHVDVFUEZCNZFRZUEZABCUFVMDOZVOEOZUEZVRVLRZUEZJK
      CUFIWEVTJKCABWCWDAWCAUGACVLVKALCVJAJUHUIUJUKWCWDBWCBUGBCVLVKBLCVJAJBVHBML
      VGBKUHUIULUIUJUKVTJUGVTKUGJAUAZKBUAZUEZWCVQWDVSWFWAVDWGWBVFVMVCDUMVOVEEUM
      UNWHVLFVRWFWGVLVIFVNVPUOUPUQURUSUTFGVAVB $.
      $( [1-Jul-04] $) $( [21-Feb-04] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d z C $.  $d x y w v u D $.
    $d w v u F $.
    elrnoprab.1 $e |- C e. V $.
    elrnoprab.2 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Membership in the range of an operation abstraction. $)
    elrnoprab $p |- ( D e. ran F <-> E. x e. A E. y e. B D = C ) $=
      ( vw vv vu cxp wfn crn wcel wceq wrex wb fnoprab2 cv cfv fvelrn co cop
      fveq2 cleq1d cbvop ax-17 wa copab2 wal hboprab1 eleq2i bial 3imtr4 hbfv
      hbeq hbrex weq opeq1 fveq2d birexdv cbvrex hboprab2 opeq2 birex 3bitr
      df-opr cleq1i bi2rex bitr4 cvv oprabval4g mp3an3 cleqcom syl6bb bi2rexa
      bitr ax-mp ) HDENZOZGHPQZGFRZBESADSZTABCDEFHIJUAWCWDKUBZHUCZGRZKWBSZWFKWB
      GHUDWJAUBZBUBZHUEZGRZBESADSZWFWJWKWLUFZHUCZGRZBESZADSZWOWJLUBZMUBZUFZHUCZ
      GRZMESZLDSWKXBUFZHUCZGRZMESZADSWTWIXEKLMDEWGXCRWHXDGWGXCHUGUHUIXFXJLADXEA
      MEXBEQAUJAKKXDGAKXCHWGWKDQZWLEQZUKZCUBFRUKZABCULZQZXPAUMWGHQZXQAUMXNABCKU
      NHXOWGJUOZXQXPAXRUPUQWGXCQAUJURWGGQZAUJUSUTXJLUJLAVAZXEXIMEXTXDXHGXTXCXGH
      XAWKXBVBVCUHVDVEXJWSADXIWRMBEBKKXHGBKXGHXPXPBUMXQXQBUMXNABCKVFXRXQXPBXRUP
      UQWGXGQBUJURXSBUJUSWRMUJMBVAZXHWQGYAXGWPHXBWLWKVGVCUHVEVHVIWNWRABDEWMWQGW
      KWLHVJVKVLVMWNWEABDEXMWNFGRWEXMWMFGXKXLFVNQWMFRIABCDEFVNHJVOVPUHFGVQVRVSV
      TVRWA $.
      $( [6-Aug-04] $) $( [1-Aug-04] $)
  $}

  ${
    $d x y z w F $.  $d x y z w A $.  $d x y z w B $.  $( ` w ` is dummy. $)
    oprvalex.1 $e |- A e. V $.
    oprvalex.2 $e |- B e. V $.
    $( Existence of a class of operation values. $)
    oprvalex $p |- { z | E. x e. A E. y e. B z = ( x F y ) } e. V $=
      ( vw cv cfv wceq cxp wrex cab co cvv cop fveq2 df-opr syl6eqr cleq2d
      cbvop biabi xpex abrexex eqeltrr ) CJZIJZFKZLZIDEMZNZCOUHAJZBJZFPZLZBENAD
      NZCOQUMURCUKUQIABDEUIUNUORZLZUJUPUHUTUJUSFKUPUIUSFSUNUOFTUAUBUCUDICULUJDE
      GHUEUFUG $.
      $( [15-Nov-95] $)
  $}

  ${
    $d x y S $.  $d x y F $.
    oprssdm.1 $e |- -. (/) e. S $.
    oprssdm.2 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
    $( Domain of closure of an operation. $)
    oprssdm $p |- ( S X. S ) (_ dom F $=
      ( cxp cdm relxp cv cop wcel wa visset opelxp wn cfv c0 wceq ndmfv co
      df-opr cleq1i eleq1 mtbiri nsyl sylbir syl a3i sylbi relssi ) ABCCGZDHZCC
      IAJZBJZKZULLUNCLUOCLMZUPUMLZUNUOCCBNOURUQURPUPDQZRSZUQPZUPDTUTUNUODUAZRSZ
      VAVBUSRUNUODUBUCVCVBCLZUQVCVDRCLEVBRCUDUEFUFUGUHUIUJUK $.
      $( [24-Aug-95] $)
  $}

  ${
    ndmoprg.1 $e |- dom F = ( S X. S ) $.
    $( The value of an operation outside its domain. $)
    ndmoprg $p |- ( ( B e. C /\ -. ( A e. S /\ B e. S ) ) ->
                  ( A F B ) = (/) ) $=
      ( wcel wa wn co c0 wceq cop cdm cxp opelxpg eleq2i syl5bb binegd cfv
      ndmfv df-opr syl5eq syl6bir imp ) BCGZADGBDGHZIZABEJZKLZUFUHABMZENZGZIZUJ
      UFUMUGUFUKDDOZGUGUMABDDCPULUOUKFQRSUNUKETKUIUKEUAABEUBUCUDUE $.
      $( [25-Sep-04] $) $( [24-Sep-04] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.  $d x S $.
    ndmoprcl.1 $e |- dom F = ( S X. S ) $.
    ndmoprcl.2 $e |- ( ( A e. S /\ x e. S ) -> ( A F x ) e. S ) $.
    ndmoprcl.3 $e |- (/) e. S $.
    $( The closure of an operation outside its domain, when the domain
       includes the empty set.  This technical lemma can make the operation
       more convenient to work with. $)
    ndmoprcl $p |- ( A F B ) e. S $=
      ( cvv wcel co wn oprprc2 eleq1d wa c0 ndmoprg mpbiri exp cv wi wceq
      opreq2 bilimd com12 vtoclga imp pm2.61d2 syl5bir cdm wrel cxp relxp wb
      releq ax-mp mpbir oprprc1 pm2.61i ) BIJZBCEKZDJZUTCIJZVBVCLZUTVBVDVBBBEKZ
      DJZUTVDVAVEDBCEMNUTBDJZVGOZVFUTVHLZVFUTVIOZVFPDJZHVJVEPDBBIDEFQNRSVGVGVFV
      GBATZEKZDJZUAZVGVFUAABDVLBUBZVNVFVGVPVMVEDVLBBEUCNUDVGVLDJZVNVGVQVNGSUEZU
      FUGUHUIUEVCVGCDJZOZVBVCVTLZVBVCWAOZVBVKHWBVAPDBCIDEFQNRSVGVSVBVSVGVBVOVGV
      BUAACDVLCUBZVNVBVGWCVMVADVLCBEUCNUDVRUFUEUGUHUHUTLZVBVKHWDVAPDBCEEUJZUKZD
      DULZUKZDDUMWEWGUBWFWHUNFWEWGUOUPUQURNRUS $.
      $( [?] $) $( [24-Sep-04] $)
  $}

  ${
    ndmopr.1 $e |- B e. V $.
    ndmopr.2 $e |- dom F = ( S X. S ) $.
    $( The value of an operation outside its domain. $)
    ndmopr $p |- ( -. ( A e. S /\ B e. S ) -> ( A F B ) = (/) ) $=
      ( cvv wcel wa wn co c0 wceq ndmoprg mpan ) BGHACHBCHIJABDKLMEABGCDFNO $.
      $( [24-Aug-95] $)

    ${
      ndmoprrcl.3 $e |- -. (/) e. S $.
      $( Reverse closure law, when an operation's domain doesn't contain the
         empty set. $)
      ndmoprrcl $p |- ( ( A F B ) e. S -> ( A e. S /\ B e. S ) ) $=
        ( wcel wa co wn c0 ndmopr eleq1d mtbiri a3i ) ACHBCHIZABDJZCHZQKZSLCHGT
        RLCABCDEFMNOP $.
        $( [3-Feb-96] $)
    $}

    ${
      ndmopr.3 $e |- A e. V $.
      $( Any operation is commutative outside its domain. $)
      ndmoprcom $p |- ( -. ( A e. S /\ B e. S ) -> ( A F B ) = ( B F A ) ) $=
        ( wcel wa wn co c0 ndmopr wceq ancom bineg sylbi eqtr4d ) ACHZBCHZIZJZA
        BDKLBADKZABCDEFMUBTSIZJUCLNUAUDSTOPBACDGFMQR $.
        $( [24-Aug-95] $)
    $}

    ${
      ndmopr.4 $e |- C e. V $.
      ndmopr.5 $e |- -. (/) e. S $.
      $( Any operation is associative outside its domain, if the domain
         doesn't contain the empty set. $)
      ndmoprass $p |- ( -. ( A e. S /\ B e. S /\ C e. S ) ->
              ( ( A F B ) F C ) = ( A F ( B F C ) ) ) $=
        ( wcel w3a wn co c0 wa wceq ndmoprrcl imran df-3an sylibr con3i ndmopr
        syl imlan 3anass oprex eqtr4d ) ADJZBDJZCDJZKZLZABEMZCEMZNABCEMZEMZULUM
        DJZUJOZLUNNPURUKURUHUIOZUJOUKUQUSUJABDEFGIQRUHUIUJSTUAUMCDEHGUBUCULUHUO
        DJZOZLUPNPVAUKVAUHUIUJOZOUKUTVBUHBCDEHGIQUDUHUIUJUETUAAUODEBCEUFGUBUCUG
        $.
        $( [24-Aug-95] $)

      ${
        ndmopr.6 $e |- dom G = ( S X. S ) $.
        $( Any operation is distributive outside its domain, if the domain
           doesn't contain the empty set. $)
        ndmoprdistr $p |- ( -. ( A e. S /\ B e. S /\ C e. S ) ->
            ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) ) $=
          ( wcel w3a wn co c0 wa wceq ndmoprrcl imlan 3anass sylibr con3i
          oprex ndmopr syl im2an anandi bitr eqtr4d ) ADLZBDLZCDLZMZNZABCEOZFOZ
          PABFOZACFOZEOZUOUKUPDLZQZNUQPRVBUNVBUKULUMQZQZUNVAVCUKBCDEIHJSTUKULUM
          UAZUBUCAUPDFBCEUDKUEUFUOURDLZUSDLZQZNUTPRVHUNVHUKULQZUKUMQZQZUNVFVIVG
          VJABDFGKJSACDFIKJSUGUNVDVKVEUKULUMUHUIUBUCURUSDEACFUDHUEUFUJ $.
          $( [24-Aug-95] $)
      $}
    $}

    ${
      ndmord.3 $e |- A e. V $.
      ndmord.4 $e |- R (_ ( S X. S ) $.
      ndmord.5 $e |- -. (/) e. S $.
      ndmord.6 $e |- ( ( A e. S /\ B e. S /\ C e. S ) ->
                     ( A R B <-> ( C F A ) R ( C F B ) ) ) $.
        $( Elimination of redundant antecedents in an ordering law. $)
      ndmord $p |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $=
        ( wcel wa wbr co wb wi 3exp imp wn brel oprex ndmoprrcl pm3.27d im2an
        syl pm5.21ni a1d pm2.61i ) AEMZBEMZNZCEMZABDOZCAFPZCBFPZDOZQZRZUKULUTUK
        ULUNUSLSTUMUAUSUNUOUMURABEEDGJUBURUPEMZUQEMZNUMUPUQEEDCBFUCJUBVAUKVBULV
        AUNUKCAEFIHKUDUEVBUNULCBEFGHKUDUEUFUGUHUIUJ $.
        $( [7-Mar-96] $)
    $}
  $}

  ${
    ndmordi.3 $e |- A e. V $.
    ndmordi.2 $e |- dom F = ( S X. S ) $.
    ndmordi.4 $e |- R (_ ( S X. S ) $.
    ndmordi.5 $e |- -. (/) e. S $.
    ndmordi.6 $e |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $.
    $( Elimination of redundant antecedent in an ordering law. $)
    ndmordi $p |- ( ( C F A ) R ( C F B ) -> A R B ) $=
      ( wcel co wbr oprex brel pm3.26d ndmoprrcl syl biimprd mpcom ) CELZCAFMZC
      BFMZDNZABDNZUEUCELZUBUEUGUDELUCUDEEDCBFOIPQUGUBAELCAEFGHJRQSUBUFUEKTUA $.
      $( [25-Jun-98] $)
  $}

  ${
    $( General laws for commutative, associative, distributive operations. $)
    $d x y z F $.  $d x y z S $.  $d x y z A $.  $d x y z B $.  $d x y z C $.
    $d x y z D $.  $d x y z G $.  $d x y z R $.

    ${
      caoprcl.1 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
      $( Convert an operation closure law to class notation. $)
      caoprcl $p |- ( ( A e. S /\ B e. S ) -> ( A F B ) e. S ) $=
        ( cv co wcel wceq opreq1 eleq1d opreq2 vtocl2ga ) AHZBHZFIZEJCQFIZEJCDF
        IZEJABCDEEPCKRSEPCQFLMQDKSTEQDCFNMGO $.
        $( [4-Aug-95] $)
    $}

    ${
      caoprcom.1 $e |- A e. V $.
      caoprcom.2 $e |- B e. V $.
      caoprcom.3 $e |- ( x F y ) = ( y F x ) $.
      $( Convert an operation commutative law to class notation. $)
      caoprcom $p |- ( A F B ) = ( B F A ) $=
        ( cv co wceq opreq1 opreq2 cleq12d sylan9bb vtocl2 ) AIZBIZEJZRQEJZKZCD
        EJZDCEJZKZABCDFGQCKZUACREJZRCEJZKRDKZUDUESUFTUGQCRELQCREMNUHUFUBUGUCRDC
        EMRDCELNOHP $.
        $( [26-Aug-95] $)
    $}

    ${
      caoprass.1 $e |- A e. V $.
      caoprass.2 $e |- B e. V $.
      caoprass.3 $e |- C e. V $.
      caoprass.4 $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      $( Convert an operation associative law to class notation. $)
      caoprass $p |- ( ( A F B ) F C ) = ( A F ( B F C ) ) $=
        ( cv co wceq opreq1 opreq1d cleq12d opreq2 opreq2d syl3an9b vtocl3 ) AL
        ZBLZGMZCLZGMZUBUCUEGMZGMZNZDEGMZFGMZDEFGMZGMZNZABCDEFHIJUBDNZUIDUCGMZUE
        GMZDUGGMZNUCENZUJUEGMZDEUEGMZGMZNUEFNZUNUOUFUQUHURUOUDUPUEGUBDUCGOPUBDU
        GGOQUSUQUTURVBUSUPUJUEGUCEDGRPUSUGVADGUCEUEGOSQVCUTUKVBUMUEFUJGRVCVAULD
        GUEFEGRSQTKUA $.
        $( [26-Aug-95] $)
    $}

    ${
      caoprcan.1 $e |- C e. V $.
      caoprcan.2 $e |- ( ( x e. S /\ y e. S ) ->
                   ( ( x F y ) = ( x F z ) -> y = z ) ) $.
      $( Convert an operation cancellation law to class notation. $)
      caoprcan $p |- ( ( A e. S /\ B e. S ) ->
                   ( ( A F B ) = ( A F C ) -> B = C ) ) $=
        ( cv co wceq wi opreq1 cleq12d birimd opreq2 cleq1d cleq1 bi2imd wcel
        wa weq cleq2d cleq2 bilimd vtocl vtocl2ga ) AKZBKZHLZUJFHLZMZUKFMZNZDUK
        HLZDFHLZMZUONDEHLZURMZEFMZNABDEGGUJDMZUNUSUOVCULUQUMURUJDUKHOUJDFHOPQUK
        EMZUSVAUOVBVDUQUTURUKEDHRSUKEFTUAUJGUBUKGUBUCZULUJCKZHLZMZBCUDZNZNVEUPN
        CFIVFFMZVJUPVEVKVHUNVIUOVKVGUMULVFFUJHRUEVFFUKUFUAUGJUHUI $.
        $( [20-Aug-95] $)
    $}

    ${
      caoprord.1 $e |- A e. V $.
      caoprord.2 $e |- B e. V $.
      caoprord.3 $e |- ( z e. S -> ( x R y <-> ( z F x ) R ( z F y ) ) ) $.
      $( Convert an operation ordering law to class notation. $)
      caoprord $p |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $=
        ( wbr cv co wb wceq opreq1 breq12d bilbid wcel wi wa breq1 opreq2
        breq1d bi2bid breq2 breq2d sylan9bb bilimd vtocl2 vtoclga ) DEGMZCNZDIO
        ZUOEIOZGMZPZUNFDIOZFEIOZGMZPCFHUOFQZURVBUNVCUPUTUQVAGUOFDIRUOFEIRSTUOHU
        AZANZBNZGMZUOVEIOZUOVFIOZGMZPZUBVDUSUBABDEJKVEDQZVFEQZUCVKUSVDVLVKDVFGM
        ZUPVIGMZPVMUSVLVGVNVJVOVEDVFGUDVLVHUPVIGVEDUOIUEUFUGVMVNUNVOURVFEDGUHVM
        VIUQUPGVFEUOIUEUIUGUJUKLULUM $.
        $( [19-Feb-96] $)

      ${
        $( (We don't bother to eliminate this redundant hypothesis.) $)
        caoprord2.3 $e |- C e. V $.
        caoprord2.com $e |- ( x F y ) = ( y F x ) $.
        $( Operation ordering law with commuted arguments. $)
        caoprord2 $p |- ( C e. S -> ( A R B <-> ( A F C ) R ( B F C ) ) ) $=
          ( wcel wbr co caoprord caoprcom breq12i syl6bb ) FHODEGPFDIQZFEIQZGPD
          FIQZEFIQZGPABCDEFGHIJKLRUBUDUCUEGABFDIMJNSABFEIMKNSTUA $.
          $( [27-Feb-96] $)


        ${
          $( (We don't bother to eliminate redundant hypotheses.) $)
          caoprord3.4 $e |- D e. V $.
          $( Ordering law. $)
          caoprord3 $p |- ( ( ( B e. S /\ C e. S ) /\
                    ( A F B ) = ( C F D ) ) -> ( A R C <-> D R B ) ) $=
            ( wcel wa co wceq wbr wb caoprord2 adantr breq1 sylan9bb caoprord
            ad2antlr bitr4d ) EIQZFIQZRZDEJSZFGJSZTZRDFHUAZUNFEJSZHUAZGEHUAZULU
            PUMUQHUAZUOURUJUPUTUBUKABCDFEHIJKNMLOUCUDUMUNUQHUEUFUKUSURUBUJUOABC
            GEFHIJPLMUGUHUI $.
            $( [29-Feb-96] $)
        $}
      $}

    $}


    ${
      caoprdistr.1 $e |- A e. V $.
      caoprdistr.2 $e |- B e. V $.
      caoprdistr.3 $e |- C e. V $.
      caoprdistr.4 $e |- ( x G ( y F z ) ) = ( ( x G y ) F ( x G z ) ) $.
      $( Convert an operation distributive law to class notation. $)
      caoprdistr $p |- ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) $=
        ( cv co wceq opreq1 opreq12d cleq12d opreq2d opreq2 opreq1d syl3an9b
        vtocl3 ) AMZBMZCMZGNZHNZUDUEHNZUDUFHNZGNZOZDEFGNZHNZDEHNZDFHNZGNZOZABCD
        EFIJKUDDOZULDUGHNZDUEHNZDUFHNZGNZOUEEOZDEUFGNZHNZUOVBGNZOUFFOZURUSUHUTU
        KVCUDDUGHPUSUIVAUJVBGUDDUEHPUDDUFHPQRVDUTVFVCVGVDUGVEDHUEEUFGPSVDVAUOVB
        GUEEDHTUARVHVFUNVGUQVHVEUMDHUFFEGTSVHVBUPUOGUFFDHTSRUBLUC $.
        $( [25-Aug-95] $)
    $}

    ${
      caopr.1 $e |- A e. V $.
      caopr.2 $e |- B e. V $.
      caopr.3 $e |- C e. V $.
      caopr.com $e |- ( x F y ) = ( y F x ) $.
      caopr.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr32 $p |- ( ( A F B ) F C ) = ( ( A F C ) F B ) $=
        ( co caoprcom opreq2i caoprass 3eqtr4 ) DEFGMZGMDFEGMZGMDEGMFGMDFGMEGMR
        SDGABEFGIJKNOABCDEFGHIJLPABCDFEGHJILPQ $.
        $( [26-Aug-95] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr12 $p |- ( A F ( B F C ) ) = ( B F ( A F C ) ) $=
        ( co caoprcom opreq1i caoprass 3eqtr3 ) DEGMZFGMEDGMZFGMDEFGMGMEDFGMGMR
        SFGABDEGHIKNOABCDEFGHIJLPABCEDFGIHJLPQ $.
        $( [26-Aug-95] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr31 $p |- ( ( A F B ) F C ) = ( ( C F B ) F A ) $=
        ( co caoprass caopr12 eqtr caopr32 eqtr3 3eqtr4 ) DFGMEGMZFDEGMZGMZUAFG
        MFEGMZDGMZTDUCGMUBABCDFEGHJILNABCDFEGHJIKLOPABCDEFGHIJKLQFDGMEGMUDUBABC
        FDEGJHIKLQABCFDEGJHILNRS $.
        $( [26-Aug-95] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr13 $p |- ( A F ( B F C ) ) = ( C F ( B F A ) ) $=
        ( co caopr31 caoprass 3eqtr3 ) DEGMFGMFEGMDGMDEFGMGMFEDGMGMABCDEFGHIJKL
        NABCDEFGHIJLOABCFEDGJIHLOP $.
        $( [26-Aug-95] $)

      ${
        caopr.4 $e |- D e. V $.

        $( Rearrange arguments in a commutative, associative operation. $)
        caopr4 $p |- ( ( A F B ) F ( C F D ) ) = ( ( A F C ) F ( B F D ) ) $=
          ( co caopr12 opreq2i oprex caoprass 3eqtr4 ) DEFGHOZHOZHODFEGHOZHOZHO
          DEHOUAHODFHOUCHOUBUDDHABCEFGHJKNLMPQABCDEUAHIJFGHRMSABCDFUCHIKEGHRMST
          $.
          $( [26-Aug-95] $)

        $( Rearrange arguments in a commutative, associative operation. $)
        caopr411 $p |- ( ( A F B ) F ( C F D ) ) = ( ( C F B ) F ( A F D ) ) $=
          ( co caopr31 opreq1i oprex caoprass 3eqtr3 ) DEHOZFHOZGHOFEHOZDHOZGHO
          UAFGHOHOUCDGHOHOUBUDGHABCDEFHIJKLMPQABCUAFGHDEHRKNMSABCUCDGHFEHRINMST
          $.
          $( [26-Aug-95] $)

        $( Rearrange arguments in a commutative, associative operation. $)
        caopr41r3 $p |- ( ( A F B ) F ( C F D ) ) = ( ( A F C ) F ( D F B ) ) $=
          ( co caopr4 caoprcom opreq2i eqtr ) DEHOFGHOHODFHOZEGHOZHOTGEHOZHOABC
          DEFGHIJKLMNPUAUBTHABEGHJNLQRS $.
          $( [26-Aug-95] $)
      $}
    $}

    ${
      caoprd.1 $e |- A e. V $.
      caoprd.2 $e |- B e. V $.
      caoprd.3 $e |- C e. V $.
      caoprd.com $e |- ( x G y ) = ( y G x ) $.
      caoprd.distr $e |- ( x G ( y F z ) ) = ( ( x G y ) F ( x G z ) ) $.
      $( Reverse distributive law. $)
      caoprdistrr $p |- ( ( A F B ) G C ) = ( ( A G C ) F ( B G C ) ) $=
        ( co caoprdistr oprex caoprcom opreq12i 3eqtr3 ) FDEGNZHNFDHNZFEHNZGNTF
        HNDFHNZEFHNZGNABCFDEGHKIJMOABFTHKDEGPLQUAUCUBUDGABFDHKILQABFEHKJLQRS $.
        $( [26-Aug-95] $)

      ${
        $d x y z H $.  $d x y z R $.
        caoprdl.4 $e |- D e. V $.
        caoprdl.5 $e |- H e. V $.
        caoprdl.ass $e |- ( ( x G y ) G z ) = ( x G ( y G z ) ) $.
        $( Lemma used by real number construction. $)
        caoprdilem $p |- ( ( ( A G C ) F ( B G D ) ) G H ) =
                         ( ( A G ( C G H ) ) F ( B G ( D G H ) ) ) $=
          ( co oprex caoprdistrr caoprass opreq12i eqtr ) DFISZEGISZHSJISUEJISZ
          UFJISZHSDFJISISZEGJISISZHSABCUEUFJHIDFITEGITQNOUAUGUIUHUJHABCDFJIKMQR
          UBABCEGJILPQRUBUCUD $.
          $( [26-Aug-95] $)

        ${
          caoprdl2.6 $e |- R e. V $.
          caoprdl2.com $e |- ( x F y ) = ( y F x ) $.
          caoprdl2.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
          $( Lemma used in real number construction. $)
          caoprlem2 $p |- ( ( ( ( A G C ) F ( B G D ) ) G H ) F
                            ( ( ( A G D ) F ( B G C ) ) G R ) ) =
   ( ( A G ( ( C G H ) F ( D G R ) ) ) F ( B G ( ( C G R ) F ( D G H ) ) ) ) $=
            ( co oprex caopr41r3 caoprdilem opreq12i caoprdistr 3eqtr4 ) DFKJUC
            ZJUCZEGKJUCZJUCZIUCZDGHJUCZJUCZEFHJUCZJUCZIUCZIUCUKUPIUCZURUMIUCZIU
            CDFJUCEGJUCIUCKJUCZDGJUCEFJUCIUCHJUCZIUCDUJUOIUCJUCZEUQULIUCJUCZIUC
            ABCUKUMUPURIDUJJUDEULJUDDUOJUDUAUBEUQJUDUEVBUNVCUSIABCDEFGIJKLMNOPQ
            RSUFABCDEGFIJHLMQOPNTSUFUGVDUTVEVAIABCDUJUOIJLFKJUDGHJUDPUHABCEUQUL
            IJMFHJUDGKJUDPUHUGUI $.
            $( [26-Aug-95] $)
        $}
      $}
    $}

    ${
      $d x y z w v $.
      $d w v S $.  $d w v A $.  $d w v B $.  $d w v F $.  $( ` v ` is dummy. $)
      caoprmo.1 $e |- A e. V $.
      $( Identity element. $)
      caoprmo.2 $e |- B e. S $.
      caoprmo.dom $e |- dom F = ( S X. S ) $.
      caoprmo.3 $e |- -. (/) e. S $.
      caoprmo.com $e |- ( x F y ) = ( y F x ) $.
      caoprmo.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      caoprmo.id $e |- ( x e. S -> ( x F B ) = x ) $.
      $( Uniqueness of inverse element in commutative, associative operation
         with identity.  Remark in proof of Proposition 9-2.4 of [Gleason]
         p. 119. $)
      caoprmo $p |- E* w ( A F w ) = B $=
        ( vv cv co wceq wcel wa wi wmo wal weq eleq1 opreq2 cleq1d bi2and mo4
        opreq1 id cleq12d vtoclga sylan9eqr visset caoprass caopr12 eqtr
        syl5eq adantrl adantlr elisseti caoprcom sylan9eq adantrr adantll
        eqtr3d ax-gen mpgbir immo mpi mpbiri ndmoprrcl pm3.27d syl ancri mpg )
        EDQZHRZFSZVSGTZWAUAZUBZWADUCZDWDDUDWCDUCZWEWFWCPQZGTZEWGHRZFSZUAZUAZDPU
        EZUBZPUDDWCWKDPWMWBWHWAWJVSWGGUFWMVTWIFVSWGEHUGUHUIUJWNPWLVTWGHRZVSWGWB
        WKWOVSSZWAWBWJWPWHWBWJUAVSWIHRZVSWOWJWBWQVSFHRZVSWIFVSHUGAQZFHRZWSSZWRV
        SSAVSGADUEZWTWRWSVSWSVSFHUKXBULUMOUNUOWOEVSWGHRHRWQABCEVSWGHIDUPZPUPZNU
        QABCEVSWGHIXCXDMNURUSUTVAVBWAWKWOWGSZWBWAWHXEWJWAWHWOFWGHRZWGVTFWGHUKWH
        WGFHRZWGXFXAXGWGSAWGGAPUEZWTXGWSWGWSWGFHUKXHULUMOUNABFWGHFGJVCXDMVDUTVE
        VFVGVHVIVJWAWCDVKVLWAWBWAVTGTZWBWAXIFGTJVTFGUFVMXIEGTWBEVSGHXCKLVNVOVPV
        QVR $.
        $( [4-Mar-96] $)
    $}

  $}


