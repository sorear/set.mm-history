$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                            Euclid's Algorithm
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y M $.  $d x y N $.  $d x y X $.  $d x y z A $.  $d x z R $.
    $d z E $.
    eucalgval.1 $e |- E = ( x e. NN0 , y e. NN0 |->
                        if ( y = 0 , <. x , y >. , <. y , ( x mod y ) >. ) ) $.
    $( The value of the step function ` E ` for Euclid's Algorithm on an
       ordered pair.  (Contributed by Paul Chapman, 31-Mar-2011.) $)
    eucalgval2 $p |- ( ( M e. NN0 /\ N e. NN0 ) -> ( M E N ) =
                     if ( N = 0 , <. M , N >. , <. N , ( M mod N ) >. ) ) $=
      ( cn0 cv cc0 wceq cop cmo co cif wa simpr eqeq1d opeq12 oveq12 opex ifex
      opeq12d ifbieq12d ovmpt2a ) ABDEGGBHZIJZAHZUEKZUEUGUELMZKZNEIJZDEKZEDELMZ
      KZNCUGDJZUEEJZOZUFUKUHUJULUNUQUEEIUOUPPZQUGUEDERUQUEEUIUMURUGDUEELSUBUCFU
      KULUNDETEUMTUAUD $.
      $( [28-May-2014] $) $( [31-Mar-2011] $)
    $( Euclid's Algorithm computes the greatest common divisor of two
       nonnegative integers by repeatedly replacing the larger of them with its
       remainder modulo the smaller until the remainder is 0.

       The value of the step function ` E ` for Euclid's Algorithm.
       (Contributed by Paul Chapman, 31-Mar-2011.) $)
    eucalgval $p |- ( X e. ( NN0 X. NN0 ) -> ( E ` X ) =
          if ( ( 2nd ` X ) = 0 , X , <. ( 2nd ` X ) , ( mod ` X ) >. ) ) $=
      ( cn0 cxp wcel c1st cfv c2nd cop cc0 wceq cmo co cif df-ov xp1st fveq2d
      xp2nd eucalgval2 syl2anc syl5eqr 1st2nd2 syl6eqr opeq2d ifbieq12d 3eqtr4d
      biidd ) DFFGHZDIJZDKJZLZCJZUMMNZUNUMULUMOPZLZQZDCJUPDUMDOJZLZQUKUOULUMCPZ
      USULUMCRUKULFHUMFHVBUSNDFFSDFFUAABCULUMEUBUCUDUKDUNCDFFUEZTUKUPUPDVAUNURU
      KUPUJVCUKUTUQUMUKUTUNOJUQUKDUNOVCTULUMORUFUGUHUI $.
      $( [28-May-2014] $) $( [31-Mar-2011] $)

    $( Domain and codomain of the step function ` E ` for Euclid's Algorithm.
       (Contributed by Paul Chapman, 31-Mar-2011.) $)
    eucalgf $p |- E : ( NN0 X. NN0 ) --> ( NN0 X. NN0 ) $=
      ( cv cc0 wceq cop cmo co cif cn0 cxp wcel wa sylib adantl opelxpi eqeltrd
      wral wf cn wo simpr elnn0 wn wne nnne0 df-ne iffalse nnnn0 cz nn0z zmodcl
      syl sylan syl2anc adantlr iftrue adantr jaodan mpdan rgen2a fmpt2 mpbi )
      BEZFGZAEZVFHZVFVHVFIJZHZKZLLMZNZBLTALTVMVMCUAVNABLVHLNZVFLNZOZVFUBNZVGUCZ
      VNVQVPVSVOVPUDVFUEPVQVRVNVGVOVRVNVPVOVROZVLVKVMVTVGUFZVLVKGVTVFFUGZWAVRWB
      VOVFUHQVFFUIPVGVIVKUJUOVTVPVJLNZVKVMNVRVPVOVFUKQVOVHULNVRWCVHUMVHVFUNUPVF
      VJLLRUQSURVQVGOVLVIVMVGVLVIGVQVGVIVKUSQVQVIVMNVGVHVFLLRUTSVAVBVCABLLVLVMC
      DVDVE $.
      $( [28-May-2014] $) $( [31-Mar-2011] $)

    $( The invariant of the step function ` E ` for Euclid's Algorithm is the
       ` gcd ` operator applied to the state.  (Contributed by Paul Chapman,
       31-Mar-2011.) $)
    eucalginv $p |- ( X e. ( NN0 X. NN0 ) ->
                        ( gcd ` ( E ` X ) ) = ( gcd ` X ) ) $=
      ( cn0 wcel cfv cgcd cc0 wceq cmo cop fveq2d co df-ov syl6eqr syl syl2anc
      cz cxp c2nd cif eucalgval cn xp2nd elnn0 sylib c1st 1st2nd2 adantr oveq2d
      wo wa simpr nnz xp1st nn0z zmodcl gcdcom modgcd 3eqtrd wn wne nnne0 df-ne
      adantl iffalse 3eqtr4d iftrue jaodan mpdan eqtrd ) DFFUAGZDCHZIHDUBHZJKZD
      VPDLHZMZUCZIHZDIHZVNVOVTIABCDEUDNVNVPUEGZVQUMZWAWBKZVNVPFGWDDFFUFVPUGUHVN
      WCWEVQVNWCUNZVPVRIOZDUIHZVPIOZWAWBWFWGVPWHVPLOZIOZWJVPIOZWIWFVRWJVPIWFVRW
      HVPMZLHWJWFDWMLVNDWMKWCDFFUJUKZNWHVPLPQULWFVPTGZWJTGZWKWLKWFWCWOVNWCUOZVP
      UPRWFWJFGZWPWFWHTGZWCWRWFWHFGZWSVNWTWCDFFUQUKWHURRZWQWHVPUSSWJURRVPWJUTSW
      FWSWCWLWIKXAWQWHVPVASVBWFWAVSIHWGWFVTVSIWFVQVCZVTVSKWFVPJVDZXBWCXCVNVPVEV
      GVPJVFUHVQDVSVHRNVPVRIPQWFWBWMIHWIWFDWMIWNNWHVPIPQVIVQWEVNVQVTDIVQDVSVJNV
      GVKVLVM $.
      $( [29-May-2014] $) $( [31-Mar-2011] $)

    $( The second member of the state decreases with each iteration of the step
       function ` E ` for Euclid's Algorithm.  (Contributed by Paul Chapman,
       31-Mar-2011.) $)
    eucalglt $p |- ( X e. ( NN0 X. NN0 ) ->
        ( ( 2nd ` ( E ` X ) ) =/= 0 -> ( 2nd ` ( E ` X ) ) < ( 2nd ` X ) ) ) $=
      ( cn0 wcel cfv c2nd cc0 clt wbr cmo cop wceq adantr syl eqtrd fveq2d fvex
      cxp wne wa co cif eucalgval simpr iftrue eqeq2d fveq2 syl6bi eqeq2 sylibd
      wn syl5com necon3ad mpd iffalse op2nd syl6eq 1st2nd2 df-ov syl6eqr cr crp
      c1st xp1st nn0re cn xp2nd elnn0 sylib ord mt3d nnrp modlt syl2anc eqbrtrd
      wo ex ) DFFUAGZDCHZIHZJUBZWCDIHZKLWAWDUCZWCDVFHZWEMUDZWEKWFWCDMHZWHWFWCWE
      WINZIHWIWFWBWJIWFWBWEJOZDWJUEZWJWAWBWLOZWDABCDEUFPZWFWKUNZWLWJOWFWDWOWAWD
      UGWFWKWCJWFWMWKWCJOZWNWKWMWCWEOZWPWKWMWBDOWQWKWLDWBWKDWJUHUIWBDIUJUKWEJWC
      ULUMUOUPUQZWKDWJURQRSWEWIDITDMTUSUTWFWIWGWENZMHWHWFDWSMWADWSOWDDFFVAPSWGW
      EMVBVCRWFWGVDGZWEVEGZWHWEKLWFWGFGZWTWAXBWDDFFVGPWGVHQWFWEVIGZXAWFXCWKWRWF
      XCWKWFWEFGZXCWKVSWAXDWDDFFVJPWEVKVLVMVNWEVOQWGWEVPVQVRVT $.
      $( [29-May-2014] $) $( [31-Mar-2011] $)

    eucalg.2 $e |- R = seq 0 ( ( E o. 1st ) , ( NN0 X. { A } ) ) $.
    ${
      eucalgcvga.3 $e |- N = ( 2nd ` A ) $.
      $( Once Euclid's Algorithm halts after ` N ` steps, the second element of
         the state remains 0 .  (Contributed by Paul Chapman, 22-Jun-2011.) $)
      eucalgcvga $p |- ( A e. ( NN0 X. NN0 ) ->
                         ( K e. ( ZZ>= ` N ) -> ( 2nd ` ( R ` K ) ) = 0 ) ) $=
        ( vz cn0 wcel cuz cfv c2nd cc0 wceq fvres clt cxp wa cres xp2nd eluznn0
        syl5eqel sylan wf nn0uz cz 0z a1i id eucalgf algrf ffvelrn syldan simpl
        syl syl6eqr fveq2d eleq2d biimpar f2ndres wne eucalglt ffvelrni breq12d
        cv wbr neeq1d 3imtr4d eqid algcvga sylc eqtr3d ex ) CLLUAZMZFGNOZMZFDOZ
        POZQRVSWAUBZWBPVRUCZOZWCQWDWBVRMZWFWCRVSWAFLMZWGVSGLMWAWHVSGCPOZLJCLLUD
        UFFGUEUGVSLVRDUHWHWGVSCDVREQLUIIQUJMVSUKULVSUMVRVREUHVSABEHUNZULUOLVRFD
        UPUGUQWBVRPSUSWDVSFCWEOZNOZMZWFQRVSWAURVSWMWAVSWLVTFVSWKGNVSWKWIGCVRPSJ
        UTVAVBVCKCWEDVREFWKWJILLVDKVIZVRMZWNEOZPOZQVEWQWNPOZTVJWPWEOZQVEWSWNWEO
        ZTVJABEWNHVFWOWSWQQWOWPVRMWSWQRVRVRWNEWJVGWPVRPSUSZVKWOWSWQWTWRTXAWNVRP
        SVHVLWKVMVNVOVPVQ $.
        $( [29-May-2014] $) $( [22-Jun-2011] $)
    $}

    eucalg.3 $e |- A = <. M , N >. $.
    $( Euclid's Algorithm.  Upon halting, the 1st member of the final state
       ` ( R `` N ) ` is equal to the gcd of the values comprising the input
       state ` <. M , N >. ` .  (Contributed by Paul Chapman, 31-Mar-2011.)
       (The proof was shortened by Mario Carneiro, 29-May-2014.) $)
    eucalg $p |- ( ( M e. NN0 /\ N e. NN0 ) ->
                   ( 1st ` ( R ` N ) ) = ( M gcd N ) ) $=
      ( cn0 wcel cfv cgcd cc0 c2nd wceq cz syl fveq2d vz wa co cop cxp wf nn0uz
      0z a1i opelxpi syl5eqel eucalgf algrf simpr ffvelrn syl2anc 1st2nd2 df-ov
      c1st syl6eqr fveq2i op2ndg syl5eq cuz xp2nd nn0z uzid 3syl eucalgcvga mpd
      eqid eqtr3d oveq2d xp1st nn0gcdid0 3eqtrrd cres wfn wss gcdf ax-mp nn0ssz
      ffn xpss12 mp2an fnssres cv eucalginv ffvelrni fvres 3eqtr4d 0nn0 sylancl
      alginv 3eqtr3d algr0 syl6eq 3eqtrd ) FKLZGKLZUBZGDMZUSMZXBNMZODMZNMZFGNUC
      ZXAXDXCXBPMZNUCZXCONUCZXCXAXDXCXHUDZNMXIXAXBXKNXAXBKKUEZLZXBXKQXAKXLDUFZW
      TXMXACDXLEOKUGIORLXAUHUIZXACFGUDZXLJFGKKUJUKZXLXLEUFXAABEHULZUIUMZWSWTUNZ
      KXLGDUOUPZXBKKUQSTXCXHNURUTXAXHOXCNXACPMZDMZPMZXHOXAYCXBPXAYBGDXAYBXPPMGC
      XPPJVAFGKKVBVCTTXACXLLZYDOQZXQYEYBYBVDMLZYFYEYBKLYBRLYGCKKVEYBVFYBVGVHABC
      DEYBYBHIYBVKVIVJSVLVMXAXCKLZXJXCQXAXMYHYAXBKKVNSXCVOSVPXAXBNXLVQZMZXEYIMZ
      XDXFXAYEWTYJYKQXQXTUACDXLEYIGIXRNRRUEZVRZXLYLVSZYIXLVRYLKNUFYMVTYLKNWCWAK
      RVSZYOYNWBWBKRKRWDWEYLXLNWFWEUAWGZXLLZYPEMZNMZYPNMYRYIMZYPYIMABEYPHWHYQYR
      XLLYTYSQXLXLYPEXRWIYRXLNWJSYPXLNWJWKWNUPXAXMYJXDQYAXBXLNWJSXAXEXLLZYKXFQX
      AXNOKLUUAXSWLKXLODUOWMXEXLNWJSWOXAXFXPNMXGXAXEXPNXAXECXPXACDXLEOKUGIXOXQW
      PJWQTFGNURUTWR $.
      $( [29-May-2014] $) $( [31-Mar-2011] $)
  $}

