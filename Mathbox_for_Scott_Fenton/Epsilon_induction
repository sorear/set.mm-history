$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Epsilon induction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d ph y z w $.  $d x y z w $.
    setinds.1 $e |- ( A. y e. x [ y / x ] ph -> ph ) $.
    $( Principle of ` _E ` induction (set induction).  If a property passes
       from all elements of ` x ` to ` x ` itself, then it holds for all
       ` x ` . $)
    setinds $p |- ph $=
      ( vz vw cv cvv wcel visset cab wss wi wceq setind wral wsb df-clab
      ralbii wel ax-17 hbs1 hbral hbim weq raleqf sbequ12 imbi12d chvar sylbi
      dfss3 3imtr4i mpg eqcomi abeq2i mpbi ) BGZHIABJABHABKZHEGZURLZUSURIZMURHN
      EEUROCGURIZCUSPZABEQZUTVAVCABCQZCUSPZVDVBVECUSACBRSVECUQPZAMVFVDMBEVFVDBV
      EBCUSCETBUAABCUBUCABEUBUDBEUEVGVFAVDVECFUQUSFBTCUAFETCUAUFABEUGUHDUIUJCUS
      URUKAEBRULUMUNUOUP $.
      $( [27-Mar-2011] $) $( [10-Mar-2011] $)
  $}

  ${
    $d x y $.  $d ph y $.
    setinds2f.1 $e |- ( ps -> A. x ps ) $.
    setinds2f.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    setinds2f.3 $e |- ( A. y e. x ps -> ph ) $.
    $( ` _E ` induction schema, using implicit substitution. $)
    setinds2f $p |- ph $=
      ( wsb cv wral sbie ralbii sylbi setinds ) ACDACDHZDCIZJBDPJAOBDPABCDEFKLG
      MN $.
      $( [27-Mar-2011] $) $( [10-Mar-2011] $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps x $.
    setinds2.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    setinds2.2 $e |- ( A. y e. x ps -> ph ) $.
    $( ` _E ` induction schema, using implicit substitution. $)
    setinds2 $p |- ph $=
      ( ax-17 setinds2f ) ABCDBCGEFH $.
      $( [27-Mar-2011] $) $( [10-Mar-2011] $)
  $}

