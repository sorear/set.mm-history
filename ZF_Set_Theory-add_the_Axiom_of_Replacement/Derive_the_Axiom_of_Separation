$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Derive the Axiom of Separation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.  $d y z ph w $.
    $( Separation Scheme, which is an axiom scheme of Zermelo's original
       theory.  Scheme Sep of [BellMachover] p. 463.  As we show here, it is
       redundant if we assume Replacement in the form of ~ ax-rep .  Some
       textbooks present Separation as a separate axiom scheme in order to show
       that much of set theory can be derived without the stronger Replacement.
       The Separation Scheme is a weak form of Frege's Axiom of Comprehension,
       conditioning it (with ` x e. z ` ) so that it asserts the existence of a
       collection only if it is smaller than some other collection ` z ` that
       already exists.  This prevents Russell's paradox ~ ru .  In some texts,
       this scheme is called "Aussonderung" or the Subset Axiom.

       The variable ` x ` can appear free in the wff ` ph ` , which in
       textbooks is often written ` ph ( x ) ` .  To specify this in the
       Metamath language, we _omit_ the distinct variable requirement ($d) that
       ` x ` not appear in ` ph ` .

       For a version using a class variable, see ~ zfauscl , which requires
       the Axiom of Extensionality as well as Replacement for its derivation.

       If we omit the requirement that ` y ` not occur in ` ph ` , we can
       derive a contradiction, as ~ notzfaus shows (contradicting ~ zfauscl ).
       However, as ~ axsep2 shows, we can eliminate the restriction that ` z `
       not occur in ` ph ` .

       Note:  the distinct variable restriction  that ` z ` not occur in
       ` ph ` is actually redundant in this particular proof, but we keep
       it since its purpose is to demonstrate the derivation of the exact
       ~ ax-sep from ~ ax-rep .

       This theorem should not be referenced by any proof.  Instead, use
       ~ ax-sep below so that the uses of the Axiom of Separation can be more
       easily identified. $)
    axsep $p |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $=
      ( vw cv wcel wceq wa wex wb wal wi ax-17 axrep5 a9e equtr equcomi syl6
      adantrd 19.21aiv 19.22i ax-mp a1i mpg an12 exbii elequ1 anbi1d equsex
      bitr3 bibi2i albii mpbi ) BFZCFZGZEFZDFZGZURUOHZAIZIZEJZKZBLZCJZUQUOUSGZA
      IZKZBLZCJUTVBUOUPHZMZBLZCJZMVGEVBEBCDVBCNOVOUTUPURHZCJVOCEPVPVNCVPVMBVPVA
      VLAVPVAUPUOHVLCEBQCBRSTUAUBUCUDUEVFVKCVEVJBVDVIUQVDVAUTAIZIZEJVIVRVCEVAUT
      AUFUGVQVIEBVIENVAUTVHAEBDUHUIUJUKULUMUGUN $.
      $( [12-Sep-2006] $) $( [11-Sep-2006] $)

    $( The Axiom of Separation of ZF set theory.  It was derived as ~ axsep
       above and is therefore redundant, but we state it as a separate axiom
       here so that its uses can be identified more easily. $)
    ax-sep $a |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $.
  $}

  ${
    $d x y z w $.  $d y ph w $.  $d z w $.
    $( A less restrictive version of the Separation Scheme ~ axsep , where
       variables ` x ` and ` z ` can both appear free in the wff ` ph ` , which
       can therefore be thought of as ` ph ( x , z ) ` .  This version was
       derived from the more restrictive ~ ax-sep with no additional set
       theory axioms. $)
    axsep2 $p |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $=
      ( vw cv wceq wex wcel wa wb wal a9e ax-sep elequ2 biimprd pm4.71rd
      anbi1d anass syl6bb bibi2d albidv exbidv mpbiri 19.23aiv ax-mp ) EFZDFZGZ
      EHBFZCFIZUJUHIZAJZKZBLZCHZEDMUIUPEUIUPUKUJUGIZUMJZKZBLZCHUMBCENUIUOUTCUIU
      NUSBUIUMURUKUIUMUQULJZAJURUIULVAAUIULUQUIUQULEDBOPQRUQULASTUAUBUCUDUEUF
      $.
      $( [11-Dec-2006] $) $( [10-Dec-2006] $)
  $}

  ${
    $d x y A z $.  $d y ph z $.
    zfauscl.1 $e |- A e. V $.
    $( Separation Scheme using a class variable.  To derive this from
       ~ ax-sep , we invoke the Axiom of Extensionality (indirectly via
       ~ vtocl ), which is needed for the justification of class variable
       notation.

       If we omit the requirement that ` y ` not occur in ` ph ` , we can
       derive a contradiction, as ~ notzfaus shows. $)
    zfauscl $p |- E. y A. x ( x e. y <-> ( x e. A /\ ph ) ) $=
      ( vz cv wcel wa wb wal wex wceq eleq2 anbi1d bibi2d albidv exbidv ax-sep
      vtocl ) BGZCGHZUAFGZHZAIZJZBKZCLUBUADHZAIZJZBKZCLFDEUCDMZUGUKCULUFUJBULUE
      UIUBULUDUHAUCDUANOPQRABCFST $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph z $.  $d x y z $.
    bm1.3ii.1 $e |- E. x A. y ( ph -> y e. x ) $.
    $( Convert implication to equivalence using Aussonderung.  Similar to
       Theorem 1.3ii of [BellMachover] p. 463. $)
    bm1.3ii $p |- E. x A. y ( y e. x <-> ph ) $=
      ( vz cv wcel wi wal wa wb wex wceq elequ2 imbi2d albidv cbvexv mpbi
      ax-sep pm3.2i exan 19.42v 19.26 bimsc1 19.20i sylbir 19.22i 19.23aiv
      ax-mp ) ACFZEFZGZHZCIZUJBFZGZULAJKZCIZBLZJZELUPAKZCIZBLZUNUSEUNELZUSAUPHZ
      CIZBLVDDVFUNBEUOUKMZVEUMCVGUPULABECNOPQRACBESTUAUTVCEUTUNURJZBLVCUNURBUBV
      HVBBVHUMUQJZCIVBUMUQCUCVIVACAULUPUDUEUFUGUFUHUI $.
      $( [5-Aug-1993] $)
  $}

